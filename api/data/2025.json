{
  "year": 2025,
  "archive_url": "https://summerofcode.withgoogle.com/programs/2025/organizations",
  "organizations": [
    {
      "name": "R project for statistical computing",
      "image_url": "https://summerofcode.withgoogle.com/media/org/r-project-for-statistical-computing/7regeqcjh95nenso-360.png",
      "image_background_color": "#ffffff",
      "description": "R software for statistical computing & graphics",
      "url": "https://www.r-project.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/r-project-for-statistical-computing",
      "ideas_url": "https://github.com/rstats-gsoc/gsoc2025/wiki/table-of-proposed-coding-projects",
      "guide_url": "https://github.com/rstats-gsoc/gsoc2022/wiki",
      "topics": [
        "visualization",
        "machine learning",
        "data science",
        "graphics",
        "statistics"
      ],
      "technologies": ["c", "javascript", "c++", "r-project", "fortran"],
      "irc_channel": "",
      "contact_email": "mailto:gsoc-r@googlegroups.com",
      "mailing_list": "gsoc-r@googlegroups.com",
      "twitter_url": "",
      "blog_url": "https://rweekly.org/",
      "facebook_url": "",
      "num_projects": 24,
      "projects": [
        {
          "title": "Torchvision in R",
          "short_description": "This project focuses on extending the R interface of the torchvision library by implementing support for core computer vision datasets and model...",
          "description": "This project focuses on extending the R interface of the torchvision library by implementing support for core computer vision datasets and model architectures. The scope includes adding native loaders for widely used datasets such as COCO and VOC, along with support for key models including Faster R-CNN, Mask R-CNN, FCN, Keypoint R-CNN, and quantized ResNet variants. The proposed work enhances the torch ecosystem in R by enabling advanced computer vision workflows with consistent APIs, GPU compatibility, and clean documentation. The implementation will follow package development best practices with robust testing, reusable components, and user-friendly examples. The resulting contributions aim to reduce the gap between R and Python in deep learning tools, enabling R users to build scalable, efficient, and modern vision pipelines.",
          "student_name": "Akanksha Koshti",
          "code_url": null,
          "proposal_id": "Nq8MqJUE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GVZWEuNf"
        },
        {
          "title": "DBmaps: An R Tool for Streamlining Database Joins",
          "short_description": "The DBmaps package aims to simplify the analysis of data in relational databases using R. It addresses the problem of complex data manipulation,...",
          "description": "The DBmaps package aims to simplify the analysis of data in relational databases using R. It addresses the problem of complex data manipulation, specifically the challenges of joining and merging data from multiple tables. The package will provide functions to automate the discovery of table relationships, create maps of these relationships, and efficiently merge tables, even when connected through multiple intermediary tables.\nDeliverables:\n-create.DB.map():  Function to create a structured representation of database relationships.\n-map.DB.pairs(): Function to automate the discovery of potential join relationships between tables.\n-multi.merge(): Function to simplify merging multiple tables.\n-materialized.view(): Function to automate the creation of merged datasets based on identified join paths.    \n-visualize.DB.map(): Function to create visual representations of database maps.\n\nThis project will deliver an R package with comprehensive documentation and tests, aimed at making relational database analysis more efficient and user-friendly.",
          "student_name": "Akshat Maurya",
          "code_url": null,
          "proposal_id": "50BnuSs0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ahkUTc1i"
        },
        {
          "title": "Expected Returns: Factor Formation",
          "short_description": "Financial factor investing relies on rigorous quantitative research to explain asset returns and generate alpha. While many academic models and...",
          "description": "Financial factor investing relies on rigorous quantitative research to explain asset returns and generate alpha. While many academic models and institutional frameworks exist, open-source tools that replicate these methods — especially in R — are few and far between. This project aims to close that gap by contributing to the ExpectedReturns package, developing clean, modular functions that implement and generalize key factor construction techniques inspired by Antti Ilmanen’s Investing Amid Low Expected Returns.\n\nThe focus will be on engineering reusable code for factors like value, momentum, profitability, and investment using raw or semi-structured financial data. These will be built using lightweight, testable components supported by packages like FactorAnalytics, PerformanceAnalytics, and tinytest, while following conventions used by Chen, Zimmermann, and Kelly. Also included will be vignettes and documentation that show how to reproduce these concepts in practice — making the tools both transparent and portable. This will be a two-month project.\n\nDeliverables will include:\n– Core functions for factor construction and data prep\n– Lightweight unit tests and clean vignettes\n– Documentation of inputs, outputs, and assumptions\n– A reproducible build setup that works across systems\n\nThe goal is to make these concepts accessible — not just for researchers, but for anyone trying to understand and apply factor models in real-world contexts. If successful, this project will leave behind a set of tools that are as useful to the open-source community as they are to academic replication.",
          "student_name": "Al Pakrosnis",
          "code_url": null,
          "proposal_id": "uYJIvgV4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AcSDZYbO"
        },
        {
          "title": "Modern time series estimation",
          "short_description": "This project will implement the recent techniques from Gallagher et al. (2024) and Gallagher et al. (2025) for improved time series simulation...",
          "description": "This project will implement the recent techniques from Gallagher et al. (2024) and Gallagher et al. (2025) for improved time series simulation studies covering the whole parameter space of time series models (and not just cherry-pick one or two parameter settings) and also bring modern estimates of the acf/pacf and consistency in AIC selection of ar models (which is not currently available).\n\nSpecifically, the project will:\n- create functions for acf and pacf estimation based on a dual shrinkage approach\n- create functions for ar estimation based on the dual shrinkage pacf\n- interface the new ar estimation function with standard methods such as AIC for consistent estimation\n- create new graphics for displaying these estimates that make clear to the user the effect of the dual shrinkage approach (as an option)\n- create functions to generate ARMA parameters that satisfy a correlation constraint (high/med/low or a fixed correlation strength)\n- create functions to generate random ARMA parameter values that cover the whole parameter space regardless of the model order\n- create a wrapper for the above two functions to generate simulation datasets for researchers in one line of code\n\nAll this functionality will require appropriate documentation, testing and a vignette for users.",
          "student_name": "Andrea Storey",
          "code_url": null,
          "proposal_id": "ApwcXc2h",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hjbxobxb"
        },
        {
          "title": "grepreaper R Package Development",
          "short_description": "The grepreaper package addresses the critical need for efficient pattern matching and selective data loading in R, particularly for large datasets....",
          "description": "The grepreaper package addresses the critical need for efficient pattern matching and selective data loading in R, particularly for large datasets. Currently, R users must load entire files before filtering, creating performance bottlenecks.\n\nMy solution implements four core functions:\n1. grep_count(): Counts pattern matches without loading entire files\n2. grep_read(): Selectively loads only matching data\n3. grep_files(): Discovers files containing specific patterns\n4. grep_context(): Shows matches with surrounding context lines\n\nThe package leverages system commands for pre-filtering, significantly improving performance by avoiding unnecessary data loading. It supports flexible pattern matching options, including case sensitivity control, inverted matching, and multi-pattern support across multiple files.\n\nDeliverables include:\n1. Complete R package with documented functions\n2. Comprehensive test suite\n3. Performance benchmarks against traditional methods\n4. Introductory vignette with practical examples\n5. Integration with popular data manipulation workflows\n\nThis project will provide R users with a powerful tool for efficient data exploration, particularly beneficial for large dataset analysis and text mining applications.",
          "student_name": "Atharv Raskar",
          "code_url": null,
          "proposal_id": "mazM4FI5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/g0vwQ3rj"
        },
        {
          "title": "Reﬁning the R Dev Container for Debugging and Local Use",
          "short_description": "This project aims to refine the R Dev Container by addressing three critical areas: debugging capabilities, cross-platform compatibility, and IDE...",
          "description": "This project aims to refine the R Dev Container by addressing three critical areas: debugging capabilities, cross-platform compatibility, and IDE support. The container currently lacks robust debugging tools for C code, performs suboptimally on macOS and Windows, and is limited to Visual Studio Code as its IDE. To resolve these issues, LLDB will be integrated for efficient debugging of R’s C code, macOS and Windows compatibility will be improved through optimized file synchronization and WSL2 path translation, and support for Positron IDE will be added via DevPod’s SSH workflow. These enhancements will make the container more accessible and user-friendly for R contributors worldwide.\r\n\r\nThe deliverables include an upgraded R Dev Container with LLDB debugging support, platform-specific optimizations for macOS and Windows, Positron IDE integration, and comprehensive documentation to guide users through setup and workflows. These improvements will empower developers to debug and contribute to R efficiently across various environments, fostering broader participation in the R project.",
          "student_name": "Avinab Neogy",
          "code_url": null,
          "proposal_id": "1tiVgNEc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/FwYT45aq"
        },
        {
          "title": "Enhancing Animint2 with New Features and Gallery Updates.",
          "short_description": "This project aims to improve Animint2 by, enhancing grid layouts for ggplot2 to simplify plot arrangement, porting the Animint gallery from NAU...",
          "description": "This project aims to improve Animint2 by, enhancing grid layouts for ggplot2 to simplify plot arrangement, porting the Animint gallery from NAU rcdata to GitHub Pages while resolving existing issues, migrating tests from selenium to chromote for a modern testing framework.\nIf time permits, I’ll also work on replacing RJSONIO with jsonlite, adding code coverage via GitHub Actions using covr and V8.",
          "student_name": "Biplab Sutradhar",
          "code_url": null,
          "proposal_id": "VejXMQiW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/O5OXfDuO"
        },
        {
          "title": "AI Scholar: A Modern AI RAG-aware Model Utilizing GraphRAG for Thoughtful Academic Paper Analysis",
          "short_description": "Researchers have tremendous difficulty keeping up with the exponential growth of scientific literature, hindering their ability to stay on top of the...",
          "description": "Researchers have tremendous difficulty keeping up with the exponential growth of scientific literature, hindering their ability to stay on top of the latest insights in their field. This is especially true in quantum physics, where groundbreaking findings and complex concepts are emerging at a rapid pace, demanding constant attention and analysis from researchers. There is a dire need for AI that can efficiently process and summarize these vast volumes of scientific papers, helping human researchers focus their efforts on the most promising areas of investigation.\n\nThe problem of knowledge overload and the need for efficient systems to navigate and synthesize vast amounts of literature is not unique to quantum physics. In fact, it is a pervasive challenge across various academic and scientific disciplines, including statistics and data science – the very fields that led to the development of large language models (LLMs) and retrieval-augmented generation (RAG) models.\n\nThe exponential growth of research papers, coupled with the rapid advancement of statistical methodologies and data-driven approaches, has created a significant knowledge bottleneck in these domains. Researchers and practitioners in statistics and data science often struggle to keep up with the latest developments, hindering their ability to effectively leverage cutting-edge techniques and methodologies in their work. This knowledge overload problem has motivated the development of AI-powered systems like LLMs and RAG models, which aim to streamline the process of knowledge discovery, synthesis, and dissemination.\n\nBy adapting the proposed \"AI Scholar\" system to the domains of statistics and data science, researchers in these fields could benefit from personalized recommendations, automated literature analysis, and idea generation capabilities, ultimately accelerating the pace of innovation and fostering cross-disciplinary collaboration.",
          "student_name": "Christopher Mejo",
          "code_url": null,
          "proposal_id": "Vt09iHmW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VTupUmtG"
        },
        {
          "title": "CI Optimization for R Package Performance Testing",
          "short_description": "This project addresses the inefficiencies in the continuous integration (CI) workflow for the R package ecosystem—specifically, for the widely-used...",
          "description": "This project addresses the inefficiencies in the continuous integration (CI) workflow for the R package ecosystem—specifically, for the widely-used data.table package. The proposal focuses on reducing CI runtime and resource consumption by reusing minified historical versions of the package instead of rebuilding them for every test run. By implementing a caching mechanism using GitHub Actions' artifact upload and download features, and by modifying the R CMD INSTALL process to exclude non-essential components (e.g., vignettes, documentation, and tests), the project will yield significant time and resource savings. Deliverables include a refined package minification script, updated atime package modifications to support caching, and a fully integrated CI workflow that also securely supports PRs from forks.",
          "student_name": "criticic",
          "code_url": null,
          "proposal_id": "9p2l61SH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uNtqObW9"
        },
        {
          "title": "Extending Torchvision Support in R for Computer Vision Tasks",
          "short_description": "The torch ecosystem is rapidly growing in R, but it still lacks support for several key computer vision capabilities available in Python's...",
          "description": "The torch ecosystem is rapidly growing in R, but it still lacks support for several key computer vision capabilities available in Python's torchvision package. This proposal aims to close the gap by implementing a wide range of torchvision datasets and models directly in R. Specifically, the project will:\n\nImplement all torchvision datasets.\n\nAdd support for 5 key computer vision tasks: Object Detection, Instance Segmentation, Keypoint Detection, Semantic Segmentation, and Quantized Models.\n\nProvide native R implementations that don't rely on Python bindings, making it easier to install and use.\n\nDeliverables include tested R implementations of datasets and models, documented APIs, and example use cases. This will make R a more viable option for computer vision research and production.",
          "student_name": "Derrick Richard",
          "code_url": null,
          "proposal_id": "Hi6MONRe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/u3JnFx2t"
        },
        {
          "title": "Interactive diagnostics for NLDR visualizations",
          "short_description": "This project aims to improve the interpretation of non-linear dimension reduction (NLDR) methods like t-SNE and UMAP by linking them with linear...",
          "description": "This project aims to improve the interpretation of non-linear dimension reduction (NLDR) methods like t-SNE and UMAP by linking them with linear dimension reduction, for example using a grand tour. I will develop an interactive Shiny app and R package that integrates NLDR methods with the detourr package, allowing users to explore and diagnose NLDR views through linked brushing and dynamic tour displays. The app will support advanced diagnostics including slice and sage tours, and integrate quollr visualizations. The final deliverable will be a CRAN-ready tool for reliable, scalable exploration of high-dimensional data.",
          "student_name": "Divendra Yadav",
          "code_url": null,
          "proposal_id": "j6Qojn53",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8VfHze7F"
        },
        {
          "title": "pandemonium: GUI for cluster analysis with interactive visualization",
          "short_description": "The pandemonium package is a specialized cluster analysis tool designed for physics applications. It employs hierarchical clustering and provides an...",
          "description": "The pandemonium package is a specialized cluster analysis tool designed for physics applications. It employs hierarchical clustering and provides an interactive interface for selecting tuning parameters such as distance metrics and linkage methods. The app currently includes eight analysis tabs that explore clustering solutions across two representation spaces of the same observations using techniques like parallel coordinate plots, tour visualizations, and dimension reduction.\n\nThis project aims to generalize pandemonium into a more flexible, general-purpose tool applicable to any domain where cluster analysis can help uncover relationships between two connected data spaces. In addition to broadening its applicability, the project will explore and implement new visualization techniques, including interactive visualizations, slice tour visualizations, and projection pursuit within tours.\n\nBy the end of the project, pandemonium will be developed as an R package and submitted to CRAN for public availability. The package will provide an accessible, interactive platform for exploring clustering solutions across connected data spaces, integrating cluster analysis and multivariate data visualization into an intuitive graphical user interface (GUI). This will significantly enhance accessibility, making these advanced analytical tools available to a broad community of users across different fields.",
          "student_name": "GabrielMccoy",
          "code_url": null,
          "proposal_id": "1pk553lA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AzH5lZMH"
        },
        {
          "title": "Structured Covariance Matrices for lme4",
          "short_description": "This project extends the lme4 R package to support structured random effects covariance matrices such as AR(1), compound symmetry, and diagonal...",
          "description": "This project extends the lme4 R package to support structured random effects covariance matrices such as AR(1), compound symmetry, and diagonal forms. These structures are essential for modeling correlated or longitudinal data and are widely requested by the community. The work will involve integrating these covariance structures into lme4’s modular optimization framework by mapping user-specified parameterizations to structured covariance factors within the existing profiling and penalized least squares pipeline. Deliverables will include a core implementation of selected structures, a full testing suite, documentation and usage examples, and performance benchmarks comparing results to existing packages such as nlme and glmmTMB.",
          "student_name": "Greg  Forkutza",
          "code_url": null,
          "proposal_id": "yttqt8w5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/P8WpRHkl"
        },
        {
          "title": "ChatR: A Local, Inclusive, and Accurate R Expert Chatbot for the R Ecosystem",
          "short_description": "Problem: While Large Language Models (LLMs) like ChatGPT can generate R code, they often lack precision when answering questions about third-party R...",
          "description": "Problem:\nWhile Large Language Models (LLMs) like ChatGPT can generate R code, they often lack precision when answering questions about third-party R packages or contributing to the R language itself. This can limit their usefulness for R users, particularly for new contributors seeking to understand the R core or engage in package development. Furthermore, many of these AI tools are proprietary or resource-intensive, excluding users with limited hardware or funding.\n\nSolution:\nChatR proposes a specialized R chatbot that is lightweight, locally runnable (even without a GPU), and customized to provide reliable support on R packages, documentation, and contribution practices. The project will use Retrieval-Augmented Generation (RAG), prompt engineering, and a lightweight open-source LLM (via Ollama and llama3.2:3b-instruct) to deliver targeted responses. It will be delivered as an R package with both CLI and Shiny UI interfaces.\n\nDeliverables:\n\nAn R package wrapping the chatbot and customizable prompts\n\nLocal model integration using Ollama and ellmer\n\nRAG-based indexing of documentation (e.g., CRAN, Writing R Extensions)\n\nA Shiny widget interface for interactive usage in RStudio\n\nDocumentation, test suite, and demo applications\n\nThis project will significantly support learners, developers, and contributors by democratizing access to reliable AI-based R support and onboarding tools.",
          "student_name": "Hanxia Li",
          "code_url": null,
          "proposal_id": "2slDi0mv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3M6xt7fm"
        },
        {
          "title": "Ecotourism Data Package",
          "short_description": "This project proposes the development of an R data package designed to support teaching and exploration of data visualization through the lens of...",
          "description": "This project proposes the development of an R data package designed to support teaching and exploration of data visualization through the lens of ecotourism in Australia. The package will integrate wildlife sighting records, domestic tourism data, and weather information into well-documented, tidy datasets. These datasets will enable users to practice map-based plotting, time series analysis, and spatial joins in R. Inspired by packages like nycflights13 and palmerpenguins, this project emphasizes real-world applications and reproducibility. The final product will be CRAN-ready and accompanied by a detailed vignette.",
          "student_name": "Javad Vahdat Atashgah",
          "code_url": null,
          "proposal_id": "ULHTPxfl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/65ApzLCv"
        },
        {
          "title": "Enhancing the Jaya R Package for Efficient Optimization",
          "short_description": "The Jaya R package implements the Jaya optimization algorithm, a gradient-free, population-based method for solving both single-objective and...",
          "description": "The Jaya R package implements the Jaya optimization algorithm, a gradient-free,\npopulation-based method for solving both single-objective and multi-objective\noptimization problems. The Jaya algorithm, introduced by Rao in 2016, has gained\nattention for its simplicity and effectiveness, as it requires no hyperparameter\ntuning, making it particularly useful for users who need fast and reliable\noptimization solutions. However, while the current version (1.0.3) of the Jaya\npackage is functional, there is significant room for improvement in terms of\ncomputational efficiency, usability, and integration with the broader R ecosystem.\nThis GSoC project proposes a major upgrade to the Jaya package with the goal of\nimproving algorithmic performance, enhancing parallel computation capabilities,\nand expanding the package's compatibility with widely-used R tools. Additionally,\nthe project aims to make the package more user-friendly by streamlining the\ninterface and improving documentation. These updates will help integrate Jaya\ninto modern optimization workflows, benefiting researchers, practitioners, and\neducators alike.",
          "student_name": "Kartik Kasrewar",
          "code_url": null,
          "proposal_id": "szf0PQUZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/q2pQmhyA"
        },
        {
          "title": "Efficient Implementations of Change-Point Detection Algorithms Using Modern C++",
          "short_description": "This project aims to develop efficient, user-friendly statistical software in R for offline change-point detection, based on the widely used Python...",
          "description": "This project aims to develop efficient, user-friendly statistical software in R for offline change-point detection, based on the widely used Python library ruptures, which has received over 500,000 downloads as of April 8, 2025. Change-point detection identifies shifts in the underlying structure or parameters of time series models and is widely used in fields such as signal processing, sports analytics, remote sensing, education, and bioinformatics. Despite the popularity of \"ruptures\" and related R packages, many implementations do not achieve the theoretical time complexities. Several efficient C++ implementations exist, but they lack consistent APIs. To address these limitations, we will re-implement core change-point detection algorithms in \"ruptures\" in modern C++ and wrap the implementations in a well-documented R package. This allows practitioners to apply change-point detection methods to large-scale time series data.",
          "student_name": "Minh Long Nguyen",
          "code_url": null,
          "proposal_id": "27QoRb0S",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/O5AWBzpG"
        },
        {
          "title": "Enhancing data.table: Enhancing Functionality, and Ensuring  Quality",
          "short_description": "This project aims to improve the user experience for data.table by closing some of the hundreds of outstanding issues. The focus will be on resolving...",
          "description": "This project aims to improve the user experience for data.table by closing some of the hundreds of outstanding issues. The focus will be on resolving key issues, including bug fixes, feature requests, enhancements  and documentation improvements. Each issue will be approached with thorough discussion with the maintainer and the community following a test-driven development pattern, to ensure all changes are meaningful, impactful and done to the project’s high standards.",
          "student_name": "Mukul Kumar Yadav",
          "code_url": null,
          "proposal_id": "R1YlfwNN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cJEEbCzI"
        },
        {
          "title": "Updates in VedicDateTime R Package",
          "short_description": "The VedicDateTime R package is a specialized toolkit designed to handle date-time computations in the context of the Vedic calendar system. Initially...",
          "description": "The VedicDateTime R package is a specialized toolkit designed to handle\ndate-time computations in the context of the Vedic calendar system. Initially\ndeveloped through GSoC 2022, the package has proven valuable for\nresearchers, historians, and practitioners interested in traditional Indian\ntimekeeping. However, as user adoption has grown, so has the demand for\nimproved accuracy, better integration with modern R workflows, and expanded\nfunctionalities.",
          "student_name": "Peeyush Kulgude",
          "code_url": null,
          "proposal_id": "j6gAaSen",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5mc4pOWE"
        },
        {
          "title": "Reimplementing the Core Samplers of the dirichletprocess R Package in C++",
          "short_description": "This project aims to address performance limitations of the dirichletprocess R package by reimplementing its computationally intensive core sampling...",
          "description": "This project aims to address performance limitations of the dirichletprocess R package by reimplementing its computationally intensive core sampling algorithms in C++ while maintaining the existing R interface. The current pure R implementation faces significant scaling challenges with larger datasets. By leveraging Rcpp and RcppArmadillo for seamless integration, I will optimize the MCMC sampling algorithms—particularly the Chinese Restaurant Process sampler and cluster update functions—which are inherently sequential and difficult to vectorize in R. This reimplementation will significantly enhance package performance while preserving the flexible, object-oriented design that distinguishes dirichletprocess from other implementations and allows it to serve as building blocks in custom hierarchical Bayesian nonparametric models.",
          "student_name": "priyanshuTiwari",
          "code_url": null,
          "proposal_id": "6QXh7fkP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ckk9j4pw"
        },
        {
          "title": "imputeTestbench for multivariate time series",
          "short_description": "The imputeTestbench package offers an automated framework to benchmark various imputation techniques on univariate time series. It has been widely...",
          "description": "The imputeTestbench package offers an automated framework to benchmark various imputation techniques on univariate time series. It has been widely used in research for its ability to simulate missing data scenarios and evaluate multiple methods side-by-side. However, its current scope is limited to univariate data and lacks the performance and flexibility needed for more complex real-world applications.\nThis project proposes a major upgrade to the imputeTestbench package by extending its capabilities to multivariate time series, improving its computational performance, and adding a modern, interactive user interface via Shiny. The new version will also support advanced imputation techniques, including machine learning and deep learning-based approaches, and provide options for distributed computation using tools like Apache Spark.",
          "student_name": "Seema_Kumari",
          "code_url": null,
          "proposal_id": "xvEPsi48",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mU6fBoTV"
        },
        {
          "title": "Advancing Animint2 - Testing, Rendering and Gallery port",
          "short_description": "This project will enhance Animint2 by implementing advanced plot layouts via HTML tables, porting and refining the visualization gallery, fixing...",
          "description": "This project will enhance Animint2 by implementing advanced plot layouts via HTML tables, porting and refining the visualization gallery, fixing rendering bugs (e.g., geom_abline), optimizing dynamic scale calculations, introducing smart label placement using quadratic programming, and integrating code coverage tracking for R and JavaScript. These improvements will expand Animint2's flexibility, interactivity, and reliability for complex statistical visualizations.",
          "student_name": "Suhaani Agarwal",
          "code_url": null,
          "proposal_id": "oozHry7K",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nSDQwvny"
        },
        {
          "title": "Enhancing the spinebil Package for Projection Pursuit Diagnostics",
          "short_description": "The spinebil package provides diagnostic tools to evaluate projection pursuit (PP) index functions, which are used to discover informative...",
          "description": "The spinebil package provides diagnostic tools to evaluate projection pursuit (PP) index functions, which are used to discover informative low-dimensional projections of high-dimensional data. However, current tools for understanding the behavior of these indices under varying data conditions are limited. This project aims to enhance spinebil by developing diagnostics that assess how PP indices behave under noise, structure, varying sample sizes, and scale interpretation.\n\nI will implement routines to test index performance across noise-to-structure transitions, evaluate index value ranges, analyze sample size sensitivity, and apply these diagnostics to both existing and scagnostic-based indices (e.g., stringy, skinny). I will also optimize the code for performance and clarity, write detailed documentation and a vignette, and design a hex sticker for the package to support its identity on CRAN.\n\nThis project will support the development of more robust, interpretable projection pursuit indices and make spinebil more accessible to researchers, educators, and developers.",
          "student_name": "Tina.rj",
          "code_url": null,
          "proposal_id": "6HYahUWq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yNHVdH9D"
        },
        {
          "title": "data.table",
          "short_description": "The proposal includes detailed information about me (such as my qualifications and other relevant details), project details, my approach to the...",
          "description": "The proposal includes detailed information about me (such as my qualifications and other relevant details), project details, my approach to the project, the timeline, and other essential aspects.\nproject details: This project focuses on enhancing the functionality and performance of the widely-used R package, data.table, by prioritizing low-level C programming improvements and advanced performance benchmarking. The primary objective is to optimize the core functionality of data.table by implementing efficient C-level changes, ensuring faster data manipulation and analysis. Performance benchmarking will be a key focus, utilizing tools like atime to rigorously test and validate improvements, ensuring reliability and scalability for diverse use cases. While the main emphasis is on performance optimization and functionality enhancements, the project will also include supplementary work on expanding documentation through concise vignettes or whitepapers to provide insights into the technical improvements made. This initiative aims to deliver a more robust and high-performing data.table package, empowering data analysts and statisticians with faster and more reliable tools for their workflows.",
          "student_name": "Vinit Thakur",
          "code_url": null,
          "proposal_id": "5IhhYWN5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hlOK6uzk"
        }
      ]
    },
    {
      "name": "NumFOCUS",
      "image_url": "https://summerofcode.withgoogle.com/media/org/numfocus/wimcwc2v6kjlidqc-360.png",
      "image_background_color": "#ffffff",
      "description": "NumFOCUS promotes open source scientific software.",
      "url": "https://numfocus.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/numfocus",
      "ideas_url": "https://github.com/numfocus/gsoc/blob/master/2025/ideas-list.md",
      "guide_url": "https://github.com/numfocus/gsoc/blob/master/CONTRIBUTING-students.md",
      "topics": [
        "data science",
        "graphics",
        "ai",
        "scientific computing",
        "numerical computation"
      ],
      "technologies": ["python", "c++", "r", "julia"],
      "irc_channel": "",
      "contact_email": "mailto:info@numfocus.org",
      "mailing_list": "https://groups.google.com/a/numfocus.org/forum/#!forum/gsoc",
      "twitter_url": "https://twitter.com/NumFOCUS/",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 32,
      "projects": [
        {
          "title": "From \"Stringly Typed\" to \"Strongly Typed\" Arguments in sbi",
          "short_description": "sbi is an open-source Python package used for simulation-based inference. It provides an interface for running algorithms that are used to identify...",
          "description": "sbi is an open-source Python package used for simulation-based inference. It provides an interface for running algorithms that are used to identify model parameters that are consistent with data. Currently, this project uses “stringly typed” values for its functions' arguments. Even though stringly typed code is flexible and easier to implement, it comes with a set of drawbacks. Using stringly typed code leads to a suboptimal developer experience with limited IDE support and subtle bugs that are hard to identify and fix. This project aims to improve the developer experience and mitigate these issues by updating arguments in functions to use strongly typed code. In addition, it plans to create a pattern for sbi contributors to follow when defining new functions and classes that would otherwise use stringly typed arguments.",
          "student_name": "Abel Abate",
          "code_url": null,
          "proposal_id": "QQlvQRzu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pPYqxGL6"
        },
        {
          "title": "QuTiP",
          "short_description": "This project proposes the development of a reusable and extensible Hamiltonian Library within the QuTiP framework. It aims to organize common quantum...",
          "description": "This project proposes the development of a reusable and extensible Hamiltonian Library within\nthe QuTiP framework. It aims to organize common quantum models (e.g., Jaynes-Cummings,\nRabi, Dicke, spin chains) into a well-structured library with a language-agnostic specification\nformat (e.g., JSON). The project will also provide a clean API for easy model instantiation and\nparameter manipulation, along with LaTeX and text-rendered output for documentation and\nvisualization.\nThe library will eliminate redundancy across tutorials and examples and empower users and\neducators to work more efficiently with pre-built, customizable quantum models. It will support\ntime-dependent and parameterized Hamiltonians, and serve as a bridge to other languages,\nsuch as Julia.",
          "student_name": "Akhil Pratap Singh",
          "code_url": null,
          "proposal_id": "119M9W9I",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gTuguCKx"
        },
        {
          "title": "Adding embarrassingly parallel graph algorithms in nx-parallel",
          "short_description": "This project aims to enhance the performance of the NetworkX library by parallelizing graph algorithms using the joblib backend in nx-parallel....",
          "description": "This project aims to enhance the performance of the NetworkX library by parallelizing graph algorithms using the joblib backend in nx-parallel. Embarassingly parallel graph algorithms can become computationally intensive on large graphs which can be significantly reduced by running them on multiple CPU cores. The deliverables for this project include parallel implementations of embarassingly parallel algorithms like Triangles, Harmonic Centrality, Clustering Coefficient, Jaccard Coefficient, and  Average Neighbor Degree along with benchmarking and performance comparisons against their serial counterparts. Additionally, the project will focus on refining the existing heatmap timing script to maintain consistency across performance evaluations.",
          "student_name": "Akshita Sure",
          "code_url": null,
          "proposal_id": "N9I4BYNH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GxfLMOTC"
        },
        {
          "title": "State-Space Models: Dynamic Factor Models",
          "short_description": "State-space models (SSMs) provide a flexible framework for modeling dynamic systems where latent states evolve over time. In econometrics, Dynamic...",
          "description": "State-space models (SSMs) provide a flexible framework for modeling dynamic systems where\nlatent states evolve over time. In econometrics, Dynamic Factor Models (DFMs) are widely\nused to capture the co-movement of multiple time series by assuming that a small number of\nlatent factors drive the observed variables. The PyMC library already includes implemen-\ntations of SARIMAX, VARMAX, and structural state-space models, along with example\nnotebooks for their usage. This project aims to extend the existing PyMC state-space mod-\nule by implementing Dynamic Factor Models, aligning with the functionality available in\nstatsmodels. Our imple-\nmentation will follow a Bayesian approach, leveraging PyMC’s probabilistic programming\nframework and PyTensor for computation. Additionally, an accompanying example note-\nbook will demonstrate estimation, forecasting, and causal analysis with the new model,\nensuring accessibility for users.\nThis enhancement will significantly expand PyMC's capabilities, empowering student, practitioners and researchers in econometrics, macroeconomics, and beyond to model complex time-series data probabilistically.",
          "student_name": "Andrea Catelli",
          "code_url": null,
          "proposal_id": "FhdBlLOy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OU9piGFJ"
        },
        {
          "title": "Versioning System for DISCOVER Cookbook",
          "short_description": "This project focuses on implementing a versioning system for the DISCOVER Cookbook, enabling users to access and switch between different versions of...",
          "description": "This project focuses on implementing a versioning system for the DISCOVER Cookbook, enabling users to access and switch between different versions of the documentation through a clear, user-friendly interface. By integrating GitHub workflows and Sphinx-based tools, the system will automatically generate and manage multiple versions, ensuring historical content remains available while showcasing the latest updates. Each tagged version will be independently built and deployed, with a version selector embedded into the UI for seamless navigation. This enhancement will improve the usability, maintainability, and accessibility of the Cookbook for both users and contributors, while providing maintainers with a scalable and transparent content management workflow.",
          "student_name": "Ashish Mahajan",
          "code_url": null,
          "proposal_id": "TbjLxyav",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ovpNbdUa"
        },
        {
          "title": "Multidimensional SDE PINN solvers",
          "short_description": "Stochastic dynamical systems play an important role in scientific and engineering domains, particularly in systems governed by Brownian motion or...",
          "description": "Stochastic dynamical systems play an important role in scientific and engineering domains, particularly in systems governed by Brownian motion or subject to random perturbations from the environment. Stochastic Differential Equations (SDEs) and Stochastic Partial Differential Equations (SPDEs) provide a mathematical framework to describe such complex stochastic behaviour. Understanding the hidden physics within these systems is pretty much essential for analyzing their stochastic and nonlinear dynamics.\n\nThe NeuralPDE package in the SciML ecosystem currently lacks documentation for its existing SDE Physics-Informed Neural Network (PINN) solver and does not yet support multidimensional SDEs and SPDEs. This project aims to document the existing solver while also extending it to include PINN solvers for multidimensional SDEs based on the Wiener expansion, which expresses stochastic solutions as spectral expansions in terms of a set of random basis functions. The proposed SDE PINN solver uses the Kosambi-Karhunen-Loève (KKL) expansion for the Wiener process to obtain finite-dimensional approximations, effectively transforming SDEs into rough path ODEs. These ODEs can then be solved using the standard loss function formulation of PINNs for ODEs.\n\nAs a natural extension, this approach can be generalized to SPDEs using the Polynomial Chaos Expansion (PCE), which extends the Wiener expansion to handle spatially distributed noise in stochastic systems. By developing and implementing these solvers, this project aims to enhance NeuralPDE's capabilities in solving high-dimensional stochastic systems, making it a more comprehensive tool for data-driven modelling and simulation of stochastic dynamical systems.",
          "student_name": "Astitva Aggarwal",
          "code_url": null,
          "proposal_id": "QSu6ACOR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SayjRFPs"
        },
        {
          "title": "SubOrganization: Aeon Project #3: Forecasting – Deep Learning for Forecasting",
          "short_description": "Time series forecasting is paramount in many domains, including finance, healthcare, energy, and climate science. This project suggests incorporating...",
          "description": "Time series forecasting is paramount in many domains, including finance, healthcare, energy, and climate science. This project suggests incorporating deep learning-based forecasting models—Informer, TCN, and DeepAR—into the aeon/tookit. The objectives are to construct an efficient and scalable framework for forecasting that accommodates top-performing models, is compatible with Aeon’s data management, and provides stable training, evaluation, and documentation. Through simplifying the\navailability of advanced forecasting software, the project would make it easier to utilize the toolkit to assist researchers with streamlined time series analysis.",
          "student_name": "balgopal",
          "code_url": null,
          "proposal_id": "XgNTLDNe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/arjEn266"
        },
        {
          "title": "Community detection guide with igraph",
          "short_description": "Community detection is one of the most commonly used network analysis techniques. It is the process of grouping nodes of a network together based on...",
          "description": "Community detection is one of the most commonly used network analysis techniques. It is the process of grouping nodes of a network together based on their connections, with the scope of finding clusters which are more connected internally than externally. By uncovering these communities one can gain insight into how groups interact and how the network is organized. Community detection finds use in various scientific disciplines, including biology, neuroscience, sociology, and physics. \nThis project aims to develop a hands-on guide to community detection with python-igraph, tailored to empirical researchers who may only have limited network science experience. The guide will be delivered in the form of an interactive, executable document, and will include detailed code examples, case studies, and visual demonstrations of the main concepts of community detection. We will cover key ideas such as modularity, hierarchical clustering, consensus clustering, and overlapping communities. Additionally, we will provide brief descriptions of community detection methods and their tradeoffs, along with examples of visualization techniques.",
          "student_name": "Bea Márton",
          "code_url": null,
          "proposal_id": "vRD6VfmI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yD4aJtvm"
        },
        {
          "title": "Adding Translation System for DISCOVER Cookbook",
          "short_description": "Currently, the Cookbook has multiple resources that can help any event became inclusive and accessible to everyone. However, its accessibility...",
          "description": "Currently, the Cookbook has multiple resources that can help any event became inclusive and accessible to everyone. However, its accessibility remains limited due to its exclusive support for English. This language restriction creates a barrier for a global audience, preventing many from fully benefiting from its guidance.\nThis project aims to develop a comprehensive translation workflow for the DISCOVER Cookbook, enabling seamless multilingual support. A language selection mechanism will be integrated within the book, allowing users to easily switch between available translations. Additionally, an automated update system will be implemented to ensure translations remain synchronized as content evolves. To maintain high-quality translations, the project will engage and onboard community translators, fostering collaboration and sustainability in the translation process.",
          "student_name": "Dia29",
          "code_url": null,
          "proposal_id": "isPHCAP2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iMKr9viy"
        },
        {
          "title": "[PYSAL] - Produce Routing Engine for `spopt`",
          "short_description": "In the Python Spatial Analysis Library (pysal), the spopt package is concerned with the formulation and solving of various spatial optimization...",
          "description": "In the Python Spatial Analysis Library (pysal), the spopt package is concerned with the formulation and solving of various spatial optimization problems, particularly regionalization and location-based problems. This project proposes to enhance the spopt package with a route module, which will function as an API to set up and solve vehicle routing problems (VRP), including parameterizing vehicles, depots, and routes\nin various VRP setups.",
          "student_name": "fiendskrah",
          "code_url": null,
          "proposal_id": "GD0ipSN6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JhcSXfTK"
        },
        {
          "title": "LiftOver2D: A Tool for Converting Hi-C Matrices Across Assemblies and Binning Schemes",
          "short_description": "The LiftOver2D project aims to develop a high-performance tool for converting Hi-C matrices between different genome assemblies and binning schemes....",
          "description": "The LiftOver2D project aims to develop a high-performance tool for converting Hi-C matrices between different genome assemblies and binning schemes. This functionality is essential for integrating data from various sources and experiments — especially with the growing popularity of multi-omics approaches and the increasing availability of public datasets. Existing solutions, such as HiCLift, offer partial support but often fail to provide an optimal balance between accuracy and performance, particularly in cases of partial bin mismatches or complex remapping scenarios.\n\nLiftOver2D seeks to overcome these limitations by leveraging background contact distributions at the bin level, allowing for more precise and efficient remapping. The main goal is to design a method that achieves an acceptable trade-off between accuracy and speed, ensuring the tool is practical for real-world bioinformatics pipelines without sacrificing data quality or runtime efficiency. During the project, we plan to develop a custom model for bin-level remapping and optimal bin-to-bin matching across genome assemblies, and test our tool on various experiments and organisms using publicly available data from open databases (such as NCBI GEO). We aim to maximize performance and parallelization using both high-level data frameworks (like Dask or Polars) and lower-level languages where appropriate. The resulting algorithm will be wrapped into convenient packages for Python, R, and the command line. We also plan to collaborate with major tools in the Hi-C ecosystem (such as Cooler or Muon for multimodal experiments) to integrate our functionality into widely-used frameworks.\n\nIn the long term, LiftOver2D aspires to become a community-standard solution for fast remapping of 2D genomic contact data. The development will be carried out as an open-source project in collaboration with the community and aligned with NumFOCUS’s mission to support sustainable scientific software.",
          "student_name": "Funny Phoenix",
          "code_url": null,
          "proposal_id": "7Tr5GXxw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XnTtGYoC"
        },
        {
          "title": "Adding More Optimizer Interfaces to optimagic",
          "short_description": "optimagic is a optimization library which aims to provide a unified interface to optimizers from SciPy, NlOpt and many other widely used packages....",
          "description": "optimagic is a optimization library which aims to provide a unified interface to optimizers from SciPy, NlOpt and many other widely used packages. This project aims to add more optimizers specifically from ensmallen, PRIMA, Nevergrad, Bayesian Optimization, Knitro and if possible, others. I will implement each particular optimizer, reading the literature and official documentation related to each optimizer, and keeping in mind optimagic's core idea. The main goal is to wrap as many optimizers as possible, giving them a consistent interface with optimagic's minimize function. For users, this will mean more freedom while choosing and comparing optimizers that best suits their needs. This will involve writing well-tested code, tests, and benchmarking to further improve performance. Also, I will write documentation, how-to-guides and example notebooks to guide users using the library.",
          "student_name": "gauravmanmode",
          "code_url": null,
          "proposal_id": "zscWDapL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j9i3Vx5T"
        },
        {
          "title": "Benchmarking and Profiling in toqito",
          "short_description": "This project aims to test the performance of |toqito⟩ and compare it with other quantum computing libraries. It is divided into three parts: (1)...",
          "description": "This project aims to test the performance of |toqito⟩ and compare it with other quantum \ncomputing libraries. It is divided into three parts: (1) Comparing |toqito⟩ with libraries like \nPennyLane, Qiskit, etc. by running standardized tests inside Docker to ensure consistency \nacross different computers; (2) Automatic benchmarking using GitHub Actions, where \nperformance tests run on every update and results are stored for analysis; and (3) \nIdentifying slow parts of |toqito⟩ using cProfile, focusing on operations like matrix \ncalculations, quantum measurements, and random object generation. \n------------------------------------------------------------------------------\nDeliverables include:\n\n1. A new benchmark/ folder in |toqito⟩ that can run and store benchmarks, \nincluding support for running them in Docker. \n2. A system to track |toqito⟩’s performance over time using monthly benchmarks or \nwe can choose to run only relevant benchmarks after each merged PR. \n3. Found and suggested improvements for slow parts in at least one full module of \n|toqito⟩.",
          "student_name": "justuy",
          "code_url": null,
          "proposal_id": "XPJ9Zkex",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5DqdhWwe"
        },
        {
          "title": "Extending ONNX-mlpack Translator with Advanced Model Support",
          "short_description": "This project aims to extend the capabilities of the ONNX-to-mlpack converter by adding support for more advanced and diverse model architectures. The...",
          "description": "This project aims to extend the capabilities of the ONNX-to-mlpack converter by adding support for more advanced and diverse model architectures. The focus will be on enabling the translation of complex ONNX computational graphs, including LSTM-based models and Directed Acyclic Graph (DAG) structures. Additionally, the project will introduce support for NLP models and incorporate foundational NLP components such as Word2Vec-based tokenizers, encoders and decoders in mlpack.",
          "student_name": "kumar utkarsh",
          "code_url": null,
          "proposal_id": "I9KbneYo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/57ne67Mj"
        },
        {
          "title": "Adding More Optimizer Interfaces to optimagic",
          "short_description": "The project aims to enhance the functionality of optimagic by adding support for a wider range of numerical optimization libraries.The goal is to...",
          "description": "The project aims to enhance the functionality of optimagic by adding support for a wider range of numerical optimization libraries.The goal is to develop interfaces for optimizers from Bayesian Optimization, Nevergrad, PyGAD, DEAP, and PySwarms.",
          "student_name": "madman",
          "code_url": null,
          "proposal_id": "CefkTUbv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kggF8GVK"
        },
        {
          "title": "Implementing the Simformer for sbi",
          "short_description": "sbi is a Python package providing simulation-based inference tools for researchers and practitioners; given simulation results, sbi aims to infer the...",
          "description": "sbi is a Python package providing simulation-based inference tools for researchers and practitioners; given simulation results, sbi aims to infer the distribution of parameters of the phenomena under study. The sbi package lacks an implementation of the Simformer, a novel Transformer-based approach to simulation-based inference introduced by Gloeckler et al. (2024). This project aim to implement the Simformer within sbi using PyTorch, documenting the API produced, and providing tutorials and benchmarks for the sbi community to use the Simformer for their analysis.",
          "student_name": "Massimiliano Carli",
          "code_url": null,
          "proposal_id": "2s4i7lWR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Joey5EeQ"
        },
        {
          "title": "Implementing RUBI (Rule-based Integrator) in the Julia package Symbolics.jl",
          "short_description": "This project aims to implement the RUBI integration system - a powerful, open source, rule-based integration system developed for the computational...",
          "description": "This project aims to implement the RUBI integration system - a powerful, open source, rule-based integration system developed for the computational software system Mathematica - in the julia package Symbolics.jl. The goal is to enhance Julia's symbolic computation capabilities, providing a faster and more comprehensive solution for symbolic integration.",
          "student_name": "Mattia Micheletta Merlin",
          "code_url": null,
          "proposal_id": "p9SH8uh7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TRqpJPrm"
        },
        {
          "title": "PyBaMM - Adding a Dispatching Mechanism  for Third Party Models.",
          "short_description": "This project will make the addition and sharing of third-party battery models easier in PyBaMM. It is an extension of the PyBaMM cookiecutter project...",
          "description": "This project will make the addition and sharing of third-party battery models easier in PyBaMM. It is an extension of the PyBaMM cookiecutter project of year 2024 and will include a Dispatch API, a single location to register models, and enhance model loading using entry points. The copier template will also be enhanced so that individuals with varying levels of experience will be able to use it more easily. By incorporating features such as dynamic model loading, caching, and enhanced documentation, the project will make it easier for more users and developers to work with external models and make PyBaMM more flexible and convenient to use in the long term.",
          "student_name": "Medha-Bhardwaj",
          "code_url": null,
          "proposal_id": "P1wcpcyH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3t9McTvW"
        },
        {
          "title": "Implementing Integrated Nested Laplace Approximations (INLA)",
          "short_description": "A key component of Bayesian inference is integrating over prior distributions to obtain posteriors. In practice however, these distributions are...",
          "description": "A key component of Bayesian inference is integrating over prior distributions to obtain posteriors. In practice however, these distributions are often high-dimensional, resulting in a significant computational cost associated with integration, which remains a key challenge in Bayesian ML. Under certain assumptions, it is possible to efficiently compute posteriors for Latent Gaussian Models (LGMs), which represent a broad class of statistical models in Bayesian statistics. This is known as the method of Integrated Nested Laplace Approximations (INLA), and this project aims to implement a working basis for INLA in the PyMC library.",
          "student_name": "Michal Novomestsky",
          "code_url": null,
          "proposal_id": "AaC2yTpG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Djw07Zv0"
        },
        {
          "title": "Create and Add to an Example Gallery for toqito",
          "short_description": "This project addresses the need for enhanced usability and learning resources within the toqito quantum information library by creating a...",
          "description": "This project addresses the need for enhanced usability and learning resources within the toqito quantum information library by creating a user-friendly example gallery, inspired by successful models like scikit-learn's. The core problem is the current lack of diverse, executable examples demonstrating toqito's capabilities in practical scenarios. The proposed solution involves developing the gallery's web infrastructure (potentially using Sphinx-Gallery) integrated into toqito's existing documentation, and populating it with high-quality, self-contained Python examples. Key deliverables include the functional gallery structure and 6 core examples demonstrating crucial toqito functionalities: modeling cryptographic protocols (Bit Commitment, QKD QBER) using ExtendedNonlocalGame, verifying state antidistinguishability thresholds from recent literature using the state_opt module, and illustrating channel properties (is_extremal) using channel_props. This gallery will significantly improve toqito's accessibility for researchers and new users, providing practical code and explanations for core quantum information concepts.",
          "student_name": "Nafisa Shamim Rafa",
          "code_url": null,
          "proposal_id": "zWtvWyMX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lI08brT4"
        },
        {
          "title": "Developing an Active Learning  Module for DeepForest",
          "short_description": "This project aims to enhance DeepForest by integrating and extending the active learning capabilities from Weecology/BOEM into its training pipeline....",
          "description": "This project aims to enhance DeepForest by integrating and extending the active learning capabilities from Weecology/BOEM into its training pipeline. The goal is to enhance the efficiency and scalability of tree and bird detection in aerial imagery, enabling smarter sample selection and reduced annotation effort. By using advanced sampling strategies such as uncertainty-based and diversity-based selection, users will be able to automatically generate predictions, identify the most valuable samples for annotation, and streamline the entire labeling process. The project will also focus on building an intuitive workflow, writing clear documentation, ensuring strong test coverage, and creating user-friendly interfaces. Ultimately, this work will help reduce manual annotation efforts, speed up training, and improve model performance, making DeepForest more adaptable.",
          "student_name": "Nakshatra Piplad",
          "code_url": null,
          "proposal_id": "Zfi87i6M",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/n9Ophyn4"
        },
        {
          "title": "Finite Volume Method Implementation for TNL",
          "short_description": "Template Numerical Library (TNL) already includes several solvers for partial differential equations, such as the Finite Element Method (FEM),...",
          "description": "Template Numerical Library (TNL) already includes several solvers for partial differential equations, such as the Finite Element Method (FEM), Lattice Boltzmann Method (LBM), and Smoothed Particle Hydrodynamics (SPH). However, it currently lacks native support for the Finite Volume Method (FVM), which I aim to implement. An FVM solver for the Navier-Stokes equations would make it possible to address a wide range of problems in computational fluid dynamics and aerospace.\n\nI plan to start by rewriting my 2D Euler equation solver from my Bachelor's thesis to work within TNL. Then, I’ll extend the implementation to support the Navier-Stokes equations in 2D, and finally in 3D, using an LU-SGS approach. In the final phase, I’ll focus on code optimization, documentation, and creating a clean, user-friendly interface.\n\nI plan to deliver a Finite Volume Method solver for the Euler equations in 2D integrated into TNL. This will be followed by an extension to support 2D Navier-Stokes equations, and finally, a 3D Navier-Stokes solver. The final code will be documented and unified with TNL's code standards.",
          "student_name": "Petr Sokol",
          "code_url": null,
          "proposal_id": "wCElOp8v",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dLFOcSDt"
        },
        {
          "title": "Adding a spirally wound geometry for thermal simulations in PyBaMM",
          "short_description": "Seeing the current increasing demand of high performance batteries, accurate thermal modelling of battery behaviour is essential. This project...",
          "description": "Seeing the current increasing demand of high performance batteries, accurate thermal modelling of battery behaviour is essential.\n\nThis project extends PyBaMM by adding the capability to simulate battery temperature in three dimensions. It starts by developing a 3D thermal model for batteries using existing 3D mesh and discretization tools, initially assuming a constant heat source. This thermal model is then coupled with existing battery models (like the SPM or DFN) so that the heat generated during battery operation can be simulated.\nThe model will also eventually allow temperature data from the thermal simulation to feed back into the battery model, enabling more realistic, two-way interactions. \n\nAs an advanced goal, the project will integrate detailed 3D temperature profiles from a spirally wound battery design into the electrochemical model, which will lay the groundwork for more complex and accurate battery simulations.",
          "student_name": "Rishab87",
          "code_url": null,
          "proposal_id": "z6jK4f0y",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/epbg9kwP"
        },
        {
          "title": "Data Retriever: Creating a multi-sensor airborne benchmark for Tree Species classification",
          "short_description": "This project aims to create a benchmark dataset for tree species classification using multi-sensor airborne data (RGB, HSI, and LiDAR) from the...",
          "description": "This project aims to create a benchmark dataset for tree species classification using multi-sensor airborne data (RGB, HSI, and LiDAR) from the National Ecological Observatory Network (NEON). The goal is to build a reproducible, well-documented dataset of hand-annotated tree crowns and use it to train baseline models for each modality individually and in combination. Alongside this, we’ll explore integration with DeepForest to support crown detection and classification workflows.\n\nDeliverables:\n1. A finalized, curated data product for tree species classification using NEON data added to TorchGeo.\n2. Baseline models for each modality and multi-modal combinations.\n3. Reproducible training pipelines and clear documentation.\n4. A utility to simplify NEON data access.\n5. Integration work and documentation linking this effort with DeepForest.",
          "student_name": "Ritesh Chowdhry",
          "code_url": null,
          "proposal_id": "i3yTem2k",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nrEEuvuB"
        },
        {
          "title": "Integrating DeepForest Object Detection with LLM for Automated Ecological Image Analysis",
          "short_description": "This project attempts to integrate DeepForest's object detection models into Large Language Models (LLMs) so that ecological images can be queried...",
          "description": "This project attempts to integrate DeepForest's object detection models into Large Language Models (LLMs) so that ecological images can be queried using natural language. Building on the pre-built models in DeepForest for tree, bird, and livestock detection, the system would extract structured annotations from images and convert them to an LLM-compatible format. Users can interact with an image through a queryable interface and receive proper responses based on object detection and spatial reasoning. This will involve prompt engineering, fine-tuning and experimentation with different LLMs.",
          "student_name": "Samia Haque Tisha",
          "code_url": null,
          "proposal_id": "3UTR8SA4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ItYAp7By"
        },
        {
          "title": "Stan - bayesplot: Visual predictive checks for discrete outcomes",
          "short_description": "bayesplot is an R package providing an extensive library of plotting functions for use after fitting Bayesian models. Currently, bayesplot offers a...",
          "description": "bayesplot is an R package providing an extensive library of plotting functions for use after fitting Bayesian models.  Currently, bayesplot offers a wide selection of functions for visualising the distributions of model parameters, as well as functions for predictive checking of continuous distributions. However, the selection of functions for predictive checks for discrete outcome distributions is limited and includes visualisations that are no longer recommended as the best practices.\n\nThe aim of this project is to expand the selection of plotting functions available for discrete outcome distributions, and improve the workflow of using bayesplot by adding diagnostics and informative messages to guide users to additional information and documentation when needed.",
          "student_name": "Teemu",
          "code_url": null,
          "proposal_id": "s1UJlSQe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QPZ7yqRa"
        },
        {
          "title": "ArviZ Plots Feature Parity",
          "short_description": "ArviZ is a Python library for the exploratory analysis of Bayesian inference models. It is currently undergoing a major refactor into a modular...",
          "description": "ArviZ is a Python library for the exploratory analysis of Bayesian inference models. It is currently undergoing a major refactor into a modular structure comprising three sub-packages: arviz-base, arviz-stats, and arviz-plots. This refactoring brings changes to both the API and the internal implementation, with most of the design decisions already in place. The primary task that remains is migrating and reimplementing existing features from legacy ArviZ into the new structure.\n\nThis project focuses on achieving feature parity in arviz-plots by reintroducing essential visualization tools from the original ArviZ while also enhancing them with new capabilities. These include plots for MCSE, t-statistics, parallel coordinates, quantile dot plots, support for circular variables in trace plots and rank distribution plots, among others. Additionally, new features such as a dark theme and improved rank plots with better envelopes for multiple sample comparisons will be incorporated.\n\nThe goal is to implement and rigorously test these plotting functions, which are critical for model comparison, criticism, and sampling diagnostics. By ensuring that arviz-plots matches and improves upon the original functionality, this project will enhance the usability, maintainability, and extensibility of ArviZ. Ultimately, it will help strengthen ArviZ’s position as a go-to library for Bayesian model visualization and diagnostics.",
          "student_name": "The-Broken-Keyboard",
          "code_url": null,
          "proposal_id": "HGRFMu2T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QEEVWGcd"
        },
        {
          "title": "aeon-Implement and Evaluate Machine Learning Forecasters for Aeon",
          "short_description": "Aeon is a comprehensive Python 3 library that supports a broad range of time series machine learning tasks. Time series forecasting is one of the...",
          "description": "Aeon is a comprehensive Python 3 library that supports a broad range of time series machine learning tasks. Time series forecasting is one of the core tasks in this domain, with applications in finance, healthcare, engineering, and beyond. While Aeon already oﬀers robust functionality for classification, segmentation, clustering, and regression, its support for forecasting is still under active development.\nThis project aims to fill that gap by focusing on forecasting methods that are built on traditional machine learning and time series-specific transformation techniques, rather than deep learning. The goal of this project is to enhance Aeon’s forecasting module by implementing new methods, integrating existing ones, and evaluating their performance. The outcomes may also contribute to technical documentation or academic writing.\nSpecifically, the project will contribute in:\n1. Framework enhancement: propose a new module MLForecastingPipeline in Aeon’s\nforecasting section, which focuses on making it easy to build forecasting pipelines using ML regressors.\n2. Algorithm evaluation: evaluate the Aeon forecasters based on regression algorithms already in aeon, on datasets from the M competition. A technical report or research paper will be written depending on the outcomes.\n3. New algorithm implementation: implement the SETAR-Tree and forest algorithm for aeon. The algorithm is a global time series forecasting method that is currently unavailable in aeon.",
          "student_name": "Tina0228",
          "code_url": null,
          "proposal_id": "Xw5VtsDR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MPYRSOTi"
        },
        {
          "title": "Hamiltonian Library for QuTiP",
          "short_description": "This project aims to develop a comprehensive Hamiltonian Library for QuTiP (Quantum Toolbox in Python). Currently, QuTiP users must frequently...",
          "description": "This project aims to develop a comprehensive Hamiltonian Library for QuTiP (Quantum Toolbox in Python). Currently, QuTiP users must frequently recreate common quantum system Hamiltonians from scratch, leading to redundant work and inconsistencies. The library will provide ready-to-use implementations of frequently used quantum systems like Jaynes-Cummings, Rabi, Dicke, and various spin-chain models. Key features include a standardised API, JSON serialisation for cross-platform compatibility, time-dependent parameter support, and LaTeX representation capabilities. The deliverables include a core Hamiltonian base class, at least 10 implemented quantum models, comprehensive documentation, tutorials, and full integration with QuTiP's existing functionality. This project will significantly enhance user experience and reduce redundancy in quantum simulations.",
          "student_name": "VanshajB",
          "code_url": null,
          "proposal_id": "T5zlMdzC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TgdXdTXP"
        },
        {
          "title": "Extending the loo Package",
          "short_description": "The `loo` package is a widely used R package in the Stan ecosystem which exposes a clean API to cross-validate (CV) Bayesian models. As new CV...",
          "description": "The `loo` package is a widely used R package in the Stan ecosystem which exposes a clean API to cross-validate (CV) Bayesian models. As new CV methods and diagnostics are created and adopted by the field, the `loo` package must be updated to support them. Currently different predictive performance measures have different APIs and varying level of supported features. This project is focused on refactoring the API to unify the support for different predictive measures to make all useful features available for all predictive measures to make it easier for the modellers to use the most appropriate measures for their applications.\n\nKey technical components will include creating a flexible object which can report multiple metrics and scores. Additionally, we need to create functions to support model comparisons for all these scores and metrics. We will also allow for measures besides log score for LOO-CV to be used under the same, unified interface as existing options and create a consistent loo object for all measures. We will further unify the interface by allowing for non-log score measures for in-sample, test data, and K-fold-CV use cases. We will also be extending the model comparison functions to carry forward information on what measure is being compared, diagnostic data, and information on how to calculate the standard error (SE) of the differences of various measures.",
          "student_name": "Visruth",
          "code_url": null,
          "proposal_id": "F8mxdlIA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NxqejlhZ"
        },
        {
          "title": "igraph | Degree-Constrained Null Models & Graph Construction",
          "short_description": "Graphs are powerful tools for understanding relationships and structures — from social media connections to brain networks. Often, we want to study...",
          "description": "Graphs are powerful tools for understanding relationships and structures — from social media connections to brain networks. Often, we want to study whether these structures exhibit unusual features. To do so, we compare the graph in question to a \"baseline\" or \"generic\" graph, called a null model; this gives us a point of reference to identify whether the features we see are truly unusual or simply a result of random chance. \n\nAs such, the goal of this project is to expand the igraph library's ability to work with null models. Given a set of characteristics about a graph, we want to make it more flexible to 1) check whether a graph with these characteristics exist (graphicality), 2) create a graph with these characteristics (construction), and 3) derive other graphs that share the same characteristics (rewiring). \n\nWith more flexible and performant tools for working with null models, igraph can better support the network science underpinning so many scientific domains.",
          "student_name": "Zara Zong",
          "code_url": null,
          "proposal_id": "ui2N1vyT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/q04crkoi"
        },
        {
          "title": "Proposal for PYSAL– SPOPT",
          "short_description": "This project aims to extend PySAL's spatial optimisation library (spopt) by implementing flow-based facility location models, specifically the Flow...",
          "description": "This project aims to extend PySAL's spatial optimisation library (spopt) by implementing flow-based facility location models, specifically the Flow Refueling Location Model and the Deviated Flow Refueling Location Model. While spopt currently includes various node-based location optimisation models, it lacks flow-based models that are crucial for transportation infrastructure planning. The proposed implementation will include comprehensive data processing components for network and flow data, core optimisation model implementations with solver integration, and output processing tools for visualisation and analysis.",
          "student_name": "ZixinFeng",
          "code_url": null,
          "proposal_id": "pi6dq8ii",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rCb85IXn"
        }
      ]
    },
    {
      "name": "The FreeBSD Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-freebsd-project/4jmspor6mcto9wti-360.png",
      "image_background_color": "#ffffff",
      "description": "An OS for servers to embedded devices",
      "url": "https://www.freebsd.org/",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-freebsd-project",
      "ideas_url": "https://wiki.freebsd.org/SummerOfCodeIdeas",
      "guide_url": "https://www.freebsd.org/projects/summerofcode/",
      "topics": ["virtualization", "operating system", "Embedded System"],
      "technologies": ["c", "llvm", "assembly", "make", "POSIX shell"],
      "irc_channel": "https://wiki.freebsd.org/SummerOfCode/IRC",
      "contact_email": "mailto:soc-admins@FreeBSD.org",
      "mailing_list": "https://lists.freebsd.org/mailman/listinfo/freebsd-hackers",
      "twitter_url": "https://twitter.com/freebsdfndation",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 11,
      "projects": [
        {
          "title": "VMM Accelerator support for QEMU",
          "short_description": "This project aims to add VMM acceleration support to QEMU on FreeBSD, bridging the gap between QEMU’s userspace emulation and FreeBSD’s kernel-based...",
          "description": "This project aims to add VMM acceleration support to QEMU on FreeBSD, bridging the gap between QEMU’s userspace emulation and FreeBSD’s kernel-based VMM hypervisor. Currently, QEMU on FreeBSD lacks hardware acceleration, forcing users to rely on slower TCG emulation or switch to bhyve. I plan to modify QEMU’s memory management to work with VMM’s kernel-allocated guest memory. Additionally, I will adapt VMM to make non-critical devices (HPET, RTC) optional, letting QEMU handle them in user space. This would enable a hybrid interrupt model (kernel vLAPIC + emulated IOAPIC). The deliverables for this project would be a working -accel=vmm backend for QEMU. I will also add some changes to VMM, allowing some of the in-kernel devices to be made optional. Finally, I will add comprehensive documentation and benchmarks for the libvmmapi interface. This will enable near-native performance for QEMU on FreeBSD, expanding virtualization options while maintaining compatibility with existing QEMU tooling.",
          "student_name": "Abhinav Chavali",
          "code_url": null,
          "proposal_id": "2O2bpZmi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lRkVElCJ"
        },
        {
          "title": "Testing & CI Integration for Rust FreeBSD Device Drivers",
          "short_description": "This project addresses the lack of structured testing and CI support for Rust kernel modules in FreeBSD. The previous work of many students has...",
          "description": "This project addresses the lack of structured testing and CI support for Rust kernel modules in FreeBSD. The previous work of many students has introduced the capability of Rust in FreeBSD kernel space. However, current progress remains shallow. This lack of depth makes it difficult for other developers to build upon. I propose to develop a robust testing framework for both existing and future Rust drivers using Kyua, integrate this framework into FreeBSD’s Jenkins CI infrastructure, and re-implement an existing C driver in Rust as a modern reference for the FreeBSD community.\nDeliverables include:\n    1. A reusable testing framework for Rust kernel drivers\n    2. CI integration via Jenkins and GitHub Actions\n    3. A comprehensive set of tests (unit, integration, fault injection, and performance)\n    4. A new, well-documented Rust driver\n    5. Clear public documentation to guide future developers",
          "student_name": "Acesp25",
          "code_url": null,
          "proposal_id": "gAK6urTr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/FnDSAZEj"
        },
        {
          "title": "Full Disk Administration Tool for FreeBSD",
          "short_description": "FreeBSD currently lacks a tool to manage partitions and manipulate file systems like GParted does in Linux. The proposed project aims to use sade, a...",
          "description": "FreeBSD currently lacks a tool to manage partitions and manipulate file systems like GParted does in Linux. The proposed project aims to use sade, a FreeBSD TUI tool that allows creation, modification, and deletion of partitions, as a starting point to develop a new tool. This project will add operations to manage partitions with different file systems like UFS, exFAT, ext, and NTFS. Also, it would handle minimal ZFS (creating pools and datasets) and applying encryption and labeling over geoms using geli and glabel.",
          "student_name": "Braulio Rivas",
          "code_url": null,
          "proposal_id": "17bP4joe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AQdl28ee"
        },
        {
          "title": "Adding QCOW2 compressed image support to mkimg(1)",
          "short_description": "mkimg(1), a FreeBSD tool used for creating disk images in various formats, currently lacks support for creating compressed QCOW2 images. In this...",
          "description": "mkimg(1), a FreeBSD tool used for creating disk images in various formats, currently lacks support for creating compressed QCOW2 images. In this proposal, I describe the steps that should be made in order for mkimg(1) to be able to create compressed QCOW2 images.",
          "student_name": "Christos Komis",
          "code_url": null,
          "proposal_id": "phu8BfcG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HENL3VNt"
        },
        {
          "title": "ACPI Initialization in Loader With Lua Bindings",
          "short_description": "Intel™’s Advanced Configuration and Power Interface (ACPI) is an industry standard specification that revolutionized power management by putting it...",
          "description": "Intel™’s Advanced Configuration and Power Interface (ACPI) is an industry standard specification that revolutionized power management by putting it in the hands of the operating system, rather than the BIOS. As it currently stands, it is widely available across 32-bit and 64-bit architectures, with specially tailored manuals towards Windows™ and UNIX. \n\nFreeBSD has implemented ACPI, utilizing Intel™’s ACPI Computer Architecture (ACPICA). The major contention point is that it is outside the loader. In this state, it is inefficient; information that’s only available to ACPI, is therefore unavailable to the boot loader. As such, the boot loader essentially has to guess what that information is, and is often wrong. This proposal aims to alleviate this bottleneck by bringing a lightweight version of ACPICA into the loader. With this integration, ACPI will not only be more efficiently managed, but it will also be script-able with Lua, providing FreeBSD users ease of configuration.\n\nDeliverables include: (1) stand/efi/acpica/Osd/ with necessary ACPICA/AML initialization, (2) stand/efi/loader/arch/$ARCH for arm64 and amd64 specific glue code, (3) complete integration of both architectures: ACPI initialized in the loader, (4) the ACPI namespace enumerated in C, (5) an ACPI API layer, (6) Lua bindings, and (7) updated FreeBSD ACPI handbook and man pages.",
          "student_name": "kpowkitty",
          "code_url": null,
          "proposal_id": "SRQZkCjT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vcXeKCzJ"
        },
        {
          "title": "Speed up the FreeBSD boot process",
          "short_description": "This proposal aims to accelerate FreeBSD’s boot process by using the TSLOG framework to identify and target specific delays. Initial profiling...",
          "description": "This proposal aims to accelerate FreeBSD’s boot process by using the TSLOG framework to identify and target specific delays. Initial profiling revealed significant slowdowns caused by unnecessary sleep intervals in disk detection, timeouts in AT keyboard controller resets, and prolonged waiting in IPv6 configuration and the boot menu. The project will set up controlled test environments, apply targeted code modifications (including ZFS adjustments and adopting approaches from Linux), and iteratively validate improvements through repeated profiling. By systematically optimizing each boot phase while ensuring system stability, the project intends to deliver measurable reductions in boot time, ultimately benefiting the FreeBSD community through faster system reboots and a replicable methodology for future performance enhancements.",
          "student_name": "Lahiru Gunathilake",
          "code_url": null,
          "proposal_id": "O9hDr9Lu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/x8yTB4un"
        },
        {
          "title": "WiFi Management UI",
          "short_description": "This project aims to build a CLI and TUI utility for easy WiFi and network management on the FreeBSD operating system. The base features for...",
          "description": "This project aims to build a CLI and TUI utility for easy WiFi and network management on the FreeBSD operating system. The base features for listing/configuring network interfaces, scanning, connecting/disconnecting from wireless networks will be implemented using libifconfig, with additional functionality added to the library as needed. The project aims to keep the dependencies to a minimal so that it can be suitable for inclusion into the FreeBSD base system. The CLI will include a REPL interface like iwctl, and a TUI like NetworkManager's nmtui will be built using terminal raw mode and control sequences, avoiding libraries like ncurses.",
          "student_name": "Muhammad Saheed",
          "code_url": null,
          "proposal_id": "tj5Fn8zg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0MvQZDLg"
        },
        {
          "title": "Implement Journaling for FreeBSD's ext3/4",
          "short_description": "This project aims to implement Linux-compatible journaling within FreeBSD's ext2fs filesystem driver to address its current lack of journaling...",
          "description": "This project aims to implement Linux-compatible journaling within FreeBSD's ext2fs filesystem driver to address its current lack of journaling capabilities, which are standard in Linux's ext3 and ext4 filesystems. The absence of journaling in FreeBSD's implementation results in reduced filesystem consistency and slower recovery times after system crashes compared to its Linux counterparts. The proposed solution involves modifying the ext2fs driver to understand the on-disk format and transaction mechanisms of journaling. This includes developing capabilities to detect and read journal metadata, implementing functions to manage journal transactions integrating these functions into essential metadata operations, and enabling mount-time journal recovery to ensure filesystem integrity. Key deliverables include integrated code for detecting, parsing, and managing journal data, functional logging of metadata changes within transactions, a complete implementation for committing these transactions to the on-disk journal, integration of journaling across major metadata operations, support for at least one standard journaling mode (like data=ordered or data=writeback), and comprehensive test cases accompanied by thorough documentation.",
          "student_name": "Pau Sum",
          "code_url": null,
          "proposal_id": "C8vIvH1U",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kIeG9hSh"
        },
        {
          "title": "FreeBSD Power Profiling Tool",
          "short_description": "FreeBSD currently lacks granular power profiling tools, offering only whole-system statistics via ACPI. This makes identifying power-hungry processes...",
          "description": "FreeBSD currently lacks granular power profiling tools, offering only whole-system statistics via ACPI. This makes identifying power-hungry processes challenging, hindering energy efficiency on laptops and servers. To address this, I propose developing a lightweight, FreeBSD-native power profiling tool inspired by Linux’s PowerTOP, prioritizing simplicity and integration with FreeBSD’s architecture.  \n\nThe solution comprises:  \n1. Kernel Module: A RAPL driver to collect CPU power data (Intel/AMD) via `/dev/cpuctl`, leveraging existing FreeBSD code.  \n2. Monitoring Daemon: A background service to aggregate metrics, correlate process activity (using `pmc(3)`), and maintain historical logs.  \n3. User Tools: A CLI utility for real-time process-level analysis and Grafana integration for visualization. Additional support for the `amd_s2idle.py` script will aid suspend/resume diagnostics.  \n\nDeliverables include the kernel module, daemon, CLI tool, validation tests, and documentation. This approach avoids the complexity of modular frameworks like PCP, ensuring low overhead and maintainability.  \n\nThe tool will empower users to optimize energy use, extend battery life, and reduce server costs. Future extensions could support GPU monitoring or predictive analytics. By prioritizing FreeBSD’s design philosophy, this project lays a foundation for advanced power management while delivering immediate, actionable insights.",
          "student_name": "Sai Kasyap Jannabhatla",
          "code_url": null,
          "proposal_id": "d54mNutX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CuSjdaYl"
        },
        {
          "title": "mac_do(4) and mdo(1) improvements",
          "short_description": "The FreeBSD mac_do(4) and mdo(1) utilities enable controlled transitions of user and group credentials without relying on inherently risky setuid...",
          "description": "The FreeBSD mac_do(4) and mdo(1) utilities enable controlled transitions of user and group credentials without relying on inherently risky setuid executables. Currently, mac_do only authorizes the /usr/bin/mdo executable, and does not fully support granular group transitions or per-jail executable authorization. This project enhances security by allowing configurable paths for authorized executables (beyond mdo), implementing granular group management via mdo(1) (new -g and -G flags), and integrating comprehensive jail support for isolating credential rules. Key deliverables include kernel-side implementation of allowed executable path lists, enhanced per-jail rule management, extended userland functionality for group management, password authentication integration, and complete documentation updates.",
          "student_name": "thesynthax",
          "code_url": null,
          "proposal_id": "sI7FNtEM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gZAnOBRn"
        },
        {
          "title": "Port FreeBSD to QEMU microvm",
          "short_description": "QEMU microvm is a lightweight virtual machine environment designed to run operating systems quickly with few hardware dependencies. This project aims...",
          "description": "QEMU microvm is a lightweight virtual machine environment designed to run operating systems quickly with few hardware dependencies. This project aims to port FreeBSD to the platform.\n\nThere has been some progress in getting the Firecracker build of FreeBSD to work in microvm. However, there are issues with the current implementation, including inability for the kernel to shut the VM down itself, network devices not sending packets, random freezing, and slow boot times.\n\nMy goal with this project is to improve consistency, usability, and speed of FreeBSD on microvm. Code will be submitted with demonstrations of the kernel having a significantly reduced tendency to freeze, restarts and shutdowns working as intended, network devices sending packets, and boot times being improved. Weekly documentation will be submitted so my work can be utilized by the wider software engineering community.",
          "student_name": "WGeckle80",
          "code_url": null,
          "proposal_id": "qpKwAYYx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rd4vVntG"
        }
      ]
    },
    {
      "name": "OpenVINO Toolkit",
      "image_url": "https://summerofcode.withgoogle.com/media/org/openvino-toolkit/ivzvok335ujezk2z-360.png",
      "image_background_color": "#ffffff",
      "description": "Make AI inference faster and easier to deploy!",
      "url": "https://docs.openvino.ai/",
      "category": "Development tools",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/openvino-toolkit",
      "ideas_url": "https://github.com/openvinotoolkit/openvino/wiki/Google-Summer-Of-Code#project-ideas-for-2025",
      "guide_url": "https://github.com/openvinotoolkit/openvino/wiki/Google-Summer-Of-Code#application-template",
      "topics": [
        "ai",
        "deep learning",
        "neural network",
        "inference",
        "gen ai"
      ],
      "technologies": ["python", "c++", "arm", "x86"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://github.com/openvinotoolkit/openvino/discussions/categories/google-summer-of-code",
      "twitter_url": "",
      "blog_url": "https://medium.com/openvino-toolkit",
      "facebook_url": "",
      "num_projects": 16,
      "projects": [
        {
          "title": "Interactive Multimodal Data Explorer using Datumaro and OTX",
          "short_description": "​Managing and refining large-scale multimodal datasets—comprising images, text, and other data types—poses significant challenges due to the lack of...",
          "description": "​Managing and refining large-scale multimodal datasets—comprising images, text, and other data types—poses significant challenges due to the lack of integrated and scalable tools for effective cross-modal analysis and annotation. Traditional methods often require manual intervention and multiple disparate tools, leading to inefficiencies and potential inconsistencies in data handling. This fragmentation hampers the development of robust AI models that rely on high-quality, well-annotated datasets.​\n\nTo address these challenges, this project proposes the development of an Interactive Multimodal Data Explorer, a unified platform designed to streamline dataset inspection, cleaning, and refinement. Leveraging the capabilities of the Datumaro dataset management framework and OpenVINO Training Extensions (OTX) , the system will offer:​\nGitHub\nDatumaro Integration Layer\nEmbeddings Module\nInteractive Visualization Engine\nAnnotation Interface\n\nThe key deliverables of this project include a modular, scalable architecture optimized for large datasets with features like lazy loading and distributed processing; cross-modal visualization tools, including alignment heatmaps and nearest-neighbor comparisons, to enhance data quality auditing; and integration with existing MLOps ecosystems, providing an API-ready foundation for enterprise-scale deployments. By unifying dataset management tasks into a single interface, this project aims to accelerate the development of robust multimodal AI models while reducing manual labeling efforts.",
          "student_name": "Aarya Pandey",
          "code_url": null,
          "proposal_id": "aMU86ach",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j834yUmd"
        },
        {
          "title": "OpenVINO GenAI provider for LangChain",
          "short_description": "This project aims to develop an OpenVINO GenAI extension for LangChain, enabling users to utilize OpenVINO as a backend for running language models....",
          "description": "This project aims to develop an OpenVINO GenAI extension for LangChain, enabling users to utilize OpenVINO as a backend for running language models. It involves integrating these components to ensure seamless compatibility, providing optimized performance for language model inference.\nDeliverables:\n1. A fully functional OpenVINO GenAI extension for LangChain, allowing users to run language models with OpenVINO as the backend.\n2. A finalized package distributed as a Python wheel.",
          "student_name": "bhuminjaysoni",
          "code_url": null,
          "proposal_id": "ElPZdMZz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7zYWvO3f"
        },
        {
          "title": "Enhancing Anomalib with SOTA Anomaly Detection Benchmarks, Models and Evaluation Metrics",
          "short_description": "This project aims to enhance Anomalib by integrating state-of-the-art (SOTA) anomaly detection models, including GLASS, GLAD, MuSc, for both...",
          "description": "This project aims to enhance Anomalib by integrating state-of-the-art (SOTA)\nanomaly detection models, including GLASS, GLAD, MuSc, for both one-class and\nmulti-class classification. By incorporating these models, Anomalib will remainaligned with the latest advancements in anomaly detection, strengthening its\nbenchmarking capabilities. Additionally, new benchmark datasets, such as BTAD\n(for images) and UBNormal (for videos), will be integrated to expand the\nframework’s applicability across industrial and medical domains. The project will\nalso introduce advanced evaluation metrics, including mIoU-max and averaged\nmAD, to enable more comprehensive performance assessments. Comprehensive\ndocumentation, along with updated benchmarks and performance comparisons,\nwill ensure ease of use and deployment readiness. These enhancements will\nestablish Anomalib as a more robust and versatile framework for real-world\nanomaly detection applications.",
          "student_name": "code-dev05",
          "code_url": null,
          "proposal_id": "eB1h0xOZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xOJtUUDA"
        },
        {
          "title": "Improve OTX Classification via DoRA and Transformer Backbone.",
          "short_description": "This project addresses the inefficiency of full fine-tuning in classification tasks on small-scale datasets and low-resource environments within...",
          "description": "This project addresses the inefficiency of full fine-tuning in classification tasks on small-scale datasets and low-resource environments within OpenVINO Training Extensions (OTX). To solve this, the project will introduce Parameter-Efficient Fine-Tuning (PEFT) techniques(specifically DoRA) and integrate lightweight Vision Transformer (ViT) backbones into the OTX framework. The solution will be validated through benchmarking on datasets of varying sizes to evaluate the trade-off between performance and training cost. Deliverables include the implementation of PEFT modules, integration of ViT-based backbones, and comprehensive benchmark results.",
          "student_name": "GyuIlLim",
          "code_url": null,
          "proposal_id": "I3bCch34",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1iiEaSOA"
        },
        {
          "title": "Optimized Serving endpoint for classic machine learning model training and inference",
          "short_description": "As machine learning models grow in size and complexity, there is a rising need for fast, efficient, and scalable ways to serve them in production...",
          "description": "As machine learning models grow in size and complexity, there is a rising need for fast, efficient, and scalable ways to serve them in production environments. This project aims to build a fully functional pipeline that enables both training and inference using models optimized with OpenVINO and served using KServe.\nIt will provide dynamic request parsing and serving through KServe. Real-time inference will be managed by the system, along with remote training using a friendly API. Deliverables are an efficient inferencing and training pipelines with pre/post-processing and production-ready deployment with OpenVINO being at the core.",
          "student_name": "Harshitha Manne",
          "code_url": null,
          "proposal_id": "aQolUqhp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iPrS5Atx"
        },
        {
          "title": "Proposal for 20. Demonstrating integration of  open-webui with OpenVINO Model Server",
          "short_description": "The goal of this project is to enable seamless integration between Open-WebUI—a comprehensive frontend platform designed for generative AI...",
          "description": "The goal of this project is to enable seamless integration between Open-WebUI—a comprehensive frontend platform designed for generative AI applications—and OpenVINO Model Server, a highly efficient backend optimized for scalable and performant inference. The integration will enable Open-WebUI to utilize OpenVINO Model Server endpoints for various generative tasks, including text/chat generation, Retrieval Augmented Generation (RAG), and image generation, through standardized OpenAI-compatible APIs.\nThe solution will include the following key components:\n1. Deploying OpenVINO Model Server:\n•\tSet up OpenVINO Model Server using Docker or Kubernetes, preparing a model repository with models suitable for generative AI tasks.\n•\tConfigure OpenVINO Model Server to expose REST or gRPC endpoints compatible with OpenAI's API specifications.\n2. Configuring Open-WebUI:\n•\tInstall and configure Open-WebUI via Docker, setting it up to forward inference requests to OpenVINO Model Server endpoints using the custom OpenAI-compatible API integration.\n3. End-to-End Validation:\n•\tTest key generative workflows, including multi-turn chat, RAG, and image generation, ensuring compatibility and functionality between OpenVINO Model Server and Open-WebUI.\n4. Documentation and Reporting:\n•\tProvide clear, step-by-step deployment instructions, including example configurations and setup guides.\n•\tDocument any minor adjustments needed to either OpenVINO Model Server or Open-WebUI to facilitate integration and clearly note any significant challenges or limitations for future reference.\nBy successfully completing these components, the project will provide a detailed and user-friendly integration recipe, significantly enhancing the accessibility and practicality of deploying advanced generative AI solutions.",
          "student_name": "Huanli",
          "code_url": null,
          "proposal_id": "fmhl25qi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jpuxDLqI"
        },
        {
          "title": "Traffic Intersection Monitoring System with OpenVINO",
          "short_description": "Urban traffic systems today struggle with issues like congestion, delayed response to accidents, and poor coordination between intersections....",
          "description": "Urban traffic systems today struggle with issues like congestion, delayed response to accidents, and poor coordination between intersections. Existing solutions often fall short in real-time responsiveness, privacy protection, and adaptability to emerging tech.\nThis project aims to close those gaps by developing a next-generation Quantum-Neuromorphic Federated Traffic Management System (QNFTMS)—a cutting-edge platform that blends several powerful technologies:\nNeuromorphic Event-Based Cameras to detect motion and anomalies with ultra-low latency and minimal false positives.\nQuantum-Inspired Uncertainty Modeling to handle tricky scenarios, such as vehicles hidden behind others or in poor lighting.\n\nFederated Causal Learning, allowing intersections to learn collaboratively while keeping raw data local and private.\n\nBlockchain-Backed Logging for tamper-resistant records of violations and incidents.\n\nAR-Enhanced Dashboards to give operators a real-time, immersive view of traffic flow and predictive insights.",
          "student_name": "Jatin Sachdeva",
          "code_url": null,
          "proposal_id": "TzRG3LYe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Jgei3MYO"
        },
        {
          "title": "Fine-tuning Vision-Language Models for Object Detection and Hierarchical Classification",
          "short_description": "This project aims to fine-tune Vision-Language Models (VLMs) for domain-specific tasks like object detection and hierarchical classification,...",
          "description": "This project aims to fine-tune Vision-Language Models (VLMs) for domain-specific tasks like object detection and hierarchical classification, focusing on real-world applications in fields such as medical diagnostics and biodiversity monitoring. Although VLMs like BLIP-2 and TinyCLIP show strong general-purpose performance, their effectiveness diminishes in specialized domains due to domain shifts, hierarchical label structures, and hardware constraints.\n\nTo address this, we will implement efficient fine-tuning strategies—including LoRA, QLoRA, and adapter tuning—within the OpenVINO Training Extensions (OTX), enabling scalable training on consumer-grade GPUs. We’ll enhance these models with support for structured prediction and deploy them using OpenVINO’s quantization and optimization toolchain, ensuring fast, lightweight inference across devices.\n\nBeyond technical contributions, the project delivers practical tools and open-source pipelines that bring advanced multimodal AI to resource-limited environments. By supporting transparent, efficient deployment of VLMs in impactful domains, this work bridges cutting-edge research with high-value, real-world use cases.",
          "student_name": "Jiayu Li",
          "code_url": null,
          "proposal_id": "lo7WpiNl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/eYkkpBH5"
        },
        {
          "title": "OpenVINO AI PC Model Training Kit",
          "short_description": "This proposal outlines a detailed, structured, and actionable two-phase strategy for developing an OpenVINO AI PC Model Training Kit. The core...",
          "description": "This proposal outlines a detailed, structured, and actionable two-phase strategy for developing an OpenVINO AI PC Model Training Kit. The core objective of this initiative is to enable streamlined, efficient, and scalable AI model training capabilities on widely accessible hardware by fully leveraging OpenVINO’s optimization capabilities and integrating it seamlessly with leading machine learning frameworks such as PyTorch, TensorFlow, and Scikit-learn.",
          "student_name": "LeoHeim",
          "code_url": null,
          "proposal_id": "h6bjkHTs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/i7OuLusy"
        },
        {
          "title": "Keras hub GenAI/LLM pipelines for the OpenVINO backend in Keras 3",
          "short_description": "Enable popular Keras Hub GenAI/LLM pipelines for the OpenVINO backend in Keras 3 and optimize their performance. This project focuses on implementing...",
          "description": "Enable popular Keras Hub GenAI/LLM pipelines for the OpenVINO backend in Keras 3 and optimize their performance. This project focuses on implementing missing operations in the OpenVINO backend to support and optimize Gemma and Mistral pipelines, ensuring efficient inference. The final deliverables will be two fully enabled and optimized pipelines running on Keras 3 with OpenVINO.",
          "student_name": "Mohamed Ashraf Ibrahim",
          "code_url": null,
          "proposal_id": "uHMyZqvx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Gf0CDHkh"
        },
        {
          "title": "Project 18: Multimodal embeddings based on OVMS",
          "short_description": "This project aims to optimize the calculation of multimodal embeddings (text, image, audio, video) by exposing REST API endpoints in OpenVINO Model...",
          "description": "This project aims to optimize the calculation of multimodal embeddings (text, image, audio, video) by exposing REST API endpoints in OpenVINO Model Server. It combines the transformers library for data preprocessing with OpenVINO for efficient inference execution. The project will include a Mediapipe graph for preprocessing and inference, along with a sample application for image search using embeddings stored in a vector database. The goal is to enable flexible, efficient comparison of different data types based on semantic meaning.",
          "student_name": "Raghav Yadav",
          "code_url": null,
          "proposal_id": "JjhK8qcb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AApbJ45K"
        },
        {
          "title": "Expand OpenVINO AUTO",
          "short_description": "The AI PC has multiple processing units. While most face detection models use just one unit throughout their lifetime, we try to use all the units...",
          "description": "The AI PC has multiple processing units. While most face detection models use just one unit throughout their lifetime, we try to use all the units available to ensure better efficiency, lesser power consumption, and a better overall user experience. We aim to achieve this by switching the unit being used according to the compute requirement.\n\nDo this while ensuring that there are no crashes while the model runs inference. We build on top of OpenVINO AUTO to deliver an app that serves the user by helping switch between various compute engines",
          "student_name": "RaghavSharma",
          "code_url": null,
          "proposal_id": "bOTEQvKL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NcCGwcnx"
        },
        {
          "title": "Accelerating Inference of NNCF-Compressed LLMs with Triton",
          "short_description": "Large Language Models (LLMs) have demonstrated exceptional performance across a wide range of tasks, leading to their widespread adoption. However,...",
          "description": "Large Language Models (LLMs) have demonstrated exceptional performance across a wide range of tasks, leading to their widespread adoption. However, they still require significant computational resources for inference, especially when deployed on hardware-constrained devices. While the Neural Network Compression Framework (NNCF) helps reduce memory and compute requirements through quantization and weight compression, further efficient execution of these compressed models remains a challenge due to kernel-level inefficiencies. In particular, low-bit matrix multiplications (matmul) introduce unwanted overhead, often involving multiple separate kernels for operations like dequantization, bit packing, matmul, etc. Additionally, multiple kernels are required to accommodate different scenarios such as single (GEMV) or batched (GEMM and GEMM Split-K) prefills and token decoding in LLMs, adding another layer of complexity. This project aims to accelerate inference of NNCF-compressed LLMs by implementing optimized, fused low-bit matmul kernels using Triton. Existing open-source low-bit kernel implementations (e.g., GemLite, Tinygemm, etc.) will be evaluated, and the most suitable will be adapted and integrated into NNCF. These custom kernels will support available quantization formats (INT8, INT4, etc.), and will be wrapped using custom_op to ensure compatibility with PyTorch’s torch.compile. It will include performance benchmarking and profiling on NVIDIA and Intel GPUs, submission of a pull request to NNCF with the implemented changes, and comprehensive blog posts/documentation.",
          "student_name": "Riffat Khan",
          "code_url": null,
          "proposal_id": "Q4qTCAnH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dVmaMFJg"
        },
        {
          "title": "OpenVINO Messenger AI-Assistant for an AI PC",
          "short_description": "Modern messaging platforms like Discord and Slack are not just used for communication but also for consuming news, discussions, and topic-specific...",
          "description": "Modern messaging platforms like Discord and Slack are not just used for communication but also for consuming news, discussions, and topic-specific updates. However, keeping track of all this information across channels is overwhelming. This project aims to build a privacy-preserving, offline desktop AI assistant that can retrieve and summarize past messages using a local Retrieval-Augmented Generation (RAG) pipeline. Leveraging Intel's OpenVINO 2025 Generative AI workflow and LangChain, the assistant will extract messages via the Discord API, embed them using OpenVINO-accelerated models, and store them in a FAISS vector database. On receiving a user query or generating a daily digest, the system retrieves relevant context and runs inference using a locally optimized LLM, accelerated by GPU, NPU, or CPU depending on available hardware. A PyQt-based desktop application server as the user interface, providing features like chat, digest summaries, model/device selection, and system notifications.",
          "student_name": "Siddhant Chauhan",
          "code_url": null,
          "proposal_id": "9ou5MaPf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/n5QRaAsb"
        },
        {
          "title": "Gesture Control with OpenVINO",
          "short_description": "This project aims to develop a hand-gesture computer control system by porting MediaPipe’s Gesture Recognizer to OpenVINO, enhancing performance on...",
          "description": "This project aims to develop a hand-gesture computer control system by porting MediaPipe’s Gesture Recognizer to OpenVINO, enhancing performance on Intel hardware. It will have a context-aware system that maps hand movements to keyboard shortcuts, mouse clicks, and other inputs, with the innovation of application-specific mapping where identical gestures trigger different actions based on the active application. Deliverables include converted MediaPipe models (palm detection, landmark detection, gesture embedder, and classifier) in OpenVINO IR format with complete pipeline integration, a real-time gesture control system that achieves at least 20 FPS with smooth cursor tracking, and a user-friendly GUI for customizing gesture-to-input mappings; in addition, performance will be benchmarked across various Intel platforms and the implementation process will be thoroughly documented for future contributors.",
          "student_name": "VijayKr338",
          "code_url": null,
          "proposal_id": "xofw6TnN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j0BaBXKt"
        },
        {
          "title": "Training Edge-Deployable Models via Collaborative Annotation with Humans and Large Foundation Models",
          "short_description": "This project aims to implement a framework that leverages Large Foundation Models (LFMs) for automated dataset annotation. It also aims to distill...",
          "description": "This project aims to implement a framework that leverages Large Foundation Models (LFMs) for automated dataset annotation. It also aims to distill their knowledge into lightweight models suitable for deployment on edge devices. Initially, LFMs assign labels to training datasets, that are then refined through human-in-the-loop verification. During the training of lightweight models, human annotators improve the quality of the training data. Active learning is employed to identify informative samples to minimize human effort for label correction. Through this iterative process, the lightweight models gradually acquire task capability with minimal human effort, whose knowledge is distilled from LFMs.",
          "student_name": "Yuki Wakai",
          "code_url": null,
          "proposal_id": "CGg1zFTv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2xtHy9KV"
        }
      ]
    },
    {
      "name": "cBioPortal for Cancer Genomics",
      "image_url": "https://summerofcode.withgoogle.com/media/org/cbioportal-for-cancer-genomics/fdxtjhb0urtqcyfe-360.png",
      "image_background_color": "#ffffff",
      "description": "Aid discovery in complex cancer genomics data",
      "url": "https://www.cbioportal.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/cbioportal-for-cancer-genomics",
      "ideas_url": "https://github.com/cBioPortal/gsoc/issues?q=is%3Aissue%20state%3Aopen%20label%3AGSoC-2025",
      "guide_url": "https://github.com/cBioPortal/GSoC",
      "topics": [
        "genomics",
        "cancer",
        "bioinformatics",
        "big data",
        "precision medicine"
      ],
      "technologies": ["mysql", "javascript", "java", "react", "typescript"],
      "irc_channel": "https://slack.cbioportal.org",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/cbioportal",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Automated Metadata Harmonization Tool",
          "short_description": "This project aims to automate metadata harmonization for cBioPortal, a widely used platform for cancer genomics research. Currently, metadata from...",
          "description": "This project aims to automate metadata harmonization for cBioPortal, a widely used platform for cancer genomics research. Currently, metadata from different studies often uses inconsistent terms, limiting cross-study analysis and making it harder to apply AI/ML models effectively. Manual harmonization is time-consuming and not scalable.\n\nTo address this, I propose building an automated metadata harmonization tool using fine-tuned biomedical sentence transformer models to semantically match and standardize metadata terms. The pipeline will include data preprocessing, semantic matching, low-confidence flagging, and expert validation. A user-friendly UI will allow curators to review and confirm mappings, with final results stored in cBioPortal’s backend database.\n\nKey deliverables include:\n\n-A fully functional metadata harmonization pipeline\n-Semantic similarity models fine-tuned on curated biomedical data\n-Integration with cBioPortal's existing infrastructure\n-An interactive UI for expert review and export\n-Documentation and testing coverage\n\nThis tool will reduce manual curation time by over 70%, improve metadata consistency, and enhance the platform’s readiness for AI-driven research.",
          "student_name": "Changchang Li",
          "code_url": null,
          "proposal_id": "YFWb8mY9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NzVvml1R"
        },
        {
          "title": "Use Chromoscope React Component for Structural Variants Visualization",
          "short_description": "The cBioPortal for Cancer Genomics is an open resource for interactive exploration of multidimensional cancer genomics data sets. The goal of...",
          "description": "The cBioPortal for Cancer Genomics is an open resource for interactive exploration of multidimensional cancer genomics data sets. The goal of cBioPortal is to significantly lower the barriers between complex genomic data and cancer researchers by providing rapid, intuitive, and high-quality access to molecular profiles and clinical attributes from large-scale cancer genomics projects.\nCurrently, a Structural Variants tab is present in the cBioPortal results view page reporting structural variants in a tabular format without any visual representation. However, structural variants mainly consist of large and complex chromosome rearrangements that overlap with other mutational data and need to be carefully checked in relation to other metrics, such as depth of coverage and mutational density. Therefore, the lack of a comprehensive visualization tool that is able to display the whole mutational landscape in one genomic region has become a pressing issue.\nThis project aims to fill this gap by enriching multiple cBioPortal tabs with interactive plots where the user will be able to dive into these intricate genomic aberrations. The new visual components will be realized by a react component based on Gosling.js package, following the steps of the recently integrated Chromoscope iframe.",
          "student_name": "Eugenio Mazzone",
          "code_url": null,
          "proposal_id": "52aTUwJ2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ecz27vCT"
        },
        {
          "title": "Show Variant Allele Frequency on the Plots Tab and OncoPrint",
          "short_description": "My project aims to enhance cBioportal's analytical capabilities by integrating Variant Allele Frequency (VAF) visualization into the Plots Tab and...",
          "description": "My project aims to enhance cBioportal's analytical capabilities by integrating Variant Allele Frequency (VAF) visualization into the Plots Tab and OncoPrint views. Currently, in Plots Tab we can visualize mutation types of particular gene across different cancer types but it is not possible to visualize VAF data for different samples across different cancer types. It is very crucial for researchers to understand mutation clonality and prevalence across cohorts through VAF. Similarly in OncoPrint view we cannot add tracks for VAF heatmaps across different genes. The proposed solution has two components. For the Plots Tab, we will introduce VAF (linked to a specific gene) as a selectable numerical data type of mutation for plot axes. This involves modifying the axis data generation logic  to calculate VAF per sample using, appropriately handling cases with multiple or no mutations. Existing plot components will then automatically render Box-Scatter or Scatter plots. For OncoPrint, we will implement gene-specific VAF heatmap tracks displayed below the main alteration grid. A new UI element within the Tracks menu toolbar will enable users to add VAF tracks for selected genes. This action updates URL parameters, triggering a new data fetching utility which retrieves VAF heatmaps corresponding to primary displayed mutations with a dedicated 0-1 color scale. OncoprintJS library  will render these heatmap tracks, complemented by tooltips showing detailed VAF information on hover.",
          "student_name": "Rishi Prasad Sulakhe",
          "code_url": null,
          "proposal_id": "wgcfmlC3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8scNjJhi"
        },
        {
          "title": "AI/LLM Generated gene alteration and expression based subtyping for each tumor type",
          "short_description": "The project aims to enhance the cBioPortal platform by generating a list of recommended default genes for each OncoTree code, which are often used...",
          "description": "The project aims to enhance the cBioPortal platform by generating a list of recommended default genes for each OncoTree code, which are often used for molecular classification of specific cancer subtypes. This will improve the effectiveness of the cBioPortal database by prioritizing the display of relevant genes to each disease subtype. To achieve this goal, a Large Language Model (LLM) such as GPT-4o, will be fine-tuned with prompt engineering and Retrieval-Augmented Generation (RAG) techniques to provide domain-specific knowledge and context. The goal is to train the LLM to connect relevant genes to each OncoTree code. \nApproach:\nLLM Selection: GPT-4o is a strong candidate due to its versatility and performance in various NLP tasks.\nPrompt Engineering: Develop efficient prompts for the selected LLM to generate gene lists.\nRAG Component: Implement a RAG component to provide context to the LLM and enhance accuracy using e-utilities to retrieve curated literature from NCBI GeneReviews and ClinVar.\nValidation: Cross-reference the generated gene lists with expert-curated resources like ClinGen and variant frequencies in cBioPortal, and COSMIC.\nEvaluation: Continuously monitor the model's performance using validation sets and adjust hyperparameters as needed.\nDeployment: Integrate the solution into the cBioPortal platform such as sorting variants on patient view pages by relevant genes first.\nConclusion: Completion of this project will significantly improve the usability of cBioPortal, providing users like researchers and clinicians with relevant gene and pathway information based on the cancer type they are exploring.",
          "student_name": "Suhasini Lulla",
          "code_url": null,
          "proposal_id": "vDWYtBH5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2AJ2V3qf"
        }
      ]
    },
    {
      "name": "Machine Learning for Science (ML4SCI)",
      "image_url": "https://summerofcode.withgoogle.com/media/org/machine-learning-for-science-ml4sci/rs5cxhuyh9dpwekt-360.png",
      "image_background_color": "#ffffff",
      "description": "Machine learning applications in science",
      "url": "https://ml4sci.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/machine-learning-for-science-ml4sci",
      "ideas_url": "https://ml4sci.org/",
      "guide_url": null,
      "topics": [
        "machine learning",
        "science and medicine",
        "algorithms",
        "physics",
        "astronomy"
      ],
      "technologies": [
        "python",
        "machine learning",
        "c++",
        "data analysis",
        "artificial intelligence"
      ],
      "irc_channel": "https://app.gitter.im/#/room/#ML4SCI_general:gitter.im",
      "contact_email": "",
      "mailing_list": "https://simba3.web.cern.ch/simba3/SelfSubscription.aspx?groupName=ml4sci-announce",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 31,
      "projects": [
        {
          "title": "Foundation models for End-to-End event reconstruction",
          "short_description": "Current deep learning models for CMS particle reconstruction are often task-specific. This project aims to develop versatile foundation models by...",
          "description": "Current deep learning models for CMS particle reconstruction are often task-specific. This project aims to develop versatile foundation models by pre-training deep neural networks on unlabeled CMS End-to-End (E2E) detector data using various Self-Supervised Learning (SSL) strategies (MAE, I-JEPA, CAE, VAE). These models learn robust, general-purpose representations of particle interactions. We will then comprehensively benchmark these foundation models by adapting them for diverse downstream tasks including Particle Identification (Classification), Kinematics Estimation (Regression), Detector Super-Resolution, and High-Fidelity Event Generation (investigating VAEs and conditional Diffusion Models). Deliverables include the open-source codebase with reproducible pipelines, pre-trained model weights, detailed benchmarking results/analysis, and user-friendly documentation.",
          "student_name": "Aaditya Porwal",
          "code_url": null,
          "proposal_id": "GSkyXouP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qZDekrLE"
        },
        {
          "title": "Unsupervised Super-Resolution and Analysis of Real Lensing Images",
          "short_description": "This project develops an open-source, unsupervised super-resolution (SR) pipeline for enhancing the resolution of gravitational lensing images,...",
          "description": "This project develops an open-source, unsupervised super-resolution (SR) pipeline for enhancing the resolution of gravitational lensing images, particularly those constructed from real galaxy observations. High-resolution lensing data is often limited, especially with the expected influx of lower-resolution data from upcoming surveys like Euclid and LSST. An unsupervised SR approach helps address this by learning directly from unpaired or unlabeled data.\n\nThe pipeline begins with simulated lensing images to build a baseline model. Domain adaptation techniques, including feature alignment and style transfer, are used to generalize the model to real telescope data. The project also integrates tools for analyzing the lenses and their substructures in the super-resolved images.\n\nDeliverables include:\n\n    - An unsupervised SR model for simulated and real lensing data\n\n    - Domain adaptation methods to bridge the sim-to-real gap\n\n    - Analysis tools for lens structure and morphology\n\n    - Full documentation and final report",
          "student_name": "Aleksandr Duplinskii",
          "code_url": null,
          "proposal_id": "9BB8gWtG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0Dpx7PkX"
        },
        {
          "title": "Quantum Particle transformer for High Energy Physics Analysis at the LHC",
          "short_description": "This proposal aims to build upon and expand the progress made in recent years on Quantum Vision Transformers (QViTs) for High Energy Physics (HEP)...",
          "description": "This proposal aims to build upon and expand the progress made in recent years on Quantum Vision Transformers (QViTs) for High Energy Physics (HEP) analysis. Specifically, the project will adapt and extend the state-of-the-art Particle Transformer architecture, which has already demonstrated excellent performance in jet classification tasks, by integrating it with quantum components.",
          "student_name": "Alessandro Tesi",
          "code_url": null,
          "proposal_id": "eaJnSjKY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1MGPehm9"
        },
        {
          "title": "Discovering Hidden Symmetries in CMS Calorimetric Data via Semi-Supervised Learning",
          "short_description": "This project tackles the challenge of learning hidden symmetries in complex, high-dimensional physics data using modern machine learning techniques....",
          "description": "This project tackles the challenge of learning hidden symmetries in complex, high-dimensional physics data using modern machine learning techniques. In particular, we aim to discover symmetries directly from raw CMS calorimeter data using a semi-supervised learning pipeline—without relying on pre-defined augmentation strategies or prior knowledge of symmetry transformations.\r\n\r\nWe will build on recent advances in symmetry discovery such as adversarial learning, Lie algebra-based models, and general equivariant MLP construction. The proposed approach begins with a supervised baseline using known augmentations to validate the pipeline, followed by implementing a GAN-based or contrastive method to infer latent group actions and conserved quantities. Discovered symmetries will then be used to construct equivariant neural networks that are robust, interpretable, and data-efficient.\r\n\r\nBy the end of the project, we aim to deliver a fully working, open-source pipeline for symmetry discovery and equivariant modeling on CMS data—benchmarking its performance and generalization against traditional models. This work will contribute to the broader mission of physics-aware machine learning and enable more principled modeling of detector data in high-energy physics.",
          "student_name": "Alexandra Murariu",
          "code_url": null,
          "proposal_id": "9hIX9FDS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SiAABTM9"
        },
        {
          "title": "Unsupervised super-resolution and analysis of observed lensing images",
          "short_description": "Machine learning based analyses are proving to be very potent in understanding complex physical systems. This project aims to develop a reinforcement...",
          "description": "Machine learning based analyses are proving to be very potent in understanding complex physical systems. This project aims to develop a reinforcement learning - CNN hybrid machinery that will perform unsupervised super-resolution and study of observed strong gravitational lensing images. The developed machinery will be useful in the study of data releases of upcoming lensing surveys.",
          "student_name": "Anirudh Shankar",
          "code_url": null,
          "proposal_id": "wcoImMz7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/FN4tGXDE"
        },
        {
          "title": "Q-MAML for Variational Quantum Algorithms for High Energy Physics Analysis at the LHC",
          "short_description": "This project focuses on developing a new machine learning approach called Quantum Model-Agnostic Meta-Learning (Q-MAML) specifically for high-energy...",
          "description": "This project focuses on developing a new machine learning approach called Quantum Model-Agnostic Meta-Learning (Q-MAML) specifically for high-energy physics (HEP) experiments like those at the Large Hadron Collider (LHC). These experiments produce massive amounts of data that change over time, making it challenging to train machine learning models effectively.\n\nQ-MAML uses quantum computing techniques with variational quantum circuits to enable \"few-shot learning.\" This means the models can quickly adapt to new data with very little retraining, which is crucial for the dynamic environment of particle colliders. The goal is to improve tasks like identifying particle collision patterns (event topology classification) and finding rare signals.\n\nThe project will develop a modular, open-source Q-MAML workflow that is compatible with both quantum simulators and actual quantum hardware, utilizing platforms like Qiskit and PennyLane. The performance of Q-MAML will be rigorously benchmarked against classical MAML and standard variational quantum algorithm (VQA) classifiers on physics-inspired tasks. These benchmarks will include detailed evaluations of training curves, adaptation behaviors, and resource analysis. The deliverables will consist of a fully documented codebase, interactive Jupyter notebooks for ease of use, and reproducible benchmarking tools. This work aims to establish a practical foundation for hybrid quantum-classical learning in scientific applications, particularly within the field of high-energy physics.",
          "student_name": "arnavsinghal09",
          "code_url": null,
          "proposal_id": "AVvumE5d",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dHEy5F8z"
        },
        {
          "title": "Physics Guided Machine Learning on Real Lensing Images",
          "short_description": "The project aims to develop a physics-informed neural network framework to infer the properties and distribution of dark matter in the lensing galaxy...",
          "description": "The project aims to develop a physics-informed neural network framework to infer the properties and distribution of dark matter in the lensing galaxy that undergoes strong gravitational lensing.  The most important part of the project is to create a model that works for real galaxies as well.  All work done so far has been on simulated datasets, and last year’s work was also limited to simulated datasets, not those generated from real datasets. This year’s work will focus more on  real simulated datasets, which cannot be classified by normal convolutional neural networks.",
          "student_name": "Ashutosh Ojha",
          "code_url": null,
          "proposal_id": "q99zIUs9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IfQvKrOC"
        },
        {
          "title": "Discovery of hidden symmetries and conservation laws",
          "short_description": "Because of its cylindrical shape, the Compact Muon Solenoid (CMS) detector has intrinsic rotational symmetries. Data analysis can be greatly improved...",
          "description": "Because of its cylindrical shape, the Compact Muon Solenoid (CMS) detector has intrinsic rotational symmetries.  Data analysis can be greatly improved by taking advantage of these symmetries, especially in semi-supervised learning situations where labeled data is hard to come by.  Using learnable rotation matrices conditioned on class labels or contextual information, this study aims to create a novel generative model that learns and applies rotational symmetry transformations to CMS data.  Our goal is to find and utilize rotational symmetries by including this model into a GAN-like framework with a trained classifier. This will enhance data augmentation and model performance in semi-supervised CMS data processing.",
          "student_name": "Avishikta",
          "code_url": null,
          "proposal_id": "HaJCkaGs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XgeDrH4B"
        },
        {
          "title": "Physics-Informed Performer for Symbolic Squared Amplitudes in HEP",
          "short_description": "In high-energy physics (HEP), automating the symbolic computation of squared amplitudes is essential for predicting cross-sections and validating...",
          "description": "In high-energy physics (HEP), automating the symbolic computation of squared amplitudes is essential for predicting cross-sections and validating theoretical models against experimental data. Current transformer-based approaches excel in sequence modeling but falter in capturing the relational structures and physical consistency required for HEP expressions, such as those involving gamma matrices and Mandelstam variables. To tackle this, I propose the Physics-Informed Performer (PIP), a novel framework that integrates the Performer transformer’s efficient kernel-based attention with a physics-informed tokenization scheme and a SymPy-based validation layer. This approach leverages Performer’s ability to handle long sequences, introduces tokens like <SQUARE> and <S> to embed HEP-specific operations and kinematics, and ensures symbolic accuracy through empirical post-processing. By focusing on data representation, PIP offers a computationally efficient alternative to traditional symbolic methods, tailored to the Task 1.2 dataset of amplitude-to-squared-amplitude mappings.",
          "student_name": "Ayush Mishra A",
          "code_url": null,
          "proposal_id": "sJ5AUXx0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/FAUugAQ0"
        },
        {
          "title": "A Diffusion-Based Deep Learning Framework for Denoising Protoplanetary Disk Observations",
          "short_description": "This project proposes ProtoDiff, a diffusion-based deep learning model designed to denoise astronomical observations of protoplanetary disks from...",
          "description": "This project proposes ProtoDiff, a diffusion-based deep learning model designed to denoise astronomical observations of protoplanetary disks from telescopes like ALMA and VLT. Leveraging recent advances in score-based generative modeling, the model will be trained on synthetic disk simulations with realistic noise. ProtoDiff aims to outperform traditional denoising pipelines in both quality and efficiency, enabling cleaner reconstructions of planet-forming environments. The final deliverables will include open-source code, pretrained models, and documentation to support reproducible astrophysical data processing and accelerate research in planet formation studies.",
          "student_name": "Chukwunwogor Faithful",
          "code_url": null,
          "proposal_id": "XM31oQKL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HEfdSjzD"
        },
        {
          "title": "Continuous learning for high-energy physics data quality monitoring",
          "short_description": "Continuous learning serves as a powerful approach for maintaining reliable data quality monitoring in high-energy physics experiments facing evolving...",
          "description": "Continuous learning serves as a powerful approach for maintaining reliable data quality monitoring in high-energy physics experiments facing evolving detector conditions. This project centers on developing adaptive methodologies that enable machine learning models to maintain performance without frequent retraining. We aim to explore multiple strategies for implementing continuous learning, including drift detection mechanisms that trigger model updates when significant changes in detector conditions occur. The primary objective is to establish an effective framework that addresses the limitations of static models, offering a novel solution for data quality monitoring tasks. This endeavor will provide comprehensive benchmarks for evaluating performance on realistic datasets. By leveraging these adaptive methodologies, we anticipate achieving superior monitoring reliability while reducing maintenance requirements and advancing the state-of-the-art in high-energy physics data quality monitoring.",
          "student_name": "Daksh Mor",
          "code_url": null,
          "proposal_id": "GjzEIe4u",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LaROwUCf"
        },
        {
          "title": "DeepLense: Gravitational Lens Finding Project",
          "short_description": "This project aims to develop and optimize deep learning algorithms for identifying strong gravitational lenses within wide-field surveys such as the...",
          "description": "This project aims to develop and optimize deep learning algorithms for identifying strong gravitational lenses within wide-field surveys such as the Hyper Suprime-Cam Subaru Strategic Program (HSC-SSP). The project will be executed in three phases, from convolutional neural networks, to ENNS, to vision transformers. The project will gradually increase in complexity until a satisfactory result has been achieved.",
          "student_name": "DhruvSrivastava",
          "code_url": null,
          "proposal_id": "TF0inRsc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/22BgqGr7"
        },
        {
          "title": "Exoplanet Atmosphere Characterization",
          "short_description": "This project intends to develop cutting-edge machine-learning tools for spectral analysis to characterize the atmospheres of exoplanets. The project...",
          "description": "This project intends to develop cutting-edge machine-learning tools for spectral analysis to characterize the atmospheres of exoplanets. The project will explore various state-of-the-art and recent techniques to build a robust and general model with strong regressional properties. The resultant models from our study will be benchmarked against pre-existing baselines based on the principles of statistics and atmospheric sciences. Additionally, relevant tutorials and documentation will be provided, keeping future developments in mind. We propose simulation-based inference, causal representation learning and domain-adapted transformers for atmospheric retrievals.",
          "student_name": "Gaurav Shukla",
          "code_url": null,
          "proposal_id": "5l0JfF1W",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2W9zeTPN"
        },
        {
          "title": "Discovery of hidden symmetries and conservation laws",
          "short_description": "This project aims to uncover fundamental symmetries and conserved laws hidden within complex high-energy physics data (specifically CMS datasets). It...",
          "description": "This project aims to uncover fundamental symmetries and conserved laws hidden within complex high-energy physics data (specifically CMS datasets). It proposes a novel hybrid deep learning model that uniquely combines two approaches: 1) leveraging distributional invariance (inspired by GANs) to find transformations that preserve the data's structure without needing pre-defined knowledge, and 2) enforcing mathematical consistency by ensuring these transformations adhere to Lie algebra closure rules. Key steps involve developing and validating this model, deriving the explicit conserved quantities corresponding to the discovered symmetries (potentially using symbolic regression), applying the framework to CMS data, and using the findings to build and benchmark physics-aware deep learning models (e.g., for jet tagging). The ultimate goal is to create more robust, data-efficient, and interpretable models by directly incorporating the fundamental symmetries learned from the data itself.",
          "student_name": "Green Kedia",
          "code_url": null,
          "proposal_id": "8gKYpYtC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7sbHDzye"
        },
        {
          "title": "Diffusion Models for Gravitational Lensing Simulation",
          "short_description": "My project focuses on developing diffusion models for gravitational lensing simulations. I will implement and evaluate various diffusion-based...",
          "description": "My project focuses on developing diffusion models for gravitational lensing simulations. I will implement and evaluate various diffusion-based architectures, including Diffusion Transformers (DiT) and Latent Diffusion Models (LDM). Conditional modeling techniques such as Classifier-Free Guidance and Conditional Flow Matching will also be explored. The project involves creating a diverse dataset of simulated gravitational lensing images under various astrophysical conditions for downstream tasks. All implementations, findings, and documentation will be open-sourced through a GitHub repository.",
          "student_name": "hamees-sayed",
          "code_url": null,
          "proposal_id": "XFJmmm4I",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/T27qiqDH"
        },
        {
          "title": "Foundation Model for Gravitational Lensing",
          "short_description": "This project aims to develop a vision foundation model for strong gravitational lensing by comparing various self-supervised learning techniques,...",
          "description": "This project aims to develop a vision foundation model for strong gravitational lensing by comparing various self-supervised learning techniques, including contrastive learning, masked autoencoders, and the physics-informed I-JEPA model. The objective is to evaluate and benchmark these methods on diverse gravitational lensing datasets and to integrate physical priors into the I-JEPA framework for more meaningful representation learning. The resulting foundation model will be fine-tuned for multiple downstream tasks such as lens classification, super-resolution, parameter regression, and lens detection. Deliverables include a unified lensing dataset, comparative analysis of self-supervised methods, and a robust, physics-aware foundation model for gravitaional lensing images.",
          "student_name": "J Rishi",
          "code_url": null,
          "proposal_id": "JnTywUNC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bDYOfWmR"
        },
        {
          "title": "Latent Neural Signatures in Clinical vs. Neurotypical Dyads: A CEBRA Pipeline",
          "short_description": "This project aims to develop a cutting-edge computational pipeline—\"Latent Neural Signatures in Clinical vs. Neurotypical Dyads: A CEBRA Pipeline\"—to...",
          "description": "This project aims to develop a cutting-edge computational pipeline—\"Latent Neural Signatures in Clinical vs. Neurotypical Dyads: A CEBRA Pipeline\"—to decode and interpret complex neural dynamics during social interactions. By leveraging the CEBRA (Contrastive Embedding for Behavioral and Neural Analysis) framework, the pipeline will process and analyze time-locked 64-channel EEG data from interacting dyads (e.g., speaker-listener pairs). The goal is to generate robust, low-dimensional latent embeddings that capture key features such as neural synchrony, connectivity, and manifold geometry, ultimately distinguishing between clinical populations (e.g., individuals with Autism Spectrum Disorder) and neurotypical participants.\n\nTo achieve this, the project will integrate rigorous EEG preprocessing (artifact removal, filtering, epoching, and synchronization) with state-of-the-art contrastive learning methods. The pipeline will be built in a modular fashion, allowing for reproducible, open-source research and facilitating cross-disciplinary collaboration between machine learning experts and neuroscientists. Key deliverables include a fully functional end-to-end pipeline, comprehensive technical documentation and user guides, and detailed analysis reports with visualizations and quantitative metrics.\n\nThis approach promises not only to enhance our understanding of the neural substrates underlying social communication but also to provide a practical tool for clinical diagnostics and personalized intervention strategies.",
          "student_name": "jeffreyhuang1009",
          "code_url": null,
          "proposal_id": "FLhs6QH4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/n70Uehmn"
        },
        {
          "title": "Data Processing Pipeline for the LSST",
          "short_description": "The project, \"Data Processing Pipeline for the LSST,\" is designed to bridge the gap between the LSST data ecosystem and DeepLense's deep learning...",
          "description": "The project, \"Data Processing Pipeline for the LSST,\" is designed to bridge the gap between the LSST data ecosystem and DeepLense's deep learning workflows. The proposal outlines the development of a modular, efficient pipeline that automatically retrieves relevant LSST images and catalogues via the official LSST Butler API, applies configurable preprocessing (such as cutout extraction, normalization, resizing, and channel management), and finally delivers analysis-ready data into DeepLense ML models for tasks like lens detection, classification, and super-resolution. Key deliverables include:\n1. A robust LSST Data Access Module that reliably fetches data.\n2. A flexible preprocessing module for transforming raw images into ML-compatible formats.\n3. Seamless integration with DeepLense’s deep learning workflows, enabling end-to-end processing.\n4. Comprehensive documentation and reusable, well-structured code.",
          "student_name": "Kartik Mandar",
          "code_url": null,
          "proposal_id": "MMa6Q3ix",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HoQUCDWw"
        },
        {
          "title": "Foundation models for symbolic regression tasks",
          "short_description": "Problem: Symbolic regression is crucial for discovering underlying physical laws from data, but traditional methods are often computationally...",
          "description": "Problem: Symbolic regression is crucial for discovering underlying physical laws from data, but traditional methods are often computationally expensive or lack generalization. Current approaches struggle with efficiency and adaptability across diverse scientific datasets.\n\nSolution: This project aims to develop a foundation model for symbolic regression by integrating transformer-based architectures (e.g., SymbolicGPT) with evolutionary algorithms and learned concept libraries (LASR). The model will leverage large-scale pretraining and fine-tuning to generalize across mathematical and physical datasets, combining the strengths of language models and evolutionary search for interpretable, efficient equation discovery.\n\nDeliverables:\nA transformer-based symbolic regression model with mathematical priors and curriculum learning.\n\nIntegration of a learned concept library for reusable abstractions.\n\nBenchmarks against SOTA models.\n\nOptimized, modular code for seamless LLM integration and open-source deployment.",
          "student_name": "Krish Malik",
          "code_url": null,
          "proposal_id": "k7PTZhS3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RtrwLUB6"
        },
        {
          "title": "Neural Harmony – Decoding Social Interactions with CEBRA-based framework for analysing EEG data",
          "short_description": "This project aims to decode the neural dynamics of social interactions by adapting the CEBRA framework to analyze dyadic EEG data. Focusing on...",
          "description": "This project aims to decode the neural dynamics of social interactions by adapting the CEBRA framework to analyze dyadic EEG data. Focusing on differences between neurotypical individuals and those with autism, the work will develop robust preprocessing pipelines, contrastive learning methods for neural synchrony, and interpretable clinical biomarkers. The deliverables include an open-source toolkit for EEG analysis, enabling researchers to study brain interactions with greater precision. This approach could advance early diagnosis and deepen our understanding of social brain function.",
          "student_name": "Maria Glushanina",
          "code_url": null,
          "proposal_id": "FCAs123g",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Rjgy9LB6"
        },
        {
          "title": "Quantum Diffusion Model for HEP",
          "short_description": "Diffusion models have experienced rapid growth in usability, availability, and research. The classical algorithm consists of two main parts: a...",
          "description": "Diffusion models have experienced rapid growth in usability, availability, and research. The classical algorithm consists of two main parts: a forward diffusion process and a learned denoising step. The forward diffusion process discretely applies noise to an image until it is unrecognizable. The denoising process reverses the noise, predicting the original image. Quantum techniques, such as parametric quantum circuits, could be applied to both parts to create a fully quantum model that could run on a quantum computer, speeding up training time. This model would be trained on multiple high energy physics datasets, such as the quark and gluon dataset for generating quark and gluon jets, alongside a classical diffusion model, and the results could be evaluated taking into account resources, time, and quality. Furthermore, a mathematically-driven approach would provide the theoretical foundations of quantum diffusion models in addition to experimental results.",
          "student_name": "Masha",
          "code_url": null,
          "proposal_id": "9P7GWtJS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zoK9XWAM"
        },
        {
          "title": "Implementation of Quantum Generative Adversarial Networks to Perform HEP Analysis at the LHC",
          "short_description": "This project aims to implement a Quantum Generative Adversarial Network (QGAN) using the Pennylane framework to explore the advantages of quantum...",
          "description": "This project aims to implement a Quantum Generative Adversarial Network (QGAN) using the Pennylane framework to explore the advantages of quantum machine learning in High Energy Physics. By leveraging entangling quantum circuits and variational optimization, the QGAN will be trained to model complex data distributions. The project will include a direct comparison between classical GANs and QGANs on identical tasks, evaluating performance through training speed, sample quality, and robustness to mode collapse. Deliverables include a fully functional QGAN model, benchmarking reports, noise sensitivity analysis, and an open-source code repository with documentation.",
          "student_name": "Maya Ma",
          "code_url": null,
          "proposal_id": "2zCnp4ft",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4zV712HN"
        },
        {
          "title": "Building a Foundational Model for Symbolic Regression in High Energy Physics",
          "short_description": "This project proposes the development of a foundational model for symbolic regression tailored to high energy physics (HEP). Symbolic regression can...",
          "description": "This project proposes the development of a foundational model for symbolic regression tailored to high energy physics (HEP). Symbolic regression can be used to rapidly provide solutions to scientific problems with high computational complexity or even intractable tasks, discovering symbolic expressions that describe underlying physical laws. While many approaches have been explored, this project focuses on building a foundation model which incorporates knowledge about the task of symbolic regression and common data representations for physical systems. The model will target accurate and interpretable prediction of squared amplitudes and cross sections—two core quantities in particle physics. Leveraging physics‑informed representations, symbolic machine learning, and simulation data, the project will explore how to integrate domain knowledge into learning algorithms to enhance scientific validity. Over 28 weeks, the project will progress through phases of theoretical investigation, foundation model design, simulation‑based data generation, model development, and integration. Deliverables will include a curated dataset, pre‑trained foundation model, symbolic models, and a final report, with broader goals of improving interpretability and reliability in physics‑informed AI.",
          "student_name": "Miche",
          "code_url": null,
          "proposal_id": "LQGqJfZb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OEZlYZ6G"
        },
        {
          "title": "State-space models for squared amplitude calculation in high-energy physics",
          "short_description": "One of the most important physical quantities in particle physics is the cross section, or a probability that a particular process takes place in the...",
          "description": "One of the most important physical quantities in particle physics is the cross section, or a probability that a particular process takes place in the interaction of elementary particles. Its measure provides a testable link between theory and experiment. It is obtained theoretically mainly by calculating the squared amplitude. While the calculation of amplitudes for a particular expression is trivial, mapping it to a squared amplitude is computationally expensive. Previous works demonstrated that transformer-based (vanilla and KAN-infused) models can map amplitudes to squared amplitudes substantially faster and with high accuracy. However, transformers suffer from quadratic complexity due to self-attention, making them less efficient when handling extremely long sequences. Additionally, they may struggle with structured, hierarchical dependencies that naturally arise in amplitude computations. Inspired by Classical State Space theory, State Space Sequence Models (SSMs) emerged as a promising class of architectures for sequence modelling. These models can be interpreted as a combination of RNNs and CNNs. These models have near-linear scaling with sequence length, making them effective for long-range dependencies. This project will explore using SSMs for squared amplitude calculations.\n\nThere are 2 major aims of this project\n\n1. To develop novel hybrid models that combine state-space models (SSMs) with attention mechanisms for squared amplitude calculations.\n\n2. A systematic evaluation of already existing models and SSMs on feynman interaction datasets and their scalability with respect to dataset size, maximum sequence length etc.",
          "student_name": "Prasanth Naidu",
          "code_url": null,
          "proposal_id": "RazuRQdv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yq2sYd99"
        },
        {
          "title": "Quantum Kolmogorov-Arnold Networks for High Energy Physics Analysis at the LHC",
          "short_description": "This project explores Quantum Kolmogorov–Arnold Networks (QKANs) as a novel and interpretable architecture for analyzing collider data from the...",
          "description": "This project explores Quantum Kolmogorov–Arnold Networks (QKANs) as a novel and interpretable architecture for analyzing collider data from the High-Luminosity LHC. Inspired by the Kolmogorov–Arnold theorem, QKANs decompose complex multivariate functions into compositions of univariate ones—translated into quantum models using parameterized circuits and Chebyshev-based activations. QKANs leverage quantum singular value transformation (QSVT), block-encoding, and variational unitaries to efficiently model high-dimensional, nonlinear relationships in jet physics tasks like quark-gluon tagging.\n\nThe goal is to develop scalable and NISQ-compatible QKAN layers using the Pennylane framework and benchmark them against classical MLPs and spline-based KANs on realistic HEP datasets. This includes implementing quantum-friendly activation functions, evaluating noise robustness, and integrating hybrid QKAN layers selectively across high-impact features. The final deliverables will include a modular, open-source codebase, training pipelines, evaluation reports, and insights into symbolic function discovery in collider physics. This project contributes to building transparent, compact, and hardware-efficient quantum models for the next generation of scientific discovery at the LHC.",
          "student_name": "Ria Khatoniar",
          "code_url": null,
          "proposal_id": "cHqKJ0BJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TNdAnfnC"
        },
        {
          "title": "Next-Generation Transformer Models for Symbolic Calculations of Squared Amplitudes in HEP",
          "short_description": "In particle physics, a cross section is a measure of the likelihood that particles will interact or scatter with one another when they collide. It is...",
          "description": "In particle physics, a cross section is a measure of the likelihood that particles will interact or scatter with one another when they collide. It is a fundamental quantity and its computation can become time intensive. This project aims to apply state-of-the-art machine learning techniques, particularly transformer-based models, for the generation of symbolic representations of the squared amplitudes in HEP. The proposed sequence-to-sequence system aims to improve upon the existing time-intensive processes of calculations of the squared amplitude .  This project builds upon the previous work which includes vanilla models, and extends it further to advanced transformer models.",
          "student_name": "Ritesh Bhalerao",
          "code_url": null,
          "proposal_id": "bDzvTm9P",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/niqGYrnh"
        },
        {
          "title": "Graph Representation Learning for Fast Detector Simulation",
          "short_description": "High-fidelity detector simulations are critical for accurate analysis in particle physics, but traditional Monte Carlo-based methods are...",
          "description": "High-fidelity detector simulations are critical for accurate analysis in particle physics, but traditional Monte Carlo-based methods are computationally expensive. DeepFalcon introduced a promising approach using Graph Variational Autoencoders (GVAE) that treat particle hits as graph nodes, enabling faster inference while maintaining high accuracy. This implementation used CMS Open Data of boosted top quark jets and considered only the ECAL layer of the detector, achieving a 400× speedup in reconstructing jets compared to traditional simulations. The model architecture employed GraphSAGE layers and mincut pooling, while training used Adam optimizer with a hybrid loss function combining MSE and KL divergence.\n\nHowever, the current approach is limited to single-layer detector responses and doesn't fully capture the correlations between multiple detector components.\n\nThis project aims to extend DeepFalcon’s GVAE architecture to support multi-layer detector systems, specifically incorporating Tracker, ECAL, and HCAL layers simultaneously. The proposal is structured into two phases:\n\nPhase I will focus on enhancing the graph data representation by including all three detector layers and designing optimized connectivity patterns that capture spatial and inter-layer dependencies.\n\nPhase II will explore advanced pooling techniques and alternative message-passing strategies to improve latent representation quality and model generalization, while maintaining fast inference speeds.\n\nAll components will be implemented using Python and relevant machine learning libraries such as PyTorch Geometric. Expected deliverables include a multi-layer GVAE model, benchmark comparisons against existing results, and detailed analysis of the architectural choices.\n\nThis project contributes toward advancing fast simulation techniques in high-energy physics by enabling more comprehensive and scalable detector modeling.",
          "student_name": "Rushil Singha",
          "code_url": null,
          "proposal_id": "LGxRuMRq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pLGb5JlM"
        },
        {
          "title": "Physics informed neural network diffusion equation",
          "short_description": "This project aims at incorporating Physics informed neural network (PINN) based ODE solvers into the Diffusion probabilistic models(DPM) , to build a...",
          "description": "This project aims at incorporating Physics informed neural network (PINN) based ODE solvers into the Diffusion probabilistic models(DPM) , to build a fast and efficient sampler for high dimensional complex probability distribution.  Diffusion models are characterized by a probability flow ODE equation which needs to solved using numerical solvers to generate samples from the target probability distribution. In this project we replace the numerical ODE solvers with PINNs which are trained to represent the solution of the probability flow ODEs over a domain of values. This enables us to amortize the large upfront cost of training PINN to fast sampling speed once the model is trained. \n\nDifferent variants of PINN like models with hard constrains on initial/boundary conditions, augmented Lagrangian based models, can-PINN and neural operator based methods will be systematically tested on different non Gaussian 3D probability distribution like [ Mixture of Gaussian, 3D helical, Torodial distribution and Concentric spherical shells ]. I will be testing both single objective optimization and  multi objective optimization techniques to handle the physical loss term and MSE loss term in PINN training. \n\nA systematic analysis of different variants of PINNs to solve the probability flow ODE will be presented with metrics to quantify the PINN representation error  and comparison between the true probability distribution and samples from PINNDE.\n\nDepending on the viability of the results on the above mentioned tests, PINNDE method will be used on the fast colorimeter simulation challenge 2022 benchmark dataset 1.",
          "student_name": "Sijil",
          "code_url": null,
          "proposal_id": "JSMaIzdZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uGmyAV1q"
        },
        {
          "title": "Quantum Machine Learning For Exoplanet Characterization",
          "short_description": "This project aims to develop quantum machine learning models for exoplanet atmosphere characterization by leveraging the power of quantum neural...",
          "description": "This project aims to develop quantum machine learning models for exoplanet atmosphere characterization by leveraging the power of quantum neural networks (QNNs) and variational quantum circuits (VQCs). We will build a hybrid quantum-classical pipeline to extract features from transmission spectra, classify atmospheric compositions, and detect anomalies that could signal unique or potentially habitable planetary conditions. Using both simulated spectra (via petitRADTRANS and Poseidon) and real observational data (from JWST/Hubble), we will benchmark QML models against classical approaches. The final deliverables include QML-based tools for spectral analysis, comprehensive performance evaluations, and detailed documentation to support future exoplanet exploration efforts.",
          "student_name": "Sourish Phate",
          "code_url": null,
          "proposal_id": "bbSF7Hhy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xIJEvndL"
        },
        {
          "title": "Foundation Models for Exoplanet Characterization",
          "short_description": "The project aims at building foundational models suitable for characterizing the vast astronomical data and emphasizing their use case for various...",
          "description": "The project aims at building foundational models suitable for characterizing the vast astronomical data and emphasizing their use case for various downstream tasks. Collecting suitable datasets, training the models on simulated datasets and applying them on real observational datasets. The main purpose of the project is to develop a suitable deep learning approach for these astronomical datasets which is able to overcome the specific instrument differences for the different observations.",
          "student_name": "Tanmay Singhal",
          "code_url": null,
          "proposal_id": "qdl5158j",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/T6ZNRVxa"
        },
        {
          "title": "A Self-Supervised, Physics-Informed Hybrid Transformer Framework for Multi-Tasks in HEP",
          "short_description": "Accurately classifying particle collisions—whether distinguishing quark- from gluon-initiated jets or isolating Higgs events from complex...",
          "description": "Accurately classifying particle collisions—whether distinguishing quark- from\ngluon-initiated jets or isolating Higgs events from complex backgrounds—requires\nmodels that capture both fundamental conservation laws and the inherent geo-\nmetric invariances of the detector environment. This work presents a hybrid\nself-supervised framework that leverages physics-informed deep learning to ad-\ndress these challenges. Our approach utilizes a masked transformer encoder to\nlearn conservation of momentum and energy by reconstructing masked particle\nfeatures, while a Lorentz-Equivariant Geometric Algebra Transformer (L-GATr)\nencodes the space-time symmetries present in collision events. By integrating\nthese complementary embeddings into task-specific cross-attention decoders, the\nframework effectively fuses physical and geometric information to enhance event\nclassification and mass reconstruction, thereby advancing the performance and\ninterpretability of machine learning in high-energy physics.",
          "student_name": "Thanh P Nguyen",
          "code_url": null,
          "proposal_id": "NNOo5u5D",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MyOKgQ1j"
        }
      ]
    },
    {
      "name": "GNU Compiler Collection (GCC)",
      "image_url": "https://summerofcode.withgoogle.com/media/org/gnu-compiler-collection-gcc/kpspl59nyj0hoxlr-360.png",
      "image_background_color": "#ffffff",
      "description": "GNU compilers",
      "url": "https://gcc.gnu.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/gnu-compiler-collection-gcc",
      "ideas_url": "https://gcc.gnu.org/wiki/SummerOfCode",
      "guide_url": "https://gcc.gnu.org/wiki/SummerOfCode",
      "topics": [
        "compilers",
        "developer tools",
        "toolchain",
        "openmp",
        "link time optimization"
      ],
      "technologies": ["c/c++", "gnu make", "gnu autotools"],
      "irc_channel": "https://gcc-rust.zulipchat.com/login/",
      "contact_email": "",
      "mailing_list": "https://gcc.gnu.org/mailman/listinfo/gcc",
      "twitter_url": "https://twitter.com/gnutools",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "Implementation of a simple in-memory  file system for running offloading tests  on NVIDIA GPUs",
          "short_description": "This project aims to implement an in-memory, volatile file system for NVIDIA GPUs using the NVPTX backend in newlib. NVPTX offloading in GCC enables...",
          "description": "This project aims to implement an in-memory, volatile file system for NVIDIA GPUs using the NVPTX backend in newlib. NVPTX offloading in GCC enables running tests on the GPU, but currently lacks proper file system support. The proposed solution involves two key objectives: (1) developing a lightweight file system driver that operates in the GPU’s VRAM, and (2) redirecting NVPTX system calls in newlib to interface with this in-memory file system. The file system will support basic operations such as file creation and deletion, without requiring recursive directory structures. This work will improve the runtime environment for NVPTX targets and potentially pave the way for future extensions, such as RPC-based host filesystem access or support for AMD GPUs via the AMD GCN backend.",
          "student_name": "ArijitKD",
          "code_url": null,
          "proposal_id": "yzcbD82n",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hsckMPiN"
        },
        {
          "title": "Fortran - 2018/202x",
          "short_description": "This project aims to implement some new language features introduced in Fortran 2018 and Fortran 202x, enhancing gfortran's compatibility with newer...",
          "description": "This project aims to implement some new language features introduced in Fortran 2018 and Fortran 202x, enhancing gfortran's compatibility with newer Fortran standards.",
          "student_name": "c8ef",
          "code_url": null,
          "proposal_id": "pqfuYXEU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/doLDYuto"
        },
        {
          "title": "Implementing Parallel Features on the GCC Ada Frontend",
          "short_description": "The GNAT front end does not currently recognize the \"parallel\" keyword added as part of Ada 2022. The goal of this project is to add support in the...",
          "description": "The GNAT front end does not currently recognize the \"parallel\" keyword added as part of Ada 2022.  The goal of this project is to add support in the GNAT parser for the two most important places where the \"parallel\" keyword is used, namely the parallel \"for\" loop, and the parallel \"do\" statement.",
          "student_name": "elmcdonough",
          "code_url": null,
          "proposal_id": "uec8fJ6T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ex0T0sK7"
        },
        {
          "title": "Tooling for running BPF GCC tests on a live kernel",
          "short_description": "This project addresses the lack of execution tests for the BPF backend in GCC. While GCC has many compile-time tests, the BPF backend—which generates...",
          "description": "This project addresses the lack of execution tests for the BPF backend in GCC. While GCC has many compile-time tests, the BPF backend—which generates eBPF code run by the Linux kernel—currently lacks runtime validation. The goal is to create a test tool that runs eBPF programs on a live kernel in a virtual environment (using QEMU), similar to the kernel's selftest infrastructure. The tool will load and execute BPF objects and report results, allowing us to catch regressions early. Next, this tool will be integrated into GCC's Dejagnu-based testing infrastructure, and a dedicated testsuite for the BPF target will be added to the GCC testsuite. This project will help ensure that compiler changes do not inadvertently generate eBPF code that the kernel verifier rejects.",
          "student_name": "PiyushRaj927",
          "code_url": null,
          "proposal_id": "FIRiHKon",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YhgWG1pn"
        },
        {
          "title": "Rewrite Rust lints to operate on  frontend's HIR",
          "short_description": "GCC Rust (gccrs) is an alternative Rust compiler frontend based on GCC, aiming for full integration into the GNU toolchain. This project focuses on...",
          "description": "GCC Rust (gccrs) is an alternative Rust compiler frontend based on GCC, aiming for full integration into the GNU toolchain. This project focuses on improving the HIR (High-Level Intermediate Representation) visitor pattern and migrating lint checks from the middle-end to HIR. These improvements will enhance gccrs's overall code quality.",
          "student_name": "Ryutaro Okada",
          "code_url": null,
          "proposal_id": "vsCPaIwP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mYnazxTu"
        },
        {
          "title": "gccrs: Improving match expressions & pattern matching",
          "short_description": "This medium-sized project aims to improve pattern matching support in gccrs, the GCC frontend for Rust, by implementing compilation for the currently...",
          "description": "This medium-sized project aims to improve pattern matching support in gccrs, the GCC frontend for Rust, by implementing compilation for the currently unsupported patterns (StructPattern, SlicePattern, RestPattern, etc.). The successful implementation of these features will bring gccrs a step closer to becoming a production-ready alternative Rust compiler, while providing valuable experience in compiler frontend development.",
          "student_name": "Zhi Heng",
          "code_url": null,
          "proposal_id": "o8jortO7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/T6KZYLtU"
        }
      ]
    },
    {
      "name": "Center for Translational Data Science",
      "image_url": "https://summerofcode.withgoogle.com/media/org/center-for-translational-data-science/bc61hj7tocvmpw6p-360.png",
      "image_background_color": "#ffffff",
      "description": "Develop translational data science.",
      "url": "https://ctds.uchicago.edu",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/center-for-translational-data-science",
      "ideas_url": "https://docs.google.com/document/d/1kiEDB6tw2xD8Qj3uxpSELjazW35llHM1a9Nt_LQKwHw/edit?usp=sharing",
      "guide_url": null,
      "topics": [
        "machine learning",
        "artificial intelligence",
        "devops",
        "MLOps",
        "Data Meshes"
      ],
      "technologies": ["golang", "docker", "postgres", "gpu", "LLMs"],
      "irc_channel": "",
      "contact_email": "mailto:ctds-jobs@lists.uchicago.edu",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://www.linkedin.com/company/center-for-translational-data-science",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Towards a Data Commons Operations Center with Observability and  Monitoring",
          "short_description": "This project develops an Operations Center dashboard for centralized deployment, monitoring, and management of multiple Gen3 data commons. It...",
          "description": "This project develops an Operations Center dashboard for centralized deployment, monitoring, and management of multiple Gen3 data commons. It features a microservice-based backend in Go, using gRPC to communicate with Kubernetes-native agents across deployments. A Next.js frontend provides a unified interface for real-time observability and control. The system offers live insights into service health, logs, metrics, and deployment states. It enhances the reliability, scalability, and maintainability of the Gen3 ecosystem.",
          "student_name": "Abhijith M S",
          "code_url": null,
          "proposal_id": "Bz1FDAF0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Rk388fWO"
        },
        {
          "title": "Open-Source FHIR and Federated Learning for Privacy-Preserving AI in Gen3 Data Commons",
          "short_description": "This project addresses a critical challenge in healthcare: enabling AI-driven breakthroughs while ensuring patient privacy. The goal is to develop an...",
          "description": "This project addresses a critical challenge in healthcare: enabling AI-driven breakthroughs while ensuring patient privacy. The goal is to develop an open-source framework that integrates FHIR (Fast Healthcare Interoperability Resources) standards with federated learning, allowing secure and collaborative research without centralized data sharing. The solution will include: 1) A production-ready FHIR server deployable on a cloud platform with built-in HIPAA/GDPR compliance. 2) Smart middleware for smooth data transformation between healthcare systems and AI models. 3) Privacy-preserving federated learning workflows that allow institutions to train models jointly while maintaining decentralized data. 4) Comprehensive resources, such as synthetic test datasets, performance benchmarks and detailed deployment guides. By making advanced healthcare AI accessible and privacy-conscious, this project empowers researchers to drive personalized medicine discoveries while safeguarding data security. The open-source approach fosters transparency and encourages broad adoption, helping break down data silos across global healthcare systems.",
          "student_name": "Andriana",
          "code_url": null,
          "proposal_id": "lCNHCbZH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HUSWFNZp"
        },
        {
          "title": "Improve Scalable Data Download Functionality Using Globus and an Open-Source Python SDK & CLI",
          "short_description": "This project aims to enhance the data download capabilities of the Center for Translational Data Science's Python SDK & CLI by implementing robust,...",
          "description": "This project aims to enhance the data download capabilities of the Center for Translational Data Science's Python SDK & CLI by implementing robust, efficient, and user-friendly functionality for researchers to download and stream large biomedical datasets. By integrating with Globus for secure data transfer and optimizing performance through asynchronous processing, this implementation will significantly improve the research workflow for scientists working with large-scale biomedical data.\nThe proposed solution will focus on maintaining high code quality through comprehensive testing, ensuring a seamless user experience, and optimizing performance for handling large datasets. The end result will be a reliable tool that enables researchers to efficiently transfer data to their workspaces for analysis, ultimately accelerating scientific discovery in the biomedical field",
          "student_name": "Dhiren-Mhatre",
          "code_url": null,
          "proposal_id": "XAESjrBL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qN3DzmD8"
        },
        {
          "title": "An Intelligent Orchestration and Observability System for ML Research Clusters",
          "short_description": "This project addresses the critical challenge of GPU resource management in ML/AI research environments where researchers often face delays due to...",
          "description": "This project addresses the critical challenge of GPU resource management in ML/AI research environments where researchers often face delays due to inefficient resource allocation. I'll develop a comprehensive CPU-based control plane that efficiently orchestrates GPU resources through four key components: an advanced job scheduler with priority management and preemption capabilities, a comprehensive observability platform with real-time dashboards, a streamlined model deployment pipeline with CI/CD integration, and robust infrastructure automation.\n\nBy implementing technologies like Slurm for scheduling, Prometheus/Grafana for monitoring, Terraform/Ansible for infrastructure automation, and integrating ML-specific tools like MLflow and NVIDIA Triton, the system will deliver significant benefits to researchers: reduced wait times for GPU access, transparent visibility into resource availability, priority access for time-sensitive research, and a seamless deployment pipeline from training to serving.\n\nDeliverables include a functioning scheduler with priority queue support, a comprehensive monitoring system with custom dashboards, infrastructure-as-code modules, a model deployment pipeline with CI/CD integration, and an intelligent alerting system. The complete solution will serve as a reference implementation for academic GPU cluster management, providing reusable components and best practices for similar infrastructure requirements in the ML research community.",
          "student_name": "Fei Xiang Peng",
          "code_url": null,
          "proposal_id": "f2Wq0VI3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4A2j5CbE"
        }
      ]
    },
    {
      "name": "OpenMS",
      "image_url": "https://summerofcode.withgoogle.com/media/org/openms/fwdw8iqmudobrij3-360.png",
      "image_background_color": "#ffffff",
      "description": "OpenMS GSoC: Advancing Algorithms & AI for Biomedical Insights",
      "url": "https://openms.de",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/openms",
      "ideas_url": "https://www.openms.org/news/gsoc2025/",
      "guide_url": "https://openms.de/news/gsoc2025/",
      "topics": ["automation", "deep learning", "algorithms", "webdev"],
      "technologies": ["python", "cython", "c++", "r", "pytorch"],
      "irc_channel": "https://discord.com/invite/4TAGhqJ7s5",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/openmsteam?s=21&t=frinz1Od6YuV4uNOlFpFrg",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Accelerated Read/Write and Robust OpenMS Workflows (ARROW)",
          "short_description": "This is a biparted project in which we first focus on integrating Apache Arrow into OpenMS’s build system and dependency management framework, as...",
          "description": "This is a biparted project in which we first focus on integrating Apache Arrow into OpenMS’s build system and dependency management framework, as simple as that sounds. The goal here is to ensure a solid foundation by creating custom CMake scripts, updating CI pipelines, and ensuring cross-platform compatibility. In the second phase, we will implement a converter that transforms mzML files into the Arrow-compatible Parquet format. This conversion not only preserves the integrity of the original data and also allows for the leveraging of the richer schema evolution and querying capabilities of Parquet. Together, these efforts form the ARROW project, ultimately paving the way to more efficient computational mass spectrometry workflows.",
          "student_name": "Avni Badiwale",
          "code_url": null,
          "proposal_id": "CfzJXfYP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lSRBsIeV"
        },
        {
          "title": "Optimizing Casanovo for Fast and Accurate De Novo Peptide Sequencing",
          "short_description": "I'm tackling Casanovo's slow beam search decoding, which stalls big proteomics datasets. By reducing GPU-CPU transfers and removing redundant steps,...",
          "description": "I'm tackling Casanovo's slow beam search decoding, which stalls big proteomics datasets. By reducing GPU-CPU transfers and removing redundant steps, I've cut its function run time by about 180 times. Next, I plan to add parallel and container-friendly setups so it can handle even larger loads across multiple machines. My final deliverables include code changes, tests, and documentation, helping researchers run analyses faster and more reliably.",
          "student_name": "lingwen xu",
          "code_url": null,
          "proposal_id": "CDo7QoVg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CQrrkZlh"
        }
      ]
    },
    {
      "name": "CloudCV",
      "image_url": "https://summerofcode.withgoogle.com/media/org/cloudcv/mxq9gvskhg4i5lyw-360.png",
      "image_background_color": "#ffffff",
      "description": "Building platforms for reproducible AI Research",
      "url": "https://eval.ai/",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/cloudcv",
      "ideas_url": "https://gsoc.cloudcv.org/",
      "guide_url": "https://github.com/Cloud-CV/GSoC-Ideas/wiki/GSOC-2025-Proposal-Template",
      "topics": [
        "machine learning",
        "artificial intelligence",
        "computer vision",
        "deep learning",
        "AI/ML"
      ],
      "technologies": ["python", "django", "docker", "angularjs", "aws"],
      "irc_channel": "https://join.slack.com/t/cloudcv-community/shared_invite/zt-32d77sbma-OjV24gfcKy1tmcl576ZyIg",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/forum/#!forum/cloudcv",
      "twitter_url": "https://twitter.com/eval_ai",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/mlcloudcv",
      "num_projects": 3,
      "projects": [
        {
          "title": "RAG-Based Chat Bot for Enhanced Challenge Support",
          "short_description": "RAG-Based Chatbot for Enhanced EvalAI Challenge Support Problem EvalAI struggles with providing consistent, timely, and accurate support for AI...",
          "description": "RAG-Based Chatbot for Enhanced EvalAI Challenge Support\n\nProblem\nEvalAI struggles with providing consistent, timely, and accurate support for AI challenge participants and hosts, especially during peak periods and with frequently updated guidelines.\n\nSolution\nI propose developing a Retrieval-Augmented Generation (RAG) chatbot that integrates seamlessly with EvalAI to offer instant, context-aware support.\n\nKey Components\n1. Document Ingestion Pipeline: Process and version diverse documentation formats\n2. Vector Database (Milvus): Efficient storage and retrieval of embeddings\n3. RAG Engine: Hybrid retrieval and context-aware answer generation\n4. Web Interface: Intuitive chat UI integrated with EvalAI's platform\n\nDeliverables\n1. Production-ready RAG chatbot integrated with EvalAI\n2. Comprehensive documentation and test suite\n3. Contribution guidelines for future enhancements\n\nThis project aims to significantly improve EvalAI's support system, ensuring quick, consistent, and up-to-date responses for all users.",
          "student_name": "Aditi Bindal",
          "code_url": null,
          "proposal_id": "AoLufrRa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uh8YMZEU"
        },
        {
          "title": "Enhanced Test Suite and Improved User Experience",
          "short_description": "This project is focused on significantly improving EvalAI’s usability by enhancing exsiting comprehensive test suite alongside a series of user...",
          "description": "This project is focused on significantly improving EvalAI’s usability by enhancing exsiting comprehensive test suite alongside a series of user experience enhancements. By increasing our test coverage, automating critical workflows, and refining the platform’s interface and documentation, this initiative aims to create a more robust, user-friendly, and resilient environment for both challenge hosts and participants.\n\nThe enhanced test suite will ensure that all core functionalities, from challenge creation to submission processing are verified, reducing bugs and increasing system reliability. In parallel, targeted user experience improvements will simplify navigation, enhance error reporting, and streamline user interactions, leading to a more intuitive and supportive EvalAI ecosystem.",
          "student_name": "Akshat_Singh",
          "code_url": null,
          "proposal_id": "PBMNI7Pv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IA5TwFwY"
        },
        {
          "title": "RAG-Based Chat Bot for Enhanced Challenge Support",
          "short_description": "This project aims to enhance the user experience for both challenge hosts and participants by developing an intelligent, RAG (Retrieval Augmented...",
          "description": "This project aims to enhance the user experience for both challenge hosts and participants by developing an intelligent, RAG (Retrieval Augmented Generation) based chatbot. The chatbot will efficiently address queries related to challenge hosting, guidelines, troubleshooting, and FAQs. \nBy integrating state-of-the-art NLP techniques with robust retrieval mechanisms, the solution will ensure prompt, accurate, and context-aware responses that reduce support overhead and streamline communication.\nUsing the RAG approach, the chatbot will retrieve relevant information from challenge documentation and combine it with generative models to create coherent and helpful answers. This will empower hosts to manage challenges more effectively and assist participants in resolving queries, ultimately contributing to a smoother and more interactive challenge experience.\n\n\nDeliverables include :\nRAG Framework Implementation\nChat UI\nComprehensive Documentation\nTesting, Feedback, and Continuous Improvement",
          "student_name": "Zahed",
          "code_url": null,
          "proposal_id": "S2iMtPvU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BwLKGHrI"
        }
      ]
    },
    {
      "name": "IOOS",
      "image_url": "https://summerofcode.withgoogle.com/media/org/ioos/oe7caipkhwnizoyr-360.png",
      "image_background_color": "#ffffff",
      "description": "Our eyes on the ocean, coasts, and Great Lakes",
      "url": "https://ioos.noaa.gov/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/ioos",
      "ideas_url": "https://github.com/ioos/gsoc/blob/main/2025/ideas-list.md",
      "guide_url": "https://github.com/ioos/gsoc/blob/main/contributor-guidance.md",
      "topics": [
        "open data",
        "open science",
        "data management",
        "Oceanography",
        "Marine Biodiversity"
      ],
      "technologies": ["python", "java", "r", "Zarr", "NetCDF"],
      "irc_channel": "",
      "contact_email": "mailto:ocefpaf@gmail.com",
      "mailing_list": "https://groups.google.com/g/ioos_tech/",
      "twitter_url": "https://x.com/usioosgov",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/usioosgov",
      "num_projects": 9,
      "projects": [
        {
          "title": "MQTT Protocol Support for ERDDAP",
          "short_description": "MQTT is a lightweight messaging protocol which is used by IoT based devices as a way to transfer data at very high speeds. Adding its support to...",
          "description": "MQTT is a lightweight messaging protocol which is used by IoT based devices as a way\nto transfer data at very high speeds. Adding its support to ERDDAP™  would enable it access near real time data and build datasets with it. This project will add support for ERDDAP™ to act as both, a MQTT client to connect with existing brokers and as a MQTT broker to collect real time data from sensors.",
          "student_name": "ayushsingh01042003",
          "code_url": null,
          "proposal_id": "JX1KXaer",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5tZcgSox"
        },
        {
          "title": "Build web UI versions for IOOS tools (ioos-qc and compliance checker)",
          "short_description": "This project aims to develop a user-friendly, browser-based interface for oceanographic data quality control tools. The goal is to create an...",
          "description": "This project aims to develop a user-friendly, browser-based interface for oceanographic data quality control tools. The goal is to create an interactive interface for oceanographers to validate and analyze their datasets. \nThe project will also include data visualizations to display the results of quality checks and compliance tests. Additionally, the users should be able to download the processed datasets.\n\nDeliverables:\n•\tA browser-based interface for uploading datasets and selecting quality checks.\n•\tIntegration of ioos-qc and compliance-checker with the browser.\n•\tVisualizations of quality control results.\n•\tFunctionality for users to download processed data.\n•\tDocumentation and a final report detailing the development process and outcomes.\n\nThe project will provide a convenient, accessible platform for oceanographers to validate and analyze their data, improving the efficiency and accuracy of their quality control workflows.",
          "student_name": "Chiara Monforte",
          "code_url": null,
          "proposal_id": "pG6b3aHD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YR0AVIjH"
        },
        {
          "title": "Extending Crocolake’s available datasets",
          "short_description": "CrocoLakeTools is a Python package designed to convert oceanographic datasets from various formats (like netCDF and CSV) into CrocoLake’s unified...",
          "description": "CrocoLakeTools is a Python package designed to convert oceanographic datasets from various formats (like netCDF and CSV) into CrocoLake’s unified Parquet-based data lake. This allows researchers to work with clean, consistent data without dealing with technical format issues. In this project, I’ll be extending CrocoLakeTools by developing new converters for the Saildrones and GO-SHIP datasets—two widely used but structurally complex sources. The focus will be on building efficient conversion pipelines using tools like xarray and dask, while also improving testing, documentation, and overall usability. These additions will expand the tool’s dataset coverage and help researchers access and process ocean data more easily.",
          "student_name": "David Nady",
          "code_url": null,
          "proposal_id": "lMOVUPo4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mdb8VnRw"
        },
        {
          "title": "Update ERDDAP™ page rendering to use a template framework",
          "short_description": "Proposal Summary This project aims to modernize ERDDAP™ page rendering by migrating it to a templating framework. The current rendering process...",
          "description": "Proposal Summary\nThis project aims to modernize ERDDAP™ page rendering by migrating it to a templating framework. The current rendering process relies on manually constructed HTML, which makes it difficult to maintain and customize. By implementing a template-based system, we will improve code maintainability, enhance flexibility for customization, and support modern web development practices.\n\nDeliverables\nIdentify a suitable templating framework (e.g., FreeMarker, Thymeleaf, or another appropriate choice).\n\nRefactor ERDDAP™’s HTML generation logic to use the selected template engine.\n\nEnsure the new system maintains full feature parity with existing pages.\n\nImprove documentation on how to modify and extend ERDDAP™ templates.\n\nImplement tests to verify rendering consistency.\n\nThis upgrade will make ERDDAP™ more maintainable and adaptable for future development.",
          "student_name": "Harish Peddina",
          "code_url": null,
          "proposal_id": "IDW0XeVa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WFMQYGxF"
        },
        {
          "title": "Improving Usability and Features of the Phytoclass R Package and GUI for Phytoplankton Estimation\"",
          "short_description": "This GSoC project focuses on enhancing the usability and functionality of the phytoclass R package and its Shiny-based GUI, which are used to...",
          "description": "This GSoC project focuses on enhancing the usability and functionality of the phytoclass R package and its Shiny-based GUI, which are used to estimate phytoplankton abundance from HPLC pigment data. Key objectives include improving error handling, refining the user interface, adding support for regional variations in phytoplankton classification, and improving overall documentation and user guidance. These improvements aim to make phytoclass more accessible and accurate for marine researchers across diverse regions. With a solid foundation in R and Shiny, and a strong interest in applying tech to environmental challenges, I’m excited to contribute meaningful improvements to this impactful open-source project.",
          "student_name": "Khan Mohd Aasim",
          "code_url": null,
          "proposal_id": "YLzLSWXE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KQGtg0Ge"
        },
        {
          "title": "pyOBIS for stakeholders",
          "short_description": "This project addresses the issue of translating complex marine biodiversity data into actionable knowledge for ecosystem management in Florida. It...",
          "description": "This project addresses the issue of translating complex marine biodiversity data into actionable knowledge for ecosystem management in Florida. It makes use of existing biodiversity datasets (OBIS, GBIF) and ecosystem variables (e.g., temperature) to develop a collection of reproducible Jupyter Notebooks powered by Python packages like pyOBIS, GeoPandas, and machine learning packages. These notebooks are dedicated to showcasing the top environmental inquiries in areas like the Florida Keys, Rookery Bay, Tampa Bay, and the Gulf of Mexico—covering trends in Rice's Whale, birds, and seagrasses.\r\n\r\nThe solution combines species occurrence records and ecosystem information to generate visualizations, spatial models, and biodiversity metrics. Interactive maps, temporal trend plots, and model-based habitat predictions are products. Constructed with reproducibility and open science principles in mind, the tools will assist resource managers, researchers, and decision-makers in conservation planning.\r\n\r\nDeliverables include:\r\n\r\n 5 modular Jupyter Notebooks (e.g., habitat models, trend predictions),\r\n Reusable data pipeline functions (data ingestion, cleaning, analysis),\r\n Public Docker-supported GitHub repository,\r\nEasy-to-read documentation and automated testing framework.\r\n\r\nThe project facilitates environmental decision-making through data science and encourages collaboration through open, reproducible tools.",
          "student_name": "Mehraz Hossain Rumman",
          "code_url": null,
          "proposal_id": "SpkMuLNk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Af6KBBl2"
        },
        {
          "title": "Migrating SurveyJoin to a Relational Database for Scalability and Improved Performance",
          "short_description": "The Northeast Pacific Ocean hosts a diverse array of marine species, yet the absence of a standardized, international database for transboundary...",
          "description": "The Northeast Pacific Ocean hosts a diverse array of marine species, yet the absence of a standardized, international database for transboundary marine survey data impedes effective research and resource management. Building upon the existing efforts of the surveyjoin project, this project aims to migrate haul-level survey data from a data frame to a PostgreSQL-based relational database. This transition will facilitate the integration of life-history data, expand species coverage beyond the current 55 species, and enhance data accessibility. The project encompasses designing the database schema, developing data migration pipelines, optimizing query performance, and ensuring seamless integration with existing R workflows.",
          "student_name": "nityam",
          "code_url": null,
          "proposal_id": "3dH8gL85",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ewtYg3ZW"
        },
        {
          "title": "Autoval Enhancement: USGS Observation Data Integration, Datum Conversion & Smarter Visualization",
          "short_description": "Autoval is a tool made for validation of STOFS models. In this project proposal I propose to enhance Autoval significantly. This includes three major...",
          "description": "Autoval is a tool made for validation of STOFS models. In this project proposal I propose to enhance Autoval significantly. This includes three major additions / changes :- \n\n1.) Integration Of USGS Observation Data to enrich model validation.\n2.) Datum Conversion Functionalities for precise alignment across various datasets especially for the USGS dataset\n3.) Visualization Enhancements transitioning from static to dynamic representations, improving reports with better clarity and user experience\n\nAdditionally, other refinements to enhance ease of use for both professionals and future contributors will be made.\nBy focusing on data integration, datum conversion and smarter visualization this project will transform Autoval into a more powerful and efficient evaluation framework. These contributions will provide professionals with validated data and help them drive smarter and more actionable decisions in ocean and coastal management.",
          "student_name": "Siddharth_Chauhan",
          "code_url": null,
          "proposal_id": "DHIN5BZG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dbT37m5A"
        },
        {
          "title": "OCSMesh Parallelization",
          "short_description": "OCSMesh is a Python package designed for generating unstructured meshes tailored to ocean modeling. However, its current workflow, particularly the...",
          "description": "OCSMesh is a Python package designed for generating unstructured meshes tailored to ocean modeling. However, its current workflow, particularly the Digital Elevation Model (DEM) processing and JIGSAW mesh generation steps, remains highly time-consuming and not well-optimized for High Performance Computing (HPC) environments.\nTo address this bottleneck, I propose introducing parallelism into the most computationally intensive stages of the workflow: DEM processing and JIGSAW-based meshing. My approach involves leveraging parallel computing libraries such as Dask and mpi4py to scale these operations across multiple cores and nodes.\nFor the preprocessing stage, several components are already optimized for single-node performance and can be extended to work efficiently in an HPC setting. Regarding JIGSAW meshing, I plan to implement a domain decomposition strategy, partitioning the domain into smaller subdomains that can be meshed independently in parallel. These subdomain meshes will then be seamlessly merged to form the final unified mesh.\nThis parallelized workflow is expected to dramatically reduce mesh generation time, enabling more scalable and efficient processing for large-scale ocean modeling tasks. I aim to integrate mpi4py support into the key functions across the codebase, while using Dask specifically for raster windowing and DEM data handling.",
          "student_name": "Yashveer_Singh",
          "code_url": null,
          "proposal_id": "v60udfoz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9mj1dDWr"
        }
      ]
    },
    {
      "name": "The Linux Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-linux-foundation/ydeu9rliawhe6of9-360.png",
      "image_background_color": "#ffffff",
      "description": "Non-profit consortium fostering growth of Linux",
      "url": "http://www.linuxfoundation.org/",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-linux-foundation",
      "ideas_url": "https://wiki.linuxfoundation.org/gsoc/google-summer-code-2025",
      "guide_url": "https://wiki.linuxfoundation.org/gsoc/google-summer-code-2025",
      "topics": ["kernel", "automotive", "printing", "iio", "zephyr"],
      "technologies": ["c", "linux", "cups", "ai", "fuzz-testing"],
      "irc_channel": "https://wiki.linuxfoundation.org/gsoc/google-summer-code-2025#contact_us",
      "contact_email": "mailto:till@linux.com",
      "mailing_list": "https://wiki.linuxfoundation.org/gsoc/google-summer-code-2025#contact_us",
      "twitter_url": "",
      "blog_url": "https://linuxfoundation.org/blog/",
      "facebook_url": "",
      "num_projects": 21,
      "projects": [
        {
          "title": "IIO Driver for ADE9113",
          "short_description": "Create a Linux IIO driver for Analog Devices, Inc.'s ADE9113 Isolated, Sigma-Delta Analog to Digital Converter. Upstream the driver and associated...",
          "description": "Create a Linux IIO driver for Analog Devices, Inc.'s ADE9113 Isolated, Sigma-Delta Analog to Digital Converter. Upstream the driver and associated device tree documentation.",
          "student_name": "abhinjai",
          "code_url": null,
          "proposal_id": "00st6oF2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ENS6gMck"
        },
        {
          "title": "App Store: A Secure, User-Friendly Application Platform for Embedded Linux IVI Systems",
          "short_description": "Problem: Embedded Linux systems, particularly for In-Vehicle Infotainment (IVI), lack a user-friendly, secure application store that matches the...",
          "description": "Problem: Embedded Linux systems, particularly for In-Vehicle Infotainment (IVI), lack a user-friendly, secure application store that matches the seamless experience of mobile platforms. Existing solutions often fall short in providing curated app access, robust security, and support for diverse app types, limiting their adoption in production-ready environments.\n\nSolution: The Flatpak App Store addresses this by delivering a modern application store for embedded Linux. Built with Flutter for an intuitive UI, it leverages Flatpak for secure, sandboxed app distribution and integrates advanced features like MutualTLS, DRM playback, and Android app support via crosvm. A 22-week implementation plan ensures a scalable, production-ready solution, with cloud APIs for app management and user reviews, tailored to IVI use cases.\n\nDeliverables:\n\nA fully functional Flatpak App Store application with browsing, installation, and review capabilities.\nSecure architecture featuring MutualTLS, sandboxing, and secret storage.\nSupport for Flutter, Native Linux, and Android apps, with DRM playback integration.\nPackaged Flatpak app and repository setup for deployment.\nComprehensive documentation and test suite for IVI production readiness.\nThis project will empower embedded Linux users with a reliable, mobile-like app store experience, enhancing IVI system functionality and security.",
          "student_name": "Ahmed Wafdy",
          "code_url": null,
          "proposal_id": "Aclo9V7e",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/l9ir7nwf"
        },
        {
          "title": "Intelligent Camera Stream Integration and Warning System (ICSW)",
          "short_description": "The proposed implementation is planned to include building the camera-based warning system, starting from the low-level driver implementation,...",
          "description": "The proposed implementation is planned to include building the camera-based warning system, starting from the low-level driver implementation, creating necessary logic inside PipeWire nodes, training AI models for objects detection, and designing the suitable User Interface using Flutter. The final product would be a Warning System that leverages implemented inference models (e.g. Object Detection) and accordingly issues a visual alert in response to critical conditions, such as the detection of an object in the blind spot, or a very low time-to-collision.",
          "student_name": "Amr Elkenawy",
          "code_url": null,
          "proposal_id": "O8NEwg2T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YUBlZH0X"
        },
        {
          "title": "Conformance Checker for SPDX AI SBOM",
          "short_description": "Adding support of a new file format (SPDX 3.0) and a new compliance standard (EU Artificial Intelligence Act) for SPDX SBOM Conformance Checker. This...",
          "description": "Adding support of a new file format (SPDX 3.0) and a new compliance standard (EU Artificial Intelligence Act) for SPDX SBOM Conformance Checker.\n\nThis proposal introduces two key capabilities:\n\n1) SPDX 3.0 Parsing: Add ability to parse SBOMs in SPDX 3.0 JSON format and build a computational model of the SBOM for further processing.\n\n2) EU AI Act Compliance Checks: Add ability to assess SBOM conformance against selected provisions of the EU AI Act. For example, concerning Article 29 (Registration), the checker will analyze the SBOM to determine if it includes the information mandated by Annex VIII, providing users with a clear report on present and missing data elements.",
          "student_name": "Arthit Suriyawongkul",
          "code_url": null,
          "proposal_id": "sxDdYkC1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CeR3hQTq"
        },
        {
          "title": "Porting Printing to Zephyr",
          "short_description": "Current driverless print servers can be complex and resource-demanding in large part since they only run on full-scale operating systems like Linux....",
          "description": "Current driverless print servers can be complex and resource-demanding in large part since they only run on full-scale operating systems like Linux. This project aims to port the different elements of OpenPrinting's printing stack (CUPS, libcupsfilters, etc.) to the Zephyr OS for simple future print server development on embedded devices. This will consist of systematically adding Zephyr modules and commits to the OS itself for each part of the printing stack. Importantly, Zephyr replacements and ports must also be used instead of the current Linux dependencies. This leads to further investigation into the capabilities of the Zephyr OS to support technologies such as Ghostscript and print buffering. Lastly, the stack must be tested on hardware to verify functionality and view benchmarks such as power consumption.",
          "student_name": "Hubert Guan",
          "code_url": null,
          "proposal_id": "XISI8NDP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/f9CKDFJW"
        },
        {
          "title": "Stablizing and extending patch-hub for a v1.0.0 release",
          "short_description": "patch-hub, a sub-project of kw, diverged from its parent around July 2024 to accommodate a broader scope. Since then, it has introduced several...",
          "description": "patch-hub, a sub-project of kw, diverged from its parent around July 2024 to accommodate a broader scope. Since then, it has introduced several end-user features, but remains in pre-release at version 0.1.5.\n\nThis proposal aims to push patch-hub to a stable v1.0.0 release by delivering a complete and streamlined maintainer workflow—from receiving patches to reviewing, testing, and providing feedback—while also addressing architectural concerns, improving modularity, and strengthening the testing and documentation infrastructure.",
          "student_name": "Ivin Joel Abraham",
          "code_url": null,
          "proposal_id": "TY8PMQVS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tPajUL8q"
        },
        {
          "title": "GNOME Control Center: Finalizing the New Printing Architecture for GNOME",
          "short_description": "The latest CUPS 3.x versions support only driverless printing through the new IPP Everywhere architecture. Modern printers predominantly use...",
          "description": "The latest CUPS 3.x versions support only driverless printing through the new IPP Everywhere architecture. Modern printers predominantly use driverless technology, supporting IPP printing and automatically configuring themselves via CUPS. Unlike traditional setups, these IPP printers do not require a permanent print queue. However, many printers still rely on drivers (PPD + filter).\n\nTo address this, the Genome Control Center (GCC) must be adapted to support both driver-based and driverless printers. While significant progress has been made, substantial work remains before this new approach can be fully integrated into GCC. The project aims to complete all remaining tasks, ensuring a seamless user experience for GCC printers while refining all aspects for the final release.",
          "student_name": "Kaushik Vishwakarma",
          "code_url": null,
          "proposal_id": "plJCX1VX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PTiuC47E"
        },
        {
          "title": "Google Summer of Code 2025: IIO Driver",
          "short_description": "I am going to write the code for the ADE9113 IIO Driver and the related device tree documentation. I will also provide a comprehensive tutorial...",
          "description": "I am going to write the code for the ADE9113 IIO Driver and the related device tree documentation. I will also provide a comprehensive tutorial detailing the development process and the steps to create the driver, along with a functional demo showcasing the driver working with the hardware. In the end, this work will be submitted for inclusion in the upstream Linux Kernel.",
          "student_name": "marilene",
          "code_url": null,
          "proposal_id": "EfFmziR2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/c9zg3p6z"
        },
        {
          "title": "Rust bindings for libcups2/3",
          "short_description": "This project will create comprehensive Rust bindings and idiomatic wrappers for CUPS (Common UNIX Printing System), enabling Rust applications to...",
          "description": "This project will create comprehensive Rust bindings and idiomatic wrappers for CUPS (Common UNIX Printing System), enabling Rust applications to fully interact with printers. We'll develop a layered architecture with low-level FFI bindings, safe Rust abstractions, and a DBus/zbus service layer for secure application integration. The implementation will balance leveraging existing C code in libcups while providing memory safety and ergonomic APIs. Key deliverables include core libcups bindings, an idiomatic Rust API, async support through tokio, a secure DBus service, and integration with the Common Print Dialog Backend (CPDB) for COSMIC desktop environment compatibility",
          "student_name": "Mintu Gogoi",
          "code_url": null,
          "proposal_id": "XEbBOcnd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Vxc0sLQU"
        },
        {
          "title": "Integrating OSS-Fuzz for Go-Based and Python-Based OpenPrinting Projects",
          "short_description": "The OpenPrinting ecosystem includes several utilities for driverless printing, protocol implementation, and printer management, including projects...",
          "description": "The OpenPrinting ecosystem includes several utilities for driverless printing, protocol implementation, and printer management, including projects written in Go and Python. These polyglot projects currently lack fuzz testing, making them prone to undetected bugs and security issues. This project proposes integrating such polyglot OpenPrinting projects, namely ipp-usb, goipp, pycups, and pyppd, into OSS-Fuzz to enable continuous, large-scale fuzzing. The work will include evaluating current unit tests, improving coverage where lacking, identifying suitable fuzzing targets based on test coverage and risk, developing fuzz harnesses, and integrating the projects into OSS-Fuzz. This effort will help expand OSS-Fuzz coverage across OpenPrinting projects, further strengthening their overall security and reliability.",
          "student_name": "Mohammed Imaduddin",
          "code_url": null,
          "proposal_id": "UMRGLJDt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rBWHXaha"
        },
        {
          "title": "Modernize OpenPrinting Website with Next.js",
          "short_description": "The OpenPrinting website is an essential platform for Linux printing resources. The current system lacks modern UI enhancements and optimized SEO....",
          "description": "The OpenPrinting website is an essential platform for Linux printing resources. The current system lacks modern UI enhancements and optimized SEO. Additionally, the existing Foomatic lookup page relies on SQL and dynamic web technologies, which I will be migrating to a fully static implementation. This transition will eliminate dependencies on an SQL server and a web server, with everything being managed exclusively on GitHub.\n\nThis project aims to modernize the OpenPrinting website by migrating it to Next.js, a powerful React framework that ensures scalability, performance optimization, and maintainability. The transition will include:\n\n- Rebuilding the site with a modular, component-based Next.js architecture.\n- Migrating the Foomatic lookup page to a static page for improved efficiency.\n- Implementing Server-Side Rendering (SSR) and Static Site Generation (SSG) to optimize performance.\n- Deploying the new website with a CI/CD pipeline for automated updates and maintenance.",
          "student_name": "Rudra Pratap Singh",
          "code_url": null,
          "proposal_id": "enfDa5bz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YEV4FNMy"
        },
        {
          "title": "Automotive Grade Linux (AGL) - meta-ros",
          "short_description": "The integration of the Robot Operating System (ROS) Framework as an option within Automotive Grade Linux (AGL) through the meta-ros yocto layer is an...",
          "description": "The integration of the Robot Operating System (ROS) Framework as an option within Automotive Grade Linux (AGL) through the meta-ros yocto layer is an important step in upgrading vehicle technology using automotive systems. This project is important for several reasons:\n* Bridging the Gap Between Robotics and Automotive Software\n* Expanding AGL’s Capabilities\n* Advancing Open-Source Development\n* Enhancing Real-World Use Cases",
          "student_name": "Saalim Quadri",
          "code_url": null,
          "proposal_id": "DXTLvuuQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OwFx8eRG"
        },
        {
          "title": "OpenPrinting Image Output Verification Framework",
          "short_description": "Currently, OpenPrinting's testing only looks for errors or crashes; it does not automatically verify the content of print or scan output. This...",
          "description": "Currently, OpenPrinting's testing only looks for errors or crashes; it does not automatically verify the content of print or scan output. This project uses OpenCV to create an automated tool that fills this gap. By analyzing controlled test images, the tool will verify key output characteristics essential for print quality: page completeness and order, correct orientation and scaling, expected color properties, and appropriate density/sharpness. Deliverables include the verification tool designed for integration into OpenPrinting's CI pipeline, a methodology for defining suitable test images, and comprehensive documentation. This project will significantly enhance the reliability and quality assurance of open-source printing solutions.",
          "student_name": "Sanskar2303",
          "code_url": null,
          "proposal_id": "Gh20a21n",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aFApa0Ws"
        },
        {
          "title": "Porting pyCUPS to CUPS 3.x API and implementing it in system config printer",
          "short_description": "Currently, PyCups support upto libcups 2.4.x. PyCups being written using the C extensions for Python, is very tough to maintain, and to implement new...",
          "description": "Currently, PyCups support upto libcups 2.4.x. PyCups being written using the C extensions for Python, is very tough to maintain, and to implement new features in. Also, there is a very small scope of implementing automation for creating the python bindings of libcups.\nAfter PyCups is ported to libcups 3.x, I'll implement the same API for system-config-printer. So, that distros still shipping old libcups 2.4.x can slowly stop shipping the library. And libcups 2.4.x can be deprecated. Immensely helping the printing APIs and libraries.",
          "student_name": "Soumyadeep Ghosh",
          "code_url": null,
          "proposal_id": "FFe0juMO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/S3e2JPY8"
        },
        {
          "title": "Enhancing the Functionality of spdx-license-diff",
          "short_description": "The spdx-license-diff browser extension compares selected text on a webpage against the SPDX License List, showing the best matching license and a...",
          "description": "The spdx-license-diff browser extension compares selected text on a\nwebpage against the SPDX License List, showing the best matching license and a\nsimilarity percentage. The tool is currently broken in modern browsers due to\nChrome’s Manifest V3 migration and Firefox compatibility issues. This project will\nrestore compatibility, enhance its matching accuracy based on SPDX guidelines,\nimprove the user interface and ensure accessibility compliance.",
          "student_name": "Sujal Bhor",
          "code_url": null,
          "proposal_id": "uuMOkRgQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TwtGeZ4X"
        },
        {
          "title": "Add Virtual DAI component to SOF",
          "short_description": "The project aims to implement a Virtual Digital Audio Interface (DAI) for the Sound Open Firmware (SOF) to facilitate debugging, rapid prototyping....",
          "description": "The project aims to implement a Virtual Digital Audio Interface (DAI) for the Sound Open Firmware (SOF) to facilitate debugging, rapid prototyping. The Virtual DAI will support two directions: playback, which consumes data similarly to /dev/null, and capture, which generates data like /dev/zero or /dev/urandom. Expected outcomes include successfully merging the Virtual DAI component upstream, enabling simple playback and record pipelines, logging and discarding output frames for playback, and generating zero-filled frames for recording.",
          "student_name": "Suraj Sonawane",
          "code_url": null,
          "proposal_id": "zPRSobBO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hf59vme1"
        },
        {
          "title": "KDE Print Manager vs. CUPS 3.x",
          "short_description": "The KDE Print Manager, a critical component of the KDE desktop environment, requires updates to support the advancements introduced in CUPS 3.x. This...",
          "description": "The KDE Print Manager, a critical component of the KDE desktop environment, \nrequires updates to support the advancements introduced in CUPS 3.x. This project \naims to modernize the Print Manager by enabling compatibility with CUPS 3.x while \nmaintaining backward compatibility with CUPS 2.x. The focus will be on \nincorporating support for IPP (Internet Printing Protocol) print destinations, which \nallow users to print to driverless network printers, IPP-over-USB printers, and \nPrinter Applications without the need for traditional CUPS queues or PPD files.",
          "student_name": "Tarun Srivastava",
          "code_url": null,
          "proposal_id": "EpyQ1IBd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VON8sRJK"
        },
        {
          "title": "Running Open-Source ML Models on HiFi4 DSP with Zephyr RTOS",
          "short_description": "This proposal tackles the challenge of efficiently running machine learning models on resource-constrained HiFi4 DSPs using Zephyr RTOS. The approach...",
          "description": "This proposal tackles the challenge of efficiently running machine learning models on resource-constrained HiFi4 DSPs using Zephyr RTOS. The approach begins by deploying and validating open-source ML models (e.g., temperature prediction, micro-speech) on an emulated Xtensa platform before porting and optimizing TensorFlow Lite Micro for HiFi4 DSP using NXP’s AN13970 guide. Deliverables include an optimized ML framework for DSPs, a working sample application, comprehensive documentation, and upstream contributions to Zephyr.",
          "student_name": "Thong Phan",
          "code_url": null,
          "proposal_id": "uEhFiiRa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/L81rDpY3"
        },
        {
          "title": "Rust bindings for libcups2/3",
          "short_description": "CUPS-based software uses the libcups library for print-related functions, which is straightforward in C/C++ but requires bindings for other...",
          "description": "CUPS-based software uses the libcups library for print-related functions, which is straightforward in C/C++ but requires bindings for other languages. Rust, known for its memory safety, lacks libcups bindings, and this project aims to develop them.",
          "student_name": "Titiksha Bansal",
          "code_url": null,
          "proposal_id": "mycHYbkB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Z88JfqZq"
        },
        {
          "title": "GTK Print Dialog: Modern dialog with built-in preview in main view",
          "short_description": "We are trying to solve the problem of print dialogs in the gtk. The actual gtk contains a very simplistic approach regarding the print dialogs which...",
          "description": "We are trying to solve the problem of print dialogs in the gtk. The actual gtk contains a very simplistic approach regarding the print dialogs which need to be improved. As gtk is a parent library for most of the softwares. So its print dialogs need to be updated, as its affecting the most of the softwares relying on them. So, I am determined to solve the process of print dialog and provide it a modern look of print dialog which contains the print preview and print dialog in same pane. The steps i choose to work on came from the great research i did on the software that have this modern dialog. Escpecially i got attracted with the approach of the libreoffice. below are the steps :\n1. Add the return button to the print preview pane in gtk. \n2. Sync the print dialog setting with the print preview pane in gtk.\n3. Extend the class of print preview so that other softwares could write there own algorithm for it. \n4. Combine the print preivew pane and print dialog into one.",
          "student_name": "VididVidid",
          "code_url": null,
          "proposal_id": "PjWBTOfH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HcP5bOK2"
        },
        {
          "title": "Utilizing OSS-Fuzz-Gen to Improve Fuzz Testing  for OpenPrinting Projects",
          "short_description": "This project aims to improve fuzz testing for OpenPrinting’s C/C++ codebases by leveraging OSS-Fuzz-Gen, a new framework that uses Large Language...",
          "description": "This project aims to improve fuzz testing for OpenPrinting’s C/C++ codebases by leveraging OSS-Fuzz-Gen, a new framework that uses Large Language Models (LLMs) to assist fuzz testing. While some OpenPrinting projects are already integrated into Google’s OSS-Fuzz, current fuzzing efforts achieve limited runtime coverage (e.g., only 11.84% for cups), leaving many functions untested. \nTo address this, the project will (1) refine existing fuzzers, (2) improve corpus and dictionary quality using LLMs, and (3) generate additional fuzz harnesses with OSS-Fuzz-Gen to improve the coverage. This will enhance test depth, uncover hidden vulnerabilities, and strengthen the security of OpenPrinting projects.",
          "student_name": "Zixuan Liu",
          "code_url": null,
          "proposal_id": "2uy1aOmj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gRbcUkWB"
        }
      ]
    },
    {
      "name": "DBpedia",
      "image_url": "https://summerofcode.withgoogle.com/media/org/dbpedia/cgjegpmawtu5fr6w-360.png",
      "image_background_color": "#ffffff",
      "description": "Global and Unified Access to Knowledge Graphs.",
      "url": "https://www.dbpedia.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/dbpedia",
      "ideas_url": "https://forum.dbpedia.org/tag/gsoc2025-ideas",
      "guide_url": "https://docs.google.com/document/d/e/2PACX-1vQA3I-8JnxH78UOyVhVy1cpDCxwWvqs8BCN9YsR8UqOBiA-OigrSFd9SvTd2AuWdko1TSPtjip6NM65/pub",
      "topics": [
        "machine learning",
        "semantic web",
        "linked data",
        "knowledge graph",
        "largelanguagemodel"
      ],
      "technologies": ["python", "javascript", "java", "scala", "rdf"],
      "irc_channel": "https://dbpedia.slack.com/",
      "contact_email": "mailto:dbpedia@infai.org",
      "mailing_list": "https://forum.dbpedia.org/",
      "twitter_url": "https://twitter.com/dbpedia",
      "blog_url": "https://www.dbpedia.org/blog/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Enhancing DBpedia Hindi Chapter - End-to-End KG Construction and Public SPARQL Access",
          "short_description": "DBpedia extracts structured information from Wikipedia into a multilingual knowledge graph (KG), but the Hindi DBpedia KG currently lacks extensive...",
          "description": "DBpedia extracts structured information from Wikipedia into a multilingual knowledge graph (KG), but the Hindi DBpedia KG currently lacks extensive coverage, end to end extraction pipelines, and a publicly accessible SPARQL endpoint. This project, building on GSoC 2024 foundations, will enhance the Hindi KG by improving infobox mappings, refining neural extraction, and implementing link prediction. A structured approach will be taken to ensure a streamlined end-to-end neural extraction pipeline, leveraging multilingual models tailored for Hindi content. Finally, this enriched KG will be deployed through a public SPARQL endpoint, making structured Hindi knowledge broadly accessible.",
          "student_name": "advenk",
          "code_url": null,
          "proposal_id": "x9ZPB8Zi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Cu3hqVyp"
        },
        {
          "title": "Towards Amharic DBpedia",
          "short_description": "Amharic Wikipedia lacks structured knowledge representation, which limits its integration into global knowledge graphs like DBpedia. This gap hinders...",
          "description": "Amharic Wikipedia lacks structured knowledge representation, which limits its integration into global knowledge graphs like DBpedia. This gap hinders the accessibility, discoverability, and interoperability of Amharic content in multilingual semantic web applications.\nThis project proposes to enhance the Amharic chapter of DBpedia by extracting structured data from Amharic Wikipedia. It involves extending the DBpedia Extraction Framework to support Amharic, creating new mappings for infobox templates, and extracting rich semantic data such as citations, disambiguations, and anchor texts. The output will be published as RDF triples and made accessible via a user-friendly web interface, following FAIR (Findable, Accessible, Interoperable, Reusable) data principles.\nDeliverables\n•\tAn Amharic-compatible extension to the DBpedia Extraction Framework.\n•\tNew infobox mapping templates for Amharic Wikipedia.\n•\tAn automated extraction pipeline with support for citations, disambiguation, topical concepts, and personal data.\n•\tA structured knowledge graph (RDF triples) linked with English DBpedia and Wikidata.\n•\tA lightweight web interface with SPARQL querying and multilingual support.\n•\tComprehensive documentation covering setup, usage, and FAIR-compliant publishing.",
          "student_name": "Andargachew Asfaw",
          "code_url": null,
          "proposal_id": "9WZIqsmf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gRkaQuQv"
        },
        {
          "title": "Neural Extraction Framework: Enhancing DBpedia with Implicit Relation Mining",
          "short_description": "The Neural Extraction Framework enhances DBpedia by extracting and integrating implicit relationships from unstructured Wikipedia text—connections...",
          "description": "The Neural Extraction Framework enhances DBpedia by extracting and integrating implicit relationships from unstructured Wikipedia text—connections that are often missed by traditional infobox-based extraction. Many Wikipedia entities are linked without clearly defined predicates (e.g., “Berlin Wall” and “German Reunification”), and this project aims to infer and validate those missing relationships using deep learning and semantic matching. The system will use a hybrid of transformer-based models (like REBEL) and rule-based parsing to extract triples, perform entity linking to DBpedia URIs, and resolve predicates via FAISS-based similarity search with sentence embeddings. When no suitable predicate match exists, the system will generate new ones using large language models and validate them through a three-step pipeline that ensures alignment with DBpedia’s ontology. Final outputs will be integrated into DBpedia’s RDF graph, strengthening its coverage for semantic search and linked data applications. Deliverables include the full extraction pipeline, validation modules, integration tools, and comprehensive documentation.",
          "student_name": "Gandharva Naveen",
          "code_url": null,
          "proposal_id": "3ARXZ4KR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uQUHx6jo"
        },
        {
          "title": "Improving Geo-Coordinate Extraction and Precision in DBpedia's Extraction Framework",
          "short_description": "Many DBpedia entries, especially for cities in the Southern Hemisphere like South Africa, incorrectly store geo-coordinates with positive latitude...",
          "description": "Many DBpedia entries, especially for cities in the Southern Hemisphere like South Africa, incorrectly store geo-coordinates with positive latitude values. Furthermore, the directional metadata (dbp:latns and dbp:longew) is often missing. These inaccuracies can result in incorrect mapping and spatial data interpretation.\n\nThis project aims to enhance DBpedia's Extraction Framework by:\n\nCorrecting the sign of geo:lat and geo:long based on hemispherical data.\n\nEnsuring the extraction and inclusion of dbp:latns and dbp:longew from the relevant templates.\n\nAdding unit tests and regression tests for validating geo-coordinate correctness.\n\nExtending the GeoCoordinatesMapping.scala file to parse and emit directional info.\n\nRefactoring and cleaning up legacy extraction logic to support consistent coordinate output.\n\nDeliverables:\n\nPatch to the Extraction Framework implementing these improvements.\n\nTest suite to validate parsing and extraction of directional metadata.\n\nDocumentation for contributors on how to test and extend the geo-coordinate logic.",
          "student_name": "haniya konain",
          "code_url": null,
          "proposal_id": "qY5imFwO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3IYoXoD6"
        },
        {
          "title": "Automating Wikimedia Dumps on Databus",
          "short_description": "Wikimedia publishes their data dumps at dumps.wikimedia.org. Currently, these dumps are listed in HTML format, requiring manual parsing to track new...",
          "description": "Wikimedia publishes their data dumps at dumps.wikimedia.org. Currently, these dumps are listed in HTML format, requiring manual parsing to track new releases. To automate the retrieval process, integrating the dumps into the Databus metadata knowledge graph. This will enable SPARQL queries to check for new versions of dumps, supporting DBpedia and other projects like DIEF by systematically converting them into RDF.",
          "student_name": "tech0priyanshu",
          "code_url": null,
          "proposal_id": "Uu77LXTS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VZZkMNmE"
        }
      ]
    },
    {
      "name": "Open Science Initiative for Perfusion Imaging",
      "image_url": "https://summerofcode.withgoogle.com/media/org/open-science-initiative-for-perfusion-imaging/bxlqptrs5g0ovtqz-360.png",
      "image_background_color": "#ffffff",
      "description": "Open access resources for perfusion imaging",
      "url": "https://osipi.ismrm.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/open-science-initiative-for-perfusion-imaging",
      "ideas_url": "https://docs.google.com/document/d/e/2PACX-1vSuYh57hsLUXbmrA5tozX4Ucne0sRXnmFt5xBA88gzDZJKZYD4-Bq04J9acer2d_i6NP6xhimmz4m5i/pub",
      "guide_url": "https://docs.google.com/document/d/e/2PACX-1vSa8Nvl_Ays9ZL3nYO1UL4hSB9vG2QXfSzWcEaN4jnuWNRJ3Vj58YX0FWI02llw17JaC_jMquAmBoAk/pub",
      "topics": [
        "artificial intelligence",
        "data visualization",
        "data analysis",
        "medical imaging",
        "reproducible science"
      ],
      "technologies": ["python", "github"],
      "irc_channel": "https://join.slack.com/t/osipi/shared_invite/zt-3112fcp6p-yKIpC9r~N0vMJIBoSQA42w",
      "contact_email": "mailto:ismrmosipi@gmail.com",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/OSIPI_ISMRM",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Methods section generator for ASL",
          "short_description": "This project aims to develop a modular, open-source Python tool that automatically extracts acquisition parameters from ASL MRI datasets (DICOM,...",
          "description": "This project aims to develop a modular, open-source Python tool that automatically extracts acquisition parameters from ASL MRI datasets (DICOM, NIfTI, BIDS) and generates standardized methods sections for scientific publications. Manual reporting of MRI parameters is often time-consuming and error-prone, hindering reproducibility; this tool addresses the issue by extracting metadata, including hidden/private DICOM tags, while interactively prompting users for any missing parameters to ensure completeness. It will feature an improved DICOM/BIDS handler, an interactive GUI for parameter input and validation, and comprehensive documentation. It will also undergo beta testing with OSIPI TF4.1 members. Designed for easy integration with future extensions such as DSC/DCE MRI support, the tool will enhance transparency, save researchers valuable time, and contribute to strengthening OSIPI’s ecosystem for perfusion imaging.",
          "student_name": "Ibrahim Abdelazim",
          "code_url": null,
          "proposal_id": "znYqDwGN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/W5gaALuO"
        },
        {
          "title": "OSIPI package – Blood-brain barrier module",
          "short_description": "This project addresses the inverse problem of estimating physiological parameters that characterize the permeability of the blood-brain barrier (BBB)...",
          "description": "This project addresses the inverse problem of estimating physiological parameters that characterize the permeability of the blood-brain barrier (BBB) from MRI data. These parameters cannot be measured directly and must be inferred from signal progression over time in techniques such as Dynamic Contrast-Enhanced MRI (DCE-MRI) and Arterial Spin Labeling (ASL). The estimation is complicated by measurement noise, model ambiguity, and the sensitivity of parameter estimates to small variations in the data.\nTo improve robustness and accuracy, this project will implement a Bayesian framework that incorporates prior physiological knowledge and observed MRI signals to estimate the posterior distribution of the parameters. For the pharmacokinetic modeling the Tofts model for DCE-MRI and perfusion modeling for ASL will be used. Markov Chain (MCMC) sampling and gradient-based optimization methods may improve the robustness of the reconstruction.\n\n\nDeliverables include:\n    – An extensible implementation of the BBB modeling pipeline using OSIPI tools\n    – Support for both DCE-MRI and ASL data,\n    – Parameter estimation via Bayesian inference and optimization,\n    – Comprehensive documentation and integration into the OSIPI project.",
          "student_name": "Melissa Lange",
          "code_url": null,
          "proposal_id": "QGEVWNgz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yQOF7L0M"
        },
        {
          "title": "Unify HTML Pages For OSIPI Output",
          "short_description": "The OSIPI initiative has developed various open-source tools for quantitative MRI, particularly in perfusion imaging. However, the documentation for...",
          "description": "The OSIPI initiative has developed various open-source tools for quantitative MRI, particularly in perfusion imaging. However, the documentation for these tools is currently fragmented across multiple projects, each with different structures, styles, and rendering approaches. This inconsistency creates barriers to usability, maintainability, and accessibility.\nThis project aims to unify OSIPI’s documentation under a single, standardized HTML framework. By utilizing modern documentation tools such as MkDocs or other static site generators, we will create a consistent, searchable, and user-friendly interface. The unified framework will streamline maintenance, improve accessibility, and enhance the overall user experience.\nDeliverables include:\n   A standardized template for OSIPI documentation.\n   Migration of existing project documentation into the new framework.\n   Integrated navigation and search functionality across all documentation.\n   Automated deployment pipeline using GitHub Pages or similar tools.\n   Clear documentation and contribution guidelines for future scalability.",
          "student_name": "Rohan Kumar Mahato",
          "code_url": null,
          "proposal_id": "lxe3aKJY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2IvjaN2w"
        },
        {
          "title": "A Developer-Friendly Architecture for Modular, Scalable ASL Algorithm Prototyping",
          "short_description": "The current version of the ASL module has no modularity to explore and test different preprocessing snippets (i.e., algorithms) across pipelines. In...",
          "description": "The current version of the ASL module has no modularity to explore and test different preprocessing snippets (i.e., algorithms) across pipelines. In addition, these tools are designed for brain imaging and lack adaptability for broader applications beyond the brain. A modular PyASL library will bridge this gap, providing researchers and developers with a versatile platform to test and integrate new functionalities more efficiently, tailor pipelines to specific research needs, and support algorithmic exploration for population- or organ-specific ASL imaging processing.",
          "student_name": "Tongxin (Elo) Li",
          "code_url": null,
          "proposal_id": "WWTp4QUq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/J0rmZ4sz"
        },
        {
          "title": "Dockerized Data Processing Pipeline for Medical Imaging",
          "short_description": "This project aims to build a modular, containerized pipeline for medical image processing (e.g., IVIM analysis) with DICOM and NIfTI support. It will...",
          "description": "This project aims to build a modular, containerized pipeline for medical image processing (e.g., IVIM analysis) with DICOM and NIfTI support. It will allow users, especially researchers and clinicians, to define and execute their own workflows via a web interface. Users will be able to configure multi-step image processing workflows, such as image ingestion, preprocessing, fitting, and report generation, that are executed based on dependencies between tasks. These workflows will be modeled as Directed Acyclic Graphs (DAGs), where each task runs only after its required inputs are available.\nTo orchestrate these workflows efficiently, the system will use a combination of Docker containers, Kaapana for healthcare-specific orchestration and frontend visualization, and Kubernetes and Argo or Airflow for advanced DAG-based control and scaling.",
          "student_name": "Usman Akinyemi",
          "code_url": null,
          "proposal_id": "TeFkSiCt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/wBCitF8F"
        }
      ]
    },
    {
      "name": "Open Transit Software Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/open-transit-software-foundation/uz3p7k5vsxduhrhk-360.png",
      "image_background_color": "#ffffff",
      "description": "Help make public transit better",
      "url": "https://opentransitsoftwarefoundation.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/open-transit-software-foundation",
      "ideas_url": "https://opentransitsoftwarefoundation.org/2025/01/google-summer-of-code-2025-project-ideas/",
      "guide_url": "https://opentransitsoftwarefoundation.org/2024/02/how-to-craft-a-successful-gsoc-proposal/",
      "topics": ["ai", "apps", "Transit", "travel", "bus"],
      "technologies": ["android", "java", "golang", "docker", "ios"],
      "irc_channel": "https://join.slack.com/t/onebusaway/shared_invite/zt-2jve26vs6-~qXjgxv_HkTliUKhAnuSDA",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://opentransitsoftwarefoundation.org/blog/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "WayStation - Next Generation Sign Mode",
          "short_description": "This project aims to build a self-operating transit information display that works reliably in real-world transit environments. The system will show...",
          "description": "This project aims to build a self-operating transit information display that works reliably in real-world transit environments. The system will show live departure times, service alerts for delays or disruptions, and support multiple languages to serve diverse riders. Designed for public displays, it will automatically adapt to different screen sizes while maintaining clear, easy-to-read information - all without requiring constant manual oversight. Key features include dynamic stop routing, real-time updates, and a clean interface that scales from standard monitors to large 4K screens.",
          "student_name": "Amr Abdelfattah",
          "code_url": null,
          "proposal_id": "uDUI5ktf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PmZ9fdSN"
        },
        {
          "title": "Trip Planner: Building OTPKit, a Swift Library for OpenTripPlanner on iOS",
          "short_description": "The goal of this project is to build OTPKit, a Swift library that brings OpenTripPlanner to iOS. It will work as a standalone package that can be...",
          "description": "The goal of this project is to build OTPKit, a Swift library that brings OpenTripPlanner to iOS. It will work as a standalone package that can be added to any iOS app. The first use will be in the OneBusAway app, giving users a modern trip planning experience with real-time updates, smart routing, and easy-to-follow directions.\n\nOTPKit will support key features like trip requests, walking directions, and smooth map interaction. Built with SwiftUI and a clean architecture, it will be easy to maintain and integrate with other iOS apps.\n\nBy the end of the project, OTPKit will be the first Swift-based, Apache 2.0-licensed OpenTripPlanner library—making trip planning better for OneBusAway and available to other iOS transit apps too.",
          "student_name": "Manu R",
          "code_url": null,
          "proposal_id": "FeO1LuPr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7hA4Gs1k"
        },
        {
          "title": "Enhancing Watchdog: Metrics Expansion for OBA Monitoring",
          "short_description": "This project aims to enhance the monitoring capabilities of OneBusAway (OBA), an open-source platform that provides real-time transit information to...",
          "description": "This project aims to enhance the monitoring capabilities of OneBusAway (OBA), an open-source platform that provides real-time transit information to riders across multiple cities. The focus is on improving Watchdog, a Go-based backend service that tracks the health and data integrity of OBA servers by reporting detailed metrics to Prometheus.\n\nIn the past, a Python script was used to monitor the system by checking real-time API data and identifying issues such as expired transit bundles or data mismatches. However, this legacy solution lacked flexibility and scalability. The current Watchdog framework, built in Go, addresses these shortcomings but still requires the addition of several key metrics.\n\nThe proposed solution builds on the existing Go codebase, expanding and refining the metrics to ensure accurate, real-time tracking of issues such as unmatched trips, stale data, and anomalies in transit information. The project also prioritizes maintainability by refactoring code, implementing robust error reporting through Sentry, and ensuring comprehensive test coverage to maintain reliability.\n\nKey deliverables include:\n\nImplementation of multiple high-priority metrics\n\nComplete test coverage and improved modularity of the codebase\n\nClear, user-friendly documentation\n\nA production-ready, extensible monitoring service for OBA\n\nThis work will provide transit agencies with better insights into data health and system performance, ultimately enhancing the experience for thousands of daily riders.",
          "student_name": "ِMohamed Abo-Omar",
          "code_url": null,
          "proposal_id": "Ps9vXt8j",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZzUiW13a"
        },
        {
          "title": "Integration Test System For OBA",
          "short_description": "Summary : The OBA project aims to develop an integration testing system to ensure the accuracy and stability of the OneBusAway API server. This...",
          "description": "Summary : The OBA project aims to develop an integration testing system to ensure the accuracy and stability of the OneBusAway API server. This system will use Docker to create a controlled test environment to simulate various test scenarios and a Golang-based tool to validate API responses against expected outputs using GTFS and GTFS-RT data. It will include time simulation, structured test cases, and CI/CD integration to detect regressions and prevent inconsistencies. By automating the validation process, this project will enhance API reliability, making it easier for developers to trust and build upon OBA transit data services.",
          "student_name": "Satyam Kumar Chauhan",
          "code_url": null,
          "proposal_id": "NqgOqRQM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gxPo5O7k"
        },
        {
          "title": "Survey Features (iOS)",
          "short_description": "OneBusAway iOS Survey Feature - Proposal Summary This project proposes implementing a comprehensive survey feature for the OneBusAway iOS app that...",
          "description": "OneBusAway iOS Survey Feature - Proposal Summary\n\nThis project proposes implementing a comprehensive survey feature for the OneBusAway iOS app that matches the functionality recently developed for Android. The feature will enable transit agencies to collect valuable rider feedback through in-app surveys that appear based on contextual factors such as location, stops visited, and routes taken.\n\nUsing Swift and the Eureka form library, I will create an intuitive survey system that displays both simple \"hero question\" cards and multi-question forms, along with external survey integration via WebView. The implementation will follow iOS design patterns while ensuring feature parity with Android.\n\nKey components include:\n- Contextual survey cards that appear at relevant moments\n- Multi-question survey forms using Eureka\n- External survey support with context data passing\n- Core Data integration for survey state management\n- Network services for fetching surveys and submitting responses\n- User preferences for survey participation\n\nMy previous contributions to OneBusAway iOS and experience with Swift development have prepared me for this project. The proposed implementation follows MVVM architecture and emphasizes accessibility, with full VoiceOver support and Dynamic Type integration.\n\nBy bringing this feature to iOS, we'll help transit agencies collect essential feedback to improve service quality, with particular focus on understanding women's unique transit experiences, mobility of care trips, and complex travel patterns.",
          "student_name": "Shreyas Sahoo",
          "code_url": null,
          "proposal_id": "VE44IjXy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/b4x8dfSt"
        }
      ]
    },
    {
      "name": "TARDIS RT Collaboration",
      "image_url": "https://summerofcode.withgoogle.com/media/org/tardis-rt-collaboration/0ocxr3jw3fwdloye-360.png",
      "image_background_color": "#ffffff",
      "description": "Exploring supernovae made easy",
      "url": "https://tardis-sn.github.io",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/tardis-rt-collaboration",
      "ideas_url": "https://tardis-sn.github.io/summer_of_code/ideas/",
      "guide_url": "https://tardis-sn.github.io/summer_of_code/gsoc_home/",
      "topics": ["visualization", "big data", "simulation", "astrophysics"],
      "technologies": ["python", "numba", "numpy", "jupyter", "pandas"],
      "irc_channel": "https://gitter.im/tardis-sn/gsoc",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/tardis_sn",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Line Identification Plotting Functionality",
          "short_description": "This project will result in functionality for both TARDIS and STARDIS to identify and display a user provided list of atomic and molecular lines to...",
          "description": "This project will result in functionality for both TARDIS and STARDIS to identify and display a user provided list of atomic and molecular lines to existing spectral visualizations.  This will be done by leveraging information stored in the simulation's energy packets to identify source species.  This is critical work as observed spectra often have blended line features due to the high ejecta speeds broadening neighboring lines into each other; However, in the simulated spectra, source packets are known and thus blended lines can be disentangled. This work will enable simple comparisons with published, labeled spectra; identification of unlabeled features in newly observed spectra; a physical understanding of new models; and development of publication-ready plots.",
          "student_name": "Haille Perkins",
          "code_url": null,
          "proposal_id": "0gsx1esE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Lrr5ZL0u"
        },
        {
          "title": "Regression Data Dashboard and HDF Writing Capabilities of TARDIS Modules",
          "short_description": "TARDIS implements a regression testing framework which is used to compare the current output of TARDIS to a saved data repository to validate code....",
          "description": "TARDIS implements a regression testing framework which is used to compare the current output of TARDIS to a saved data repository to validate code. This data repository is modified at times when there are code/infrastructure changes in TARDIS, this could be environment updates, scientific code changes or more. However, the impact of smaller commits goes unnoticed. There is a comparison notebook implemented that can compare two different commits and spectra in a comprehensive manner but that does not provide a way to compare multiple commits at once.\n\nThis project aims to build a system to compare the regression data produced by a range of TARDIS commits and will be able to find the commits which impact the regression data files. Also this project aims to enhance TARDIS HDF writing capabilities by adding a HDF writing system to most TARDIS objects and the simulation, so it is easy to reproduce TARDIS objects from stored HDF files.",
          "student_name": "Riddhi Gangbhoj",
          "code_url": null,
          "proposal_id": "ChvI46XG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nV27R9ep"
        }
      ]
    },
    {
      "name": "Society for Arts and Technology (SAT)",
      "image_url": "https://summerofcode.withgoogle.com/media/org/society-for-arts-and-technology-sat/pkgrduycyoh0wxmf-360.png",
      "image_background_color": "#ffffff",
      "description": "Technological tools for creativity and industry",
      "url": "https://sat.qc.ca",
      "category": "Media",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/society-for-arts-and-technology-sat",
      "ideas_url": "https://sat-mtl.gitlab.io/collaborations/google-summer-of-code/categories/ideas/",
      "guide_url": "https://sat-mtl.gitlab.io/collaborations/google-summer-of-code/posts/2025-news/2025-share/",
      "topics": [
        "computer vision",
        "graphics",
        "multimedia",
        "Telepresence",
        "digital arts"
      ],
      "technologies": ["python", "javascript", "c++", "qt", "esp32"],
      "irc_channel": "https://app.element.io/#/room/#sat-gsoc:matrix.org",
      "contact_email": "",
      "mailing_list": "https://gitlab.com/sat-mtl/collaborations/google-summer-of-code/-/issues",
      "twitter_url": "https://twitter.com/SATmontreal",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/SATmontreal",
      "num_projects": 4,
      "projects": [
        {
          "title": "Object Detection on Point Cloud Streams",
          "short_description": "This project comprises two parts: prototyping a real-time Python pipeline for object detection on point cloud data, and integrating it into LivePose....",
          "description": "This project comprises two parts: prototyping a real-time Python pipeline for object detection on point cloud data, and integrating it into LivePose.  \r\n\r\nThe goal is to build a functional pipeline that reads streaming point cloud data from various sources (e.g., Orbbec Femto Megas, Intel RealSense, stereo cameras), runs deep learning inference using models like PointNet++, applies filters for smoothing and tracking, and streams the results via OSC. During prototyping, the system will be evaluated across multiple models, input types, and hardware configurations to assess real-time performance and reliability. Once validated, the pipeline will be integrated into LivePose, leveraging its modular infrastructure for input handling, filtering, and output.  \r\n\r\nBy the end of the project, LivePose will support end-to-end processing of streaming 3D point cloud data in at least one working configuration, with clear documentation and performance benchmarks to guide future development and extension.",
          "student_name": "Eddie Liu",
          "code_url": null,
          "proposal_id": "kBjp18hw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/miLarupg"
        },
        {
          "title": "Exploring Advanced Rendering Pipelines for Fulldome Content with Ray-tracing in ossia score",
          "short_description": "This project aims to enhance fulldome content rendering in ossia score by integrating advanced ray-tracing render pipelines. Traditional fulldome...",
          "description": "This project aims to enhance fulldome content rendering in ossia score by integrating advanced ray-tracing render pipelines. \nTraditional fulldome rendering requires multiple render passes, which leads to high computational overhead. By leveraging ray-tracing techniques on modern graphics APIs (e.g. DirectX, Vulkan), this project will enable single-pass fulldome rendering, significantly improving efficiency and render quality. \n  \n\nThe project will explore and conduct comparative analysis on various rendering pipelines and graphics APIs, including HDR, meshlet-based, volumetric, and SDF-based techniques, with a focus on their suitability and performance for fulldome rendering within ossia score. \nFinal Deliverables: \n[1] Integration of the ray-tracing fulldome rendering pipeline into ossia score for better performance and quality. \n[2] Systematic comparison and analysis of different ray-tracing fulldome rendering pipelines. \n[3] Open-source release of the codebase and benchmarking results of Deliverable [2]. \n[4] Documentation of rendering pipeline design, challenges faced, and solutions implemented. \n  \n\nMentors: Jean-Michaël Celerier and Manuel Bolduc",
          "student_name": "Lejie LIU",
          "code_url": null,
          "proposal_id": "0Ygnd4lW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YLjs5vlA"
        },
        {
          "title": "Porting Puara-gestures to Avendish and creating ossia score objects",
          "short_description": "This project addresses the limited accessibility of the powerful Puara-gestures library for creating high-level gestural descriptors within modern...",
          "description": "This project addresses the limited accessibility of the powerful Puara-gestures library for creating high-level gestural descriptors within modern audiovisual workflows. The goal is to bridge this gap by porting Puara-gestures to the Avendish framework, enabling its integration with the visual programming environment ossia score.\n\n This will be achieved by wrapping each Puara-gestures class in Avendish to create standardized objects that can be compiled into native ossia score processes. \nThese objects will allow artists and designers to seamlessly incorporate sophisticated gestural analysis into interactive multimedia environments using ossia score's visual interface and timeline-based orchestration. Key deliverables include Avendish wrappers for various Puara-gestures descriptors (motion, orientation, etc.), corresponding native ossia score objects with user-friendly controls, composite objects for complex gesture recognition, comprehensive documentation and examples, and performance optimizations.\n Optionally, the project will explore the creation of VST/LV2 plugins for wider compatibility with Digital Audio Workstations. This integration will democratize access to advanced gestural control, benefiting artists, performers, instrument designers, and the academic research community.",
          "student_name": "yashtiwari9182",
          "code_url": null,
          "proposal_id": "TMfBCGBn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/skzm18oM"
        },
        {
          "title": "A Responsive And Lightweight CLI For Managing Media Libraries",
          "short_description": "Managing large libraries of media files efficiently is challenging, especially when dealing with diverse formats, extracting metadata, and performing...",
          "description": "Managing large libraries of media files efficiently is challenging, especially when dealing with diverse formats, extracting metadata, and performing fast searches. This project aims to develop a lightweight CLI-based Library\nContent Manager that automatically scans directories, extracts metadata using FFmpeg/TagLib, and organises media\nfiles in an SQLite database for efficient querying.\n\nTo ensure speed, this tool will monitor directories in real-time (using inotify/ReadDirectoryChangesW), and to encourage personalisation, custom user-defined tagging, and fast search/filtering via structured queries will be implemented. Users can interact through a Command Line Interface or an IPC-based API, enabling integration with\nexternal tools. A dedicated plug-in will be developed to allow a seamless and intuitive integration with ossia score.\n\nPerformance is crucial and thus multithreading, batch processing, and optimised indexing strategies will be implemented to ensure responsiveness even when handling large libraries.\n\nExisting solutions are either GUI-heavy or lack structured querying but this tool offers the best of both worlds.\nTherefore, this tool will provide a robust and extensible solution for organisation of media files, making it a great\nhelp for artists, developers and creative professionals.",
          "student_name": "zepredos",
          "code_url": null,
          "proposal_id": "VeyR3KSV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LDlr5P8f"
        }
      ]
    },
    {
      "name": "Liquid Galaxy project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/liquid-galaxy-project/idbd8hebl6j7ajxn-360.png",
      "image_background_color": "#ffffff",
      "description": "We code immersive and interactive apps with GEarth",
      "url": "https://www.liquidgalaxy.eu",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/liquid-galaxy-project",
      "ideas_url": "https://www.liquidgalaxy.eu/2024/11/unique-post-for-gsoc-2025-at-liquid.html",
      "guide_url": "https://www.liquidgalaxy.eu/2024/11/unique-post-for-gsoc-2025-at-liquid.html",
      "topics": [
        "visualization",
        "artificial intelligence",
        "networking",
        "maps",
        "ux"
      ],
      "technologies": ["linux", "android", "nodejs", "flutter", "Google Earth"],
      "irc_channel": "",
      "contact_email": "mailto:liquidgalaxylab@gmail.com",
      "mailing_list": "https://discord.gg/peGA5K8tJU",
      "twitter_url": "https://twitter.com/_liquidgalaxy",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 12,
      "projects": [
        {
          "title": "GeoVisionAI: AI-Powered Geospatial Storytelling on Liquid Galaxy",
          "short_description": "GeoVisionAI aims to enhance the Liquid Galaxy platform by integrating AI to analyze and visualize geographic data in real-time. This project will...",
          "description": "GeoVisionAI aims to enhance the Liquid Galaxy platform by integrating AI to analyze and visualize geographic data in real-time. This project will enable users to interact with the system through two main methods: text-based queries, where users can ask questions like “Show me deforestation trends in the Amazon” and receive relevant insights, and voice commands, allowing users to simply say, “Find recent earthquake in Japan,” with the system generating a response. The goal is to make geospatial data more accessible and understandable for all users, whether they are researchers, students, or policymakers. AI will provide contextual narratives, not only displaying data but also explaining its significance—like summarizing key temperature shifts when asked about climate change. Using the Web Speech API, users will be able to ask about locations and visualize geographic data on the Liquid Galaxy screens. To further enhance the experience, AI-generated audio soundscapes will simulate real-world scenarios, such as background wind and fire sounds for wildfire data. This project will provide a practical, interactive, and immersive way to gain insights from geospatial data and will be submitted to Google Labs for future development and evaluation.",
          "student_name": "_Anishka_",
          "code_url": null,
          "proposal_id": "dtR5XnTo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HQ7rA7b9"
        },
        {
          "title": "RoboStream: Real-Time Telemetry & Vision Platform.",
          "short_description": "RoboStream is a comprehensive solution designed to address the challenge of monitoring and visualizing complex robotic telemetry in real time. As...",
          "description": "RoboStream is a comprehensive solution designed to address the challenge of monitoring and visualizing complex robotic telemetry in real time. As robots become increasingly integral to various industries, the need for an intuitive, immersive interface to track sensor data and live video streams grows ever more critical. Our project integrates advanced simulation tools and real robots with a responsive, cross-platform mobile application built in Flutter. This combination lets us capture, process, and transmit detailed telemetry directly into the immersive Liquid Galaxy multi-screen environment.",
          "student_name": "alexbernaldo",
          "code_url": null,
          "proposal_id": "oMrFQX4P",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/R7s4YYln"
        },
        {
          "title": "Robotics Simulation For Liquid Galaxy",
          "short_description": "The Robotics Simulation for Liquid Galaxy 2025 Project is an innovative addition to the ever growing Liquid Galaxy Ecosystem. This project aims to...",
          "description": "The Robotics Simulation for Liquid Galaxy 2025 Project is an innovative addition to the ever growing Liquid Galaxy Ecosystem. This project aims to combine  multi-display synchronous visualization with advanced robotics simulation which is aimed to be controllable through a smartphone. This project bridges the powerful networking and visualization capabilities of Liquid Galaxy with cutting-edge robotic technologies such as ROS (Robot Operating System) and Gazebo, a popular simulation tool for testing and developing robotic systems in virtual environments.",
          "student_name": "Debanjan Naskar",
          "code_url": null,
          "proposal_id": "12yxPOuh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GsIU6Hvc"
        },
        {
          "title": "Kennedy Approach porting to Liquid Galaxy",
          "short_description": "This project modernizes the classic Kennedy Approach air traffic control game by rebuilding it as a custom, multi-screen interactive experience on...",
          "description": "This project modernizes the classic Kennedy Approach air traffic control game by rebuilding it as a custom, multi-screen interactive experience on the Liquid Galaxy platform. Rather than emulating the original Commodore 64 version, the game is being ported from scratch, allowing for enhanced features and seamless integration across multiple synchronized displays.\n\nThe system is designed around a master-slave architecture, where the master node handles game logic and display rendering. The visual output is split and distributed to multiple slave nodes on the network, creating a panoramic and immersive gameplay view across multiple screens using the Liquid Galaxy setup.\n\nPlayers interact with the game using a mobile controller app built in Flutter, which communicates with the master system over a local network. A Node.js backend on the master node manages incoming control commands via WebSockets/Socket.IO, ensuring smooth, real-time interactivity.\n\nOptional UI dashboards built in React or Next.js can be used for monitoring system status, visualizing live data, or enabling multiplayer interaction.",
          "student_name": "DEV T GADANI",
          "code_url": null,
          "proposal_id": "UMm28lLk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aTEtH65S"
        },
        {
          "title": "Google Research - Open Buildings Data Visualization",
          "short_description": "The Open Buildings Visualization project aims to create a geospatial visualization platform that synergistically integrates Google Earth Engine (GEE)...",
          "description": "The Open Buildings Visualization project aims to create a geospatial visualization platform that synergistically integrates Google Earth Engine (GEE) and Liquid Galaxy (LG) through a Flutter-based mobile application. The project will provide an interactive, high-performance interface for navigating and analyzing building footprint data at scale. Users will be able to select specific regions through a dynamic, grid-based map, which will trigger real-time data retrieval from GEE. The geospatial data will be processed and transmitted to LG through SSH, where it will be visualized through KML overlays, offering an immersive, multi-screen 3D experience.",
          "student_name": "JaivardhanShukla",
          "code_url": null,
          "proposal_id": "5JRh3yOk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rCU0P9NY"
        },
        {
          "title": "Voice-Driven Robot Goal Assignment System with Liquid Galaxy",
          "short_description": "This project proposes developing a robot control system through the Liquid Galaxy system. Integrating immersive visualization with speech recognition...",
          "description": "This project proposes developing a robot control system through the Liquid Galaxy system. Integrating immersive visualization with speech recognition and robotics allows users to control and monitor the robot’s behavior in real-time.\n\nThe system enables human-robot interaction through English voice commands, which are transcribed, interpreted, and converted into instructions that a robot can execute. \n\nThe architecture involves different AI techniques, employing Speech-to-Text, Large Language Models, and Decision-Making algorithms to define the set of actions that the robot will execute.",
          "student_name": "JavierMancho",
          "code_url": null,
          "proposal_id": "cAtfhuBO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gdisJu5n"
        },
        {
          "title": "Liquid Galaxy Master Web and Flutter Application",
          "short_description": "The GSoC program provides students from around the world with the opportunity to work on their own projects with the help of experienced mentors....",
          "description": "The GSoC program provides students from around the world with the opportunity to work on their own projects with the help of experienced mentors. However, new students who may not be familiar with how the Liquid Galaxy works may have difficulties understanding how to structure their code, how their project should look like for the average user, how many screens their application should have, etc.\nThe aim of this project is to bridge this gap by creating a comprehensive master document whose intention is to be used as a structured guide for future GSoC students. This will provide them with a solid idea of where to start, how the code structure should look like, coding mistakes to avoid and how to do it, useful tips, etc. This document will be elaborated by reviewing the code of multiple past GSoC projects and finding the common aspects between them to create a structure that future students can follow. The goal is that this project will act as both a coding guide and a proposal reference, making sure that future students can achieve their own expectations.\nThis project will not require deep technical expertise in a particular programming language, but it will be necessary a basic understanding of how coding languages and GitHub work. The main challenge lies in being able to synthesize information from different sources (and different codes) to be able to structure it into a coherent, comprehensive and useful guide.",
          "student_name": "Lucia Fernandez",
          "code_url": null,
          "proposal_id": "D1i4p8Ip",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tyU5Ps7c"
        },
        {
          "title": "Marc Bañeres Farrán-DATA Spaces FrontEnd For Liquid Galaxy-GSoC2025",
          "short_description": "DATA Spaces FrontEnd For Liquid Galaxy is a project designed to enhance data visualization using Liquid Galaxy, an immersive multi-screen system....",
          "description": "DATA Spaces FrontEnd For Liquid Galaxy is a project designed to enhance data visualization using Liquid Galaxy, an immersive multi-screen system. This project will provide an interactive and scalable solution for displaying real-time or synthetic data retrieved from Fiware. The main goal is to create a Flutter App that allows users to select, filter, and visualize urban and environmental data on Liquid Galaxy.",
          "student_name": "Marc Bañeres Farrán",
          "code_url": null,
          "proposal_id": "c9xfqB7G",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LJbiQZL7"
        },
        {
          "title": "DATA Spaces for Liquid Galaxy back-end",
          "short_description": "This project aims to develop an application that I will build to visualize smart city data using Liquid Galaxy, a multi-screen system at Parc...",
          "description": "This project aims to develop an application that I will build to visualize smart city data using Liquid Galaxy, a multi-screen system at Parc Agrobiotech in Lleida. Using Dart/Flutter, I will create two main components: a backend for processing data from Fiware APIs and a frontend for user interaction. The backend will manage real-time and historical smart city data, converting it into KML format for Liquid Galaxy, while the frontend will provide an intuitive UI with interactive filters and real-time updates. The system will be scalable, allowing for the integration of new data sources. My goal is to enhance urban data analysis and decision-making, contributing to the Liquid Galaxy ecosystem and promoting smarter cities.",
          "student_name": "Marc E",
          "code_url": null,
          "proposal_id": "rH6hnpuK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rgvL57DQ"
        },
        {
          "title": "Martian Climate Dashboard",
          "short_description": "The project aims to provide real-time and historical climate data visualization from Mars on Liquid Galaxy through an engaging and interactive...",
          "description": "The project aims to provide real-time and historical climate data visualization from Mars \n on Liquid Galaxy through an engaging and interactive experience. A Flutter-based mobile app will retrieve and process atmospheric data from the Mars Climate Database (MCD), presenting it with compelling visualizations on Liquid Galaxy.",
          "student_name": "Mohit_Sharma",
          "code_url": null,
          "proposal_id": "gfbLdGxK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/t0R7jKR6"
        },
        {
          "title": "Catastrophe Visualizer",
          "short_description": "The Catastrophe Visualizer is a real-time disaster monitoring application designed to work seamlessly with the Liquid Galaxy system. It fetches live...",
          "description": "The Catastrophe Visualizer is a real-time disaster monitoring application designed to work seamlessly with the Liquid Galaxy system. It fetches live data from APIs tracking global events such as earthquakes, hurricanes, and wildfires. This data is displayed on interactive Google Maps with severity-based markers and informative pop-ups, giving users an immediate sense of impact and location",
          "student_name": "Saniya_Singh",
          "code_url": null,
          "proposal_id": "yI7K4L5k",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/s3oP5apd"
        },
        {
          "title": "Eco Explorer for Liquid Galaxy",
          "short_description": "This project provides a master interface that showcases a dashboard of expansive forests around the globe and allows users to explore them. Its...",
          "description": "This project provides a master interface that showcases a dashboard of expansive forests around the globe and allows users to explore them. Its primary aim is to create an interactive and immersive geospatial visualization system that allows users to explore in-depth major forested land masses affected by recent environmental changes.\nThe application exploits the Liquid Galaxy rig to achieve its visualization while gliding through a smooth user experience.",
          "student_name": "Shuvam Swapnil Dash",
          "code_url": null,
          "proposal_id": "6yKRizrU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5LWWagWD"
        }
      ]
    },
    {
      "name": "Data for the Common Good",
      "image_url": "https://summerofcode.withgoogle.com/media/org/data-for-the-common-good/tk4snywy4ejlztpt-360.png",
      "image_background_color": "#ffffff",
      "description": "Connect. Share. Discover.",
      "url": "https://commons.cri.uchicago.edu",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/data-for-the-common-good",
      "ideas_url": "https://docs.pedscommons.org/GSoC/ideas",
      "guide_url": "https://docs.pedscommons.org/GSoC/proposal",
      "topics": ["web", "health", "data", "infrastructure", "software"],
      "technologies": [
        "python",
        "javascript",
        "kubernetes",
        "reactjs",
        "terraform"
      ],
      "irc_channel": "",
      "contact_email": "mailto:lgraglia@uchicago.edu",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/PedsDataCommons",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Enhancing the SMART on FHIR Frontend for Patient-Controlled Data Sharing",
          "short_description": "I will improve a SMART on FHIR patient-facing app to make it more accessible, user-friendly, and efficient. This includes simplifying menus and...",
          "description": "I will improve a SMART on FHIR patient-facing app to make it more accessible, user-friendly, and efficient. This includes simplifying menus and buttons, ensuring strong screen-reader support, and optimizing loading times. My plan involves: Research & Analysis Review the current user interface and identify usability issues. Conduct user interviews to pinpoint major pain points (e.g., confusing navigation, slow pages). Redesign & Development Rebuild the interface using React.js with clear, accessible design. Enhance features like keyboard navigation, text sizing, and screen-reader compatibility. User Testing & Feedback Invite patients to test the updated interface. Collect feedback and fix any bugs before final deployment. Documentation & Handoff Provide a developer guide and post the code on GitHub. Ensure future teams can easily maintain and update the app. Key Deliverables A revamped, accessible React.js interface. Improved user workflows and faster load times. A documented codebase on GitHub. A clear style guide and developer documentation.",
          "student_name": "aryantony",
          "code_url": null,
          "proposal_id": "rXa7dzq8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ERinz6Vo"
        },
        {
          "title": "Developing a FHIR Resource Tabular Viewer for Efficient Data Exploration.",
          "short_description": "Healthcare data is critical for decision-making, but the FHIR (Fast Healthcare Interoperability Resources) format, while powerful, can be challenging...",
          "description": "Healthcare data is critical for decision-making, but the FHIR (Fast Healthcare Interoperability Resources) format, while powerful, can be challenging to navigate for many users. Our project addresses this accessibility gap by creating an intuitive tabular viewer that transforms complex nested FHIR resources into easy-to-understand tables.\nWe're developing a Python-based solution that will automatically extract and organize FHIR data into user-friendly tables, making it immediately more accessible to researchers, clinicians, and community organizations. By simplifying how people interact with health data, we remove technical barriers that often prevent valuable insights from reaching those who need them most.\nOur deliverables include:\n\nA Python library that converts FHIR resources to tabular format\nAn interactive web interface for exploring and filtering the data\nDocumentation and examples to support adoption by various user groups\nIntegration with existing FHIR servers for seamless data access\n\nThis tool will democratize access to health information by making complex data structures approachable for everyone from data scientists to community health workers. When healthcare data becomes truly accessible, it empowers better decisions and ultimately improves health outcomes in our communities.",
          "student_name": "Manjula",
          "code_url": null,
          "proposal_id": "fWB4wFdy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/a82WR3tt"
        },
        {
          "title": "Making PCDC More Accessible Through Conversation",
          "short_description": "This project aims to develop an intelligent chatbot powered by large language models (LLMs) that translates natural language descriptions of patient...",
          "description": "This project aims to develop an intelligent chatbot powered by large language models (LLMs) that translates natural language descriptions of patient cohorts into precise GraphQL queries for the Pediatric Cancer Data Commons (PCDC). The system will enable researchers, clinicians, and data analysts to access complex pediatric cancer datasets without requiring deep technical knowledge of GraphQL or the PCDC data schema. Users will be able to describe cohorts in plain language (e.g., \"Show me neuroblastoma patients under 5 years old with MYCN amplification who received immunotherapy\") and receive properly formatted GraphQL queries that can be directly executed against the PCDC data portal. The chatbot will also provide explanations of the generated queries, view the data, suggest refinements, and help users understand the available data fields and relationships. By bridging the gap between natural language and technical query languages, this tool will improve access to critical pediatric cancer data, potentially accelerating research discoveries and improving patient outcomes.",
          "student_name": "Rudraraju Siddarth",
          "code_url": null,
          "proposal_id": "2x7LhWUS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JXZoPD08"
        },
        {
          "title": "Developing Custom Jupyter Notebooks for AVRO File Processing and QA/QC Analysis",
          "short_description": "This project aims to create custom Jupyter notebooks that help users efficiently unpack AVRO files, perform quality assurance (QA) and quality...",
          "description": "This project aims to create custom Jupyter notebooks that help users efficiently unpack AVRO files, perform quality assurance (QA) and quality control (QC) checks, and run basic data analyses. The goal is to provide a user-friendly, interactive environment where users can explore, validate, and analyze AVRO-formatted data without requiring deep expertise in data engineering.\nThe project will include an interactive dashboard that allows users to upload files, download them from various platforms, or stream large files from cloud providers such as AWS, GCP, or via APIs. Users will be able to perform various QA/QC checks and gain insights through different graphs and plots.",
          "student_name": "Tushar Jamdade",
          "code_url": null,
          "proposal_id": "llVwVqaK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GR11k6du"
        }
      ]
    },
    {
      "name": "Accord Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/accord-project/1q3vpch01xpsriu9-360.png",
      "image_background_color": "#ffffff",
      "description": "Open source software for smart legal contracts",
      "url": "https://accordproject.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/accord-project",
      "ideas_url": "https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List",
      "guide_url": "https://github.com/accordproject/techdocs/blob/master/CONTRIBUTING.md",
      "topics": [
        "natural language processing",
        "data modeling",
        "legal technology",
        "contract management",
        "document assembly"
      ],
      "technologies": [
        "python",
        "javascript",
        "json",
        "react",
        "artificial intelligence"
      ],
      "irc_channel": "https://discord.gg/Zm99SKhhtA",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://accordproject.org/news",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Linter for Concerto",
          "short_description": "Configurable linter for Concerto (used in Accord Project for contract data models) validates syntax and AST against a set of rules, written with...",
          "description": "Configurable linter for Concerto (used in Accord Project for contract data models) validates syntax and AST against a set of rules, written with using of Spectral framework. Rules ensure best practice for the model by enforce naming conventions (e.g., camel-case scalars), restrict features (e.g., maps), and mandatory fields (e.g. , @Term), Each rule has tests to prove it works and documentation guide to help users. Results show up in Concerto command line or inside Accord’s VS Code plugin. It cuts down manual checks and keeps your code following team/tech rules.\nThe project aims to advance the Concerto modeling language and its tooling by achieving the following goals: (1) ensure the language is feature-complete to compete with top modeling languages globally; (2) ensure seamless integration of the linter with existing Concerto tools without disrupting current workflows; (3) implement a fast and lightweight linter using efficient algorithms and data structures; and (4) design practical rules based on real user challenges, with the ability to toggle rules on/off and verify functionality through comprehensive testing.",
          "student_name": "Ahmed Gaper",
          "code_url": null,
          "proposal_id": "rMXVO6rj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nXoLhssM"
        },
        {
          "title": "Incorporating AI into Template Playground",
          "short_description": "The project aims to incorporate AI features into Template Playground to facilitate the creation of Templates and Concerto models. The ability to...",
          "description": "The project aims to incorporate AI features into Template Playground to facilitate the creation of Templates and Concerto models. The ability to generate Accord Project Templates from user submitted text will be implemented. Users will be able to chat with their chosen LLM and get an understanding of how the whole ecosystem of Accord Project works in tandem to produce agreements. The editor in Template Playground will be enhanced with the ability of providing AI powered inline suggestions.",
          "student_name": "Akshat-Batra",
          "code_url": null,
          "proposal_id": "htGHK2pA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HN4nACxp"
        },
        {
          "title": "Specification Conformance Tests",
          "short_description": "Concerto, the core modeling language of the ACCORD PROJECT, is critical for smart legal contracts and domain modeling. This project aims to migrate...",
          "description": "Concerto, the core modeling language of the ACCORD PROJECT, is critical for smart legal contracts and domain modeling. This project aims to migrate from the current testing framework mocha to vitest which will enhance the performance, execution time and debugging capabilities. This process can be automated by the combination of vitest-codemod, regex transformations, ai assistance and some manual scripts required for handling complex test cases which cannot be automated.\nHere are the deliverables:\n1. Migration from Mocha, Chai, Sinon to Vitest for all Concerto implementation.\n2. A new Concerto conformance package which will be a standalone validation test package for all Concerto implementations.",
          "student_name": "Anshukumar123975",
          "code_url": null,
          "proposal_id": "Hz1eBvmZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HXlbSlM3"
        },
        {
          "title": "Decorator Command Set JSON <-> YAML Converter",
          "short_description": "The goal of this project is to enhance the usability of Decorator Command Set (DCS) data by developing a utility/method to convert verbose, complex...",
          "description": "The goal of this project is to enhance the usability of Decorator Command Set (DCS) data by developing a utility/method to convert verbose, complex JSON formats into a more human readable YAML representation and back again. Currently, it is highly verbose to read, write, and edit DCS JSON files.  The plan is to implement a converter that turns DCS JSON objects into a simple YAML format and back again. The new YAML will be less verbose and more readable, helping people work with DCS better. By the end, a fully integrated converter will be delivered, complete with tests and proper documentation.",
          "student_name": "Asmit",
          "code_url": null,
          "proposal_id": "HGOR5VDd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QXIwAMbZ"
        },
        {
          "title": "Migration of Template Playground to use Tailwind CSS & Playground Redesign",
          "short_description": "Template Playground is a web-based tool that allows users to create, edit, and test smart legal contract templates. Currently, the application relies...",
          "description": "Template Playground is a web-based tool that allows users to create, edit, and test smart legal contract templates. Currently, the application relies on Ant Design for its UI components, which increases bundle size, and limits customization. This project aims to migrate the entire UI from Ant Design to Tailwind CSS, making the platform more lightweight, efficient, and maintainable.\nAlong with the migration, I propose a new layout design. This new design will be introduced to enhance usability, responsiveness, and overall user experience. The goal is to create a modern, intuitive, and visually appealing interface that improves workflow efficiency for users interacting with contract templates.",
          "student_name": "Mahesh Patil",
          "code_url": null,
          "proposal_id": "OVjOmjdl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jxFIqloY"
        }
      ]
    },
    {
      "name": "Joomla!",
      "image_url": "https://summerofcode.withgoogle.com/media/org/joomla/dwntn9vfd52jkr9z.png",
      "image_background_color": "#ffffff",
      "description": "The flexible platform empowering website creators.",
      "url": "https://www.joomla.org/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/joomla",
      "ideas_url": "https://docs.joomla.org/GSoC_2025_Project_Ideas",
      "guide_url": "https://docs.joomla.org/GSoC_2025",
      "topics": [
        "web",
        "programming languages",
        "web development",
        "web applications",
        "cms"
      ],
      "technologies": ["mysql", "javascript", "html", "php", "css"],
      "irc_channel": "https://joomlacommunity.cloud.mattermost.com/main/channels/gsoc-2025",
      "contact_email": "mailto:gsoc@joomla.org",
      "mailing_list": "https://forms.gle/BN9b3teutzxPetP29",
      "twitter_url": "https://twitter.com/joomla",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/joomla/",
      "num_projects": 4,
      "projects": [
        {
          "title": "Joomla! AI framework",
          "short_description": "The project’s objective is to smoothly incorporate an AI module library into Joomla CMS so that site managers, developers, and content producers can...",
          "description": "The project’s objective is to smoothly incorporate an AI module library into\nJoomla CMS so that site managers, developers, and content producers can take\nadvantage of AI-powered tools for improved user engagement, content management, and creation. A few of the varied use cases that will be made possible by the integration’s adaptable framework, which supports a number of AI models\nand providers are:\n• Text Generation.\n• Image Creation.\n• Content Analysis.\n• Intelligent Search.",
          "student_name": "CharviMehra",
          "code_url": null,
          "proposal_id": "qMbxlxcX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5xSLuReL"
        },
        {
          "title": "Joomla CMS Workflow Enhancements",
          "short_description": "The project aims to improve Joomla's workflow system by enhancing its UI and functionality. The current workflow implementation is not intuitive,...",
          "description": "The project aims to improve Joomla's workflow system by enhancing its UI and functionality. The current workflow implementation is not intuitive, making it challenging for users to create, modify, and manage workflows effectively. The proposed solution includes a graphical workflow builder, predefined workflow templates, enhanced documentation, and thorough testing. The project will introduce drag-and-drop functionality, interactive flowcharts, and default workflow templates to streamline the process.",
          "student_name": "Dileepadari",
          "code_url": null,
          "proposal_id": "ZiZInVpQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YX3u3lHq"
        },
        {
          "title": "Modernizing and Enhancing the Joomla! Weblinks Extension",
          "short_description": "The project is about making the Joomla! Weblinks tool work better with the newest Joomla! (version 5). First, I want to clean up the code so it...",
          "description": "The project is about making the Joomla! Weblinks tool work better with the newest Joomla! (version 5).\n\nFirst, I want to clean up the code so it follows the latest rules and is easier for other programmers to understand and work on. This means organizing the codebase using the standard way Joomla! 5 builds things.\n\nSecond, I want to make sure Weblinks is really reliable. To do this, I'll be writing a lot of automated tests using Cypress. These tests will check if everything is working correctly, so we can catch and fix problems easily. I'm aiming for really good test coverage – checking almost everything important.\n\nThird, I'll be looking at the list of problems people have reported with Weblinks and trying to fix them. This will make the tool much better for everyone who uses it.\n\nFinally, I'll be updating the instructions and explanations (the documentation) for Weblinks. This will help people understand how to use it and help other programmers contribute to it in the future.\n\nI've planned out how I'll do all this over the summer, step by step. I'll start by working on the main parts of the tool, then add the tests, fix the problems, and update the instructions. If I have time at the end, I might even try to add a new feature to help manage how weblinks are used.",
          "student_name": "Mahmoud Magdy",
          "code_url": null,
          "proposal_id": "187L0OmX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xZ08EQgY"
        },
        {
          "title": "Content Migration Between CMSs Using CCM & MDE",
          "short_description": "Migrating content between different CMSs like Joomla, WordPress, and Drupal is challenging due to their distinct data structures. Traditional...",
          "description": "Migrating content between different CMSs like Joomla, WordPress, and Drupal is challenging due to their distinct data structures. Traditional migration methods require custom tools for each CMS pair, leading to an O(n²) scalability problem. This project introduces a Common Content Model (CCM) as an intermediate format to simplify migrations to O(n) complexity. Using Model-Driven Engineering (MDE), we will dynamically adapt to various CMS schemas and automate migration script generation.\n\nThe solution will be a Joomla component acting as a universal mediator to extract and transform content between CMSs. It can be installed on any Joomla instance, either directly or as a temporary migration app to handle API-based content migration between any CMSs.\n\nThis project reduces development overhead, enables reusable migration structure, and positions Joomla as a central hub for content exchange across platforms.\n\nDeliverables:\n* CCM Joomla Component: A standalone migration component built for Joomla.\n* WordPress-to-Joomla Migration: Real implementation example using the CCM.\n* Testing Suite: Unit, integration, and E2E tests to ensure migration reliability.\n* Documentation: Clear guides for extending to other CMSs.",
          "student_name": "Reem Atalah",
          "code_url": null,
          "proposal_id": "xs69HGEp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/n5xuzOro"
        }
      ]
    },
    {
      "name": "Stichting SU2",
      "image_url": "https://summerofcode.withgoogle.com/media/org/stichting-su2/vexbqtmew7yd92hp-360.png",
      "image_background_color": "#ffffff",
      "description": "Computational Fluid Dynamics and Optimization",
      "url": "https://su2foundation.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/stichting-su2",
      "ideas_url": "https://www.cfd-online.com/Forums/su2-news-announcements/259420-gsoc-2025-projects.html",
      "guide_url": "https://www.cfd-online.com/Forums/su2-news-announcements/254365-gsoc-applications-how-apply.html",
      "topics": [
        "aerodynamics",
        "Computational Fluid Dynamics",
        "Multi-Disciplinary Optimization",
        "Adjoint Design Optimization",
        "Fluid Dynamics"
      ],
      "technologies": ["python", "c++"],
      "irc_channel": "https://su2devteam.slack.com",
      "contact_email": "",
      "mailing_list": "https://www.cfd-online.com/Forums/su2/",
      "twitter_url": "",
      "blog_url": "https://www.cfd-online.com/Forums/su2/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Graphical User Interface-Coupling to Python Wrapper and JSON Validation",
          "short_description": "This project improves the SU2 GUI by making it more user-friendly and efficient. It integrates the Python wrapper for smoother simulations, adds...",
          "description": "This project improves the SU2 GUI by making it more user-friendly and efficient. It integrates the Python wrapper for smoother simulations, adds real-time visualization, and simplifies solver adjustments. JSON validation helps catch errors early and keeps configurations organized. The installation process is automated to make setup hassle-free, while improvements boost performance and compatibility. Finally, detailed documentation and tutorials ensure users can easily navigate and make the most of the new features.",
          "student_name": "_Urvi_07",
          "code_url": null,
          "proposal_id": "wBtpi06P",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/FDJkLtqS"
        },
        {
          "title": "Using Data-Driven, Physics-Informed ML to Model Fluid Properties in CFD",
          "short_description": "This project aims to enhance SU2's computational fluid dynamics (CFD) capabilities by optimizing the Neural Network implementation (MLPCpp) within...",
          "description": "This project aims to enhance SU2's computational fluid dynamics (CFD) capabilities by optimizing the Neural Network implementation (MLPCpp) within its Non-Ideal Compressible Fluid Dynamics module. I will address key performance bottlenecks in the current system, including inefficient variable mapping, suboptimal network selection, sequential evaluation, and limited inverse regression approaches. My solution involves implementing hash maps for faster lookups, refactoring network selection, improving evaluation with SIMD instructions, batched inference, and improving inverse regression with literature-backed starting points. The project will be delivered through two main pull requests: the first focused on an improved data-driven tutorial with step-by-step guides and troubleshooting resources, and the second containing the optimized source code implementation and comprehensive benchmarking results, making data-driven approaches more accessible and efficient for all users.",
          "student_name": "Divyaprakash",
          "code_url": null,
          "proposal_id": "bpiywDDc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iFt1m8Wx"
        },
        {
          "title": "MAKE IT EASY TO ADD AND UPDATE UNIT TESTS",
          "short_description": "This project aims to automate and expand SU2’s testing and validation framework to ensure both numerical correctness and physical fidelity. By...",
          "description": "This project aims to automate and expand SU2’s testing and validation framework to ensure both numerical correctness and physical fidelity. By sourcing benchmark test cases from public databases (e.g., NASA Turbulence Modeling Resource), we will develop scripts to automatically generate configurations, run simulations, and compare SU2 results against experimental data. Key outputs like lift, drag, and pressure coefficients will be visualized and stored for regression tracking. These validation tests will be integrated into SU2’s CI pipeline, enabling automatic execution, reporting, and performance benchmarking. Additional efforts include modularizing unit tests, improving test coverage, and providing clear documentation for future contributors. This will greatly improve SU2’s reliability, usability, and trust within the CFD community.",
          "student_name": "Harsh@2004",
          "code_url": null,
          "proposal_id": "vpexce42",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IA4T8Jy5"
        },
        {
          "title": "Project 5: Continuation of GPU acceleration in SU2",
          "short_description": "This project aims to enhance SU2’s computational performance by creating a GPU-native sparse linear solver, building on the GSOC 2024 work that...",
          "description": "This project aims to enhance SU2’s computational performance by creating a GPU-native\nsparse linear solver, building on the GSOC 2024 work that implemented CUDA-based\nsparse matrix-vector multiplications. The focus will be on minimizing host-device com-\nmunication bottlenecks by keeping all linear algebra operations on the GPU throughout\nthe solution process, resulting in significant performance improvements for CFD simulation.",
          "student_name": "Joseph Garni",
          "code_url": null,
          "proposal_id": "7TpGM9ex",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/050PI3n9"
        }
      ]
    },
    {
      "name": "Processing Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/processing-foundation/xr2sncljbvtlop1n-360.png",
      "image_background_color": "#ffffff",
      "description": "To empower all people to learn to program",
      "url": "http://processingfoundation.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/processing-foundation",
      "ideas_url": "https://github.com/processing/Processing-Foundation-GSoC/wiki/Project-Ideas-List-(GSoC-2025)",
      "guide_url": "https://github.com/processing/Processing-Foundation-GSoC",
      "topics": ["education", "web", "graphics", "creative coding", "design"],
      "technologies": [
        "javascript",
        "java",
        "typescript",
        "webgl",
        "GitHub Actions"
      ],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "http://discourse.processing.org",
      "twitter_url": "https://twitter.com/ProcessingOrg",
      "blog_url": "https://medium.com/@ProcessingOrg",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Friendly p5.js Reference Translation Tasks",
          "short_description": "This project will build friendly automation tooling to support community translation of the p5.js reference documentation (including p5.js core and...",
          "description": "This project will build friendly automation tooling to support community translation of the p5.js reference documentation (including p5.js core and p5.sound). The p5.js reference (API documentation) is authored in English via JSDoc comments in the source code, and the website currently offers documentation in five languages (English plus Spanish, Simplified Chinese, Korean, and Hindi)​\n. As p5.js evolves, keeping these translations up-to-date is challenging. The goal is to create GitHub Actions and workflows that do not automate translation itself (which requires human nuance​) but instead assist volunteer translators. These tools will automatically track changes in the English “source” docs, flag or open tasks for updates in other languages, suggest new translation needs (for newly added APIs), and streamline communication with translation contributors.",
          "student_name": "Divyansh013",
          "code_url": null,
          "proposal_id": "ds4AQTVX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/45ZFrkH4"
        },
        {
          "title": "Context-Aware Autocomplete and Refactoring Enhancements for the p5.js Web Editor",
          "short_description": "Currently, the autocomplete feature in the p5.js Web Editor is facilitated by CodeMirror and a custom-built static hinter (as given in the structured...",
          "description": "Currently, the autocomplete feature in the p5.js Web Editor is facilitated by CodeMirror and a custom-built static hinter (as given in the structured JSON file, p5-hinter.js). The hinter suggests all the available functions, and while it is helpful, the current implementation lacks context-awareness, and that can be confusing, especially for beginners.\n\nIn this project, I will improve the autocomplete by making it context-aware which means it will only show suggestions that make sense based on where the cursor is in the code. I will also add autocomplete for user-defined functions, variables, and classes, and support features like jump-to-definition and renaming.\n\nThis will make the editor more beginner-friendly, intuitive, and efficient to use.",
          "student_name": "Kamakshi",
          "code_url": null,
          "proposal_id": "PTjGKJbt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5AOSrOSt"
        },
        {
          "title": "Friendly Sketch Embedder for p5.js",
          "short_description": "Embedding p5.js sketches on different platforms can be tricky because some sites block scripts, remove iframes, or require a specific format. This...",
          "description": "Embedding p5.js sketches on different platforms can be tricky because some sites block scripts, remove iframes, or require a specific format. This project will create an easy-to-use embed generator that lets users customize their embeds without writing any code. It will support both Global and Instance Mode, making it flexible for different coding styles. Users can adjust the size, background color, playback options, and whether the code is editable or locked, all through a simple interface.\n\nTo make things even easier, the tool will include smart platform presets, so users can generate the right embed code for platforms like WordPress, Medium, Notion, and static site builders. A live preview will show exactly how the embed will look before copying the code. This project will remove technical barriers, making it simple for teachers, artists, and developers to share p5.js sketches anywhere.",
          "student_name": "Nwakaego Glory",
          "code_url": null,
          "proposal_id": "EWCZkQwr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bOT40ITT"
        }
      ]
    },
    {
      "name": "Open Science Labs",
      "image_url": "https://summerofcode.withgoogle.com/media/org/open-science-labs/rjv8l7mrkiwlv9ab-360.png",
      "image_background_color": "#ffffff",
      "description": "The community open to science and technology.",
      "url": "https://opensciencelabs.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/open-science-labs",
      "ideas_url": "https://opensciencelabs.org/opportunities/gsoc/project-ideas/",
      "guide_url": "https://opensciencelabs.org/opportunities/gsoc/guides/contributor/",
      "topics": ["devops", "devtools", "open-science"],
      "technologies": ["python", "javascript", "c++", "docker", "AST"],
      "irc_channel": "https://opensciencelabs.org/discord",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/opensciencelabs",
      "blog_url": "https://opensciencelabs.org/blog/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Language Server Protocol for Makim’s YAML Configuration",
          "short_description": "This project will enhance Makim by implementing Language Server Protocol (LSP) support for its YAML configuration files. This will introduce features...",
          "description": "This project will enhance Makim by implementing Language Server Protocol (LSP) support for its YAML configuration files. This will introduce features like autocompletion, syntax validation, hover documentation, and custom commands directly within code editors. The project will deliver a Language Server and a VS Code extension, significantly improving the developer experience and making Makim more user-friendly.",
          "student_name": "Ansh Arora",
          "code_url": null,
          "proposal_id": "Rrvqqsj6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OPlaxDeq"
        },
        {
          "title": "Alpha One And Only Classroom",
          "short_description": "What good is a revolutionary learning platform if teachers still have to juggle Zoom, docs, and third-party whiteboards just to conduct a class?...",
          "description": "What good is a revolutionary learning platform if teachers still have to juggle Zoom, docs, and third-party whiteboards just to conduct a class? After working on Alpha One Labs for long, I’ve realised that with all the current components like courses, videos, blogs, quizzes…. The one component that is missing is indeed the most important one - A Virtual Classroom.  (and what if this virtual classroom becomes a 2D user controlled experience?)\n\nI am going to implement a 2D user controlled classroom experience. A game like interface where the user can go around the classroom, take seats with their friends, interact with multiple areas of the class, like the whiteboard, assignments table, breakout rooms, working on assignments alone or as teams, and a lot more.\n\nAlong with this im building an AI assistant available throughout the website.\nThis AI assistant will be your guide for any feature at Alpha One. The need of this has increased with the number of features at Alpha One.\nAny query regarding the working of the website will be resolved instantly.\n\nat the end of the project we will have:\nA 2D user-controlled classroom experience with integration of multiple existing features at Alpha One and new features, which will also act as independent features for the platform.\nAn AI assistant available on all pages of Alpha One, resolving any query regarding the website instantly.",
          "student_name": "ishaan-arora",
          "code_url": null,
          "proposal_id": "tpf7TGGv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/eeyUM55Z"
        },
        {
          "title": "Enhanced AI OCR Extraction Pipeline for Scientific Literature",
          "short_description": "This project creates a comprehensive pipeline for extracting text and complex tables from scientific literature PDFs. By combining PyMuPDF,...",
          "description": "This project creates a comprehensive pipeline for extracting text and complex tables from scientific literature PDFs. By combining PyMuPDF, specialized table detection models, and Vision-Language Models (VLMs), the system will significantly improve accuracy over traditional OCR methods while maintaining cost efficiency. The pipeline allows users to upload multiple research papers, select their preferred extraction method, and receive structured markdown outputs with preserved document hierarchy. A side-by-side interface will enable human verification and correction of extraction results. The solution will be optimized for lightweight deployment on platforms like Hugging Face Spaces, making it accessible to researchers worldwide while focusing primarily on complex table formats common in life science research.",
          "student_name": "Priyankesh",
          "code_url": null,
          "proposal_id": "vdOkB8tx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/npTUA7Qr"
        },
        {
          "title": "Add Docker Swarm Support to Sugar",
          "short_description": "This project will enable Sugar users to manage Docker Swarm clusters directly through Sugar’s command-line interface (CLI). These enhancements will...",
          "description": "This project will enable Sugar users to manage Docker Swarm clusters directly through\nSugar’s command-line interface (CLI). These enhancements will streamline container orchestration workflows and make Sugar a more versatile tool for developers transitioning from development to production environments. New commands will enable users to perform tasks such as initializing, joining, creating, scaling, updating, and inspecting Swarm services with simplified Docker Swarm Node and Secrets Management.",
          "student_name": "Sai Sanjay Kottakota",
          "code_url": null,
          "proposal_id": "rppMc0tR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/eK7R0d7E"
        }
      ]
    },
    {
      "name": "SymPy",
      "image_url": "https://summerofcode.withgoogle.com/media/org/sympy/iz2tcxocrknp1sm0-360.png",
      "image_background_color": "#ffffff",
      "description": "SymPy is a Python library for symbolic mathematics",
      "url": "https://www.sympy.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/sympy",
      "ideas_url": "https://github.com/sympy/sympy/wiki/GSoC-Ideas",
      "guide_url": "https://github.com/sympy/sympy/wiki/GSoC-Student-Instructions",
      "topics": ["mathematics", "physics", "symbolic mathematics"],
      "technologies": ["python", "numpy", "jupyter"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/g/sympy",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "FLINT-Backed Multivariate Polynomials in SymPy",
          "short_description": "SymPy currently lacks an efficient backend for dense and sparse multivariate polynomials over ℤ and ℚ, leading to performance bottlenecks in many...",
          "description": "SymPy currently lacks an efficient backend for dense and sparse multivariate polynomials over ℤ and ℚ, leading to performance bottlenecks in many core functions such as solve, linsolve, simplify, cancel, and polynomial GCD computations. This project aims to address this by integrating FLINT’s highly optimized multivariate polynomial arithmetic into SymPy via python-flint. To achieve this, we will implement: FLINT-backed Sparse Polynomial Support – FlintPolyRing (FLINT-backed equivalent of PolyRing), FlintPolyElement (FLINT-backed equivalent of PolyElement), comprehensive tests and documentation. FLINT-backed Dense Polynomial Support – DMP_Flint (FLINT-backed dense multivariate polynomial class), comprehensive tests and documentation. Performance Analysis and Optimization – Benchmarking against SymPy’s existing implementations, optimizing operations. This is a high-priority task in SymPy's development roadmap, and achieving this can make SymPy reach \"state-of-the-art\" levels of speed and performance. Since multivariate polynomial operations are involved across various modules in SymPy, this project significantly strengthens the library.",
          "student_name": "Aasim Ali",
          "code_url": null,
          "proposal_id": "BjPDhBWn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LP8TlBsJ"
        },
        {
          "title": "Implementing a Domain for Formal Power Series in SymPy",
          "short_description": "This project implements a domain system for formal power series in SymPy, enhancing the ring_series module with PowerSeriesRing (Domain),...",
          "description": "This project implements a domain system for formal power series in SymPy, enhancing the ring_series module with PowerSeriesRing (Domain), PowerSeriesPolyRing, and PowerSeriesElement classes. It enables efficient series expansions, domain integration, and arithmetic over diverse coefficient domains (e.g., QQ, RR). Key deliverables include a robust API, Taylor expansions (e.g., sin, exp), and documentation. Extended goals involve optimizing ring_series and fixing bugs for better performance.",
          "student_name": "Jatin Bhardwaj",
          "code_url": null,
          "proposal_id": "ZglBZU72",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8VslkGZ9"
        },
        {
          "title": "Improving Relational Reasoning and Introducing Quantifier Support in SymPy's Assumptions Framework",
          "short_description": "This GSoC project focuses on strengthening SymPy's assumptions system through a two-fold approach. The first component targets relational reasoning...",
          "description": "This GSoC project focuses on strengthening SymPy's assumptions system through a two-fold approach. The first component targets relational reasoning by addressing key inference gaps, without needing explicit real assumptions. Additionally, it involves integrating an incremental SAT solver to significantly improve the performance of ask and satask by enabling clause reuse across queries.\nThe second part of the project introduces support for quantified logical reasoning. By implementing universal and existential quantifiers (Q.forall, Q.exists), SymPy users will be able to express and evaluate rich, domain-spanning mathematical statements. This will be realized using a hybrid strategy, combining Z3-style pattern-based instantiation with SymPy's symbolic, declarative assumptions system.\nTogether, these enhancements aim to make SymPy's logic engine more expressive, efficient, and mathematically powerful.",
          "student_name": "Krishnav Bajoria",
          "code_url": null,
          "proposal_id": "MJe0xZmS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yUxTkz46"
        },
        {
          "title": "Extending Sympy’s Control Module to Discrete-Time Systems",
          "short_description": "This project aims to upgrade the control module of SymPy by adding support for discrete-time systems. The focus will be on developing efficient...",
          "description": "This project aims to upgrade the control module of SymPy by adding support for discrete-time systems. The focus will be on developing efficient methods for the Z-transform and its inverse, alongside the application of discrete-time stability criteria like the Jury criterion.",
          "student_name": "leomanga",
          "code_url": null,
          "proposal_id": "XGK5vFpL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cpykfo3t"
        },
        {
          "title": "Symbolic Wrapping Geometries for Musculoskeletal Modeling in SymPy",
          "short_description": "Musculoskeletal forces from muscles and tendons often wrap around bones and joints along curved surfaces. Current tools rely on numerical...",
          "description": "Musculoskeletal forces from muscles and tendons often wrap around bones and joints along curved surfaces. Current tools rely on numerical approximations for these wrapping paths, which require intensive computation. This project will extend SymPy’s mechanics module by introducing three new wrapping geometry classes: WrappingCone, WrappingEllipsoid, and WrappingToroid each providing symbolic geodesic-length calculations and endpoint tangent vectors. Using closed‑form derivations for cones, series expansions for spheroids, and local unfolding approximations for tori, the new classes will enable users to model complex biomechanical interactions symbolically, offering both exact expressions (where ever available) and good approximations. This extension will empower researchers and educators to explore musculoskeletal pathways analytically within the familiar SymPy ecosystem.",
          "student_name": "Rushabh Mehta 2005",
          "code_url": null,
          "proposal_id": "aCYdx8NN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uvXG3nzX"
        },
        {
          "title": "Enhancing the Structure2d Module in SymPy’s Continuum Mechanics",
          "short_description": "This project enhances SymPy’s structure2d module in continuum_mechanics by addressing missing load types, limited visualization, and analytical gaps...",
          "description": "This project enhances SymPy’s structure2d module in continuum_mechanics by addressing missing load types, limited visualization, and analytical gaps in 2D structural analysis. The upgraded Beam class will include robust input validation, support for ramp, triangular, and parabolic loads, and a stability pre-check for under-constrained systems. Structure2d will gain an improved apply_load method, automatic reaction detection, analytical tools like max_deflection(), max_bmoment(), max_shearforce(), pure_bending(), and geometric utilities like compute_centroid() and compute_moment_of_inertia(). Visualization will feature clear, unit-labeled shear force and bending moment diagrams with distinct support symbols. Executed in five structured stages across 12 weeks, the project will culminate in a feature-complete module backed by extensive automated test coverage and strong, grade validation. Deliverables include comprehensive and well-structured documentation and detailed usage examples, ensuring reliability, clarity, and ease of use for students, engineers, and researchers.",
          "student_name": "Sai Udayagiri",
          "code_url": null,
          "proposal_id": "KmWq3lPt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/K6y23OZP"
        }
      ]
    },
    {
      "name": "St. Jude Children's Research Hospital",
      "image_url": "https://summerofcode.withgoogle.com/media/org/st-jude-childrens-research-hospital-ai/qnfe4pckkvrq5tfw-360.png",
      "image_background_color": "#ffffff",
      "description": "Find cures. Saving children.",
      "url": "https://stjude.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/st-jude-childrens-research-hospital-ai",
      "ideas_url": "https://docs.google.com/document/d/1ze8OpsltCbAkksjmhd3hCeS6VDqAaolAhWAQQRJZBpc/edit?tab=t.0",
      "guide_url": "https://docs.google.com/document/d/1ze8OpsltCbAkksjmhd3hCeS6VDqAaolAhWAQQRJZBpc/edit?usp=sharing",
      "topics": [
        "programming languages",
        "genomics",
        "developer tools",
        "cloud"
      ],
      "technologies": ["rust", "WDL"],
      "irc_channel": "https://join.slack.com/t/rust-omics/shared_invite/zt-30ntw2bpi-2hollhtHX6Zt8UvYeP_KcQ",
      "contact_email": "mailto:clay.mcleod@stjude.org",
      "mailing_list": "",
      "twitter_url": "https://x.com/claylmcleod",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Extending Sprocket's Language Server Protocol for Enhanced WDL Support",
          "short_description": "I aim to enhance the Sprocket VSCode extension by integrating advanced language features for the Workflow Description Language (WDL) through the...",
          "description": "I aim to enhance the Sprocket VSCode extension by integrating advanced language features for the Workflow Description Language (WDL) through the Language Server Protocol (LSP). This includes implementing go to definition, go to declaration, references, rename, auto-completion to improve the development experience for WDL authors. As a stretch goal, I will extend support to other editors like IntelliJ IDEA and Neovim",
          "student_name": "dead8309",
          "code_url": null,
          "proposal_id": "oNDzSYwc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uAgKM6HN"
        },
        {
          "title": "Real-time monitoring dashboard and terminal user interface (TUI) for Crankshaft",
          "short_description": "The project aims to build a real-time monitoring dashboard and terminal UI (TUI) for Crankshaft, a genomics workflow engine. Using gRPC for streaming...",
          "description": "The project aims to build a real-time monitoring dashboard and terminal UI (TUI) for Crankshaft, a genomics workflow engine. Using gRPC for streaming and Ratatui for visualization, it will allow users to view live task statuses and logs directly in the terminal. The system will instrument task events (Queued, Started, Logs, Completed, Failed) without impacting performance and stream them efficiently. A stretch goal includes enabling job control (e.g., cancel tasks) through the TUI. The project will significantly improve observability and debugging in Crankshaft workflows.",
          "student_name": "Rajesh Kumar Jha",
          "code_url": null,
          "proposal_id": "wmoIcIeo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KhJBIIIf"
        }
      ]
    },
    {
      "name": "QEMU",
      "image_url": "https://summerofcode.withgoogle.com/media/org/qemu/gik5gsxljb3j1jx1-360.png",
      "image_background_color": "#ffffff",
      "description": "Open source machine emulator and virtualizer",
      "url": "https://qemu.org/",
      "category": "Infrastructure and cloud",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/qemu",
      "ideas_url": "https://wiki.qemu.org/Google_Summer_of_Code_2025",
      "guide_url": "https://wiki.qemu.org/Google_Summer_of_Code_2025",
      "topics": [
        "systems programming",
        "kernel",
        "compiler",
        "emulator",
        "hypervisor"
      ],
      "technologies": ["c", "python", "linux", "rust"],
      "irc_channel": "https://webchat.oftc.net/?channels=qemu-gsoc",
      "contact_email": "mailto:stefanha@gmail.com",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://qemu.org/blog",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Fuse-over-io_uring exports",
          "short_description": "This project extends QEMU FUSE export with support for FUSE-over-io_uring, a modern Linux interface that enables asynchronous, high-performance...",
          "description": "This project extends QEMU FUSE export with support for FUSE-over-io_uring, a modern Linux interface that enables asynchronous, high-performance communication between FUSE daemons and the kernel. Unlike the traditional /dev/fuse path, io_uring reduces system calls, supports batching, and lowers CPU overhead.\n\nThis project will integrate FUSE-over-io_uring into QEMU as an optional mode, enabling more efficient access to disk image contents through the FUSE export. The work includes implementing queue setup and negotiation with the kernel, supporting multiple inflight FUSE requests, enabling multi I/OThreads, and benchmarking performance using fio.\n\nDeliverables include:\nFUSE-over-io_uring support in QEMU\nMulti-inflight and multi-IOThread support\nPerformance benchmarks\nDocumentation",
          "student_name": "Brian Song",
          "code_url": null,
          "proposal_id": "41gCj5un",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Zoesj2mE"
        },
        {
          "title": "Asynchronous request handling for virtiofsd",
          "short_description": "Virtio-fs is a shared file system that lets virtual machines access a directory tree on the host. Virtiofsd is the user-level host daemon that...",
          "description": "Virtio-fs is a shared file system that lets virtual machines access a directory tree on the host. Virtiofsd is the user-level host daemon that communicates with the guest VMs and performs I/O operations on the shared directory tree. Currently, virtiofsd processes FUSE-based I/O requests in a mostly sequential manner. Even though it uses a thread pool, concurrency is limited by the number of available threads. This project aims to enable truly asynchronous I/O request handling in virtiofsd by leveraging io_uring. The deliverables will include a complete patch implementing asynchronous I/O handling, along with a performance evaluation of the resulting system.",
          "student_name": "Kaisei Hishida",
          "code_url": null,
          "proposal_id": "AtJFp6bR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uEfjI7DH"
        },
        {
          "title": "Adding Kani proofs for Virtqueues in Rust-vmm",
          "short_description": "This project aims to formally verify that the Rust vmm (a Rust implementation of the VirtIO specification used in virtualization platforms like QEMU)...",
          "description": "This project aims to formally verify that the Rust vmm (a Rust implementation of the VirtIO specification used in virtualization platforms like QEMU) behaves correctly according to the VirtIO specification. The approach involves writing unit proofs for critical functions in Rust vmm and verifying them using Kani, a Rust-based bounded model checker. These proofs, which will be integrated into continuous integration (CI), will not only check correctness for all executions within a bound but also verify memory safety, especially in areas mixing safe and unsafe Rust.\n\nCommunity Benefits:\n\n1. Increased trust in Rust vmm’s conformance to the VirtIO spec, benefiting all dependent projects.\n2. Maintainable proofs using the Code-As-Spec paradigm, making them accessible to Rust vmm developers.\n3. Demonstrates the practical value of formal verification for ensuring correctness in critical open source infrastructure.",
          "student_name": "Siddharth Priya",
          "code_url": null,
          "proposal_id": "M5lPuGWc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jBUdLT2D"
        },
        {
          "title": "Implementing LASI Network Card and NCR 710 SCSI Controller Device Models",
          "short_description": "This project aims to enhance QEMU's HP PA-RISC emulation by implementing LASI Network Card and NCR 710 SCSI Controller device models. LASI Network...",
          "description": "This project aims to enhance QEMU's HP PA-RISC emulation by implementing LASI Network Card and NCR 710 SCSI Controller device models.\nLASI Network Card: Debug, test and complete the current Intel 82596 based implementation to provide full functionality\nNCR 710 SCSI Controller: Develop a new, accurate QEMU device model based on documentations present.\n\nDeliverables: Fully functional LASI Network Card and NCR 710 SCSI Controller models.",
          "student_name": "Soumyajyotii Ssarkar",
          "code_url": null,
          "proposal_id": "kmFDiKer",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OMa5aKPb"
        },
        {
          "title": "vhost-user devices in Rust on macOS and *BSD",
          "short_description": "Extend rust-vmm crates (vhost, vhost-user-backend) to enable vhost-user device support on non-Linux POSIX systems (macOS/*BSD). The goal of this...",
          "description": "Extend rust-vmm crates (vhost, vhost-user-backend) to enable vhost-user device support on non-Linux POSIX systems (macOS/*BSD). The goal of this project is to make sure that we can use rust-vmm's vhost and vhost-user-backend crates on other POSIX systems besides Linux.",
          "student_name": "Wenyu Huang",
          "code_url": null,
          "proposal_id": "jsjYj4sR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XRKi5d8M"
        }
      ]
    },
    {
      "name": "OpenMRS",
      "image_url": "https://summerofcode.withgoogle.com/media/org/openmrs/evthgp3dhsqx5kyx-360.png",
      "image_background_color": "#ffffff",
      "description": "Write Code, Save Lives.",
      "url": "https://openmrs.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/openmrs",
      "ideas_url": "https://openmrs.atlassian.net/wiki/spaces/RES/pages/322404353/Summer+of+Code+2025",
      "guide_url": "https://wiki.openmrs.org/display/RES/GSoC+-+Proposal+Guidelines",
      "topics": [
        "platform",
        "frontend",
        "Electronic Medical Record System",
        "QA automation"
      ],
      "technologies": ["mysql", "javascript", "java", "reactjs", "fhir"],
      "irc_channel": "https://slack.openmrs.org/",
      "contact_email": "",
      "mailing_list": "https://talk.openmrs.org/",
      "twitter_url": "https://twitter.com/openmrs",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 8,
      "projects": [
        {
          "title": "Interactive Translation Builder for the Form Builder",
          "short_description": "This project introduces an interactive Translation Builder for OpenMRS Form Builder to streamline and simplify the process of localizing forms. The...",
          "description": "This project introduces an interactive Translation Builder for OpenMRS Form Builder to streamline and simplify the process of localizing forms. The current method requires editing JSON files and restarting the server, making it inaccessible for non-technical users. This tool enables users to extract translatable text, edit translations via an intuitive UI, preview the form in different languages in real time, and export language-specific files that can be used with the OpenMRS initializer. The aim is to improve accessibility, reduce dependency on technical expertise, and promote faster multilingual adoption.",
          "student_name": "Bharath Kumar Shetty",
          "code_url": null,
          "proposal_id": "8CTWupDf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/eDSv1Ozm"
        },
        {
          "title": "Enhancing Performance Testing Infrastructure for OpenMRS",
          "short_description": "The current OpenMRS performance testing project provides a foundational skeleton with some initial scenarios already implemented. This proposal aims...",
          "description": "The current OpenMRS performance testing project provides a foundational skeleton with some initial scenarios already implemented. This proposal aims to enhance that framework by making it more comprehensive, scalable, and user-friendly. Key improvements include modularizing the backend structure to promote reusability, introducing a flexible LoadShare JSON-based configuration system to simplify test setups, and expanding coverage to include additional user personas and real-world scenarios that represent a wide range of application functionalities. The project will also address data duplication issues and introduce support for scalable, cloud-based test execution via AWS. To ensure long-term sustainability and ease of contribution, detailed documentation and an onboarding guide for new contributors will also be provided.",
          "student_name": "Ganesh Devisetti",
          "code_url": null,
          "proposal_id": "noUmBV51",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BQKar0kG"
        },
        {
          "title": "Improved Implementer Tools",
          "short_description": "This proposal focuses on improving the Implementer Tools in OpenMRS 3 by addressing current limitations and adding key features. The project aims to...",
          "description": "This proposal focuses on improving the Implementer Tools in OpenMRS 3 by addressing current limitations and adding key features. The project aims to support object editing in config fields, enable UI-based translation overrides, improve extension handling, and add privilege-based display conditions. It also proposes implementing Carbon React-based dark mode, a color picker for branding, server-side configuration saving, and fixing UI inconsistencies. These changes are aimed at making the tool more complete and easier to use for OpenMRS implementers.",
          "student_name": "Harsh Thakkar",
          "code_url": null,
          "proposal_id": "igzPXV3X",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/e0aIyyEE"
        },
        {
          "title": "Immunization & Vaccination Schedule app for O3",
          "short_description": "This project enhances the openmrs-esm-immunizations-app in OpenMRS 3’s patient-chart to improve vaccination management for clinicians. Motivated by...",
          "description": "This project enhances the openmrs-esm-immunizations-app in OpenMRS 3’s patient-chart to improve vaccination management for clinicians. Motivated by the need for better visualization and functionality, it adds vaccination schedules, overdue alerts, and add immunization history table",
          "student_name": "M Praneeth",
          "code_url": null,
          "proposal_id": "zrWn9O9G",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4iLzkJe0"
        },
        {
          "title": "Enhancing OpenAPI Documentation Generation",
          "short_description": "This project implements a custom Maven plugin that performs build-time analysis of the OpenMRS REST module. This plugin will read new, specifically...",
          "description": "This project implements a custom Maven plugin that performs build-time analysis of the OpenMRS REST module. This plugin will read new, specifically designed Java annotations added to the code, parse Javadoc comments, and generate an accurate, static OpenAPI 3.0 specification file. Key deliverables include the functional Maven generator plugin, the defined custom annotations, the corresponding generated OpenAPI spec file, and developer guides, resulting in reliable API documentation and enabling future automation.",
          "student_name": "Marvin Sukumar",
          "code_url": null,
          "proposal_id": "wCPP7K09",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/F5dYGN8b"
        },
        {
          "title": "GSoC 2025 Proposal: Replacing OpenMRS Standalone with a Modern, User-Friendly Alternative",
          "short_description": "The OpenMRS Standalone version is outdated, no longer builds successfully with the latest releases, and has been deprecated. However, many...",
          "description": "The OpenMRS Standalone version is outdated, no longer builds successfully with the latest releases, and has been deprecated. However, many users—especially those in resource-limited settings—still rely on it because it offers a simple, self-contained installation without requiring advanced IT skills.\n\nThis project aims to replace the OpenMRS Standalone with a modern, lightweight, and easy-to-use alternative that works on Windows, macOS (including Apple Silicon), and Linux. The new setup will use a Java-based local installation that allows users to double-click and run OpenMRS, mariadb4j for an embedded- hassle-free database solution, docker Compose (only for CI/CD) to automate testing and deployment pipelines.\n\nBy the end of the project, OpenMRS will have a user-friendly, cross-platform installer, an embedded database, and an automated build process for multiple OpenMRS versions (2.x, 3.x, and Core Platform 2.7.x+).",
          "student_name": "Mutagubya Jonathan",
          "code_url": null,
          "proposal_id": "7vJST3Vn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6nL3MZY9"
        },
        {
          "title": "Improved Audit Logging",
          "short_description": "OpenMRS currently utilizes Hibernate Envers to track database changes, offering robust audit capabilities. However, the system lacks a user-friendly...",
          "description": "OpenMRS currently utilizes Hibernate Envers to track database changes, offering robust audit capabilities. However, the system lacks a user-friendly way for administrators to view, filter, and interact with audit logs. This project proposes building a backend module that exposes audit log data in a meaningful way through a legacy UI-based audit log viewer, REST endpoints for external access, and an extension that tracks read operations on selected entities—something Envers does not support out-of-the-box.\n\nThe solution will include:\n\n1. Audit log retrieval and visualization within the legacy UI\n\n2. Custom tracking of read operations using Hibernate event listeners or an alternative approach\n\n3. Filtering capabilities (by user, date, and entity)\n\n4. RESTful APIs for external access to audit data\n\n5. A well-documented architecture, extensible to other OpenMRS modules\n\nBy the end of this project, OpenMRS administrators will have a comprehensive and usable interface to audit system activity, improving transparency, traceability, and compliance with healthcare data standards.",
          "student_name": "Njidda Salifu",
          "code_url": null,
          "proposal_id": "UaZKp8hJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/diQMBDSZ"
        },
        {
          "title": "Fix the Fast Data Entry feature",
          "short_description": "The Fast Data Entry feature (FDE) is broken and unusable in the OpenMRS community’s main product (the O3 RefApp). No community organization or...",
          "description": "The Fast Data Entry feature (FDE) is broken and unusable in the OpenMRS community’s main product (the O3 RefApp). No community organization or contributor has had the time or ability to fix this, and yet it is an important foundational feature for OpenMRS users. \n\nThe goal of this project is to fix the FDE feature and get it useable again in the O3 RefApp, primarily by engineering the feature to leverage the React Form Engine instead of the Angular Form Engine.",
          "student_name": "Twiine",
          "code_url": null,
          "proposal_id": "YrDw0RUM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZT80j9qv"
        }
      ]
    },
    {
      "name": "Typelevel",
      "image_url": "https://summerofcode.withgoogle.com/media/org/typelevel/hxlcctbqekguxcxx.png",
      "image_background_color": "#ffffff",
      "description": "We do functional programming together",
      "url": "https://typelevel.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/typelevel",
      "ideas_url": "https://typelevel.org/gsoc/ideas",
      "guide_url": "https://typelevel.org/gsoc",
      "topics": ["web", "functional programming", "cloud", "AI/ML", "cats"],
      "technologies": ["linux", "node.js", "jvm", "scala", "wasm"],
      "irc_channel": "https://discord.gg/NAUJXXMxzh",
      "contact_email": "mailto:gsoc@typelevel.org",
      "mailing_list": "",
      "twitter_url": "https://fosstodon.org/@typelevel",
      "blog_url": "https://typelevel.org/blog/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Typelevel: A Faster Immutable List",
          "short_description": "The goal of this project is to create a more efficient immutable list in Scala. In order to do this, we intend to use block-based arrays, to improve...",
          "description": "The goal of this project is to create a more efficient immutable list in Scala.\n\nIn order to do this, we intend to use block-based arrays, to improve cache locality and reduce pointer chasing. This approach will help to address performance\nissues with traditional linked lists.",
          "student_name": "Jennifer Payne",
          "code_url": null,
          "proposal_id": "Og4Jgdqj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uZjY7fQ3"
        },
        {
          "title": "Polling-based I/O in FS2",
          "short_description": "FS2, a functional streaming library for Scala, currently utilizes blocking I/O operations, resulting in performance bottlenecks such as context...",
          "description": "FS2, a functional streaming library for Scala, currently utilizes blocking I/O operations, resulting in performance bottlenecks such as context switching and resource contention, particularly in high I/O-bound workloads. To overcome this, the project proposes reimplementing I/O APIs specifically Unix sockets, datagram sockets, and processes by leveraging polling-based mechanisms introduced in Cats Effect v3.6.0, which will remove the reliance on dedicated dispatcher threads and eliminate inefficiencies tied to blocking calls. This reimplementation will support JVM selector-based polling and Native file descriptor polling, while keeping existing implementations as fallbacks for runtimes that do not support the new approach therefore ensuring backward compatibility. The project will deliver these reimplemented APIs alongside comprehensive test suites to verify correctness, performance benchmarks to quantify improvements, and updated API documentation to ensure usability. By improving FS2’s efficiency and scalability, this enhancement will strengthen the Typelevel ecosystem and provide high-performance streaming library tailored for modern applications.",
          "student_name": "Purmani Rahul Reddy",
          "code_url": null,
          "proposal_id": "xSzO8Xkh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/m1AIvq9j"
        }
      ]
    },
    {
      "name": "Prometheus-Operator",
      "image_url": "https://summerofcode.withgoogle.com/media/org/prometheus-operator/dpytdkpyfejrot7o-360.png",
      "image_background_color": "#ffffff",
      "description": "Managing Prometheus atop Kubernetes",
      "url": "https://prometheus-operator.dev/",
      "category": "Infrastructure and cloud",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/prometheus-operator",
      "ideas_url": "https://github.com/prometheus-operator/community/blob/main/mentoring/gsoc/2025/project_ideas.md",
      "guide_url": null,
      "topics": ["monitoring", "cloud", "observability", "Kubernetes Operator"],
      "technologies": [
        "prometheus",
        "go",
        "kubernetes",
        "kubernetes operators"
      ],
      "irc_channel": "https://kubernetes.slack.com/archives/CFFDS2Z7F",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/PromOperator",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Completing the DaemonSet deployment model for  Prometheus Operator",
          "short_description": "The project aims to bring the Prometheus Agent's DaemonSet mode in Prometheus Operator to full production readiness. This involves addressing missing...",
          "description": "The project aims to bring the Prometheus Agent's DaemonSet mode in Prometheus Operator to full production readiness. This involves addressing missing functionalities, improving configuration validation, enhancing reliability, and providing comprehensive documentation. The ultimate goal is to offer a scalable, efficient, and fully supported way to run Prometheus Agent across Kubernetes nodes.\n\nThis is achieved by :-\n- Using CEL for CRD validation to provide immediate feedback.\n- Adding runtime checks as a fallback for older Kubernetes versions.\n- Investigating and potentially implementing EndpointSlice for scalability.\n- Extending integration tests to multi-node Kind clusters.\n- Creating detailed documentation and example manifests.",
          "student_name": "Dhruv puri",
          "code_url": null,
          "proposal_id": "yQrYSijm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hZAZORpk"
        },
        {
          "title": "Status for configuration objects",
          "short_description": "The project aims to implement status subresource in Service Monitor, Pod Monitor, Probes, AlertmanagerConfig, PrometheusRule and ScrapeConfig Custom...",
          "description": "The project aims to implement status subresource in Service Monitor, Pod\nMonitor, Probes, AlertmanagerConfig, PrometheusRule and ScrapeConfig\nCustom Resource. Currently, these CRs lack the status subresource, implementing\nit will increase the observability, as it enables users and controllers to observe the\ncurrent state of the resource, for users having access to the status enhances the\nuser experience by providing transparency and visibility into the state of resources.",
          "student_name": "Yash Kumar Patel",
          "code_url": null,
          "proposal_id": "dLqLzYBN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aUhE7h7S"
        }
      ]
    },
    {
      "name": "JabRef e.V.",
      "image_url": "https://summerofcode.withgoogle.com/media/org/jabref-ev/ylevworrwqf9bw9g-360.png",
      "image_background_color": "#ffffff",
      "description": "Stay on top of your Literature",
      "url": "https://www.jabref.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/jabref-ev",
      "ideas_url": "https://github.com/JabRef/jabref/wiki/GSoC-2025-ideas-list",
      "guide_url": "https://github.com/JabRef/jabref/wiki/GSOC-Application",
      "topics": ["science", "library", "literature", "latex", "bibliography"],
      "technologies": ["java", "javafx", "ai", "bibtex"],
      "irc_channel": "http://gitter.im/JabRef/jabref",
      "contact_email": "",
      "mailing_list": "https://discourse.jabref.org/",
      "twitter_url": "https://twitter.com/jabref_org",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Improve handling of ancient documents by OCR and AI",
          "short_description": "JabRef currently struggles with scanned or image-based PDFs, which lack embedded text and cannot be indexed or searched. This project proposes...",
          "description": "JabRef currently struggles with scanned or image-based PDFs, which lack embedded text and cannot be indexed or searched. This project proposes integrating Optical Character Recognition (OCR) directly into JabRef to support searchable text extraction from such historical or legacy documents. I will implement support for multiple OCR engines (e.g., Tesseract), embed the recognized text as a searchable layer in the PDFs, and ensure compatibility with JabRef’s Lucene search index. A minimal user interface will allow configuration of OCR settings, and the project will include viewer integration to improve discoverability. The final result will make JabRef more useful for researchers working with older documents, saving time and improving search and citation workflows.",
          "student_name": "Kaan Erdem",
          "code_url": null,
          "proposal_id": "aFb10sKj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WvHcxIiM"
        },
        {
          "title": "JabRef for Visual Studio Code (JabRef4VSCode)",
          "short_description": "Users of LaTeX tend to use Visual Studio Code (VSCode) for editing their LaTeX and BibTeX files. Although JabRef can still be used as GUI, it would...",
          "description": "Users of LaTeX tend to use Visual Studio Code (VSCode) for editing their LaTeX and BibTeX  files. Although JabRef can still be used as GUI, it would be beneficial to have JabRef's capabilities integrated in VSCode.\n\nIn this project, three working streams are followed:\n\n1. have JabRef's functionalities (e.g., integrity check) included as functionality in VSCode when editing `.bib` files (by implementing an LSP), \n2. have JabRef's entry lookup functionality integrated in VSCode when editing `.tex` files, \n3. have some of JabRef's unique features (such as grouping) available as sidebar in VSCode.",
          "student_name": "palukku",
          "code_url": null,
          "proposal_id": "tmsiXzZw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6Z6Fqv6g"
        },
        {
          "title": "Git Support for JabRef",
          "short_description": "This project aims to improve Git-based collaboration in JabRef by building a reliable synchronization layer for .bib files. While JabRef already...",
          "description": "This project aims to improve Git-based collaboration in JabRef by building a reliable synchronization layer for .bib files. While JabRef already supports basic Git actions, it lacks the ability to detect and resolve external changes in multi-user environments. Inspired by JabRef’s shared SQL database feature, this project will treat Git changes as edits from remote collaborators, supporting conflict detection, guided merge UI, and safe sync workflows. Key deliverables include a modular GitSyncService, a conflict resolution interface, integration with JabRef’s save flow, and secure credentials management. The result will be a smoother, more collaborative experience for researchers using version control in their bibliography workflows.",
          "student_name": "Wanling",
          "code_url": null,
          "proposal_id": "Uva3IUx2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/R9UcJNpJ"
        },
        {
          "title": "Integrating Walkthrough Feature in JabRef",
          "short_description": "I aim to improve the Welcome page and create a walkthrough in JabRef. The walkthrough would: 1. Provide an overview of JabRef's core functionality 2....",
          "description": "I aim to improve the Welcome page and create a walkthrough in JabRef. The walkthrough would:\n1. Provide an overview of JabRef's core functionality\n2. Ask users to select their user type\n3. Configure software with sensible default settings based on user type\n4. Demonstrate relevant features using a sample library\n\nThe walkthrough would be personalized based on the user's selected type, helping new users understand the features most relevant to their needs. Additional walkthroughs may be implemented depending on if there is additional time.",
          "student_name": "Yubo",
          "code_url": null,
          "proposal_id": "SHtbcnCh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ae6W329p"
        }
      ]
    },
    {
      "name": "DeepChem",
      "image_url": "https://summerofcode.withgoogle.com/media/org/deepchem/ffdofoxp3ba1qqmh-360.png",
      "image_background_color": "#ffffff",
      "description": "Democratize AI for drug discovery.",
      "url": "https://www.deepchem.io",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/deepchem",
      "ideas_url": "https://forum.deepchem.io/t/deepchem-gsoc-2025-project-ideas/1568",
      "guide_url": "https://forum.deepchem.io/t/gsoc-proposal-guidelines-2024/1102",
      "topics": [
        "artificial intelligence",
        "chemistry",
        "biology",
        "materials science",
        "Drug Discovery"
      ],
      "technologies": ["python", "numpy", "pytorch", "HuggingFace"],
      "irc_channel": "https://discord.gg/RYTrUY8Ssn",
      "contact_email": "",
      "mailing_list": "https://forum.deepchem.io/",
      "twitter_url": "https://twitter.com/deep_chem",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "Model-Parallel DeepChem Model Training",
          "short_description": "This project aims to significantly enhance the DeepChem library by integrating PyTorch Lightning to enable efficient multi-GPU training. Currently,...",
          "description": "This project aims to significantly enhance the DeepChem library by integrating PyTorch Lightning to enable efficient multi-GPU training. Currently, DeepChem is primarily limited to single-GPU use, hindering work with large models and datasets common in scientific machine learning. The project will introduce wrapper classes for DeepChem's datasets and PyTorch-based models, making them compatible with Lightning's distributed training paradigms and also with the base classes of deepchem. This will provide users with a seamless way to scale their training across multiple GPUs, drastically reducing computation time and enabling research on more complex problems within the DeepChem ecosystem.",
          "student_name": "Bhuvanmdev",
          "code_url": null,
          "proposal_id": "cDzTeHH4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TQng0tTL"
        },
        {
          "title": "Porting Chemception Model to PyTorch",
          "short_description": "This project ports the Chemception model—a deep CNN for molecular property prediction—from TensorFlow to PyTorch.DeepChem has been shifting its...",
          "description": "This project ports the Chemception model—a deep CNN for molecular property prediction—from TensorFlow to PyTorch.DeepChem has been shifting its backend from TensorFlow to PyTorch. This transition requires the porting of models that were previously built in TensorFlow to PyTorch.",
          "student_name": "Bibhusundar Mohapatra",
          "code_url": null,
          "proposal_id": "cvylHyCF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/M5sBGg3d"
        },
        {
          "title": "Integrating Single Cell RNA-seq modeling into Deepchem",
          "short_description": "This project proposes integrating ACTINN, a neural network for automated cell type identification in single-cell RNA sequencing (scRNA-seq) data,...",
          "description": "This project proposes integrating ACTINN, a neural network for automated cell type identification in single-cell RNA sequencing (scRNA-seq) data, into the DeepChem framework. \n\n​Integrating ACTINN into DeepChem would mark the framework's inaugural inclusion of a single-cell deep learning model, significantly expanding its capabilities in the burgeoning field of single-cell analysis.\n\nBy incorporating ACTINN, DeepChem can offer researchers a powerful tool for automated cell type identification, streamlining workflows in single-cell analysis and fostering deeper insights into cellular heterogeneity.",
          "student_name": "Harindhar",
          "code_url": null,
          "proposal_id": "Y6une4zu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/y70fgXcU"
        },
        {
          "title": "Implement a Wishlist Model - Fourier Neural Operator",
          "short_description": "This project aims to implement the Fourier Neural Operator (FNO) in DeepChem, expanding its support for solving complex partial differential...",
          "description": "This project aims to implement the Fourier Neural Operator (FNO) in DeepChem, expanding its support for solving complex partial differential equations (PDEs) in scientific machine learning. Traditional neural networks often struggle with PDEs due to their reliance on fixed-grid discretization. FNO addresses this by operating in the frequency domain, learning resolution-invariant mappings between function spaces using the Fourier transform, making it both scalable and efficient.\nThe project involves developing a new SpectralConv layer and a high-level FourierNeuralOperator class compatible with DeepChem’s PyTorch backend. The implementation will be modular, enabling future extensions such as Physics-Informed Neural Operators (PINO). Deliverables include the FNO model, unit tests, comprehensive tutorials, and benchmark comparisons with existing DeepChem models.",
          "student_name": "Shrisharanyan Vasu",
          "code_url": null,
          "proposal_id": "12kztAE7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pCUg5nMr"
        },
        {
          "title": "Improving New Drug Modality Support for Antibody Drug Conjugate",
          "short_description": "Cancer has become one of the leading causes of morbidity and mortality worldwide. One of the critical drawbacks of current cancer treatment has been...",
          "description": "Cancer has become one of the leading causes of morbidity and mortality worldwide. One of the critical drawbacks of current cancer treatment has been the lack of target selectivity, as the drug effects should be exclusively on cancer cells without affecting healthy cells. In addition, their mechanism of action should be rapid enough to prevent the spread of cancer cells to adjacent healthy cells. The use of conventional chemotherapeutic agents and other traditional therapies, such as surgery and radiotherapy, leads to off-target interactions with serious side effects. Also, traditional drug modalities, such as small-molecule drugs and monoclonal antibodies (mAbs), act upon either blocking specific pathways or inhibiting certain enzymes. Therefore, the need to overcome this limitation has driven the development of novel drug modalities like Antibody-drug conjugates, protacs, and oligonucleotides. In this respect, recently developed target-selective Antibody-Drug Conjugates (ADCs) are more effective than traditional therapies, presumably due to their modular structures that combine many chemical properties simultaneously. ADCs are typically made up of three different units: a highly selective Monoclonal antibody (mAb) which is developed against a tumor-associated antigen, the payload (cytotoxic agent), and the linker. In this case, the latter should be stable enough during circulation, and allow the release of cytotoxic agents on target cells.",
          "student_name": "Sonali Lipsa Patra",
          "code_url": null,
          "proposal_id": "CrhqvG2Q",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5Kf7jqft"
        },
        {
          "title": "Hamiltonian Neural Networks",
          "short_description": "This project aims to implement Hamiltonian Neural Networks (HNN) within the DeepChem framework using PyTorch. HNNs are designed to model physical...",
          "description": "This project aims to implement Hamiltonian Neural Networks (HNN) within the DeepChem framework using PyTorch. HNNs are designed to model physical systems where energy conservation and structured dynamics are essential. Instead of learning system dynamics directly, HNNs learn a scalar Hamiltonian function and compute derivatives using Hamilton’s equations, offering better generalization and long-term stability.",
          "student_name": "ZapBot",
          "code_url": null,
          "proposal_id": "tvupICqa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NBfvsztr"
        }
      ]
    },
    {
      "name": "Internet Archive",
      "image_url": "https://summerofcode.withgoogle.com/media/org/internet-archive/uzbgzbb9tvp81c2i.png",
      "image_background_color": "#ffffff",
      "description": "Universal Access to All Knowledge",
      "url": "http://archive.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/internet-archive",
      "ideas_url": "https://docs.google.com/document/d/1oHNwPNYmHV5q3puBfv6IQFs-4gTe9XLN2iz2Lgse-1k/edit?tab=t.0",
      "guide_url": null,
      "topics": ["library", "media", "archiving"],
      "technologies": ["python", "javascript", "go", "elasticsearch", "hadoop"],
      "irc_channel": "",
      "contact_email": "mailto:info@archive.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/internetarchive",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "What Are We Not Archiving? A Strategic Resource Allocation Proposal for the Wayback Machine",
          "short_description": "Despite capturing millions of web pages daily, The Wayback Ma- chine may fail to archive many important resources before they dis- appear. This...",
          "description": "Despite capturing millions of web pages daily, The Wayback Ma-\nchine may fail to archive many important resources before they dis-\nappear. This proposal outlines a comprehensive technical pipeline to\noptimize web archiving resources through intelligent URL ingestion,\nquality assessment, and prioritization. I propose a machine learning-\ndriven pipeline that integrates diverse signal sources to identify at-risk,\nhigh-value web content while filtering low-quality material. The im-\nplementation includes a unified data collection framework, real-time\nquality scoring system, dynamic priority queue, and continuous eval-\nuation mechanisms. This project, therefore, aims to significantly im-\nprove the Internet Archive’s ability to preserve historically significant\nweb content before it potentially vanishes.",
          "student_name": "Akshith Garapati",
          "code_url": null,
          "proposal_id": "nHvQJuVP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MFyduPDw"
        },
        {
          "title": "Detecting Social Media Content in TV News: Logo and Post Screenshot Detection Models",
          "short_description": "Since the rise of social media two decades ago, researchers have been eager to characterize its impact on society, particularly in the area of...",
          "description": "Since the rise of social media two decades ago, researchers have been eager to characterize its impact on society, particularly in the area of information diffusion. Yet, one major gap remains: its reach via television remains unmeasured. As a result, studying the mediated influence of social media has been an ongoing challenge for Social, Behavioral, & Economic (SBE) researchers. \n\nInternet Archive’s TV News Archive provides access to over 2.6 million U.S. news broadcasts dating back to 2009. We will use these TV news broadcasts to train object detection and image classification models. “SM LogoTrack” will focus on detecting social media platform logos, while “SM PostTrack” will detect social media post screenshots. \n\nBy developing robust visual detection models - \"SM LogoTrack\" and \"SM PostTrack\" our project will offer researchers and journalists new tools to systematically trace the flow of information from social media to television news. More importantly, this work directly contributes to the mission of the TV News Archive by enhancing the discoverability and analytical value of its vast video collections.",
          "student_name": "Himarsha",
          "code_url": null,
          "proposal_id": "kb7R8CCT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j0CKIRCi"
        },
        {
          "title": "Lenny: Open Source Book Lending System for Libraries",
          "short_description": "Libraries globally face challenges transitioning to digital lending due to restrictive publisher licensing and expensive, rigid vendor systems that...",
          "description": "Libraries globally face challenges transitioning to digital lending due to restrictive publisher licensing and expensive, rigid vendor systems that limit control over digital collections. My project, Lenny, is an open-source, self-hosted lending system for Open Library, designed to empower libraries by enabling ownership of digital books and reducing reliance on costly licenses. Inspired by the Internet Archive and Koha, Lenny offers a fast, secure, and scalable solution for libraries in regions like the US, UK, Germany, and India.\n          Lenny will feature a FastAPI-based API for borrowing, returning, and waitlist management, supporting Readable, Borrowable, and Print-Disabled books. It includes LCP DRM and Geo-IP compliance for security, a PostgreSQL database with triggers for loan expiration, and an OPDS feed for integration with Open Library and Thorium. A React-based dashboard will let librarians set rules like loan durations, while Docker with Alpine OS and Nginx ensures lightweight deployment. Lenny will provide libraries a cost-effective, flexible tool to manage digital collections, enhancing independence and access for patrons worldwide. will have a playground which will let users experience lenny system in action.",
          "student_name": "Roni Bhakta",
          "code_url": null,
          "proposal_id": "jzurv9kh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WcVnJVdw"
        },
        {
          "title": "GSoC 2025 - Real time In Browser Translation and Text-To-Speech",
          "short_description": "I would like to work with the Open Library team to create a plugin within the Internet Archive’s book reader app that would enable users to locally...",
          "description": "I would like to work with the Open Library team to create a plugin within the Internet Archive’s book reader app that would enable users to locally translate books and integrate the translated text to allow text-to-speech functionality for different languages. Using JavaScript and the Bergamot Translation model, this feature will parse the transparent text layer within the IA's book reader, feed the input into the translation model, and output the translated text onto the app. \r\n\r\nUsing a simplified calculation of books available for lending within the Open Library catalog, this project would expand the 3 million works available in English to at least 18 million titles across the 6 different languages supported by the Bergamot project, directly contributing to the Open Library's 2025 goal of offering more with less.\r\n\r\nThe primary deliverables for this project can be broken down into two major parts: implementing a translation plugin that allows users to select the source + target translation languages and intercepting the existing text-to-speech plugin to read the translated output from the Bergamot translation model. A future high-level deliverable for this project would allow volunteers to contribute their own translations for texts, which could allow higher quality translations to be provided to fellow patrons.",
          "student_name": "Sandy Chu",
          "code_url": null,
          "proposal_id": "yyIpdtwP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HZv00PgI"
        },
        {
          "title": "Zeno v2 Enhancement Proposal: Headless Mode, CSS Parser, and More",
          "short_description": "Enhance Zeno by implementing headless browsing via Rod for improved archiving of dynamic websites, developing a precise CSS parser for accurate URL...",
          "description": "Enhance Zeno by implementing headless browsing via Rod for improved archiving of dynamic websites, developing a precise CSS parser for accurate URL extraction from both inline and separate CSS files, addressing potential disk exhaustion when downloading large files, creating a dummy test site for better local testing, enabling HQ to control Zeno clients remotely via WebSocket, and addressing existing GitHub issues to improve overall stability and functionality.\n\nDeliverables:\n- A Zeno version with implemented headless browsing, configurable for URL/domain matching patterns\n- A CSS extractor capable of extracting URLs from inline and separate CSS files.\n- A Zeno version implementing the --max-content-length and --min-space-urgent parameters.\n- A dummy test site backend with various test endpoints.\n- A Zeno version that can be controlled by HQ via WebSocket.",
          "student_name": "yzqzss",
          "code_url": null,
          "proposal_id": "L68s9cOL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/afDanpOP"
        }
      ]
    },
    {
      "name": "LibreOffice",
      "image_url": "https://summerofcode.withgoogle.com/media/org/libreoffice/3g60m1gvsyzwzvvk-360.png",
      "image_background_color": "#ffffff",
      "description": "LibreOffice is a free and open source office suite",
      "url": "https://www.libreoffice.org/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/libreoffice",
      "ideas_url": "https://wiki.documentfoundation.org/Development/GSoC/Ideas",
      "guide_url": "https://wiki.documentfoundation.org/Development/GSoC/2025#How_to_apply",
      "topics": ["office suite", "desktop application", "end user application"],
      "technologies": ["python", "java", "c++"],
      "irc_channel": "https://wiki.documentfoundation.org/Website/IRC",
      "contact_email": "",
      "mailing_list": "https://wiki.documentfoundation.org/Development/Mailing_List",
      "twitter_url": "https://twitter.com/libreoffice",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Implement Report Builder in C++",
          "short_description": "The Report Builder is located in LibreOffice Base, its function is to produce a report in the form of a LibreOffice Writer document from a...",
          "description": "The Report Builder is located in LibreOffice Base, its function is to produce a report in the form of a LibreOffice Writer document from a LibreOffice Base document. As currently implemented the Report Builder uses a combination of Java and the Pentaho Report Designer library which makes maintaining its code more difficult and creates issues for packaging LibreOffice in different distributions. This project aims to solve these issues by implementing Report Builder in C++ and removing the Java and Pentaho dependencies from the LibreOffice code base.",
          "student_name": "Adam Seskunas",
          "code_url": null,
          "proposal_id": "7B6SoP0e",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VoGM95aI"
        },
        {
          "title": "BASIC IDE code auto-completion in LibreOffice",
          "short_description": "The LibreOffice BASIC IDE currently offers limited code assistance, hindering developer productivity with unreliable completion, no object browser,...",
          "description": "The LibreOffice BASIC IDE currently offers limited code assistance, hindering developer productivity with unreliable completion, no object browser, and no inline help (parameter/quick info). This project will implement a modern, comprehensive code assistance system. This involves creating \n\n[1] a robust backend analysis engine to parse BASIC code (editor/libraries) and introspect UNO objects for detailed symbol information (types, scopes, signatures), and \n\n[2] an efficient knowledge cache. These components will power \n\n[3] user-facing tools including: an integrated Object Browser for API exploration, significantly improved context-aware code completion (Ctrl+Space and enhanced '.'), and helpful Quick Info/Parameter Info tooltips. \n\nThe final deliverable will be these features fully integrated and enabled by default, delivering a significantly more productive and intuitive BASIC development experience in LibreOffice.",
          "student_name": "Devansh Varshney",
          "code_url": null,
          "proposal_id": "GDqabmBd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iLT9BxsA"
        },
        {
          "title": "New Dialog To Edit Table Styles",
          "short_description": "LibreOffice (Writer and Calc) currently allows users to apply predefined table styles via the “AutoFormat Styles” dialog and add new styles based on...",
          "description": "LibreOffice (Writer and Calc) currently allows users to apply predefined table styles via the “AutoFormat Styles” dialog and add new styles based on manually formatted tables. The current implementation applies direct formatting to the existing table instead of styles, which means it needs to be reapplied every time the table is modified. This proposal aims to implement a new dialog, based on the UX teams’s design proposal, that allows users to comprehensively edit all aspects of a table style using ODF specification along side with WYSIWYG preview, and ensures consistent behavior across Writer, Calc and Impress.",
          "student_name": "Karthik Godha",
          "code_url": null,
          "proposal_id": "FpUhTxt5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xvUbIlHA"
        },
        {
          "title": "Python code auto-completion",
          "short_description": "LibreOffice has Python scripting support via its UNO API but does not have adequate IDE support because it doesn't have static type information. This...",
          "description": "LibreOffice has Python scripting support via its UNO API but does not have adequate IDE support because it doesn't have static type information. This project suggests developing a new tool named pythonmaker using C++ in LibreOffice's codemaker framework to create Python stub files (.pyi) based on UNO's IDL definitions. Such stubs will contain correct type hints according to PEP 484/561 guidelines so that features such as autocompletion, static analysis, and improved navigation can be provided in Python IDEs.\n\npythonmaker will make use of existing infrastructure such as codemaker::TypeManager and convert UNO interfaces, structs, enums, and constants into their Python counterparts. The output files will be structured by UNO namespaces, e.g., com/sun/star/. The project also features comprehensive testing—using CppUnit, MyPy, Pyright, and actual IDE validation—to provide quality and usability. Overall, this will dramatically enhance the Python development experience within LibreOffice.",
          "student_name": "Manish Bera",
          "code_url": null,
          "proposal_id": "Lj4fZpzW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TVa3MD9k"
        },
        {
          "title": "Rust UNO Language Binding",
          "short_description": "LibreOffice's UNO (Universal Network Objects) component model currently lacks support for the Rust programming language, creating a barrier for Rust...",
          "description": "LibreOffice's UNO (Universal Network Objects) component model currently lacks support for the\nRust programming language, creating a barrier for Rust developers who want to extend LibreOffice\nor use its functionality. UNO enables cross-language communication and extension capabilities, but\nis limited to C++, Java, and Python. This project will create a complete Rust language binding for\nUNO, bridging the gap between Rust's modern safety features and LibreOffice's powerful document\nprocessing capabilities. By developing FFI bindings to UNO's C API and providing idiomatic Rust\nwrappers, this project will enable Rust developers to create LibreOffice extensions and integrate\nLibreOffice functionality into Rust applications.",
          "student_name": "Mohamed Ali Mohamed",
          "code_url": null,
          "proposal_id": "fQNkAdw6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/42tsJZ3Z"
        },
        {
          "title": "Rework Impress slideshow to use DrawingLayer primitives",
          "short_description": "This project aims to modernize the Impress slideshow engine by replacing its legacy StarView metafile-based rendering with a cleaner, modular...",
          "description": "This project aims to modernize the Impress slideshow engine by replacing its legacy StarView metafile-based rendering with a cleaner, modular approach using DrawingLayer primitives. The new system will decouple the shape data model from its rendering instructions, ensuring resolution independence and easier integration with alternative renderers. The work involves analyzing the existing code, developing a conversion layer to map high-level shape abstractions to lightweight geometric primitives, refactoring core shape and view components, and validating the changes through unit tests and performance benchmarks. Deliverables include fully refactored code, a robust conversion module, updated rendering components and comprehensive unit tests.",
          "student_name": "Shardul Vikram Singh",
          "code_url": null,
          "proposal_id": "D8N2VAnm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pBevATJt"
        },
        {
          "title": "Import Markdown files into LibreOffice Writer",
          "short_description": "This project aims to implement Markdown support in LibreOffice Writer, ensuring compliance with the CommonMark specification. The imported Markdown...",
          "description": "This project aims to implement Markdown support in LibreOffice Writer,  ensuring\ncompliance with the CommonMark specification. The imported Markdown content will be structured appropriately within Writer, preserving headings, lists, code blocks, and other formatting elements.",
          "student_name": "Ujjawal Kumar Chouhan",
          "code_url": null,
          "proposal_id": "48XG0hGw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jyyCI3gu"
        }
      ]
    },
    {
      "name": "Micro Electronics Research Lab - UITU",
      "image_url": "https://summerofcode.withgoogle.com/media/org/micro-electronics-research-lab-uitu/el9byq6f4dfc1y77-360.png",
      "image_background_color": "#ffffff",
      "description": "Accelerating Engineering Innovation",
      "url": "https://www.merledupk.org",
      "category": "Other",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/micro-electronics-research-lab-uitu",
      "ideas_url": "https://github.com/merledu/Google-Summer-of-Code/wiki/GSoC'25-Project-Ideas-List",
      "guide_url": "https://github.com/merledu/Google-Summer-of-Code/wiki/GSoC-Proposal-Template",
      "topics": ["iot", "embedded", "Processor", "System on Chip", "RISC-V"],
      "technologies": [
        "RISCV",
        "Processor",
        "Hardware",
        "systemonchip",
        "memory"
      ],
      "irc_channel": "https://discord.gg/BZC54d7a",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/merluit",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Automated UVM Tuning Orchestrated Via AI Reasoning",
          "short_description": "Verification in hardware design is a time-consuming and complex task as well as requires manual effort to update UVM testbench components...",
          "description": "Verification in hardware design is a time-consuming and complex task as well as requires manual effort to update UVM testbench components (scoreboard, driver, sequencer) with constant changing DUT. This project proposes to solve this by using AI and NLP to extract key information from the provided DUT specs and updating the UVM components accordingly. This will reduce the manual effort of updating the components and optimize the process of verification.\n\nProject Deliverables are :\nAn NLP-based parser for extracting DUT parameters\nAutomated UVM component generation and adaptation\nReinforcement learning for better verification environment",
          "student_name": "Abdul_Rehman",
          "code_url": null,
          "proposal_id": "itmofYhd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YT9iUEa6"
        },
        {
          "title": "Integrating TCAM IP into Chipyard via MMIO and RoCC Interfaces",
          "short_description": "This project focuses on integrating a Ternary Content Addressable Memory (TCAM) module into the Chipyard SoC framework to enable high-speed parallel...",
          "description": "This project focuses on integrating a Ternary Content Addressable Memory (TCAM) module into the Chipyard SoC framework to enable high-speed parallel matching operations crucial for domains like networking and pattern recognition—functionality not natively supported in Chipyard. The integration employs a dual approach: first, incorporating the Verilog-based TCAM IP (generated via OPENTCAM) as a memory-mapped I/O (MMIO) peripheral by wrapping it in a Chisel BlackBox, connecting it to the subsystem using TileLink, and exposing TCAM operations like write and search through memory-mapped registers accessible from software; and second, integrating the TCAM as a RoCC accelerator by reusing the BlackBox within a custom LazyRoCC module, mapping Rocket’s RoCC interface to TCAM operations via funct fields of custom instructions, and enabling instantiation through a dedicated WithTCAMRoCC configuration in the Rocket tile.",
          "student_name": "Atharva Nerkar",
          "code_url": null,
          "proposal_id": "GneBxDbb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Se9wHIpD"
        },
        {
          "title": "AEGIS - AI-Enhanced Generation of Intelligent Scenarios",
          "short_description": "AEGIS automates hardware verification by using AI to generate optimized test cases. Parses Specifications: Extracts key features (interfaces,...",
          "description": "AEGIS automates hardware verification by using AI to generate optimized test cases. \n\nParses Specifications: Extracts key features (interfaces, protocols) from documents using NLP.\n\nGenerates Tests: Creates corner-case and compliance tests via ML models.\n\nOptimizes Prioritization: Uses RL to maximize coverage efficiency.\n\nOutputs UVM Code: Auto-generates UVM testbenches for simulation.",
          "student_name": "Mahnoor_Ismail",
          "code_url": null,
          "proposal_id": "yvn9vaKo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/82d7SM6N"
        },
        {
          "title": "Running Secure and Vectorized Applications on SoC-Now",
          "short_description": "This project aims to develop and benchmark high-performance applications that leverage the modular SoC-Now platform, which integrates RISC-V cores, a...",
          "description": "This project aims to develop and benchmark high-performance applications that leverage the modular SoC-Now platform, which integrates RISC-V cores, a vector coprocessor (Vaquita), and a post-quantum cryptography accelerator (Baby Kyber). The project will focus on building real-world applications such as image processing, machine learning inference, and secure communication, utilizing Vaquita for vectorized computing and Baby Kyber for post-quantum encryption. These applications will be designed, implemented, and tested on the SoC-Now platform, demonstrating the practical benefits of these hardware accelerators.\n\nThe goal is to provide the open-source community with reusable application code and detailed performance benchmarks, showcasing the capabilities of SoC-Now in secure computing and efficient AI acceleration. The project will include the development of hybrid applications combining cryptography and vector processing, along with complete documentation and tutorials to make it easy for future developers to leverage the platform for their own projects.\n\nDeliverables will include working applications, performance benchmarks, and reusable code packaged for community use, with future work aiming to expand the scope with additional cryptographic primitives, AI models, and improved software stack integration.",
          "student_name": "Muhammad Hussain_017",
          "code_url": null,
          "proposal_id": "IITBY5yG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bUMTw353"
        },
        {
          "title": "PyUVM-Based General Testbench for RISC-V Cores",
          "short_description": "As RISC-V adoption continues to grow, verifying functional correctness across various implementations becomes increasingly challenging due to the...",
          "description": "As RISC-V adoption continues to grow, verifying functional correctness across various implementations becomes increasingly challenging due to the variability in core designs and protocols. Traditional verification frameworks require significant adaptation for each new RISC-V core, which complicates testing and debugging. This project, COCO-RISC-V Test Bench (COCO-RVTB), solves this problem by creating a reusable and scalable testbench that leverages the RISC-V Formal Interface (RVFI) for detailed execution trace comparison between the Ibex core and a trusted golden reference, Spike. This ensures instruction-level validation and helps identify subtle bugs that traditional methods might miss.\n\nThe testbench will include a memory preloading mechanism for ELF binaries, ensuring that both Ibex and Spike begin from identical states. Stepwise synchronization will enforce lockstep execution, enabling real-time detection of discrepancies in program counter, register, or memory updates. A scoreboard-based RVFI packet comparison unit will automatically validate each instruction, improving trace-level accuracy.\n\nBuilt with PyUVM and Cocotb, this framework will be simulator-agnostic, allowing it to run across simulators like Verilator and ModelSim without relying on proprietary features. The testbench will feature a configurable, parameterized bus interface to support protocol diversity, enabling easy integration with different RISC-V cores and future extensions.\n\nKey deliverables include:\n- A scoreboard-based RVFI trace checker.\n- A YAML-configurable, protocol-agnostic bus interface.\n- Structured error logging for debugging and traceability.\n- A simulator-agnostic framework using PyUVM and Cocotb.\n\nBy solving the challenges of core-specific verification, this project provides a scalable, standardized, and accurate approach to RISC-V core validation.",
          "student_name": "Nitin Grandhi",
          "code_url": null,
          "proposal_id": "G7IKXnHS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qoZg4Pu7"
        }
      ]
    },
    {
      "name": "CGAL Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/cgal-project/9ubuadbe0eg5xfcw-360.png",
      "image_background_color": "#ffffff",
      "description": "C++ library of computational geometry",
      "url": "https://www.cgal.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/cgal-project",
      "ideas_url": "https://github.com/CGAL/cgal/wiki/Project-Ideas",
      "guide_url": "https://github.com/CGAL/cgal/wiki/Project-Ideas#information-candidates-should-supply",
      "topics": [
        "geometry",
        "mesh processing",
        "computation geometry",
        "geometry processing"
      ],
      "technologies": ["c++", "qt"],
      "irc_channel": "",
      "contact_email": "mailto:gsoc-cgal@inria.fr",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Parallel tetrahedral remeshing using TBB",
          "short_description": "The goal of this project is to parallelize the CGAL Tetrahedral Remeshing package using the Intel Threading Building Blocks (TBB) library. This will...",
          "description": "The goal of this project is to parallelize the CGAL Tetrahedral Remeshing package using the Intel Threading Building Blocks (TBB) library. This will significantly reduce the computational time required for remeshing large meshes, enabling faster and more efficient simulations. CGAL already provides some parallel implementations for some of its packages. While the primary focus is to parallelize the Remeshing package, a key objective is to lay the foundation for a generic parallelization framework for CGAL. Analogously to C++ STL's execution policies we would like to develop a framework that could, as future work, be extended to the rest of the library and allow to seamlessly change execution policies. The core of this proposal is a generic framework for the parallel execution of atomic operations using TBB in the remeshing package.",
          "student_name": "Iason Manolas",
          "code_url": null,
          "proposal_id": "51JEseWZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1pQ8f10i"
        },
        {
          "title": "Dynamic Skeletonization via Variational Medial Axis Sampling – CGAL Integration",
          "short_description": "The project aims to integrate into the CGAL library an algorithm for medial axis approximation that I developed and published at SIGGRAPH Asia 2024....",
          "description": "The project aims to integrate into the CGAL library an algorithm for medial axis approximation that I developed and published at SIGGRAPH Asia 2024. The algorithm computes an approximate medial axis of a 3D shape—represented either as a triangular mesh or a point cloud—using a variational sampling method that dynamically balances accuracy and robustness. It is designed to handle both clean and noisy input geometry, and supports dynamic updates, allowing users to interactively refine the result as needed.",
          "student_name": "Qijia HUANG",
          "code_url": null,
          "proposal_id": "MLoFKE1w",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nQN4fzNv"
        },
        {
          "title": "Extending 2D Arrangement Drawings",
          "short_description": "The 2D Arrangements package in CGAL offers a powerful framework for constructing and manipulating geometric arrangements. However, current demo...",
          "description": "The 2D Arrangements package in CGAL offers a powerful framework for constructing and manipulating geometric arrangements. However, current demo applications—specifically the planar arrangement demo and the earth demo—exhibit limitations in rendering quality, curve support, and interactive visualization. This proposal outlines enhancements to these demos to improve rendering efficiency, expand support for various curve types, and refine spherical arrangement visualization. In addition, the project will explore GIS applications by leveraging arrangements for topological error validation and correction in vector maps.",
          "student_name": "Shepard Liu",
          "code_url": null,
          "proposal_id": "8cgAwhDz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1hCfEr46"
        },
        {
          "title": "Hexahedral Mesh Generation",
          "short_description": "This proposal aims to develop an advanced hexahedral grid refinement framework (Owen et al. 2017), supporting single-threaded and multi-threaded...",
          "description": "This proposal aims to develop an advanced hexahedral grid refinement framework (Owen et al. 2017), supporting single-threaded and multi-threaded environments. In the previous project, the generation of an initial hexahedral grid and grid refinement using the prepared templates were implemented. In this project, we will integrate novel features such as mesh smoothing specialized to the mesh after it and improved thread assignment mechanisms for robust multi-threaded processing. The deliverables include a complete implementation, extensive documentation via Doxygen, and unit tests using ctest.",
          "student_name": "Soichiro",
          "code_url": null,
          "proposal_id": "Tzb0swoD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/b3o1ogYP"
        },
        {
          "title": "Enhanced Dual Contouring",
          "short_description": "The goal of this project is to enhance the existing Dual Contouring (DC) method in CGAL by implementing manifold contouring methods. While the...",
          "description": "The goal of this project is to enhance the existing Dual Contouring (DC) method in CGAL by implementing manifold contouring methods. While the classical DC is a powerful isosurfacing method, it may produce non-nonmanifold surfaces, leading to topological inconsistencies and computational challenges. Manifold dual contouring methods overcome this issue by introducing manifold constraints to ensure the generation of 2-manifold surfaces.\n\nThe project will begin with a detailed study of existing literature, including Manifold Dual Contouring by Schaefer, Ju and Warren, and other related methods. Based on the research, we will determine an algorithm that combines the most robust aspects of these methods. The next phase is to review current DC implementations in CGAL  to identify gaps that require modifications, particularly in routines such as the Quadratic Error Function (QEF) minimization, octree traversal, and polygonalization. Lastly, additional features will be added, including manifold criterions like the Euler characteristic test, and the support for multiple vertices per cell.\n\nThe final deliverables will be a robust implementation of the enhanced DC method integrated into CGAL under the Isosurfacing subroutine. The implementation will adhere to CGAL’s existing coding conventions to ensure flexibility, consistency, and maintainability within the library. The documentation will include a test file under Isosurfacing 3/test/Isosurfacing 3, visualization of test cases under Isosurfacing/fig, and a theoretical background under Isosurfacing 3/doc/Isosurfacing 3/Isosurfacing 3.txt.",
          "student_name": "Taoli Shen",
          "code_url": null,
          "proposal_id": "4Sd2swFy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OssVTW5a"
        }
      ]
    },
    {
      "name": "MDAnalysis",
      "image_url": "https://summerofcode.withgoogle.com/media/org/mdanalysis/kf8rugznsqeskumi-360.png",
      "image_background_color": "#ffffff",
      "description": "Analysis of molecular simulations data with Python",
      "url": "https://www.mdanalysis.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/mdanalysis",
      "ideas_url": "https://github.com/MDAnalysis/mdanalysis/wiki/GSoC-2025-Project-Ideas",
      "guide_url": "https://github.com/MDAnalysis/mdanalysis/wiki/Google-Summer-Of-Code",
      "topics": [
        "science",
        "computational-chemistry",
        "high-performance-computing",
        "molecular-simulation",
        "machine-learning"
      ],
      "technologies": ["python", "cython", "c/c++"],
      "irc_channel": "https://discord.com/channels/807348386012987462/",
      "contact_email": "",
      "mailing_list": "https://github.com/MDAnalysis/mdanalysis/discussions",
      "twitter_url": "https://twitter.com/mdanalysis",
      "blog_url": "https://www.mdanalysis.org/blog/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Integrating MDAnalysis streaming analysis within WESTPA propagators",
          "short_description": "Weighted ensemble (WE) simulations enhance the exploration of a molecular system’s phase space by running numerous short, parallel simulations and...",
          "description": "Weighted ensemble (WE) simulations enhance the exploration of a molecular system’s phase space by running numerous short, parallel simulations and selectively replicating trajectories that enter under-sampled regions. This approach improves sampling efficiency compared to traditional long, continuous simulations. However, a potential bottleneck arises from the need to analyze each iteration’s trajectories before starting the next round of simulations. Typically, this involves loading and processing trajectory data after each iteration, which can introduce significant delays due to disk I/O. To address this issue, my project focuses on integrating trajectory streaming into WESTPA using MDAnalysis. Instead of waiting for full trajectories to be written and reloaded for analysis, this implementation will enable real-time, on-the-fly analysis of simulation data as it is generated. By eliminating post-processing delays, this modification will streamline the weighted ensemble workflow.",
          "student_name": "jpkrowe",
          "code_url": null,
          "proposal_id": "LNYoLsOS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SvFaSgr5"
        },
        {
          "title": "Enhancing ProLIF Visualizations: A Hybrid Approach for Automated, Customizable 2D Interaction Layout",
          "short_description": "ProLIF’s current 2D interaction diagrams often suffer from overlapping protein residues and tangled edges due to reliance on a default physics engine...",
          "description": "ProLIF’s current 2D interaction diagrams often suffer from overlapping protein residues and tangled edges due to reliance on a default physics engine of vis.js. I propose to enhance ProLIF by developing an automated residue layout system that computes optimal 2D coordinates using graph-based algorithms (e.g., force-directed, radial, or circular layouts via NetworkX). This system will integrate into ProLIF’s visualization framework, allowing users to select and refine layouts interactively. Additionally, I will implement an export function to convert interaction fingerprints into a NetworkX graph for further analysis. Deliverables include a coordinate generation function, updates to the visualization module, comprehensive testing, and detailed documentation.",
          "student_name": "Nilay Verma",
          "code_url": null,
          "proposal_id": "jwWjwKlG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XWsglxQM"
        },
        {
          "title": "Project 4: Better interfacing of Blender and MDAnalysis",
          "short_description": "Blender is an industry leading open-source 3D modelling and animation software. MDAnalysis is an open-source Python library for analyzing molecuar...",
          "description": "Blender is an industry leading open-source 3D modelling and animation software. MDAnalysis is an open-source Python library for analyzing molecuar dynamics (MD) trajectories across multiple formats. MDAnalysis has a basic interface with Blender through a popular extension called Molecular Nodes which allows importing MDAnalysis universes and provides advanced rendering capabilities through a GUI.\n\nThe ability to script and support advanced visualizations of MDAnalysis results is currently lacking. This project attempts to define, prototype and implement various APIs along with an integrated GUI within Blender that will together provide advanced visualization capabilities for MDAnalysis.",
          "student_name": "Pardhav Maradani",
          "code_url": null,
          "proposal_id": "lJaY5qzB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9BR8jbvV"
        },
        {
          "title": "MDAnalysis x ProLIF Project 5:  H-Bond interactions from implicit hydrogens",
          "short_description": "ProLIF, a tool for identifying protein-molecule interactions in molecular dynamics trajectories, lacks a straightforward method for evaluating...",
          "description": "ProLIF, a tool for identifying protein-molecule interactions in molecular dynamics trajectories, lacks a straightforward method for evaluating hydrogen bonds when only heavy atoms are present. Many users usually compare experimental and computational structures without explicit hydrogens, but the existing protonation tools are cumbersome and error-prone for beginner-level programming users. This proposal introduces an \"implicit hydrogen bond (H-bond) interaction method\" directly using heavy atom positions to detect H-bonds.  The goal is to strike a balance between efficiency and accuracy and increase ProLIF's usability. The method will leverage distance-based calculations with geometrical constraints, similar to Mol* and Chimera, and incorporate a confidence score based on AutoDock Vina's hydrogen bond term.  Standardizing residue names from various force fields (CHARMM, AMBER, GROMOS, OPLS-AA) and assigning their associated protonation/hybridization states will be crucial for the new \"Protein helper function” before the H-bond detection.  Lastly, I plan to use the PINDER and PLINDER datasets (protein-protein and protein-ligand interactions, respectively) to validate the implicit H-bond interaction method by comparing the results from the standard H-bond method.",
          "student_name": "Yu-Yuan (Stuart) Yang",
          "code_url": null,
          "proposal_id": "5YgE67yN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5Otkx8vp"
        }
      ]
    },
    {
      "name": "CHAOSS",
      "image_url": "https://summerofcode.withgoogle.com/media/org/chaoss/omnpzqtoqzjmesi7-360.png",
      "image_background_color": "#ffffff",
      "description": "Community Health Analytics Open Source Software",
      "url": "https://chaoss.community",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/chaoss",
      "ideas_url": "https://github.com/chaoss/augur/blob/main/gsoc-interest.md",
      "guide_url": "https://github.com/chaoss/augur/blob/main/gsoc-interest.md",
      "topics": [
        "open source software metrics",
        "software sustainability",
        "community building",
        "security and software bill of materials"
      ],
      "technologies": [
        "python",
        "postgresql",
        "javascript",
        "machine learning",
        "metrics"
      ],
      "irc_channel": "https://join.slack.com/t/chaoss-workspace/shared_invite/zt-289zxh6tu-3oQaFlutPFY039MjKpnWcA",
      "contact_email": "mailto:gsoc@goggins.com",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/chaossproj",
      "blog_url": "https://chaoss.community/blog",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Implement Conversion Rate Metric In Chaoss Software",
          "short_description": "Open-source projects tend to struggle with retaining contributors after the initial involvement. In this project, a Conversion Rate Metric is...",
          "description": "Open-source projects tend to struggle with retaining contributors after the initial involvement. In this project, a Conversion Rate Metric is proposed for measuring how well newcomers convert into frequent contributors. From these patterns of conversion, communities can enhance onboarding, interaction, and overall contributor experience.\nThe metric will be applied on the CHAOSS/Augur platform, utilizing its infrastructure for data collection and analysis. A stable data pipeline developed using Python and SQL will retrieve contributor activity data from Git repositories and issue trackers. Conversion criteria (e.g., D0 → D1 → D2) will be defined to allow for consistent and meaningful measurement.\nThe project will provide:\n1. A conversion rate metric that can be tailored to various needs and incorporated into Augur\n2. An automated pipeline for data collection and processing\n3. A dashboard with visualizations of conversion trends, cohort analysis, and contributor activity\n4. Comprehensive testing on real-world repositories to ensure accuracy\n5. Documentation and onboarding materials for maintainers\n\nThrough giving open-source communities a means to track and analyze contributor conversion, this project will enable data-driven community development and healthier contributor ecosystems. It continues the efforts of CHAOSS to advance contributor metrics and offer actionable insights to maintainers.",
          "student_name": "Akshat Baranwal",
          "code_url": null,
          "proposal_id": "hwD6NLBO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rY6dHSn4"
        },
        {
          "title": "Implement Conversion Rate Metric in CHAOSS Software",
          "short_description": "The conversion rate metric is primarily aimed at identifying how new community members become more sustained contributors over time. However, the...",
          "description": "The conversion rate metric is primarily aimed at identifying how new community members become more sustained contributors over time. However, the conversion rate metric can also help understand the changing roles of contributors, how a community is growing or declining, and paths to maintainership within an open source community.",
          "student_name": "Asish Kumar",
          "code_url": null,
          "proposal_id": "Zgibo8zp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5mr4NeCs"
        },
        {
          "title": "Enhance Conversational Topic Modelling Capabilities in CHAOSS Software",
          "short_description": "This project aims to improve the robustness and flexibility of topic modeling in the CHAOSS Augur platform by enhancing its clustering_worker...",
          "description": "This project aims to improve the robustness and flexibility of topic modeling in the CHAOSS Augur platform by enhancing its clustering_worker component. Currently, Augur relies on a static number of LDA topics, lacks model versioning, and does not support retraining based on data drift.\n\nTo address these issues, this project will:\n\nIntroduce dynamic topic number estimation via Gensim’s HDP model.\n\nImplement model versioning with model_id and timestamp support.\n\nRecord model metadata including hyperparameters and coherence scores.\n\nAdd automatic parameter tuning using coherence-based grid search.\n\nDetect data drift and trigger model retraining accordingly.\n\nExport rich visual outputs such as pyLDAvis and wordcloud images.\n\nDeliverables include upgraded database schema, a refactored topic modeling pipeline, metadata tables, Jupyter demo notebooks, and HTML visualizations for CHAOSS dashboards. These changes will make Augur’s insight engine more adaptive, interpretable, and future-proof.",
          "student_name": "infojemi4@gmail.com",
          "code_url": null,
          "proposal_id": "3m9orwrK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WEvhcxii"
        }
      ]
    },
    {
      "name": "Organic Maps",
      "image_url": "https://summerofcode.withgoogle.com/media/org/organic-maps/cnhed0elppzqsjut-360.png",
      "image_background_color": "#ffffff",
      "description": "Offline maps app for tourists, cyclers & hikers",
      "url": "https://organicmaps.app",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/organic-maps",
      "ideas_url": "https://git.omaps.dev/organicmaps/organicmaps/wiki/GSoC-2025-ideas",
      "guide_url": "https://github.com/organicmaps/organicmaps/blob/master/docs/CONTRIBUTING.md",
      "topics": ["privacy", "maps", "navigation", "mobile", "offline"],
      "technologies": ["android", "java", "c++", "ios", "OpenStreetMap"],
      "irc_channel": "https://t.me/OrganicMaps",
      "contact_email": "mailto:join@organicmaps.app",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/organicmapsapp",
      "blog_url": "https://organicmaps.app/news/",
      "facebook_url": "https://www.facebook.com/OrganicMaps",
      "num_projects": 3,
      "projects": [
        {
          "title": "OpenStreetMap Editor Improvements",
          "short_description": "The Point of Interest (POI) Editor is a key part of Organic Maps for updating OpenStreetMap, and through this project, my aim is to significantly...",
          "description": "The Point of Interest (POI) Editor is a key part of Organic Maps for updating OpenStreetMap, and through this project, my aim is to significantly enhance its features and ease of use to provide a more complete editing experience. As improvements, I plan to deliver the ability for users to change the category of an existing place, add better options for marking places as closed or vacant, introduce a way to add map notes anywhere easily, include helpful icons in the category list for clearer selection, and improve the editor's ability to handle adding and modifying more complex types of map features.",
          "student_name": "Hemang Singh Manhas",
          "code_url": null,
          "proposal_id": "pGDBdqFs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zZcgJntn"
        },
        {
          "title": "Opening Hours Parser Revamp",
          "short_description": "The Organic Maps project aims to enhance the Opening Hours Parser to better support global users by handling complex time-related opening hours,...",
          "description": "The Organic Maps project aims to enhance the Opening Hours Parser to better support global users by handling complex time-related opening hours, public holidays, dynamic times (sunrise/sunset), and robust time zone management. This proposal includes:\nImproved Parser: Replacing the current Boost Spirit-based parser with a token-based approach to handle complex OSM opening hours formats, with better error reporting.\n\n\nPublic Holiday Integration: Adding support for public holidays using a new holiday database to recognize national and regional holidays in opening hours.\n\n\nTime Zone Handling: Using the Time Zone Boundary Builder and ZoneDetect libraries to dynamically adjust opening hours based on the user’s time zone and daylight savings time.\n\n\nNatural Time References: Implementing NOAA’s solar calculations to handle sunrise, sunset, dawn, and dusk in opening hours.",
          "student_name": "Raghad  Dahi",
          "code_url": null,
          "proposal_id": "S2lVwTCR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3lckoCe5"
        },
        {
          "title": "Bookmarks Backup and Sync to Nextcloud on Android",
          "short_description": "Implementation of primarily two features: 1. A multi-device bookmarks sync feature on Android, similar to the iCloud sync available on the iOS app....",
          "description": "Implementation of primarily two features:\n1.    A multi-device bookmarks sync feature on Android, similar to the iCloud sync available on the iOS app. This will allow users to securely maintain the same set of bookmarks across multiple devices without the need of any manual intervention.\n2.    A simpler one-way bookmarks backup feature, similar to the approach of WhatsApp to Google Drive/iCloud backups. This will allow users to securely store their bookmarks and restore them when needed.\n\nThe implementation will include pure client side encryption. It will be designed to transfer essentially only the changed bytes of the bookmark kml files no matter how big the lists are. This shall be done while ensuring compatibility with every Nextcloud server, with no need for any configuration on the server side. The UX (authentication flow and configuration) will be kept simple and accessible.",
          "student_name": "savsch",
          "code_url": null,
          "proposal_id": "QJ4BpoAg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nTUzX3o0"
        }
      ]
    },
    {
      "name": "Kotlin Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/kotlin-foundation/2wyghqyy8nvvl4cq-360.png",
      "image_background_color": "#ffffff",
      "description": "Advance the Kotlin programming language",
      "url": "https://kotlinfoundation.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/kotlin-foundation",
      "ideas_url": "https://kotlinlang.org/docs/gsoc-2025.html",
      "guide_url": "https://kotlinlang.org/docs/gsoc-overview.html",
      "topics": [
        "compilers",
        "programming languages",
        "software development",
        "libraries",
        "Programming & Build Tools"
      ],
      "technologies": [
        "gradle",
        "kotlin",
        "jvm",
        "Parsers & Compilers",
        "Multiplatform"
      ],
      "irc_channel": "https://slack-chats.kotlinlang.org/c/gsoc",
      "contact_email": "mailto:gsoc@kotlinfoundation.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/kotlin",
      "blog_url": "https://blog.jetbrains.com/kotlin/",
      "facebook_url": "",
      "num_projects": 8,
      "projects": [
        {
          "title": "Gradle Convention Plugin for Developing Jenkins Plugins",
          "short_description": "This project aims to modernize Jenkins plugin development using Gradle by updating the existing Gradle JPI plugin and introducing a new convention...",
          "description": "This project aims to modernize Jenkins plugin development using Gradle by updating the existing Gradle JPI plugin and introducing a new convention plugin. The primary goal is to achieve feature parity with Maven workflows, improve compliance with Jenkins hosting requirements, and enhance developer experience. Key deliverables include migrating the codebase from Groovy to Kotlin DSL, integrating Jenkins-specific tools like Plugin Compatibility Tester (PCT) and Bill of Materials (BOM), and simplifying build, test, and release processes for Jenkins plugins. This initiative will strengthen the Gradle ecosystem while improving the reliability and efficiency of Jenkins plugins.",
          "student_name": "Aarav Mahajan",
          "code_url": null,
          "proposal_id": "EQxVYxe2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3ujOIGDx"
        },
        {
          "title": "Build a Modern, Compiler-Integrated Kotlin Language Server",
          "short_description": "This project aims to build a high-performance, build-system agnostic Kotlin Language Server using the Kotlin Analysis API. The goal is to replace the...",
          "description": "This project aims to build a high-performance, build-system agnostic Kotlin Language Server using the Kotlin Analysis API. The goal is to replace the unmaintained and inefficient open-source LSP with a modern implementation that supports the full LSP 3.17 spec, works across editors like VSCode and Neovim, and delivers IDE-grade language features like diagnostics, completions, and navigation without depending on kotlinc. By the end of GSoC, this project will provide Kotlin developers with a powerful alternative for writing and maintaining code outside JetBrains tooling.",
          "student_name": "Hemram",
          "code_url": null,
          "proposal_id": "QF6Y9zyL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Y8cK79RJ"
        },
        {
          "title": "Add Kotlin Multiplatform support in Bazel",
          "short_description": "Currently, setting up Kotlin Multiplatform projects in Bazel is cumbersome and error-prone. By adding a kt_multiplatform() macro, enhancing...",
          "description": "Currently, setting up Kotlin Multiplatform projects in Bazel is cumbersome and error-prone. By adding a kt_multiplatform() macro, enhancing expect/actual handling, and enabling platform-specific dependency resolution through Gradle metadata, this project seeks to improve Bazel's support for Kotlin Multiplatform (KMP). Through the automation of source set management, native resolution of platform-specific dependencies within Bazel, and handling of expect/actual declarations, this work will simplify the developer experience. Deliverables include a new Bazel macro, a complete example project, comprehensive documentation, and CI-tested rules, providing a robust, user-friendly solution for building KMP projects in Bazel.",
          "student_name": "mruchika29",
          "code_url": null,
          "proposal_id": "rSDK6aka",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ndgAJh0J"
        },
        {
          "title": "Improving Configuration Cache and lock contention in key  Gradle plugins",
          "short_description": "This project aims to improve Gradle's build performance by enhancing Configuration Cache support and reducing resource contention in key plugins like...",
          "description": "This project aims to improve Gradle's build performance by enhancing Configuration Cache support and reducing resource contention in key plugins like android, kotlin, and java. The goal is to embed the Configuration Cache Report tool into Gradle Profiler to analyze cache behavior and identify areas of contention where multiple processes compete for shared resources, slowing down builds. The project will focus on optimizing cache utilization and minimizing contention, resulting in faster builds. Key deliverables include integrating the report tool, profiling Gradle plugins, implementing optimizations, and providing benchmarks comparing performance before and after improvements.",
          "student_name": "Nouran Atef",
          "code_url": null,
          "proposal_id": "tUUKJ4MO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/chp2Sbei"
        },
        {
          "title": "Support Android and iOS targets in Kotlin Multiplatform for Gemini using Vertex AI in Firebase",
          "short_description": "This project aims to address the challenge of creating a seamless and efficient integration between Gemini and Vertex AI in Firebase for Android and...",
          "description": "This project aims to address the challenge of creating a seamless and efficient integration between Gemini and Vertex AI in Firebase for Android and iOS platforms using Kotlin Multiplatform (KMP). The proposed solution is to develop an open-source KMP library that will support Gemini with Vertex AI in Firebase, focusing on best practices for creating KMP libraries and ensuring robust production implementation across both Android and iOS platforms.\n\nThe deliverables for this project will include:\n1.  Kotlin Multiplatform Library: This library will provide seamless integration between Gemini and Vertex AI in Firebase, supporting Android and iOS. \n\n2.  Sample Code and Documentation: Along with the library, sample code and thorough documentation will be provided to assist developers in utilizing the library effectively for their own projects.\n\nIn practice, developers can integrate this library into their Kotlin Multiplatform applications. Our library will offer a seamless process of integrating Vertex AI into Firebase apps for both iOS and Android.",
          "student_name": "SeanChinJunKai",
          "code_url": null,
          "proposal_id": "0zCXorBE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ow6J6ami"
        },
        {
          "title": "Enhanced Kotlin Code Quality Reporting with Gradle Problem API: Integration with Detekt and Ktlint",
          "short_description": "As developers, we always favor tools that enhance and streamline the programming process, including plugins that provide error reporting and insights...",
          "description": "As developers, we always favor tools that enhance and streamline the programming process, including plugins that provide error reporting and insights to improve the code quality. Kotlin developers using Gradle rely on tools like Detekt and Ktlint to enforce code quality. While Detekt and Ktlint offer reporting in various formats like (HTML, SARIF), their current integration with IDEs can be fragmented, requiring developers to switch contexts and manually review findings, which disrupts the coding workflow and slows down their development process. This project aims to implement a unified and actionable code quality reporting system through the integration of the recently introduced Gradle new Problems API. This API provides structured and rich information about the problems happening during a build. The information provided can be used by different interfaces such as Gradle’s console output, build scans, or IDEs to communicate any issues. With this API integration and structured format of the generated report, developers can experience faster issue identification, streamline debugging, and have improved code maintainability. This project will provide value to the Kotlin development community by upgrading the quality of their error reporting.",
          "student_name": "Vanessaj",
          "code_url": null,
          "proposal_id": "4Ml2E7RP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4UqgKDMe"
        },
        {
          "title": "IntelliJ Platform Gradle Plugin – Gradle Reporting and Parallel Verifications",
          "short_description": "The IntelliJ Platform Gradle Plugin, the official Gradle plugin for building, testing, verifying, configuring environments, and publishing plugins...",
          "description": "The IntelliJ Platform Gradle Plugin, the official Gradle plugin for building, testing, verifying, configuring environments, and publishing plugins for IntelliJ IDEs, includes a VerifyPluginTask that verifies a plugin against one or multiple IDEs. Currently, reporting is managed by the Verifier CLI, which employs its custom reporting system to generate verification reports; however, the VerifyPluginTask could benefit from Gradle's Reporting API for more configurable reports. Additionally, integrating Gradle's Worker API for parallel execution of the verifyPlugin task could enhance the IDE plugin development experience. The goal of this project is to assess the benefits and ultimately implement the necessary changes to the verifyPlugin task. Lastly, explore further optimizations to enhance the plugin development workflow.",
          "student_name": "Victoria Chuks Alajemba",
          "code_url": null,
          "proposal_id": "9QxU9UOP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lJoAo8B7"
        },
        {
          "title": "GSoC2025_Yongjun Hong_Maven Central publishing plugin for Gradle with new APIs",
          "short_description": "The migration to Maven Central's new API instance has introduced significant changes, requiring specialized support in Gradle plugins for seamless...",
          "description": "The migration to Maven Central's new API instance has introduced significant changes, requiring specialized support in Gradle plugins for seamless publishing. \n\nThis project aims to develop a new Gradle plugin compatible with the updated APIs, simplifying the process with Kotlin DSL extensions and automating tasks like GPG signing and artifact packaging.\n\nDeliverables include a fully functional plugin, comprehensive documentation, and robust test coverage.",
          "student_name": "Yongjun Hong",
          "code_url": null,
          "proposal_id": "cvEIbQPz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zCRWjfpd"
        }
      ]
    },
    {
      "name": "Free and Open Source Silicon Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/free-and-open-source-silicon-foundation/aie951otsp3xucok.png",
      "image_background_color": "#ffffff",
      "description": "Working together for Free and Open Source Silicon",
      "url": "https://www.fossi-foundation.org",
      "category": "Other",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/free-and-open-source-silicon-foundation",
      "ideas_url": "https://fossi-foundation.org/gsoc/gsoc25-ideas",
      "guide_url": "https://www.fossi-foundation.org/gsoc",
      "topics": ["hardware", "debug", "simulation", "electronic design tools"],
      "technologies": ["verilog", "vhdl", "risc-v", "compiler"],
      "irc_channel": "https://gitter.im/librecores/Lobby",
      "contact_email": "mailto:gsoc@fossi-foundation.org",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://fossi-foundation.org/news",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "PeakRDL Exporter Plugin for CSR Visualization on Makerchip",
          "short_description": "The project aims to add an exporter plugin for PeakRDL that enables a high level visualization for control & status register (CSR) design using...",
          "description": "The project aims to add an exporter plugin for PeakRDL that enables a high level visualization for control & status register (CSR) design using Makerchip’s IDE and the visual debug (VIZ) framework. Makerchip provides an IDE for TL-Verilog design and simulation, where special JavaScript code can be written (VIZ Model) alongside the design to add a higher level of signal visualization that helps in simulation debugging.",
          "student_name": "Ali Mohsen",
          "code_url": null,
          "proposal_id": "3FeY0Lho",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HzAZmK1x"
        },
        {
          "title": "Device-Under-Test Python Typing Stub Generator for cocotb tests",
          "short_description": "This project aims to create a tool that automatically generates Python typing stubs for the Device Under Test (DUT) in cocotb-based hardware...",
          "description": "This project aims to create a tool that automatically generates Python typing stubs for the Device Under Test (DUT) in cocotb-based hardware verification testbenches. By leveraging cocotb’s existing introspection capabilities, the tool will produce .pyi stub files describing the DUT’s interface – its hierarchy of modules and signals – in a statically typed fashion. These stubs will enable IDE features like auto-completion via VS Code’s Pylance and allow static type checkers such as mypy to catch errors in testbench code, significantly improving the hardware verification development experience​. The generated stubs will mirror the HDL design’s structure (with considerations for hierarchical vs. flat representations) and provide a structured abstraction of the DUT interface that can even be used for mocking or unit-testing components of the testbench. Initially, the stub generator will rely on runtime cocotb introspection only, but it will be designed with extensibility in mind, so that future enhancements (e.g., integrating a SystemVerilog language server like slang for richer type info) can be incorporated​. Over a 175-hour Google Summer of Code timeline, the project will deliver a working stub-generation utility, along with documentation, tests, and integration into the cocotb ecosystem, providing a concrete benefit to the open-source hardware verification community.",
          "student_name": "chaitanyasharma",
          "code_url": null,
          "proposal_id": "rbakqbAv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9RiVc4jy"
        },
        {
          "title": "OpenRISC Linux Feature Development",
          "short_description": "​​Jump Label Implementation​​ aims to eliminate branch overhead in kernel code by dynamically patching JMP/NOP instructions at runtime using GCC's...",
          "description": "​​Jump Label Implementation​​ aims to eliminate branch overhead in kernel code by dynamically patching JMP/NOP instructions at runtime using GCC's asm goto feature. This involves defining static branch templates (ARCH_STATIC_BRANCH_ASM for NOP cases and ARCH_STATIC_BRANCH_JUMP_ASM for JMP cases) and implementing core functions (arch_static_branch and arch_static_branch_jump) along with a runtime patching mechanism (arch_jump_label_transform). The key deliverable is near-zero-cost branch decisions, significantly improving performance for frequently checked kernel conditions like tracepoints and debugging checks.\n\n​​Ftrace Implementation​​ provides efficient function tracing (function) and call-graph profiling (function_graph) with minimal overhead. The -pg compiler flag inserts mcount() calls that dynamically redirect to either a no-op stub (when disabled) or a full tracer (when enabled). The implementation includes dynamic redirection in mcount(), the core function tracer (ftrace_trace_function), and the extended function_graph tracer with entry/exit hooks (ftrace_graph_caller and return_to_handler). This enables deep call-stack analysis while maintaining low runtime cost when tracing is inactive, supporting dynamic kernel debugging with minimal performance impact.",
          "student_name": "Chen Miao",
          "code_url": null,
          "proposal_id": "aJ9KZpnG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qYsJ8YEg"
        },
        {
          "title": "Architectural Improvements to OpenPiton+Ariane for RISC-V Profile Compliance",
          "short_description": "This project aims to enhance the OpenPiton+Ariane architecture to progress toward RISC-V RVA23 profile compliance. The primary focus will be...",
          "description": "This project aims to enhance the OpenPiton+Ariane architecture to progress toward RISC-V RVA23 profile compliance. The primary focus will be implementing the Svnapot extension, which allows for Naturally Aligned Power-Of-Two regions in memory to improve TLB efficiency. I will modify the CVA6 Memory Management Unit (MMU), specifically the Page Table Walker (PTW) and Translation Lookaside Buffer (TLB), to support this extension. As stretch goals, I plan to implement additional supervisor extensions required for RVA23 compliance, such as Svpbmt (Page-Based Memory Types) and Svadu (Hardware Updating of A/D Bits). The project will include comprehensive testing and documentation, ensuring all implementations conform to RISC-V specifications while integrating seamlessly with the existing architecture.",
          "student_name": "Jayishnu",
          "code_url": null,
          "proposal_id": "K0LuZBP2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JPg97sG6"
        },
        {
          "title": "Metro-MPI++",
          "short_description": "Modern RTL simulation is computationally expensive and often limited by single-node processing capabilities. This proposal aims to improve...",
          "description": "Modern RTL simulation is computationally expensive and often limited by single-node processing capabilities. This proposal aims to improve Metro-MPI++, a tool for distributed RTL simulation using Verilator and MPI, to better handle large-scale designs like OpenPiton. The project focuses on automating tile and interconnect detection in OpenPiton, optimizing MPI-based simulation interfaces, integrating hybrid parallelism with OpenMP, and laying the groundwork for FPGA backend support. The deliverables include a scalable partitioning framework, enhancements to the simulation runtime, example simulations demonstrating speedup, and contributions to Verilator’s partitioning features. These improvements will make RTL simulation more scalable, accessible, and efficient for open-source hardware projects.",
          "student_name": "Kislay Arya",
          "code_url": null,
          "proposal_id": "xrwHEIg6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PkUd6Us3"
        },
        {
          "title": "ParrotTrace: A Real-Time RISC-V Tracer for ZynqParrot",
          "short_description": "The goal of this project is to design and integrate a RISC-V compliant trace encoder into the ZynqParrot framework — a hostless, FPGA-based platform...",
          "description": "The goal of this project is to design and integrate a RISC-V compliant trace encoder into the ZynqParrot framework — a hostless, FPGA-based platform for ASIC prototyping and system validation. \n\nThis project will implement a SystemVerilog-based instruction trace encoder compliant with the RISC-V Trace Specification, targeting efficient tracking of processor control flow changes (jumps, calls, branches, exceptions). Based on the RISC-V Trace Specification (E-Trace), the encoder will provide non-intrusive insight into program control flow by capturing branch deltas, jump targets, exceptions, and traps. These compressed traces will be used for post-silicon debug, profiling, and performance monitoring of complex RISC-V-based systems. The encoder \nwill optionally support multiple trace modes (delta/full address, implicit exception, implicit return, jump target caching) and will output compact trace packets via a configurable output sink (FIFO, memory, or debug port). Integration tasks include Vivado IPI block diagram design, driver development in C++ for trace co-simulation/emulation, and decoder support. \n\nThe encoder will provide a high-bandwidth trace interface capturing instruction-level context, configurable compression modes for efficient trace packet generation, and optional support for synchronization, interrupts/traps, and jump/branch prediction.\n \nThe deliverables include RTL implementation of trace encoder and interface module, integration into ZynqParrot’s hardware flow and Vivado design, validation with co-simulation along with in-lab FPGA deployment, and host software to decode and visualize traces using RISC-V ELF binaries. \n\nBy adding fine-grained program observability, this work enhances the debuggability of complex RISC-V designs running on an FPGA and improves ZynqParrot’s capabilities as a full-stack prototyping platform.",
          "student_name": "Venkateshwaran Sivaramakrishnan",
          "code_url": null,
          "proposal_id": "PA84de0W",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jv19hQB4"
        }
      ]
    },
    {
      "name": "Django Software Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/django-software-foundation-8o/685unxpkksrvfugu-360.png",
      "image_background_color": "#ffffff",
      "description": "Web framework for perfectionists with deadlines",
      "url": "https://www.djangoproject.com",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/django-software-foundation-8o",
      "ideas_url": "https://code.djangoproject.com/wiki/SummerOfCode2025",
      "guide_url": "https://code.djangoproject.com/wiki/SummerOfCode2025",
      "topics": ["web", "python"],
      "technologies": ["python", "django"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://forum.djangoproject.com/c/internals/mentorship/10",
      "twitter_url": "",
      "blog_url": "https://www.djangoproject.com/weblog/",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Django Admin: Add Keyboard Shortcuts and Command Palette",
          "short_description": "This proposal aims to improve the experimental package `django-admin-keyboard-shortcuts` by adding more shortcuts, fixing existing issues while also...",
          "description": "This proposal aims to improve the experimental package `django-admin-keyboard-shortcuts` by adding more shortcuts, fixing existing issues while also building a command palette on top to make navigation and actions more convenient and bring those features into Django core for out-of-the-box support.  \nThe majority of work that needs to be done is around: improving shortcut keys event listener to support modifier keys and arbitrarily long sequence-based shortcuts, developing model instance search and developing a command palette.",
          "student_name": "A. Rafey Khan",
          "code_url": null,
          "proposal_id": "KSPsax9b",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4jQE5v5B"
        },
        {
          "title": "Bring django-template-partials into core",
          "short_description": "This project aims to bring native support for partial templates into Django’s core template engine by integrating functionality inspired by the...",
          "description": "This project aims to bring native support for partial templates into Django’s core template engine by integrating functionality inspired by the `django-template-partials` package. Currently, Django lacks a built-in way to define and reuse small template blocks, which limits modularity and readability, especially in modern, dynamic web applications using tools like HTMX.\n\nThe proposed solution involves extending Django’s template loaders and introducing new template tags (`partialdef` and `partial`) to define and render partials within templates. It also includes optimizing template caching for partials and ensuring seamless migration from the third-party package.\n\nThis enhancement will improve template reusability, developer experience, and alignment with modern web development practices.",
          "student_name": "Daniyal Abbasi",
          "code_url": null,
          "proposal_id": "hgqRkoS0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iG7EzQ1e"
        },
        {
          "title": "Automate processes within Django contribution workflow",
          "short_description": "Django’s contribution workflow has several manual and repetitive processes that create bottlenecks for maintainers and contributors. These processes,...",
          "description": "Django’s contribution workflow has several manual and repetitive processes that create bottlenecks for maintainers and contributors. These processes, ranging from ensuring coding style adherence to checking test coverage, commit message formatting, and proper deprecation handling, are error-prone and take up valuable time. This project aims to automate these workflows, reducing manual effort, improving contributor experience, and maintaining Django’s high-quality standards.",
          "student_name": "Saurabh K",
          "code_url": null,
          "proposal_id": "NeTUBdp1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xF6r182s"
        }
      ]
    },
    {
      "name": "OSGeo (Open Source Geospatial Foundation)",
      "image_url": "https://summerofcode.withgoogle.com/media/org/osgeo-open-source-geospatial-foundation/yundulx00fbd1akm-360.png",
      "image_background_color": "#ffffff",
      "description": "The Open Source Geospatial Foundation",
      "url": "https://www.osgeo.org/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/osgeo-open-source-geospatial-foundation",
      "ideas_url": "https://wiki.osgeo.org/wiki/Google_Summer_of_Code_2025_Ideas",
      "guide_url": "https://wiki.osgeo.org/wiki/Google_Summer_of_Code_Recommendations_for_Students",
      "topics": [
        "open science",
        "gis",
        "citizen science",
        "geolocation",
        "mapping"
      ],
      "technologies": ["c", "python", "javascript", "java", "c++"],
      "irc_channel": "https://wiki.osgeo.org/wiki/Google_Summer_of_Code_Recommendations_for_Students#How_to_get_in_contact_via_IRC",
      "contact_email": "mailto:gsoc-admin@osgeo.org",
      "mailing_list": "https://www.osgeo.org/community/communications/",
      "twitter_url": "https://x.com/osgeo",
      "blog_url": "http://planet.osgeo.org/",
      "facebook_url": "https://www.facebook.com/OSGeoFoundation/",
      "num_projects": 9,
      "projects": [
        {
          "title": "Migrating and updating the existing CWL runners",
          "short_description": "The ZOO-Project is an open-source WPS (Web Processing Service) platform. The propose of this proposal is to reorganize and improve the ZOO-Project...",
          "description": "The ZOO-Project is an open-source WPS (Web Processing Service) platform. The propose of this proposal is to reorganize and improve the ZOO-Project CWL runner ecosystem by creating a unified and modular repository structure. The goal is to make the code for existing CWL runners (EOEPCA, Argo Workflows, Calrissian) more generic, facilitate the addition of new runners, and provide clear documentation. Proposal's plan includes using abstract classes to reduce code duplication, enhancing the entry point logic, and ensuring compatibility with ZOO-Kernel and CWL standards.",
          "student_name": "Aryan Khare",
          "code_url": null,
          "proposal_id": "03qUkaij",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DHY55xFA"
        },
        {
          "title": "Implementing Sloan Ordering Algorithm from Boost Graph Library to pgRouting",
          "short_description": "This project aims to integrate the Sloan sparse matrix ordering algorithm from the Boost Graph Library into pgRouting, enhancing its capabilities for...",
          "description": "This project aims to integrate the Sloan sparse matrix ordering algorithm from the Boost Graph Library into pgRouting, enhancing its capabilities for graph optimization for both undirected and directed graphs. The Sloan algorithm generates optimal vertex ordering that reduces profile and bandwidth of graphs, significantly improving the efficiency of matrix operations in network analysis applications.\n\nWhile pgRouting includes several matrix manipulation algorithms, it lacks specific matrix ordering algorithms like Sloan ordering that are essential for optimizing sparse matrices in network analysis. Current workarounds require users to export data to external tools, breaking workflow continuity.\n\nI plan to develop a new function pgr_sloanOrdering() with complete integration, comprehensive error handling, and support for both directed and undirected graphs. The implementation will leverage the Boost Graph Library's existing algorithm with careful adaptation to pgRouting's architecture.\nThe project deliverables include a fully implemented Sloan ordering algorithm integration, comprehensive documentation and usage examples, an extensive test suite with performance benchmarks, and support for various graph types with configurable parameters.\n\nThis project will benefit the community by expanding pgRouting's graph analysis capabilities, particularly for applications in transportation networks, utility network management, and scientific computing where matrix ordering significantly impacts computational efficiency.",
          "student_name": "Bipasha Gayary",
          "code_url": null,
          "proposal_id": "HKakGlaE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AYTTkvxI"
        },
        {
          "title": "Implementing King Ordering Algorithm and Minimum Degree Ordering Algorithm for pgRouting",
          "short_description": "This project aims to implement the King Ordering Algorithm and Minimum Degree Ordering Algorithm from the Boost Graph Library into pgRouting,...",
          "description": "This project aims to implement the King Ordering Algorithm and Minimum Degree Ordering Algorithm from the Boost Graph Library into pgRouting, expanding its graph reordering capabilities beyond the existing Cuthill-McKee ordering. These algorithms optimize graph structures for improved numerical solver performance in scientific computing and network analysis. The King Ordering Algorithm minimizes graph bandwidth by reordering vertex indices based on pseudo-degree, reducing adjacency gaps and enhancing sparse matrix computations. The Minimum Degree Ordering Algorithm reduces fill-in during Cholesky factorization by reordering matrix rows to minimize nonzero elements introduced during Gaussian elimination. By integrating these algorithms, pgRouting will offer more efficient preprocessing options, benefiting large-scale network analysis and pathfinding tasks. Deliverables include the implementation of pgr_kingOrdering() and pgr_minimumDegreeOrdering(), comprehensive documentation, test cases ensuring correctness, and regular progress updates.",
          "student_name": "Fan Wu",
          "code_url": null,
          "proposal_id": "3r3NWLiM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HijWa06g"
        },
        {
          "title": "AI-ready Dataset Metadata as a Service using ZOO-Project",
          "short_description": "The project focuses on extending the ZOO-Project by adding support for the GeoCroissant metadata standard and implementing Data-Centric AI (DCAI)...",
          "description": "The project focuses on extending the ZOO-Project by adding support for the GeoCroissant metadata standard and implementing Data-Centric AI (DCAI) workflows. Currently, the ZOO-Project lacks built-in tools for generating AI-ready metadata or assessing the quality of annotated geospatial datasets, which are essential for robust and reusable GeoAI workflows. By integrating GeoCroissant, a JSON-LD-based metadata format tailored for geospatial machine learning, and exposing these capabilities as OGC API – Processes, the project will enable users to generate, validate, and share standardized metadata. Additionally, DCAI services will be developed using Cleanlab and confident learning techniques to detect label noise, assess reliability, and guide dataset improvement. Deliverables include metadata generation and validation tools, quality assessment services, and full integration of these features into the ZOO-Project to support AI-ready data pipelines.",
          "student_name": "Harsh Shinde",
          "code_url": null,
          "proposal_id": "h2JP1tXe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Nkzade2v"
        },
        {
          "title": "Web Administration Interface for istSOS",
          "short_description": "The project aims to develop a web-based administrative interface for istSOS, focussed on simplify the management and monitoring of SensorThings API...",
          "description": "The project aims to develop a web-based administrative interface for istSOS,\nfocussed on simplify the management and monitoring of SensorThings API\ncomponents. The project will provide an intuitive method for log new sensors\nand devices, configuring metadata, and real-time tracking key sensor metrics,\nincluding received data, transmission delays, and overall system performance.\nThis will also enhance usability, getting rid of comple API interactions, making\nistSOS more accessible to researchers, engineers, and IoT enthusiasts.\nCurrently, the istSOS’ graphical interface appears outdated and not aligned with\nmodern software standards. My project will also focus on updating the visual\nappearance and usability of the interface to enhance the user experience and\nmake the system more accessible and simple to use.\nAll the code will be followed with detailed comments and documentation,\nmaking future maintenance easier.",
          "student_name": "Luca Abate",
          "code_url": null,
          "proposal_id": "IgVUItM6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/A4bqz8NW"
        },
        {
          "title": "Grafana Data Source Plugin for istSOS4",
          "short_description": "This project focuses on developing an advanced Grafana plugin for istSOS4 that supports full OGC SensorThings API queries with parametrization and...",
          "description": "This project focuses on developing an advanced Grafana plugin for istSOS4 that supports full OGC SensorThings API queries with parametrization and real-time data streaming. As The existing SensorThings API DataSource plugins forces users to \nmanually write raw API queries in Grafana's code editor to apply queries and lacks real-time updates. it delivers\n- A fully functional Grafana data source plugin with full parametrization.\n- Support for real-time data streaming and historical data queries.\n- A user-friendly configuration UI for defining data sources and setting up custom queries.\n- Comprehensive documentation and examples for easy adoption by the community.",
          "student_name": "Mostafa Magdyy",
          "code_url": null,
          "proposal_id": "qMbT20iH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tZDVJvPk"
        },
        {
          "title": "Add JSON output to different tools in C for GRASS GIS",
          "short_description": "Currently, most GRASS tools produce data in plain text, which forces users to write custom parsing code when processing output in Python. This...",
          "description": "Currently, most GRASS tools produce data in plain text, which forces users to write custom parsing code when processing output in Python. This project aims to leverage the recently integrated Parson library to expand JSON output capabilities across more GRASS GIS tools. By collaborating with mentors, I plan to finalise a robust JSON output structure and implement an option for users to choose between plain text and JSON for each updated tool. I will develop Python test cases to ensure the reliability of the JSON output, provide thorough documentation with example outputs, and create practical demonstrations—such as reading JSON data into pandas—to showcase how this enhancement can streamline data processing. This initiative will significantly improve the usability and flexibility of GRASS GIS tools, making them more accessible for data science workflows.",
          "student_name": "Nishant Bansal",
          "code_url": null,
          "proposal_id": "2aMCjCiB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GPVGd3DH"
        },
        {
          "title": "istSOS Setup Configuration Wizard",
          "short_description": "This project proposes the development of a graphical setup configuration wizard for istSOS4, an open-source Sensor Observation Service. Currently,...",
          "description": "This project proposes the development of a graphical setup configuration wizard for istSOS4, an open-source Sensor Observation Service. Currently, configuring istSOS4 for Docker deployment requires manual editing of .env files, which can be error-prone and challenging for new users. To solve this, I will build a user-friendly React-based interface with a Node.js backend that guides users through the configuration process step-by-step, validates inputs, and automatically generates a valid .env file.\n\nThe final deliverables will include:\n\n . A multi-step web-based GUI wizard\n\n . Real-time validation and feedback\n\n . Support for database, API, logging, and advanced settings\n\n . Comprehensive documentation and tutorials for deployment\n\nThis tool will make deploying istSOS4 faster, easier, and more accessible for both technical and non-technical users.",
          "student_name": "Rahull004",
          "code_url": null,
          "proposal_id": "UBbKdIfG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IBbXBca9"
        },
        {
          "title": "Implementing the Bandwidth Algorithm for pgRouting",
          "short_description": "This project intends to port the Boost Graph Library's 'Bandwidth' algorithm for pgRouting into OSGeo. Graph bandwidth is a primitive parameter in...",
          "description": "This project intends to port the Boost Graph Library's 'Bandwidth' algorithm for pgRouting into OSGeo. Graph bandwidth is a primitive parameter in graph theory that measures the largest distance between adjacent vertices when placed in a linear manner. In the context of pgRouting and spatial databases, calculation of graph bandwidth can optimize routing algorithms and query performance on huge road networks.\nThe implementation will comprise:\n\nBuilding pgr_bandwidth() function with SQL interface\nC++ backend utilizing Boost Graph Library\nIntegration with current pgRouting algorithms (especially Cuthill-McKee ordering)\nThorough documentation and examples\nUnit testing using pgTap\n\nThe algorithm will assist users in examining structural features of road networks, locating bottlenecks, and database operation optimization using enhanced cache locality and query execution. This project fills the gap of existing pgRouting capabilities by providing another valuable graph metric utility for network topology examination.\nThe deployment will adhere to pgRouting's coding guidelines and will be thoroughly tested against diverse datasets such as pgRouting sample data, benchmark graphs, and real-world transport networks.RetryClaude may err. Kindly double-check responses.",
          "student_name": "Saloni Kumari",
          "code_url": null,
          "proposal_id": "3VCyizLr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KkW6RVJh"
        }
      ]
    },
    {
      "name": "Jenkins",
      "image_url": "https://summerofcode.withgoogle.com/media/org/jenkins-wp/7qlgfron9nyj194y-360.png",
      "image_background_color": "#ffffff",
      "description": "Jenkins, build great things at any scale",
      "url": "https://jenkins.io",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/jenkins-wp",
      "ideas_url": "https://www.jenkins.io/projects/gsoc/2025/project-ideas/",
      "guide_url": "https://www.jenkins.io/projects/gsoc/contributors",
      "topics": [
        "developer tools",
        "automation",
        "continuous integration",
        "continuous delivery",
        "devops"
      ],
      "technologies": ["javascript", "java", "go", "docker", "kubernetes"],
      "irc_channel": "https://gitter.im/jenkinsci/gsoc-sig",
      "contact_email": "",
      "mailing_list": "https://community.jenkins.io/c/contributing/gsoc/6",
      "twitter_url": "https://x.com/jenkinsci",
      "blog_url": "https://www.jenkins.io/blog",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Complete build retooling of jenkins.io",
          "short_description": "The Jenkins website currently relies on Awestruct, an outdated static site generator, leading to maintenance challenges, inconsistent user...",
          "description": "The Jenkins website currently relies on Awestruct, an outdated static site generator, leading to maintenance challenges, inconsistent user experience, and missing versioned documentation. To address this, the project aims to migrate non-versioned content to Gatsby and versioned documentation to Antora. The solution includes modernising the UI/UX with shared React components, integrating Algolia search, maintaining SEO-friendly redirects, and automating builds for smoother contributions. Key deliverables include a full content migration, unified responsive design with a Jenkins theme, cross-version navigation, and a CI/CD pipeline for seamless deployments.",
          "student_name": "Birajit Saikia",
          "code_url": null,
          "proposal_id": "7oW5d7BM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/FQsbBQzK"
        },
        {
          "title": "Jenkins Domain specific LLM based on actual Jenkins usage using ci.jenkins.io data",
          "short_description": "This project aims to improve Jenkins CI/CD troubleshooting by creating a domain-specific Large Language Model (LLM). The core task involves...",
          "description": "This project aims to improve Jenkins CI/CD troubleshooting by creating a domain-specific Large Language Model (LLM). The core task involves fine-tuning an open-source LLM (e.g., Phi-4/Qwen 2.5) on structured data derived from ci.jenkins.io build, logs and metadata, using resource-efficient techniques like QLoRA with Unsloth. To ensure feasibility despite potential API limitations, a primary strategy involves heuristic/manual data curation, supplemented by LLM assistance where possible. A baseline Retrieval-Augmented Generation (RAG) system incorporating Jenkins documentation will be implemented to enhance factual accuracy. Key deliverables include the fine-tuned model (GGUF for Ollama), a basic FastAPI backend, the RAG pipeline, and an evaluation report incorporating both automated metrics and qualitative mentor feedback",
          "student_name": "Chiruu12",
          "code_url": null,
          "proposal_id": "BAdu7A7A",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oTNbvlrM"
        },
        {
          "title": "AI-Powered Chatbot for Quick Access to Jenkins Resources",
          "short_description": "Many Jenkins beginners often struggle with setup issues, plugin compatibility, and troubleshooting pipeline configurations. This project proposes the...",
          "description": "Many Jenkins beginners often struggle with setup issues, plugin compatibility, and troubleshooting pipeline configurations. This project proposes the development of an AI-powered chatbot integrated into Jenkins inside a plugin. This AI tool is designed to assist users by providing context-aware support based con Jenkins documentation and community resources. \n\nThe assistant will be delivered as a Jenkins plugin, combining a modern React frontend, a Java backend, and a local lightweight AI model exposed via a FastAPI service. Instead of relying on fine-tuned models, the project exploits Retrieval-Augmented-Generation(RAG) approach, fetching relevant context from a vector index built from Jenkins docs and community forums,\n\nDeliverables include: a complete indexing pipeline, a functioning RAG-based LLM assistant, a modern UI, a Jenkins plugin that integrates the AI service, a robust testing coverage and a clear documentation. \n\nThe final goal is to reduce the learning curve of the Jenkins users, allowing them access to a smart, embedded support tool.",
          "student_name": "Giovanni Vaccarino",
          "code_url": null,
          "proposal_id": "Vkk3sT6t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hVAyeHoe"
        },
        {
          "title": "Improving Tekton Client Plugin for Jenkins",
          "short_description": "This project aims to enhance the Jenkins Tekton Client Plugin by implementing full CRUD (Create, Read, Update, Delete) operations for Tekton...",
          "description": "This project aims to enhance the Jenkins Tekton Client Plugin by implementing full CRUD (Create, Read, Update, Delete) operations for Tekton resources, including Tasks, Pipelines, PipelineRuns, TaskRuns, Triggers, TriggerBindings, and TriggerTemplates. By adding Read and Update capabilities, the plugin will support complete lifecycle management directly from Jenkins, improving CI/CD workflows and reducing context switching.\n\nDeliverables include a fully functional plugin with CRUD support, improved error handling, integration with Jenkins credentials, user-friendly UI components, comprehensive testing, and detailed documentation. This enhancement will streamline cloud-native CI/CD management within Jenkins, making Tekton resources more accessible and manageable.",
          "student_name": "Maeve Ho",
          "code_url": null,
          "proposal_id": "qUQzEt5G",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NgZbuUAK"
        },
        {
          "title": "Improving Plugin Modernizer",
          "short_description": "Jenkins Plugin Modernizer overcomes the hurdles of manually updating and maintaining more than 2000 Jenkins plugins. Most plugins are based on...",
          "description": "Jenkins Plugin Modernizer overcomes the hurdles of manually updating and maintaining more than 2000 Jenkins plugins. Most plugins are based on outdated technologies or deprecated APIs, and modernization is a crucial but time-consuming process. The project suggests automating the use of Open Rewrite recipes to modernize plugins, beginning with the creation of a metadata storage system to track modernization efforts and recipe applications. Secure REST APIs will be created to communicate with this metadata to allow easy reading and updates. This modernization metadata will be stored on Jenkins Report Site. The project will also entail automation of the finding and updating of low-scoring health plugins so that there will be an active maintenance approach. Visualization of the progress of modernization will be included in the Jenkins Statistics Site to enable the community to see improvements.  More recipes will be added based on community feedback to provide extensibility.",
          "student_name": "Raunak Madan",
          "code_url": null,
          "proposal_id": "hfPbNCkB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cEtNKcdc"
        }
      ]
    },
    {
      "name": "Apache DataFusion",
      "image_url": "https://summerofcode.withgoogle.com/media/org/apache-datafusion/tqdstft3qk2yleu9-360.png",
      "image_background_color": "#ffffff",
      "description": "Foundational library for DBs and compute engines",
      "url": "https://datafusion.apache.org/",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/apache-datafusion",
      "ideas_url": "https://datafusion.apache.org/contributor-guide/gsoc_project_ideas",
      "guide_url": "https://datafusion.apache.org/contributor-guide/gsoc_application_guidelines",
      "topics": ["databases", "big data", "OLAP"],
      "technologies": ["python", "rust", "sql", "arrow"],
      "irc_channel": "https://discord.gg/jHzkpK4em5",
      "contact_email": "",
      "mailing_list": "dev@datafusion.apache.org",
      "twitter_url": "https://x.com/apachedatafusio",
      "blog_url": "https://datafusion.apache.org/blog/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Supporting Correlated Subqueries in Apache DataFusion",
          "short_description": "This project aims to implement comprehensive support for correlated subqueries in Apache DataFusion by applying Hyper's 'Unnesting Arbitrary Queries'...",
          "description": "This project aims to implement comprehensive support for correlated subqueries in Apache DataFusion by applying Hyper's 'Unnesting Arbitrary Queries' framework. With a complete solution that can transform arbitrarily nested correlated subqueries into standard join operations through a systematic approach. The implementation will include enhancing the binding phase to handle multi-level nesting, implementing the core dependent join transformation algorithm, applying operator-specific pushdown rules for all relevant operators, and optimizing redundant operations. This approach provides a general solution that works for all types of subqueries (scalar, EXISTS, IN) and handles complex cases involving aggregations and multiple levels of correlation. By adopting this proven theoretical framework, DataFusion will gain robust SQL compatibility and significantly improved analytical capabilities, enabling users to express complex data relationships efficiently.",
          "student_name": "renjj",
          "code_url": null,
          "proposal_id": "DOrDMlzI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zYjgxNUI"
        },
        {
          "title": "Optimizing Spill File Format and Compression for Efficient Out-of-memory Query Execution",
          "short_description": "Apache DataFusion is an in-memory query execution engine optimized for OLAP workloads using Apache Arrow's columnar format. However, to support...",
          "description": "Apache DataFusion is an in-memory query execution engine optimized for OLAP workloads using Apache Arrow's columnar format. However, to support queries that exceed available memory, DataFusion must spill intermediate results (e.g., from sort or aggregate operators) to disk. While spill support is actively being developed in the community, current spill file handling uses the Arrow IPC stream format by default. This project proposes to explore and implement more efficient spill file layouts and compression techniques tailored for spill-heavy workloads. The goal is to reduce disk I/O overhead and improve query performance under memory pressure.",
          "student_name": "SeoYoung Lee",
          "code_url": null,
          "proposal_id": "I2XMkMSN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3Ooae7Uu"
        }
      ]
    },
    {
      "name": "Ste||ar group",
      "image_url": "https://summerofcode.withgoogle.com/media/org/stear-group/sebxbtinyakvrevb-360.png",
      "image_background_color": "#ffffff",
      "description": "Shaping a Scalable Future",
      "url": "http://stellar-group.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/stear-group",
      "ideas_url": "https://github.com/STEllAR-GROUP/hpx/wiki/Google-Summer-of-Code-%28GSoC%29-2025#2025-hpx-project-ideas",
      "guide_url": "https://github.com/STEllAR-GROUP/hpx/wiki/GSoC-Submission-Template",
      "topics": [
        "library",
        "optimization",
        "parallel algorithms",
        "hpx",
        "application"
      ],
      "technologies": ["c++", "hpc"],
      "irc_channel": "https://discord.com/invite/Tn9QuzVjvy",
      "contact_email": "mailto:https://mail.cct.lsu.edu/mailman/listinfo/hpx-users",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://github.com/STEllAR-GROUP/hpx",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "Integrate HPX algorithms with Nvidia CCCL (Thrust)",
          "short_description": "This project proposes integrating NVIDIA's Thrust parallel algorithms library with HPX to enable GPU acceleration while maintaining consistency with...",
          "description": "This project proposes integrating NVIDIA's Thrust parallel algorithms library with HPX to enable GPU acceleration while maintaining consistency with HPX's existing parallel algorithm interfaces. The solution involves creating a specialized Thrust executor that extends HPX's CUDA executor capabilities, implementing automatic memory management for data transfers between host and device, and developing a dispatching mechanism that selects the appropriate backend (CPU or GPU) based on execution policies. Key technical components include a version-aware API layer to handle Thrust compatibility, exception handling that bridges Thrust/CUDA errors with HPX's error system, and template-based algorithm overloads that transparently route calls to Thrust implementations when GPU execution is requested. The implementation will proceed through four phases: establishing core infrastructure (executor, memory management), integrating fundamental algorithms (transform, reduce, sort), adding HPX execution policy support, and concluding with comprehensive testing and optimization. The resulting system will allow developers to write single code paths that automatically leverage GPU acceleration through Thrust when available, all while maintaining HPX's asynchronous execution model through future-based interfaces.",
          "student_name": "Aditya Sapra",
          "code_url": null,
          "proposal_id": "exlde62T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4lvpXgm7"
        },
        {
          "title": "Annotate Public Api with Contracts",
          "short_description": "HPX being a library for parallel and distributed computing should address errors that are hard to catch during development due to the unpredictable...",
          "description": "HPX being a library for parallel and distributed computing should address errors that are hard to\r\ncatch during development due to the unpredictable use and the complexity of thread safety. Contracts solve these problems by allowing developers to define preconditions, postconditions,\r\nand invariants within function declarations to make sure that correctness rules are enforced and\r\nclear in the code.",
          "student_name": "Alexandros Papadakis",
          "code_url": null,
          "proposal_id": "9x73rDgZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6RKWFH8U"
        },
        {
          "title": "Exposing HPX Using C++ 20 Modules",
          "short_description": "This project aims to modernize the HPX parallel computing library by introducing C++20 Modules, addressing compilation performance and code...",
          "description": "This project aims to modernize the HPX parallel computing library by introducing C++20 Modules, addressing compilation performance and code organization challenges. I develop a comprehensive conversion strategy using a Python-based tracking system to analyze dependencies, create module interfaces, and ensure backward compatibility. The project will deliver a modularized HPX library with improved build system integration, enhanced symbol visibility, and detailed documentation, ultimately providing developers with a more efficient and maintainable parallel computing framework.",
          "student_name": "Haokun Wu",
          "code_url": null,
          "proposal_id": "9TbGh1dq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JA1znIsG"
        },
        {
          "title": "Pythonize HPX – A Pythonic API for the HPX C++ Library",
          "short_description": "This project aims to create a pip-installable Pythonic API for the HPX C++ parallel runtime system, making HPX’s powerful asynchronous and parallel...",
          "description": "This project aims to create a pip-installable Pythonic API for the HPX C++ parallel\r\nruntime system, making HPX’s powerful asynchronous and parallel programming primitives accessible to Python developers. \r\n\r\nHPX provides a high-performance task-based runtime with parallel algorithms and distributed data structures in C++, but using it currently requires C++ expertise (GSoC – The STE||AR Group). By building a Python API (tentatively named hpx-pyapi), we will expose key HPX functionalities (like futures, asynchronous tasks, and parallel algorithms) through an intuitive Python interface. This will enable users to leverage multi-core and distributed computing capabilities of HPX from Python applications without needing to write C++ code (GSoC – The STE||AR Group). \r\n\r\nIn essence, the project ”Pythonizes” HPX: users can “import hpx” in Python and readily apply HPX’s concurrency features to speed up computations. The end product will be a pip-installable package with comprehensive documentation and examples, significantly lowering the barrier for Python users to exploit HPX’s performance advantages.",
          "student_name": "rraj-official",
          "code_url": null,
          "proposal_id": "oUT11mn6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KcLXVKMJ"
        },
        {
          "title": "Implement hpx::system_scheduler as described in P2079 (System Execution Context)",
          "short_description": "This project implements hpx::system_scheduler as a P2079-compliant system execution context for HPX, mapping tasks to hpx::threads for enhanced...",
          "description": "This project implements hpx::system_scheduler as a P2079-compliant system execution context for HPX, mapping tasks to hpx::threads for enhanced scalability and performance. I will develop a scheduler aligned with P2079 and P2300’s Senders/Receivers, optimize bulk scheduling, and ensure thread safety. The plan includes four phases: building the scheduler, optimizing performance, integrating with Senders/Receivers, and testing/benchmarking. Deliverables include hpx::system_scheduler in hpx/execution, unit tests validating sender signals, benchmarks aiming for 20-30% execution time reduction, and detailed Markdown documentation. A merge-ready pull request will be submitted to the HPX repository by Week 12.",
          "student_name": "Sai Charan Arvapally",
          "code_url": null,
          "proposal_id": "qNj7PF3h",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1y8CtN5n"
        },
        {
          "title": "Fix S/R versions of the parallel algorithms",
          "short_description": "This project aims to fix critical issues in the S/R versions of HPX’s algorithms. Specifically, the parallel version of the following twelve...",
          "description": "This project aims to fix critical issues in the S/R versions of HPX’s algorithms. Specifically, the parallel version of the following twelve algorithms: nth_element, partial_sort, partial_sort_copy, set_difference, set_intersection, set_symmetric_difference, set_union, shift_left, shift_right, sort, sort_by_key, and stable_sort. These algorithms currently have not passed the S/R unit tests defined in PR #6494, which undermines their reliability and efficiency in parallel processing environments. Also, for the sort_by_key, shift_left, and shift_right algorithms, their CPO (Customization Point Object) is not based on tag_parallel_algorithm, which needs further improvement.",
          "student_name": "Zhengnan Hua",
          "code_url": null,
          "proposal_id": "dGncMF8M",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5o95cHBr"
        }
      ]
    },
    {
      "name": "UC OSPO",
      "image_url": "https://summerofcode.withgoogle.com/media/org/center-for-research-in-open-source-software-cross/ndbkr7fqcqp4nguq-360.png",
      "image_background_color": "#ffffff",
      "description": "Amplifying Research Impact through Open Source",
      "url": "https://ucsc-ospo.github.io/osre25/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/uc-ospo",
      "ideas_url": "https://ucsc-ospo.github.io/osre25/#projects",
      "guide_url": "https://ucsc-ospo.github.io/osre25/#forstudents",
      "topics": [
        "education",
        "bioinformatics",
        "hardware",
        "data science",
        "AI/ML"
      ],
      "technologies": [
        "python",
        "javascript",
        "c/c++",
        "machine learning",
        "VLSI"
      ],
      "irc_channel": "https://osre2024.slack.com/home",
      "contact_email": "mailto:ospo-info-group@ucsc.edu",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://ucsc-ospo.github.io/#blog",
      "facebook_url": "",
      "num_projects": 17,
      "projects": [
        {
          "title": "Implement Web Extensions & System Settings Integration to Peersky Browser",
          "short_description": "The Peersky browser currently lacks a unified system for managing both user-installed WebExtensions and core browser preferences. This project will...",
          "description": "The Peersky browser currently lacks a unified system for managing both user-installed WebExtensions and core browser preferences. This project will implement full WebExtension support alongside a customizable peersky://settings page, creating a modular and privacy-focused experience within Peersky’s Electron-based environment.\n\nDeliverables include support for installing .zip and Git-based extensions, a persistent extension loader, Manifest V3 validation, CSP-based sandboxing, and a toolbar for pinning and managing extensions. The settings page will also allow users to change themes, set search engines, configure the home page, and manage built-in privacy tools like uBlock Origin and DScan. By the end of the project, Peersky will support a secure, extensible, and decentralized customization system—without relying on centralized extension stores.",
          "student_name": "6cobi",
          "code_url": null,
          "proposal_id": "zOAXT1ll",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uG3PzQyV"
        },
        {
          "title": "LINQS: Autograder",
          "short_description": "This project aims to develop a system that detects whether code was written by a student or generated by AI tools like ChatGPT or GitHub Copilot....",
          "description": "This project aims to develop a system that detects whether code was written by a student or generated by AI tools like ChatGPT or GitHub Copilot. With AI becoming common in academia, especially in programming, distinguishing genuine student work from AI-generated code is increasingly challenging. Existing tools like MOSS are ineffective against AI-generated content. The proposed system will assign a confidence score to indicate the likelihood of AI involvement, supporting educators in maintaining academic integrity.",
          "student_name": "Anvi",
          "code_url": null,
          "proposal_id": "tX7xfav4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jxBUpvoM"
        },
        {
          "title": "Rectilinear Floorplans in OpenROAD",
          "short_description": "This proposal aims to add support for rectilinear floorplans in OpenROAD, an open-source EDA tool used for digital chip design. Currently, OpenROAD...",
          "description": "This proposal aims to add support for rectilinear floorplans in OpenROAD, an open-source EDA tool used for digital chip design. Currently, OpenROAD only supports rectangular floorplans, which limits its use in modern designs that often require more complex shapes—especially in advanced packaging, chiplet architectures, and 3D ICs.\n\nThe project will allow users to define floorplans using arbitrary rectilinear shapes made of 90° corners. It involves three main components: accepting polygonal input during floorplan setup, generating standard cell rows and routing tracks that follow the shape boundaries, and updating the pin placement logic to work with irregular outlines.\n\nBy enabling these capabilities, OpenROAD will become more flexible and suitable for real-world designs where blocks may need to fit together like puzzle pieces. This can lead to better area utilization and potentially shorter interconnects. The project will also include comprehensive testing, documentation, and example scripts.",
          "student_name": "Chaitanya Gambali",
          "code_url": null,
          "proposal_id": "w6JKxkzM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mcv3Hbgk"
        },
        {
          "title": "LLMSeqRec: LLM Enhanced Contextual Sequential Recommender",
          "short_description": "In today's world sequential recommendation systems are used in various domains-- from life sciences to e-commerce and business. For example, within...",
          "description": "In today's world sequential recommendation systems are used in various domains-- from life sciences to e-commerce and business. For example, within biology and ecology, recommendation systems help track a species behavior by suggesting research on migration patterns, and within e-commerce these systems are used to better a user's online experience. As such, recommendation systems are vital to systems today and is a important field of research.\n\nDespite widespread use, traditional sequential recommendation systems face limitations. They primarily on historical user interactions to predict future preferences however struggle to capture contextual dependencies and adapting to dynamic user behaviors. Similarly, existing models predefined embeddings which restrict the ability to adapt and generalize. As such these problems lead to reduced recommendation accuracy, typically for example in cold-start users.\n\nAs such, the LLMSeqRec proposal will lead to a more personalized recommendation by interpreting and augmenting sequences with semantic context. Through this, LLMSeqRec can make up for the traditional difficulties-- making more accurate and adaptable recommendations personalized for each user.",
          "student_name": "connorlee",
          "code_url": null,
          "proposal_id": "G5W37pEG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TGUFCzZy"
        },
        {
          "title": "ENTS : Web portal for large-scale sensor networks",
          "short_description": "The Environmental NeTworked Sensor (ENTS) platform is an open-source web portal designed for collecting, visualizing, and analyzing data from...",
          "description": "The Environmental NeTworked Sensor (ENTS) platform is an open-source web portal designed for collecting, visualizing, and analyzing data from large-scale environmental sensor networks. It enables researchers and citizen scientists to monitor sensors measuring soil moisture, temperature, current, and voltage in outdoor settings, supporting critical environmental research.\n\nThis project aims to enhance the ENTS platform through two key initiatives. The first focuses on system stabilization to address existing visualization and reliability issues, ensuring that data presentation is accurate and consistent. The second initiative will implement a comprehensive Logger Registration System, allowing users to easily add, configure, and monitor their logging devices, with potential integration to The Things Network for LoRaWAN connectivity.\n\nBy the end of this project, ENTS will feature improved chart synchronization, reliable data point selection, robust error handling, and an intuitive interface for registering and managing logging devices. These enhancements will transform ENTS into a more stable, user-friendly platform that better supports researchers in collecting and analyzing environmental data at scale.",
          "student_name": "Devansh Kukreja",
          "code_url": null,
          "proposal_id": "qkn7NHv8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OPlG0KHV"
        },
        {
          "title": "Improving AI Data Pipelines in AIDRIN: A Privacy-Centric and Multimodal Expansion",
          "short_description": "AIDRIN (AI Data Readiness INspector) is an open-source tool designed to assess the quality, fairness, and readiness of datasets before they are used...",
          "description": "AIDRIN (AI Data Readiness INspector) is an open-source tool designed to assess the quality, fairness, and readiness of datasets before they are used in AI workflows. However, its current implementation supports only basic evaluations for tabular data and lacks both privacy-aware assessments and the ability to handle unstructured data formats like images.\n\nThis project proposes to address these limitations in two structured phases. In Phase 1, I will enhance AIDRIN’s capabilities for tabular datasets by implementing essential privacy-preserving metrics—such as k-Anonymity, l-Diversity, t-Closeness, MM Risk Score, and Entropy-Based Disclosure Risk—alongside other key checks for class imbalance, feature correlation, and model evaluation. These assessments will be supported by intuitive visualizations to help users make informed decisions about data quality and compliance.\n\nIn Phase 2, I will extend AIDRIN to support image datasets by integrating pretrained vision models to generate semantic embeddings. These embeddings will enable readiness evaluations such as duplicate and outlier detection, class imbalance analysis, completeness checks, and fairness diagnostics (when label or attribute metadata is available). The goal is to replicate AIDRIN’s structured readiness evaluation pipeline for visual data in a modular and reusable manner.\n\nDeliverables include:\n\nPrivacy and imbalance metric suite for tabular data with visual summaries\nEmbedding-based readiness evaluation pipeline for image datasets\nIntegration with pretrained vision models (ViT, CLIP, DINOv2)\nCLI tool for executing and exporting assessment results\nDocumentation, testing, and demonstration notebooks\nBy the end of the program, AIDRIN will support robust and privacy-aware readiness assessments for both structured and unstructured datasets, helping researchers and practitioners build more transparent, reliable, and ethical AI systems.",
          "student_name": "Harish Balaji",
          "code_url": null,
          "proposal_id": "e7Z8oZjP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/X4FJR5x9"
        },
        {
          "title": "Brahma / Allocentric WebXR Interfaces",
          "short_description": "This project aims to explore and develop allocentric interfaces for WebXR, focusing on enhancing user interaction in virtual reality environments....",
          "description": "This project aims to explore and develop allocentric interfaces for WebXR, focusing on enhancing user interaction in virtual reality environments. The proposal involves a phased approach—starting with learning and documenting fundamental WebXR interaction patterns, followed by building a multi-user pong game to understand shared allocentric spaces. Finally, designing and implement one or more custom allocentric interfaces that demonstrate creative and effective user experiences in VR. The project will result in a set of well-documented, interactive VR components, offering valuable contributions to the WebXR community.",
          "student_name": "Kajal Jotwani",
          "code_url": null,
          "proposal_id": "jJtSFQJN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Czdoqv0c"
        },
        {
          "title": "Intelligent Observability for Seam: A GenAI Approach",
          "short_description": "Operating complex scientific workloads on the National Research Platform (NRP) via the Seam interface presents monitoring challenges; identifying...",
          "description": "Operating complex scientific workloads on the National Research Platform (NRP) via the Seam interface presents monitoring challenges; identifying performance anomalies or potential failures proactively and diagnosing them quickly is difficult using standard tools, impacting researchers and operators. This project aims to enhance the resilience and usability of the Seam/NRP environment by building a custom Machine Learning (ML) service tailored to its operational context. The service will analyze monitoring data (starting with Prometheus metrics) to automatically detect anomalies and will leverage NRP's GPU and managed LLM resources to provide Generative AI-powered insights, including human-readable explanations and root cause analysis assistance, accessible via Seam's portal.\n\nKey deliverables include the open-source anomaly detection service code, a container image for deployment on NRP, API documentation, baseline ML models, integrated GenAI features for explanation and RCA, and a final project report/presentation. This will provide the Seam/NRP community with an intelligent tool for proactive monitoring and faster troubleshooting.",
          "student_name": "Manish K Reddy",
          "code_url": null,
          "proposal_id": "10LDl5Bc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fPp1JXbl"
        },
        {
          "title": "Proposal for Disentangled Generation and Editing of Pathology Images",
          "short_description": "My proposal is to create and control computer-generated images of breast cancer tissues. I'll spend my first four weeks building basic models called...",
          "description": "My proposal is to create and control computer-generated images of breast cancer tissues. I'll spend my first four weeks building basic models called VAEs that can learn what cancer looks like. Then I'll spend four weeks making better, sharper images using GANs. In my final four weeks, I'll try the newest technology called diffusion models to make the most realistic images.\nI'm using 400 real cancer tissue images that doctors have labeled from normal to severe cancer. My goal is to help train doctors and improve cancer detection systems by creating realistic fake images we can control. This matters because real cancer images are hard to get, and doctors sometimes disagree on what they see. If I succeed, my computer models will let users adjust how severe the cancer looks in an image, which could help with teaching and testing new cancer detection software.",
          "student_name": "Mingyuan Shao",
          "code_url": null,
          "proposal_id": "HOKYlehT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cn7fmk7a"
        },
        {
          "title": "UC Open Source Repository Browser [UC ORB]",
          "short_description": "The University of California Open Source Repository Browser (UC ORB) is a discovery platform that maps and categorizes open source projects across...",
          "description": "The University of California Open Source Repository Browser (UC ORB) is a discovery platform that maps and categorizes open source projects across the UC system. It offers a comprehensive web interface with intuitive search, advanced filtering capabilities, responsive design, and integrated visualizations of project metrics.",
          "student_name": "Param Arora",
          "code_url": null,
          "proposal_id": "FWTwI0uM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XZ9zEll1"
        },
        {
          "title": "Building a Billion-Scale Vector Embeddings Dataset for Real-World ANN Benchmarking",
          "short_description": "To benchmark vector search algorithms (aka ANN algorithms), existing datasets fail to represent actual real-world workloads. Current benchmarks...",
          "description": "To benchmark vector search algorithms (aka ANN algorithms), existing datasets fail to represent actual real-world workloads. Current benchmarks usually use small vectors with only a few hundred dimensions unlike modern embedding models like OpenAI's text-embedding series. This project aims to create a comprehensive dataset with 1 billion embeddings that's generated from Wikipedia using open-source models. We will produce three distinct versions of the dataset with embeddings sized at 1024, 4096, and 8192 dimensions to help us get more realistic and robust vector search algorithm benchmark scores across different dimensional requirements.",
          "student_name": "Prathamesh Devadiga",
          "code_url": null,
          "proposal_id": "h3sRmmWP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GcstSGAO"
        },
        {
          "title": "Causeway - Monitoring, CI/CD Pipelines, and GenAI Integration , Mentor - David Lee",
          "short_description": "This proposal aims to enhance the Causeway experiential learning platform by implementing DevOps best practices and integrating generative AI with...",
          "description": "This proposal aims to enhance the Causeway experiential learning platform by implementing DevOps best practices and integrating generative AI with its compass goals system. The DevOps component will implement Prometheus and Grafana for monitoring and alerting, establish a comprehensive CI/CD pipeline, and optimize Firebase workflows for better performance and scalability. The AI component will transform the platform's compass goals into intelligent learning objectives that adapt to each learner's progress throughout the micro-role journey. Together, these enhancements will create a more resilient, intelligent learning platform that scales the innovative micro-role approach to web development education.",
          "student_name": "Rishi Mondal",
          "code_url": null,
          "proposal_id": "o7GzTNaW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/N2koiDy5"
        },
        {
          "title": "Smart Batching Using CXL For Large Language Models",
          "short_description": "Our project addresses the challenge of high memory usage and slow performance in large language models, which happens mainly because of the huge...",
          "description": "Our project addresses the challenge of high memory usage and slow performance in large language models, which happens mainly because of the huge key-value (KV) cache needed during inference. This cache grows as the model size increases, causing issues, especially on GPUs with limited memory. To solve this, we plan to use CXL-attached memory to offload model weights and KV cache data, reducing the load on local memory. In addition, we'll develop a smart batching system that groups input texts with similar lengths together, minimizing wasted space from padding and speeding up processing. Our deliverables include a fully integrated solution with the vLLM inference engine, real-time performance dashboards using Grafana, detailed benchmarks on latency and throughput, and open-source documentation and guides.",
          "student_name": "Rushil Nagpal",
          "code_url": null,
          "proposal_id": "YyPqqBeQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uz2qQ8sN"
        },
        {
          "title": "Interfacing Scenic to New Simulators",
          "short_description": "This proposal aims to integrate Scenic—a probabilistic programming language for scenario specification—with Robosuite, a simulation framework for...",
          "description": "This proposal aims to integrate Scenic—a probabilistic programming language for scenario specification—with Robosuite, a simulation framework for robotic manipulation. By developing a comprehensive interface that includes a robust world model, simulator, controller mapping, and behavior library, the project overcomes integration limitations and enables systematic testing of diverse manipulation scenarios. The enhanced integration improves simulation accuracy, controller compatibility, and safety verification, thereby supporting more advanced and reliable robotic research. Moreover, by leveraging the rising functionality of an open-source simulator like Robosuite and combining it with the power of Scenic, the project enriches the open-source robotics ecosystem, expanding access to sophisticated simulation tools and fostering a collaborative environment for innovation.",
          "student_name": "sahil-tgs",
          "code_url": null,
          "proposal_id": "x0EmQ9Gw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ePG8e6ZN"
        },
        {
          "title": "WildberryEye Proposal",
          "short_description": "WildBerryEye leverages edge computing (Raspberry Pi) and object detection (YOLO) to monitor pollinators like bees and hummingbirds. My project...",
          "description": "WildBerryEye leverages edge computing (Raspberry Pi) and object detection (YOLO) to monitor pollinators like bees and hummingbirds. My project focused on developing a clean, intuitive, and responsive web-based interface to support real-time pollinator detection, data visualization, and system configuration. The final result empowers researchers and contributors to engage with environmental data in an accessible and meaningful way.\nSpecific tasks:\n- Frontend Development: Continue development to enhance the user interface using React and CSS, ensuring a responsive and user-friendly design.\n-  Backend Development: Expand functionality using Flask, focusing on efficient API endpoints and seamless interaction with the frontend.\n- Real-Time Communication: Implement and refine real-time updates between the frontend and backend to enhance system responsiveness.\n- Usability & Design Optimization: Research and propose improvements to the system’s usability, design, and overall user experience.",
          "student_name": "Sophie Tao",
          "code_url": null,
          "proposal_id": "bzPuW7O1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jnriJNbw"
        },
        {
          "title": "Optimizing and Benchmarking GPU Collective Communication of PyLops-MPI with NCCL",
          "short_description": "PyLops is a Python package with a simple yet flexible interface for solving linear inverse problems. Previous GSoC-sponsored projects laid the...",
          "description": "PyLops is a Python package with a simple yet flexible interface for solving linear inverse problems. Previous GSoC-sponsored projects laid the foundation for PyLops-MPI. The current missing piece is the support of high-bandwidth communication in the multi-GPUs environment. This project aims to do just that. Specifically, this project will extend the current PyLops-MPI with NVIDIA’s NCCL API to optimize collective communication speed - a bottleneck in many applications. The project consists of four parts: NCCL integration,\ncorrectness tests, performance benchmark, and comprehensive tutorials.",
          "student_name": "tharitt",
          "code_url": null,
          "proposal_id": "ackdpNyS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/C2XSZp2E"
        },
        {
          "title": "Global CarbonCast – Expanding Real-Time Carbon Intensity Forecasting and Visualization",
          "short_description": "This proposal aims to broaden the geographical scope and enhance the functionality of CarbonCast, a tool dedicated to forecasting and visualizing the...",
          "description": "This proposal aims to broaden the geographical scope and enhance the functionality of CarbonCast, a tool dedicated to forecasting and visualizing the carbon intensity of electrical grids. Presently servicing select regions including parts of the US, Germany, Netherlands, Spain, Sweden, Poland, and Queensland, Australia, this project proposes to extend coverage to additional global regions. The expansion will enable CarbonCast to offer more comprehensive and timely insights into carbon emissions worldwide. Other key enhancements will include the development of a web interface that improves the accessibility and visualization of carbon data, making it easier for users to interact with and derive meaningful insights from the information. This project will transform CarbonCast into a more globally inclusive tool, providing critical data that supports informed decisions on energy consumption and carbon emission reduction.",
          "student_name": "Tobin Sia",
          "code_url": null,
          "proposal_id": "BBw31TmX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7yvAix3k"
        }
      ]
    },
    {
      "name": "AsyncAPI",
      "image_url": "https://summerofcode.withgoogle.com/media/org/asyncapi/gmnlfvngjaqxjxio.png",
      "image_background_color": "#ffffff",
      "description": "Building the future of Event-Driven Architectures",
      "url": "https://www.asyncapi.com/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/asyncapi",
      "ideas_url": "https://github.com/asyncapi/community/blob/master/mentorship/summerofcode/2025/asyncapi-gsoc-ideas-page.md",
      "guide_url": "https://github.com/asyncapi/community/blob/master/CONTRIBUTING.md",
      "topics": ["web", "api", "cloud", "Architectures"],
      "technologies": ["javascript", "java", "go", "typescript", "RAML"],
      "irc_channel": "https://asyncapi.com/slack-invite",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/AsyncAPISpec",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "AsyncAPI Generator Maintainership",
          "short_description": "The is a project to take maintenership of the \"asyncapi/generator\" repository. The focus is on developing maintainer skills by handling issue...",
          "description": "The is a project to take maintenership of the \"asyncapi/generator\" repository. The focus is on developing maintainer skills by handling issue triaging, bug fixes, PR reviews, writing tests, improving documentation, helping newcomers to contribute and guiding the project's long-term growth. The mentorship provides a deep understanding of open-source maintenance, making it a valuable opportunity for career growth and industry experience.",
          "student_name": "Adi Boghawala",
          "code_url": null,
          "proposal_id": "qt8BcFe0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MsWQPcNn"
        },
        {
          "title": "Implement E2E UI tests for the website critical flows",
          "short_description": "AsyncAPI currently lacks comprehensive end-to-end (E2E) testing, making it difficult to ensure that critical user flows remain functional across...",
          "description": "AsyncAPI currently lacks comprehensive end-to-end (E2E) testing, making it difficult to ensure that critical user flows remain functional across updates. Without automated testing, regressions can go unnoticed, potentially affecting critical user flows. This project aims to  implement robust E2E testing suite. We will identify critical user workflows, develop automated , and integrate them with GitHub Actions to enable continuous testing with every pull request. By ensuring that core functionalities are thoroughly tested, we can improve reliability, reduce manual QA efforts, and enhance the overall developer experience.",
          "student_name": "Anushka Sharan",
          "code_url": null,
          "proposal_id": "JuoydM7y",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZohGWe1F"
        },
        {
          "title": "VS Code Extension Maintainership",
          "short_description": "It focuses on maintaining and improving the AsyncAPI VS Code extension to ensure stability, better usability, and full support for the latest...",
          "description": "It focuses on maintaining and improving the AsyncAPI VS Code extension to ensure stability, better usability, and full support for the latest AsyncAPI specifications. The work includes modernizing the codebase, adding real-time linting and validation, improving the document preview experience, automating release workflows, and enhancing contributor documentation. The goal is to deliver a well-documented, user-friendly, and production-ready extension that improves the overall developer experience.",
          "student_name": "Ruchi Pakhle",
          "code_url": null,
          "proposal_id": "zbidsT1N",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4l304KrX"
        },
        {
          "title": "Add npm folder for the scripts and add integration tests for this folder",
          "short_description": "The proposal involves a detailed explanation about how I will tackle the projects tasks. The major tasks are the scripts refactoring, integration and...",
          "description": "The proposal involves a detailed explanation about how I will tackle the projects tasks. The major tasks are the scripts refactoring, integration and GitHub Actions setup. I have mentioned everything with examples, illustrations and demos.",
          "student_name": "Sagar Kori",
          "code_url": null,
          "proposal_id": "VAvk94yO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Z37G7QFl"
        },
        {
          "title": "Redesign the AsyncAPI Website and Implement Dark Theme",
          "short_description": "The website lacks visual consistency, accessibility features, and a dark mode—critical elements for enhancing the experience of developers and...",
          "description": "The website lacks visual consistency, accessibility features, and a dark mode—critical elements for enhancing the experience of developers and engaging contributing organizations. To address this, I will follow a two-phase approach: first, planning and designing UI components and layouts.; second, implementing these designs using React.js, Next.js, TypeScript, and Tailwind CSS v4.0. Deliverables include a responsive, accessible interface, reusable component system, robust dark mode support, and performance-optimized code.",
          "student_name": "Shriya Chauhan",
          "code_url": null,
          "proposal_id": "DANyatjF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dVEjdU4X"
        },
        {
          "title": "Extending AsyncAPI's Generator Java Templates with Quarkus",
          "short_description": "AsyncAPI is an open-source initiative that seeks to improve the current state of Event-Driven Architecture (EDA). It has a set of tools for...",
          "description": "AsyncAPI is an open-source initiative that seeks to improve the current state of Event-Driven Architecture (EDA). It has a set of tools for documentation, code and model generation, event management, etc. which helps to easily build and maintain EDA. A template is a project that specifies the generation process output by using the AsyncAPI generator and is the main way developers can benefit from AsyncAPI tool generations. This project aims to extend AsyncAPI suite of community maintained, production ready templates by developing and maintaining a new fully functional Java + Quarkus template for generating asynchronous applications using AsyncAPI’s generator repository. Quarkus, known for its Kubernetes-native capabilities and fast startup times, is an ideal framework for building modern event-driven microservices. This project aims to simplify the development of asynchronous services in Java by generating code and documentation for developers looking to use EDAs in a cloud-native application. Furthermore, this template will be one of the first templates developed inside the AsyncAPI’s generator repository. Allowing developers to test changes locally in the generator repository, making the development easier and reducing the number of workarounds in the template codes. Separation of templates from the generator repo can causes an issue for both maintainers and developers, since template developers sometimes need to do workarounds to address generator issues they encounter during development. This project will start the improved way of developing and maintaining templates for the AsyncAPI initiative. Key deliverables include: dynamic code generation from AsyncAPI specs using the React engine with integrated Kafka support, extensions support for AMQP and MQTT protocols, and a Kubernetes CRD integration.",
          "student_name": "Shuaib Salad",
          "code_url": null,
          "proposal_id": "zHuBK2rI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qDs74iei"
        },
        {
          "title": "AsyncAPI Conference Website UI Kit Development",
          "short_description": "AsyncAPI Conference Website is an essential part of the AsyncAPI Community, it serves as the gateway for the Conference Speakers, Participant and the...",
          "description": "AsyncAPI Conference Website is an essential part of the AsyncAPI Community, it serves as the gateway for the Conference Speakers, Participant and the community member to view the upcoming conferences and participate within it . As the conference website grows, there is a need to enhance the conference website repository in terms of reusability and maintainability for future growth. The goal of this project is to develop a comprehensive UI Kit that can enhance the existing design, and streamline the development process to simplify the creation and management of cohesive elements in the website. This UI Kit will help in preventing the process of rebuilding similar components.",
          "student_name": "Tenzin Delek",
          "code_url": null,
          "proposal_id": "760L3LOM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/juAST6cE"
        }
      ]
    },
    {
      "name": "Kiwix",
      "image_url": "https://summerofcode.withgoogle.com/media/org/kiwix/b6zuffwiyoulh0ku-360.png",
      "image_background_color": "#ffffff",
      "description": "Internet content available offline.",
      "url": "https://www.kiwix.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/kiwix",
      "ideas_url": "https://kiwix.org/en/google-summer-of-code/",
      "guide_url": "https://kiwix.org/en/writing-your-google-summer-of-code-application/",
      "topics": ["offline", "browser", "compression"],
      "technologies": ["python", "c++", "nodejs", "kotlin", "vue.js"],
      "irc_channel": "https://join.slack.com/t/kiwixoffline/shared_invite/zt-c5fgl342-VDYtm7fwY6w0BAeBqYxIGg",
      "contact_email": "mailto:contact+gsoc@kiwix.org",
      "mailing_list": "",
      "twitter_url": "https://mastodon.social/@kiwix",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Gutenberg Library - UI Revamp",
          "short_description": "This project focuses on redesigning the user interface of the Project Gutenberg ZIM library, aiming for better user experience. It also includes the...",
          "description": "This project focuses on redesigning the user interface of the Project Gutenberg ZIM library, aiming for better user experience. It also includes the development of a simple GUI for the Gutenberg eBook scraper, enabling non-technical users to download content without using the command line. Deliverables include a well-developed frontend built with Vue.js, improved navigation and enhanced bookshelves features, a functional scraper GUI, and documentation.",
          "student_name": "Lorrainnn",
          "code_url": null,
          "proposal_id": "dZcartei",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RigFQ6Dt"
        },
        {
          "title": "Scheduled ZIM Generation from WP1 Selections",
          "short_description": "This project proposes the Scheduled ZIM Generation feature for the Kiwix WP1 Selections interface. It introduces an automated system that allows...",
          "description": "This project proposes the Scheduled ZIM Generation feature for the Kiwix WP1 Selections interface. It introduces an automated system that allows users to schedule periodic regeneration of ZIM files from their selections (like SPARQL or WikiProject-based). Currently, users must manually trigger ZIM generation, which leads to outdated content for dynamic sources.\n\nThe new system enables users to set a frequency (monthly or quarterly) and a maximum number of regenerations (with a max. like 4), along with email notifications. A scheduling mechanism will run in the backend, checking for due tasks, queuing ZIM generation jobs in zimfarm, sending notifications, and cleaning up old files to manage storage.\n\nKey components (deliverables):\n\n - A Vue.js UI for configuring schedules, viewing status, and managing tasks.\nFlask-based REST API endpoints for handling schedule data and triggering generation.\n - A scheduler to automate task execution.\n - Email notifications and cleanup logic for outdated ZIMs.\n - Full test coverage and documentation for both users and developers.",
          "student_name": "Nicola Pace",
          "code_url": null,
          "proposal_id": "NXINjyQu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CIaZ59Ht"
        },
        {
          "title": "Automated scheduling of creation of ZIM files",
          "short_description": "This project aims to automate the creation of ZIM files for Wikipedia selections on WP1 by allowing users to schedule updates at regular intervals...",
          "description": "This project aims to automate the creation of ZIM files for\nWikipedia selections on WP1 by allowing users to schedule updates at regular\nintervals (e.g., 1, 3, 6, or 12 months). Users provide an email address to receive\nnotifications once their updated ZIM file is ready, and the system will\nautomatically remove unclaimed files.",
          "student_name": "Uchechukwu Orji",
          "code_url": null,
          "proposal_id": "hj5i0PY9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JtY6Q7U2"
        }
      ]
    },
    {
      "name": "Plone Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/plone-foundation/wivpatiziuhidzjw-360.png",
      "image_background_color": "#ffffff",
      "description": "Python-based CMS, with React front-end.",
      "url": "https://plone.org",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/plone-foundation",
      "ideas_url": "https://plone.org/community/gsoc/2025",
      "guide_url": null,
      "topics": ["web", "cms"],
      "technologies": ["python", "javascript", "react"],
      "irc_channel": "",
      "contact_email": "mailto:gsoc@cleanclothes.org",
      "mailing_list": "https://community.plone.org/t/recommendations-for-gsoc-aspirants/16301/1",
      "twitter_url": "https://twitter.com/plone",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Update pas.plugins.authomatic to Current Provider Standards",
          "short_description": "Plone’s pas.plugins.authomatic add-on integrates various social authentication providers into Plone using the Authomatic library. Many providers,...",
          "description": "Plone’s pas.plugins.authomatic add-on integrates various social authentication providers into Plone using the Authomatic library. Many providers, such as Google, Facebook, Twitter/X and GitHub, LinkedIn and Amazon have since updated their APIs, requiring certain revisions for secure and compatible login integration. \nThis project aims to:\n• Update the plugin to support the latest APIs of major providers.\n• Add support for modern OAuth2 flows and remove deprecated methods.\n• Improve test coverage and documentation for future maintainability.",
          "student_name": "AndrewHimelstieb",
          "code_url": null,
          "proposal_id": "xwzf2tEA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/njtO9LIT"
        },
        {
          "title": "Multi-columns Row with Drag-and-Drop between Row and Columns",
          "short_description": "This project will implement an intuitive drag-and-drop mechanism inside Volto, Plone's React-based frontend, allowing users to move blocks between...",
          "description": "This project will implement an intuitive drag-and-drop mechanism inside Volto, Plone's React-based frontend, allowing users to move blocks between different columns within a multi-column layout. It will enhance the editor’s experience by enabling dynamic page layouts with smooth UX features like drag-over highlights, snapping guides, and smart block rearrangement. Deliverables include a fully functional column-aware drag-and-drop system, UX improvements, accessibility compliance, and comprehensive documentation with a tutorial video.",
          "student_name": "heermakwana",
          "code_url": null,
          "proposal_id": "ubJsc2OO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/msWmq0zP"
        },
        {
          "title": "Workflow manager for Volto",
          "short_description": "This project aims to create a new, user-friendly interface for building and managing workflows in Plone. Workflows in Plone manage content sharing...",
          "description": "This project aims to create a new, user-friendly interface for building and managing workflows in Plone. Workflows in Plone manage content sharing and editing by setting statuses (private, pending review, published) and controlling access permissions. The final outcome will be a Plone add-on, complete with thorough tests and documentation, allowing users to to create secure, efficient workflows directly in Volto.",
          "student_name": "Manas Kenge",
          "code_url": null,
          "proposal_id": "hpXz0ieG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MzG2JgzX"
        }
      ]
    },
    {
      "name": "The NetBSD Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-netbsd-foundation/gi3vozsqpecopqku-360.png",
      "image_background_color": "#ffffff",
      "description": "Of course it runs NetBSD",
      "url": "https://www.NetBSD.org/",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-netbsd-foundation",
      "ideas_url": "https://wiki.NetBSD.org/projects/gsoc/",
      "guide_url": "https://wiki.NetBSD.org/projects/gsoc/",
      "topics": ["kernel", "packaging", "userland", "unix", "bsd"],
      "technologies": ["c", "shell script", "make", "unix", "bsd"],
      "irc_channel": "https://web.libera.chat/#NetBSD-code",
      "contact_email": "",
      "mailing_list": "https://www.NetBSD.org/mailinglists/",
      "twitter_url": "https://twitter.com/netbsd",
      "blog_url": "https://blog.NetBSD.org/",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Enhancing Support for NAT64 Protocol Translation in NetBSD",
          "short_description": "NAT64 is a transition mechanism from IPv6 to IPv4. it enables IPv6-only clients to communicate with IPv4-only servers. Despite the growing adoption...",
          "description": "NAT64 is a transition mechanism from IPv6 to IPv4. it enables IPv6-only clients to communicate with IPv4-only servers. Despite the growing adoption of IPv6, many legacy systems still rely on IPv4. Implementing NAT64 support in NPF will enhance its networking capabilities, ensuring seamless communication between IPv6 and IPv4 networks.\n\nProject Goals:\nThe following are the project goals but not limited to this alone:\n- Extend NPF to support IPv6-to-IPv4 translation\n- Optimize NAT64 processing within NPF to ensure minimal latency and efficient packet handling, especially in high-traffic environments.\n- Passing the information to the kernel, and modifying the kernel packet filter code to process the user/group filtering options and allow/drop packets, in addition to Implementing a robust and efficient NAT64 mechanism within NPF packet filters.\n\nDeliverables:\nWith a commitment and devotion of 40 hours per week, the project is expected to be completed within 2 months and some days.\n\nGuidance from Mentors, personal research, reference implementations from sample codes or other open-source projects (such as Tayga and Jool) can serve as guides to ensure a standards-compliant solution and project completion.\n\nMost importantly, Code reviews from mentors and others will definitely help me to solve problems.",
          "student_name": "Dennis  O.I",
          "code_url": null,
          "proposal_id": "bTQbAafj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/p2rxlbUv"
        },
        {
          "title": "Asynchronous I/O Framework",
          "short_description": "We will be refactoring the I/O pipeline within the NetBSD kernel to support asynchronous I/O. This involves creating a new protocol which will...",
          "description": "We will be refactoring the I/O pipeline within the NetBSD kernel to support asynchronous I/O. This involves creating a new protocol which will function as a intermediary layer within the I/O path. This protocol will support both asynchronous and synchronous modes, providing a zero-cost layer of abstraction for synchronous operations within a broader asynchronous framework.\r\n\r\nThis new I/O protocol is crux of the project. There will exist servicing pools that will be threaded in parallel to concurrently invoke multiple operations within a single thread without blocking on any individual operation. We must not block on any single operation because that would merit the creation of a new thread, which is exactly what this project is aiming to address. Given that the current implementation is highly synchronous, primarily relying on blocking, certain fundamental I/O primitives at the lowest layer of abstraction within the path will need to be restructured.\r\n\r\nOnce implemented, we will begin integrating this protocol into the system at large, starting from the lowest layer of abstraction within the I/O path moving upwards, then finally revising the POSIX AIO interface.",
          "student_name": "Ethan Miller",
          "code_url": null,
          "proposal_id": "wwxQYEIt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DyO9DOU3"
        },
        {
          "title": "Using bubblewrap to add sandboxing to NetBSD",
          "short_description": "NetBSD allows the execution of Linux binaries with compat_linux, a NetBSD kernel module that translates Linux system calls into NetBSD system calls....",
          "description": "NetBSD allows the execution of Linux binaries with compat_linux, a NetBSD kernel module that translates Linux system calls into NetBSD system calls. But, not all of Linux's system calls have been implemented in compat_linux, which means that not all Linux applications can be ran on NetBSD.\n\nOne relevant application that can't be ran is bubblewrap, a tool for constructing sandbox environments. By tracing the system calls executed by the bubblewrap Linux binary and comparing with the ones in compat_linux's source code, we can identify the system calls that need to be implemented.\n\nOne required but currently missing Linux system call is unshare, a system call to create Linux namespaces, which provide isolation of multiple parts from the host, this makes it a complicated system call to emulate.\nUnshare will be the main system call of this project but there will be others as well, such as the capabilities family of system calls, we will study each system call individually to understand if we need to create a completely new system call, or if we can simply translate the Linux system call's arguments to ones used by an equivalent NetBSD system call.\n\nThe successful completion of this project will result in a patch to compat_linux, which will allow bubblewrap to be ran on NetBSD under compat_linux, bringing a new way of sandboxing to NetBSD.",
          "student_name": "Vasyl Lanko",
          "code_url": null,
          "proposal_id": "C0Ezt3or",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KvbHxbzO"
        }
      ]
    },
    {
      "name": "JdeRobot",
      "image_url": "https://summerofcode.withgoogle.com/media/org/jderobot/xwu8zkcagffmlqdj-360.png",
      "image_background_color": "#ffffff",
      "description": "Toolkit for developing Robotics applications",
      "url": "http://jderobot.github.io",
      "category": "Other",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/jderobot",
      "ideas_url": "https://jderobot.github.io/activities/gsoc/2025#ideas-list",
      "guide_url": "https://jderobot.github.io/activities/gsoc/2025#application-instructions-for-gsoc-2025",
      "topics": [
        "education",
        "artificial intelligence",
        "robotics",
        "computer vision",
        "developer tools"
      ],
      "technologies": ["python", "ros", "gazebo", "opencv", "tensorflow"],
      "irc_channel": "",
      "contact_email": "mailto:jderobot@gmail.com",
      "mailing_list": "https://gsyc.urjc.es/cgi-bin/mailman/listinfo/jde-developers",
      "twitter_url": "https://twitter.com/JdeRobot",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Robotics Academy: CI & Testing",
          "short_description": "The primary goal of this project is to establish an automated testing framework for the Robotics Academy (RA), Robotics Infrastructure (RI), and...",
          "description": "The primary goal of this project is to establish an automated testing framework for the Robotics Academy (RA), Robotics Infrastructure (RI), and Robotics Application Manager (RAM) repositories. This framework will include a suite of unit and integration tests to verify functional correctness and ensure that the software remains maintainable and robust.\nAdditionally, the project will focus on creating continuous integration (CI) pipelines, ensuring early detection of issues, and fostering a culture of quality and accountability across the projects.",
          "student_name": "Abdallah Ismail",
          "code_url": null,
          "proposal_id": "JYvjvTkj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/msXOO4mb"
        },
        {
          "title": "Robotics-Academy: Porting Exercises to Native ROS2 with Direct Topic Integration",
          "short_description": "This project aims to enhance the Robotics-Academy platform by porting selected exercises to native ROS 2, removing the need for the Hardware...",
          "description": "This project aims to enhance the Robotics-Academy platform by porting selected exercises to native ROS 2, removing the need for the Hardware Abstraction Layer (HAL). The current implementation relies on a custom interface, limiting exposure to standard ROS 2 practices. By transitioning exercises like Follow Line and Basic Vacuum Cleaner to use native ROS 2 nodes, topics, publishers, and subscribers, users will gain hands-on experience with real-world ROS development patterns. The project will also ensure compatibility with ROS 2 tools like rqt_graph, ros2 topic echo, and rviz2 for debugging and visualization.\n\nDeliverables include:\n - ROS 2-native versions of two exercises (Follow Line and Basic Vacuum Cleaner)\n - Removal of HAL dependencies\n - Integration with standard ROS 2 tools and practices\n - Documentation and examples to help users build, debug, and run their solutions \n    using native ROS 2\nBy the end of this project, Robotics-Academy will offer a more authentic ROS 2 learning experience, better preparing users for real-world robotics development.",
          "student_name": "Ashish Ramesh",
          "code_url": null,
          "proposal_id": "8kJ9tbS9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EXcpJT5g"
        },
        {
          "title": "BT-Studio: a tool for programming robots with Behavior Trees",
          "short_description": "The primary objective of this project is to enhance BT Studio's capabilities by upgrading the library of behavior trees and composition tools....",
          "description": "The primary objective of this project is to enhance BT Studio's capabilities by upgrading the library of behavior trees and composition tools. Currently, BT Studio BT library is simple, really overcomplicated and buggy which makes reusing behaviors trees from the library difficult. This update aims to simplify and improve this tools and to increase the amount of entries in the library. \n\nAlso it will improve other features of BT Studio such as the custom universes, making them fully functional and with all the features of the already existing ones inside the Robotics Backend, the docker execution enviroment for robotics applications.\n\nAll of this changes would enable users to test applications across a wider range of scenarios, thereby enhancing debugging and solution robustness.",
          "student_name": "Javier Izquierdo",
          "code_url": null,
          "proposal_id": "uUHZJ3vG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/O1mpAQXE"
        },
        {
          "title": "New exercise on End-to-End Visual Control of an Autonomous Vehicle using DeepLearning",
          "short_description": "This project aims to develop a new deep learning exercise within Robotics-Academy, focusing on end-to-end visual control of autonomous vehicles. The...",
          "description": "This project aims to develop a new deep learning exercise within Robotics-Academy,\nfocusing on end-to-end visual control of autonomous vehicles. The exercise will allow\nusers to upload trained PyTorch/TensorFlow models that process camera input from a\nsimulated car or drone in Gazebo and output control vehicle movement based on the\nmodel’s predictions. A web interface will enable model upload, real-time visualization,\nand performance monitoring. The exercise will include a demo model trained on\nsynthetic data, a Gazebo simulation environment, and integration with ROS2. This\nexercise will leverage existing infrastructure from previous deep learning-based\nRobotics-Academy exercises, such as Human Detection and Digit Classifier.",
          "student_name": "Md. Shariar Kabir",
          "code_url": null,
          "proposal_id": "lEj8p04S",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xJ2gOWNQ"
        },
        {
          "title": "Robotics Academy: improvement of Gazebo scenarios and robot models",
          "short_description": "This project aims to significantly enhance two specific simulation scenarios within the JdeRobot Robotics Academy: Follow Line and Vacuum Cleaner....",
          "description": "This project aims to significantly enhance two specific simulation scenarios within the JdeRobot Robotics Academy: Follow Line and Vacuum Cleaner. While these exercises serve as valuable educational tools for robotics learners, the current Gazebo environments and robot models lack visual realism, accurate physical behavior, and modular ROS2 integration. To address these limitations, the project will refactor the URDF model used in the Follow Line scenario using modular Xacro descriptions and realistic textures. The line track world will also be improved with high-quality road textures and better lighting for consistent perception results. In the Vacuum Cleaner scenario, the environment will be rebuilt using realistic room furniture and obstacles imported from Blender assets. Additionally, the Roomba robot model will be upgraded for improved physical dynamics, and its SLAM and navigation performance will be enhanced by tuning ROS2 Navigation2 parameters. Common improvements across both scenarios include updating the launch files to align with ROS2 Humble best practices, ensuring compatibility with the latest versions of Gazebo such as Fortress or Ignition, and producing clear documentation to support scenario creation and extension. The final deliverables will include the revamped simulation scenarios, reusable robot models, an organized and modular launch structure, and comprehensive user documentation. These improvements aim to boost the realism, engagement, and overall educational value of the Robotics Academy platform.",
          "student_name": "Nikhil_36",
          "code_url": null,
          "proposal_id": "HrnBZzml",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2pUk2XLx"
        },
        {
          "title": "Extend DetectionMetrics: GUI, CI Workflow, and Object Detection",
          "short_description": "DetectionMetrics is a toolkit designed to unify and streamline the evaluation of perception models across different frameworks and datasets. The...",
          "description": "DetectionMetrics is a toolkit designed to unify and streamline the evaluation of perception models across different frameworks and datasets. The older version i.e DetectionMetrics v1  provides objective performance metrics such as mean average precision and mean inference time for object detection models. Now DetectionMetrics v2 was introduced in which the previous version was redesigned with an expanded focus on image and LiDAR segmentation. \n\nCurrently, DetectionMetrics v2 functions as both a Python library and CLI, focusing on the quantitative evaluation of image and LiDAR segmentation models, with plans to expand into object detection. It supports PyTorch and TensorFlow models, along with multiple public datasets. Its modular design allows easy integration of new models and datasets. \nThis project aims to bring back the key functionalities from v1 that were lost while redesigning, build a GUI and set up a CI workflow.",
          "student_name": "Praveena2906",
          "code_url": null,
          "proposal_id": "JoZBg13e",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lKrxCeUr"
        },
        {
          "title": "Migration and Enhancement of 'Machine Vision' Exercise to ROS2 + MoveIt2 in Robotics Academy",
          "short_description": "This project aims to migrate the existing “Machine Vision” exercise from the old Robotics Academy version (ROS1 + MoveIt1) to the current ROS2 +...",
          "description": "This project aims to migrate the existing “Machine Vision” exercise from the old Robotics Academy version (ROS1 + MoveIt1) to the current ROS2 + MoveIt2 Docker-based system. The updated version will include a modernized Python API for students, a GUI for visualizing vision images and controlling the manipulator, and improved documentation. The goal is to create a student-friendly, robust, and engaging learning experience aligned with contemporary ROS2 best practices.",
          "student_name": "Shu Xiao",
          "code_url": null,
          "proposal_id": "ySLKtIfl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3Rh06QPO"
        }
      ]
    },
    {
      "name": "AnkiDroid",
      "image_url": "https://summerofcode.withgoogle.com/media/org/ankidroid/cxtovrlsuuluttgi-360.png",
      "image_background_color": "#ffffff",
      "description": "AnkiDroid makes remembering things easy",
      "url": "https://github.com/ankidroid/Anki-Android",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/ankidroid",
      "ideas_url": "https://docs.google.com/document/d/1Va6IWEYcWTkK4KDtyoFxtOKzpdcYe54GdrVpuMcFvlI/edit?usp=sharing",
      "guide_url": "https://github.com/ankidroid/Anki-Android/wiki/Google-Summer-of-Code",
      "topics": [
        "education",
        "mobile",
        "android",
        "user generated content",
        "Flashcards"
      ],
      "technologies": ["android", "rust", "kotlin", "mobile"],
      "irc_channel": "https://discord.gg/qjzcRTx",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/forum/#!forum/anki-android",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/AnkiDroid/",
      "num_projects": 2,
      "projects": [
        {
          "title": "Eric Li - Review Reminders - GSoC 2025",
          "short_description": "Currently, reminders and notifications in AnkiDroid are entirely broken. This proposal aims to completely overhaul the system, in accordance with the...",
          "description": "Currently, reminders and notifications in AnkiDroid are entirely broken. This proposal aims to completely overhaul the system, in accordance with the Project Ideas list created by the organization. A new EditNotifiations activity that can be reused at the deck and app-wide levels will be created with Preferences Datastore used for data storage. I propose both single and persistent notifications via AlarmManager and PeriodicWorkReuqest as well as a Duolingo-inspired front-preview feature.\n\nPlanned deliverables:\n1.  Be able to create deck-specific reminders which fire once per day \n2.  Be able to view reminders in a specific deck \n3.  Be able to view reminders app-wide on a single screen \n4.  Be able to receive notifications in a timely manner \n5.  Be able to edit the time a reminder is sent at \n6.  Be able to delete reminders \n7.  Be able to ask the user for notification permissions \n8.  Be able to create global, app-wide notifications \n9.  Be able to view previews of cards in notifications \n10.  Be able to create persistent notifications that have a defined start and end \n11.  Be able to modify special options for notifications, such as including subdecks when counting cards for the card trigger threshold",
          "student_name": "ericli3690 (Eric Li)",
          "code_url": null,
          "proposal_id": "95iCYRQc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hM59fHT8"
        },
        {
          "title": "Tablet & Chromebook UI",
          "short_description": "AnkiDroid was initially designed for Android mobile phones. Over the years, Android has come to tablets and Chromebooks, but our UI has continued to...",
          "description": "AnkiDroid was initially designed for Android mobile phones. Over the years, Android has come to tablets and Chromebooks, but our UI has continued to be designed around the mobile phone.\r\nI plan to do this by implementing the following:\r\n1. Resizable layouts for multi pane screens\r\n2. Making a x-large note editor with previewer side by side\r\n3. Shortcut Hints\r\n4. Mouse Improvements\r\n5. Optional Extensions",
          "student_name": "Hari Srinivasan",
          "code_url": null,
          "proposal_id": "nuTmVr0n",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pctRgn1E"
        }
      ]
    },
    {
      "name": "CNCF",
      "image_url": "https://summerofcode.withgoogle.com/media/org/cncf/jmxijrttlucfutel-360.png",
      "image_background_color": "#ffffff",
      "description": "Building sustainable ecosystems for cloud native",
      "url": "https://cncf.io",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/cncf",
      "ideas_url": "https://github.com/cncf/mentoring/blob/main/programs/summerofcode/2025.md",
      "guide_url": "https://github.com/cncf/mentoring",
      "topics": ["cloud", "cloud native", "observability"],
      "technologies": ["prometheus", "kubernetes", "OpenTelemetry", "envoy"],
      "irc_channel": "",
      "contact_email": "mailto:soc@cncf.io",
      "mailing_list": "https://github.com/cncf/mentoring/discussions",
      "twitter_url": "https://twitter.com/cloudnativefdn",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 11,
      "projects": [
        {
          "title": "Real-Time Policy Evaluation in Meshery UI using OPA WebAssembly",
          "short_description": "Abstract: This proposal outlines a plan to enhance Meshery's relationship evaluation capabilities by implementing client-side policy evaluation using...",
          "description": "Abstract: This proposal outlines a plan to enhance Meshery's relationship evaluation capabilities by implementing client-side policy evaluation using WebAssembly. By integrating OPA's WebAssembly compilation capabilities into Meshery's UI, I aim to enable real-time evaluation of complex Rego policies, providing users with immediate feedback on configuration changes and policy compliance. This enhancement will significantly improve the user experience when designing their designs and will make the policy evaluation distributed hence reducing load on a meshery server Problem Statement Meshery currently doesn't support evaluating policies in real-time on the client side. The existing approach ( relying on the rest api interface exposed by meshery-server) introduce s latency when policy evaluation occurs server-side, limiting the responsiveness of the UI when users make configuration changes. Additionally, as policies become more complex and numerous, the ability to quickly validate configurations against these policies becomes increasingly important for a smooth user experience. Proposed Solution: Use opas capibilty to compile rego policies directly into wasm plans and then integrate the evaluation process in ui using OPA's JavaScript SDK, which provides a simpler way to load and evaluate Rego policies compiled to WebAssembly. This approach is more lightweight and performant . Deliverables : - Real time evaluation of policies in ui - Keeping the support for both targets of evaluation backend or realtime on frontend - Making the evaluation responsive and performant by implementing webworkers , caching",
          "student_name": "Aabid Ali",
          "code_url": null,
          "proposal_id": "lsBrNb6O",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2aGkn4JN"
        },
        {
          "title": "Automating Benchmarking of KubeStellar Data-Plane for AI Workloads",
          "short_description": "Problem: KubeStellar (KS) lacks an automated system to measure and visualize data-plane performance (e.g., sync latencies) under AI workloads, making...",
          "description": "Problem: \nKubeStellar (KS) lacks an automated system to measure and visualize data-plane performance (e.g., sync latencies) under AI workloads, making optimization and debugging challenging.\n\nSolution:\n1. Instrument KS with OpenTelemetry/Prometheus to emit sync latency/error metrics.\n2. Build a pipeline (TimescaleDB + Fluentd) to collect, store, and aggregate metrics.\n3. Embed Grafana dashboards into KS UI for real-time monitoring.\n4. Benchmark AI workloads (e.g., distributed TensorFlow) to validate scalability.\n\nDeliverables:\n1. Go-based metric instrumentation in KS core.\n2. Automated aggregation service (P95, error rates).\n3. Prebuilt Grafana dashboards (latency, throughput).\n4. Documentation + video demo.\n\nImpact: Enables data-driven optimization of KS for large-scale AI workloads.",
          "student_name": "Asmit Kumar Rai",
          "code_url": null,
          "proposal_id": "ne9hctjG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6P4Ds9En"
        },
        {
          "title": "Allow Kubewarden Policies to be Written using JavaScript",
          "short_description": "Kubewarden is a universal policy engine for Kubernetes enabling policy-as-code. It allows users to define and enforce policies for their Kubernetes...",
          "description": "Kubewarden is a universal policy engine for Kubernetes enabling policy-as-code. It allows users to define and enforce policies for their Kubernetes clusters using any programming language that generates WebAssembly binaries. Recently, Bytecode Alliance introduced Javy, a JavaScript to WebAssembly compiler. This makes it possible to write Kubewarden policies in JavaScript. This project aims to create an idiomatic JavaScript SDK that allows users to write Kubewarden policies in JavaScript.\nThis requires several features including Policy Authoring API. Host Capabilities APIs, Host Capabilities Bridge, Compilation Pipeline, Testing and Validation, Documentation and Tutorials",
          "student_name": "Esosa",
          "code_url": null,
          "proposal_id": "tRkLWfUo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SFABJqNk"
        },
        {
          "title": "Virtual filesystem security for WasmEdge plug-ins with exporting WASI APIs - Proposal",
          "short_description": "This project aims to enhance the security of WasmEdge plug-ins by exporting key WASI APIs, thereby ensuring a robust and secure virtual filesystem...",
          "description": "This project aims to enhance the security of WasmEdge plug-ins by exporting key WASI APIs, thereby ensuring a robust and secure virtual filesystem sandbox for file operations. With the rapid growth of AI applications, WasmEdge plug-ins have become indispensable for tasks such as natural language processing, image synthesis, and speech recognition. However, direct file system access in current implementations exposes critical security risks. To address this, our proposal focuses on designing and implementing a dedicated filesystem sandbox API that restricts file read/write operations to pre-authorized directories. The initial phase will concentrate on the WASI-NN plug-in and other simpler file I/O functions, with potential future enhancements to more complex applications like Stable Diffusion’s image-loading functionality.\nOur comprehensive plan includes an in-depth study of the WasmEdge sandbox architecture, API design and integration, modification of internal plugin call patterns, and the development of rigorous test cases to validate sandbox effectiveness. Detailed documentation and developer guidelines will be prepared to facilitate secure plugin development. With a project timeline from June 2 to September 1, this initiative will leverage my background in virtualization, parallel computing and my past contributions to WasmEdge. The expected outcome is a significant improvement in the security and isolation of file operations in WasmEdge plug-ins, paving the way for safer and more reliable deployment of AI-driven applications.",
          "student_name": "grorge",
          "code_url": null,
          "proposal_id": "817rVbuv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/N7m7gDib"
        },
        {
          "title": "Knative: Functions AI Agent Callbacks",
          "short_description": "This project aims to integrate AI agents with Knative Functions by developing tools for an MCP server that allows agents to dynamically create and...",
          "description": "This project aims to integrate AI agents with Knative Functions by developing tools for an MCP server that allows agents to dynamically create and deploy functions using natural language prompts via MCP-compatible clients. Users can either leverage AI-driven automation via the MCP client-server model, or utilizing the tools as standalone Knative Functions for more traditional agent-based workflows—offering both flexibility and cost efficiency.",
          "student_name": "Kapil Sareen",
          "code_url": null,
          "proposal_id": "JdkGYb6z",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/llt9vHfu"
        },
        {
          "title": "Simplified SPM deployment with ElasticSearch/OpenSearch for Jaeger",
          "short_description": "Jaeger’s Service Performance Management (SPM) currently requires a complex setup with a separate processor and Prometheus storage to compute RED...",
          "description": "Jaeger’s Service Performance Management (SPM) currently requires a complex setup with a separate processor and Prometheus storage to compute RED metrics. This project simplifies SPM by using Elasticsearch/OpenSearch trace storage to directly derive metrics, eliminating extra components. I will implement an ElasticsearchMetricsReader, update configurations, ensure OpenSearch compatibility, and add tests and documentation. Deliverables include a new development environment, simplified configuration, integration tests, OpenSearch support, updated documentation, and load testing for scalability.",
          "student_name": "Minh Nguyen Dang",
          "code_url": null,
          "proposal_id": "7ctlcY5h",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZTLyi8dO"
        },
        {
          "title": "Generic High-Performance Caching Library for etcd",
          "short_description": "etcd is the “source-of-truth” database behind Kubernetes and many other cloud-native systems, but heavy LIST and WATCH traffic can slow it down....",
          "description": "etcd is the “source-of-truth” database behind Kubernetes and many other cloud-native systems, but heavy LIST and WATCH traffic can slow it down. Kubernetes solved this for its own API server with an in-memory watch-cache; we want to give the same speed-up to everyone who speaks to etcd. This project creates a drop-in caching layer that absorbs that load so etcd stays fast and reliable.\n\nIn this project, we will create a drop-in Go library that sits in front of the normal etcd client. Key deliverables include: (1) Event ring-buffer: keeps the last few minutes of changes so late-joining watchers can “rewind” without re-listing; (2) B-tree state mirror: holds the latest key-values in RAM, letting range and prefix reads return in microseconds; (3) Snapshots & fallback: can serve exact-revision reads from memory and automatically resync or fall back to etcd if the cache lags behind; (4) Pluggable hooks:  optional encoders and secondary indices so projects can store typed objects and query by custom fields.\n\nThe deliverables will include comprehensive tests, Prometheus metrics, benchmarks, and integration examples. By re-using this common cache, etcd-backed projects and future CNCF tools will slash etcd traffic, gain faster reads, and avoid maintaining bespoke caching code, all with a single import.",
          "student_name": "Peter Chang",
          "code_url": null,
          "proposal_id": "uvQr1JFf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9A3Z5dv1"
        },
        {
          "title": "Privacy-preserving and efficient AI model training across multi-cluster",
          "short_description": "This project aims to enable AI training in a multi-cluster environment while ensuring data privacy through federated learning. In a multi-cluster...",
          "description": "This project aims to enable AI training in a multi-cluster environment while ensuring data privacy through federated learning. In a multi-cluster environment, where different clusters need to access data, federated learning is introduced to safeguard sensitive information.\nOur goal is to provide a unified interface that allows existing federated learning frameworks, such as OpenFL, NVIDIA FLARE, and Flower, to operate seamlessly in a multi-cluster environment without modifying their existing workflows. These frameworks will continue handling local model training within their respective clusters while aggregating updates into a global model on the hub cluster.\nTo achieve this, we leverage Open Cluster Management (OCM) APIs, including Placement and ManifestWork, to standardize federated learning workflows. By integrating frameworks through a unified interface, we harness OCM’s capabilities to deliver scalable and privacy-preserving AI training solutions in multi-cluster environments.",
          "student_name": "Shichao",
          "code_url": null,
          "proposal_id": "XwdBY62e",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mUzLWY6T"
        },
        {
          "title": "Enhancements for RAG Chatbot for Vitess",
          "short_description": "The current Vitess RAG chatbot which uses documentation, Slack discussions, and GitHub issues data, has low accuracy. This project aims to improve...",
          "description": "The current Vitess RAG chatbot which uses documentation, Slack discussions, and GitHub issues data, has low accuracy. This project aims to improve the accuracy and security of the system by:\n\n- Enhancing retrieval with techniques like query expansion, re-ranking, metadata filtering, inclusion of image data, and summarizing chunks using LLMs before embedding using tools like Langchain\n\n- Automating the embedding of updated documentation into the vector database using Kestra pipelines\n\n-Better benchmarking with tools like Giskard and RAGAS\n\n-Using user feedback to improve relevance \n\n- Content filtering using LLMs safety settings\n\n-Implementing caching for faster responses and lower costs, along with rate limiting for infrastructure stability",
          "student_name": "sreehariX",
          "code_url": null,
          "proposal_id": "ojQI5YLr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/FdTZdTRr"
        },
        {
          "title": "Lima: Support for Virtual Machine Plugin Subsystem",
          "short_description": "Lima(LInux MAchines) is a tool that helps to run Linux Virtual Machines on macOS and other hosts, with a focus on running containers on them with...",
          "description": "Lima(LInux MAchines) is a tool that helps to run Linux Virtual Machines on macOS and other hosts, with a focus on running containers on them with auto file sharing and port forwarding. Lima's internal virtual machine backend drivers are tightly connected with the main binary, making maintenance difficult and cluttering the main binary. This makes it difficult to incorporate different virtual machine backends. \n\nThis project seeks to construct and develop a plugin subsystem or framework that offers support for multiple virtual machine backends that can be integrated into the main Lima application via gRPC or built into the main binary.",
          "student_name": "unsuman_",
          "code_url": null,
          "proposal_id": "NmzkIsqi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0L1g1OFW"
        },
        {
          "title": "Kubebuilder: Automating Operator Maintenance - Driving Better Results with Less Overhead",
          "short_description": "This project aims to create a GitHub Action similar to Dependabot for Kubebuilder, automating the process of regenerating scaffolds and preserving...",
          "description": "This project aims to create a GitHub Action similar to Dependabot for Kubebuilder, automating the process of regenerating scaffolds and preserving custom code when new versions of Kubebuilder are released. This solution ensures that projects stay updated with best practices, bug fixes, and features, ultimately improving maintainability and adoption by reducing the complexity of manual updates.",
          "student_name": "Vitor Floriano",
          "code_url": null,
          "proposal_id": "UUryDq23",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j6huoI3v"
        }
      ]
    },
    {
      "name": "VideoLAN",
      "image_url": "https://summerofcode.withgoogle.com/media/org/videolan/9h28hsncvrt01voz-360.png",
      "image_background_color": "#ffffff",
      "description": "Open Source Multimedia for everyone!",
      "url": "https://www.videolan.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/videolan",
      "ideas_url": "https://wiki.videolan.org/SoC_2025/",
      "guide_url": "https://wiki.videolan.org/SoC_2024/",
      "topics": ["audio", "streaming", "video", "codecs", "media database"],
      "technologies": ["c", "c++", "qt", "assembly", "video"],
      "irc_channel": "#videolan on Libera.chat",
      "contact_email": "mailto:videolan@videolan.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/videolan",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/vlc.media.player",
      "num_projects": 15,
      "projects": [
        {
          "title": "LibVLC Wayland API",
          "short_description": "The aim of this project is to provide an API in libVLC so users can embed the media player in their programs. Although there’s already a support for...",
          "description": "The aim of this project is to provide an API in libVLC so users can embed the media player in their programs. Although there’s already a support for x11 and Windows API, wayland doesn’t work in the same way. In this project, I will implement a native wayland backend enabling integration of VLC’s rendering capabilities into wayland-based applications. I will write a simple demo that explains how this backend can be used and test it on different wayland compositors.",
          "student_name": "Abdulrahman Saber",
          "code_url": null,
          "proposal_id": "OIr9u2XC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uPnZ5zNu"
        },
        {
          "title": "Improve libNDI project and integrate it in VLC",
          "short_description": "Network Device Interface (NDI) is a software specification that enables high-definition video transmission over a computer network with low latency...",
          "description": "Network Device Interface (NDI) is a software specification that enables\nhigh-definition video transmission over a computer network with low\nlatency and high quality. This project aims to enhance an open-source implementation of the NDI protocol, libNDI, by adding support for sending NDI streams, expanding protocol support for NDI-HX2 and a UDP-based NDI variant, improving performance, stability, and security. Then integrate libNDI into VLC.",
          "student_name": "Ahmed Hamed Gaber",
          "code_url": null,
          "proposal_id": "R3FJEZKr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WNceufE8"
        },
        {
          "title": "Improve the VideoLAN crash reporter in Go and Vue.js",
          "short_description": "This project aims to modernize the VideoLAN crash reporting system (CrashDragon) to improve how VLC crashes are collected, analyzed, and managed. The...",
          "description": "This project aims to modernize the VideoLAN crash reporting system (CrashDragon) to improve how VLC crashes are collected, analyzed, and managed. The current system, while functional, uses outdated technologies and lacks modern interactivity.\nI'll tackle this in two phases: First, enhancing the Go backend API with improved error handling, better crash grouping algorithms, and optimized database queries. Second, completely rewriting the frontend using Vue.js to replace server-rendered templates with a modern single-page application.",
          "student_name": "Akhilesh Kumar Yadav",
          "code_url": null,
          "proposal_id": "yaTetEsa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0TUzOpCm"
        },
        {
          "title": "Qt Interface Redesign for VLC",
          "short_description": "VLC is a powerful and feature-rich media player, but its current UI can feel outdated and less intuitive—especially for newer users. This project...",
          "description": "VLC is a powerful and feature-rich media player, but its current UI can feel outdated and less intuitive—especially for newer users. This project aims to make a redesign of the user interface of VLC Media Player using Qt and Qt QML by enhancing both the visual consistency and performance of the application.  From my own use of the software and from reading community feature requests, I will implement thoughtful Quality of Life features, some of which are also inspired from my own presentation software project with Qt.",
          "student_name": "Arpit Benjamin (GlaucousGlaucus)",
          "code_url": null,
          "proposal_id": "JY13hAIg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WKhoaEIr"
        },
        {
          "title": "VLC iOS UI update - implementing Parental Control in VLC for iOS",
          "short_description": "This proposal aims to update the User Interface and add new features to catch up with the Android version of VLC, enhancing and making the user...",
          "description": "This proposal aims to update the User Interface and add new features to catch up with the Android version of VLC, enhancing and making the user experience safer and easier.\nThe main feature of this project will be adding to VLC iOS app the Parental Control feature already available on the VLC Android app. This will enable iOS users to restrict access to the app settings and to sensitive actions, such as deleting media files or modifying playlists, unless the user successfully authenticates via a PIN code or biometrics.\nThis is particularly useful in environments where children or unauthorized users might otherwise access media libraries unsupervised.\nThis feature will ensure that VLC for iOS offers the same level of protection and control alongside consistent design guidelines and accessibility currently available in VLC for Android.\nAs part of this effort, some components of the settings interface and media actions will also be reviewed and updated to align with modern iOS UI patterns. Implementing these improvements will strengthen the app’s usability in shared environments and contribute to a safer, more polished experience for all users.",
          "student_name": "Arthur Norat",
          "code_url": null,
          "proposal_id": "Xa52PFVg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LQHsm73T"
        },
        {
          "title": "Advanced Audio Filters for VLC",
          "short_description": "This project proposal outlines a comprehensive plan to significantly enhance the audio processing capabilities of the VLC media player through the...",
          "description": "This project proposal outlines a comprehensive plan to significantly enhance the audio processing capabilities of the VLC media player through the implementation of advanced audio filters. The applicant possesses a strong interest in this project and has the relevant skills and experience in audio signal processing and C programming necessary for its successful completion. The proposed tasks, including the implementation of 3D audio effects, Prologic-II upmixing, audio track mixing and transitions, Lua scripting for custom filters, and LADSPA integration, are ambitious yet achievable within the Google Summer of Code timeframe. The applicant is committed to delivering high-quality, well-documented code and actively engaging with the VLC developer community throughout the project. The successful completion of this project promises to have a substantial positive impact on VLC and its users, providing a more versatile and feature-rich audio experience within this widely used open-source media player.",
          "student_name": "Benny Perumalla",
          "code_url": null,
          "proposal_id": "YKe2Ip1F",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/c03UUkMf"
        },
        {
          "title": "VLC macOS Modern Interface Redesign",
          "short_description": "Problem: VLC’s macOS interface has fallen behind modern design standards, creating a disjointed experience compared to its intuitive iOS/tvOS...",
          "description": "Problem:\nVLC’s macOS interface has fallen behind modern design standards, creating a disjointed experience compared to its intuitive iOS/tvOS counterparts. The current AppKit-based UI lacks macOS Sequoia's visual polish, struggles with libvlc’s newer playback features (e.g., frame-accurate seeking), and suffers from inefficient media library management. This outdated design hinders usability and fails to make use of macOS’s native capabilities.\n\nSolution:\nRedesign VLC’s macOS interface using AppKit to implement a pre-approved, user-tested design that integrates into macOS visual aesthetics and libvlc’s advanced APIs. The overhaul will:\n1. Replace legacy Carbon-era UI components with modern NSCollectionView and NSSplitViewController layouts.\n2. Integrate libvlc’s latest playback controls (frame stepping, HDR metadata) into native transport UIs.\n3. Rebuild the media library using Core Data for performance and NSDiffableDataSource for real-time updates.\n4. Prioritize system consistency with SF Symbols, vibrant materials, and macOS accessibility standards.\n\nDeliverables:\n1. Modern UI Components:\n- Unified toolbar with adaptive controls (NSToolbarItemGroup)\n- Redesigned media library with thumbnail grid (NSCollectionView) and smart filters (NSPredicateEditor)\n2. Enhanced Playback:\n- Frame-accurate seekbar with NSSlider tick marks synced to libvlc’s next_frame() API\n- HDR tone mapping toggle using CAMetalLayer integration\n3. Optimized Media Management:\n- Rules-based playlists backed by Core Data\n- Spotlight-like search using NSFetchRequest\n4. Developer Documentation:\n- Migration guide for plugin developers\n- NSAccessibility implementation notes\n\nBy collaborating closely with VLC’s core team and iterating on the existing codebase, this project will deliver a performant, native macOS experience that bridges the gap between VLC’s powerful engine and modern user expectations.",
          "student_name": "Bob Moriasi",
          "code_url": null,
          "proposal_id": "GhnGWNC4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YEcSHEh5"
        },
        {
          "title": "VLC for Apple Watch: Standalone Player & iPhone Companion",
          "short_description": "This project aims to bring VLC's media capabilities to Apple Watch by developing both a companion app and standalone functionality. The app will...",
          "description": "This project aims to bring VLC's media capabilities to Apple Watch by developing both a companion app and standalone functionality. The app will enable users to consume audio media directly on their watch by syncing files from their iPhone or streaming content independently. By leveraging the recently added VLCKit support for watchOS and implementing a modern SwiftUI interface, the project will extend VLC's reach to a new platform while maintaining the same commitment to accessibility and quality that VLC is known for.",
          "student_name": "Fahri",
          "code_url": null,
          "proposal_id": "7xRb2Vz3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QExwlue9"
        },
        {
          "title": "Enhancing Lua Integration for VLC Extensions",
          "short_description": "This project aims to improve the Lua integration in VLC by transitioning Lua extension loading from the GUI layer to libvlccore, making them...",
          "description": "This project aims to improve the Lua integration in VLC by transitioning Lua extension loading from the GUI layer to libvlccore, making them first-class citizens within the VLC architecture. The proposed enhancements will streamline the management of Lua scripts and improve extensibility, maintainability, and overall developer experience.\n\nKey deliverables include:\n\n    Refactoring libvlccore to handle Lua extension loading directly.\n\n    Designing a clearer abstraction for Lua stream parsers that extract metadata or content from web pages, replacing the current ad hoc manual read() approach.\n\n    Building a dedicated testing infrastructure for Lua scripts to ensure robustness and ease of future contributions.\n\nWith 350 hours allocated, this proposal outlines a plan to modernize and stabilize Lua integration in VLC. The project requires proficiency in Lua and C, while familiarity with C++ will be advantageous.",
          "student_name": "Kartik Dua",
          "code_url": null,
          "proposal_id": "Y8rdgOt4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oMcJRPQQ"
        },
        {
          "title": "Cloud Integration for VLC via libcloudstorage",
          "short_description": "The goal of this project is to make cloud storage services (like Dropbox and Google Drive) easily accessible from the VLC media player. The primary...",
          "description": "The goal of this project is to make cloud storage services (like Dropbox and Google Drive) easily accessible from the VLC media player. The primary deliverables will be:\n\n1. Reviving and Updating libcloudstorage: update the existing libcloudstorage library (which provides standardized cloud storage access) to ensure compatibility with current cloud provider APIs and best practices.\n2. VLC Integration: Port libcloudstorage to the VLC desktop application so users can browse, play, and edit cloud-stored media files just as they would with local files.\n3. Testing and Sample Use Cases: develop automated test suites and sample scenarios to verify integration and demonstrate functionality.\n\nThis project will make VLC more accessible in cloud workflows and give users better access to media hosted across multiple platforms",
          "student_name": "Maksym Yemelianenko",
          "code_url": null,
          "proposal_id": "awXiNlba",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yt3vtfkk"
        },
        {
          "title": "dav1d RISC-V Vector Optimization",
          "short_description": "This project aims to optimize the open-source AV1 decoder, dav1d, for the RISC-V Vector (RVV) ISA by implementing Vector-Length Agnostic (VLA)...",
          "description": "This project aims to optimize the open-source AV1 decoder, dav1d, for the RISC-V Vector (RVV) ISA by implementing Vector-Length Agnostic (VLA) intrinsics. The focus is on improving AV1 decoding performance across various resolutions and bit depths through dynamic vector-length handling, with benchmarking on real hardware like the Kendryte K230 (VLEN = 128 bits), the SpacemiT K1 (VLEN = 256 bit) and comparisons against ARM NEON using built-in dav1d tooling such as checkasm for detailed analysis.",
          "student_name": "OctopusET_",
          "code_url": null,
          "proposal_id": "Q5oxAbKF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HRhfk6b3"
        },
        {
          "title": "Technical Project Proposal: DVD-Audio  Deciphering Module in VLC",
          "short_description": "This project aims to add DVD-Audio support to VLC by implementing a module that decrypts and plays back CPPM-protected audio streams. Using...",
          "description": "This project aims to add DVD-Audio support to VLC by implementing a module that decrypts and plays back CPPM-protected audio streams. Using libdvdcpxm and related tools, the module will extract, decrypt, and decode high-fidelity DVD-Audio, ensuring seamless integration with VLC's existing playback architecture. The final deliverables include a working VLC module, full documentation, and optimizations for performance and compatibility.",
          "student_name": "Saifelden ismail",
          "code_url": null,
          "proposal_id": "i7SyxGvW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/db95jRqT"
        },
        {
          "title": "AI-Powered Smart Media Recommendation Engine for VLC",
          "short_description": "VLC Media Player is a widely used open-source media application with over 3 billion downloads. However, it lacks advanced content discovery features...",
          "description": "VLC Media Player is a widely used open-source media application with over 3 billion downloads. However, it lacks advanced content discovery features that are common in commercial streaming platforms. This proposal outlines the development of an AI-powered smart media recommendation engine as a native plugin for VLC. The system will analyze users' viewing habits, media metadata, subtitle content, and playback patterns to suggest relevant content from their local libraries. The plugin will emphasize privacy-first, locally-processed recommendations that respect user autonomy and data sovereignty. The project will deliver a modular recommendation system, integrated UI components, content analysis modules, comprehensive documentation, and a robust testing framework. The goal is to enhance user experience by providing personalized content discovery while maintaining VLC's commitment to user privacy and control.",
          "student_name": "Vaatsava Sri Bhargav",
          "code_url": null,
          "proposal_id": "ChW3qga9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ldqbL335"
        },
        {
          "title": "VLC iOS UI Update",
          "short_description": "This project aims to enhance the user experience of the VLC application on iOS by improving playback controls and resolving persistent subtitle...",
          "description": "This project aims to enhance the user experience of the VLC application on iOS by improving playback controls and resolving persistent subtitle issues. It will implement intuitive dynamic-length seeking based on swipe distance, allow users to set a custom default playback speed, and fix critical subtitle bugs affecting size consistency, character rendering (e.g., Chinese), and display/selection accuracy. Furthermore, the project will introduce a dual subtitle display feature, particularly useful for language learners. The deliverables will be these functional improvements integrated into the VLC iOS app, including the dynamic seek, custom speed setting, resolved subtitle problems, and the new dual subtitle capability, accompanied by necessary testing and documentation.",
          "student_name": "Yue(Zelda) Zhang",
          "code_url": null,
          "proposal_id": "uPWyl0Uz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rl8VGD9d"
        },
        {
          "title": "Radio-Browser integration",
          "short_description": "This project aims to integrate Radio-Browser.info into VLC Media Player, allowing users to browse and play internet radio stations directly within...",
          "description": "This project aims to integrate Radio-Browser.info into VLC Media Player, allowing users to browse and play internet radio stations directly within VLC. The implementation will use the free Radio-Browser API, eliminating the need to manually search and paste stream URLs.",
          "student_name": "Zyad M. Ayad",
          "code_url": null,
          "proposal_id": "NTfQpzuX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HLdME7jR"
        }
      ]
    },
    {
      "name": "CERN-HSF",
      "image_url": "https://summerofcode.withgoogle.com/media/org/cern-hsf/cjus658sjzba5zhg-360.png",
      "image_background_color": "#ffffff",
      "description": "Umbrella for Particle Physics-related projects",
      "url": "http://hepsoftwarefoundation.org/activities/gsoc.html",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/cern-hsf",
      "ideas_url": "https://hepsoftwarefoundation.org/gsoc/2025/summary.html",
      "guide_url": "https://hepsoftwarefoundation.org/activities/gsoc.html#for-students",
      "topics": [
        "machine learning",
        "big data",
        "algorithmics",
        "particle physics",
        "Performance Optimisation"
      ],
      "technologies": [
        "python",
        "c/c++",
        "data analysis",
        "artificial intelligence",
        "container orchestration"
      ],
      "irc_channel": "",
      "contact_email": "mailto:hsf-gsoc-admin@googlegroups.com",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/hepsoftfound",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 26,
      "projects": [
        {
          "title": "Support usage of Thrust API in Clad",
          "short_description": "This project proposes to enhance Clad, a Clang-based automatic differentiation (AD) tool, with support for NVIDIA's Thrust library. By enabling...",
          "description": "This project proposes to enhance Clad, a Clang-based automatic differentiation (AD) tool, with support for NVIDIA's Thrust library. By enabling differentiation of Thrust's GPU-parallel algorithms, Clad users will gain the ability to automatically generate gradients for CUDA-accelerated code in scientific computing and machine learning applications. The implementation will include extending Clad's source-to-source transformation engine to recognize Thrust primitives (e.g., transform, reduce), implement custom derivatives, and validate performance through real-world use cases. This work will bridge the gap between high-performance GPU computing and AD, potentially accelerating gradient-based optimization tasks by orders of magnitude.",
          "student_name": "Abdelrhman Elrawy",
          "code_url": null,
          "proposal_id": "0N7LLnk6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pKQZ4KcQ"
        },
        {
          "title": "Implementing Debugging Support for xeus-cpp",
          "short_description": "This proposal outlines integrating debugging into the xeus-cpp kernel for Jupyter using LLDB and its Debug Adapter Protocol (lldb-dap). Modeled after...",
          "description": "This proposal outlines integrating debugging into the xeus-cpp kernel for Jupyter using LLDB and its Debug Adapter Protocol (lldb-dap). Modeled after xeus-python, it leverages LLDB’s Clang and JIT debugging support to enable breakpoints, variable inspection, and step-through execution. The modular design ensures compatibility with Jupyter’s frontend, enhancing interactive C++ development in notebooks.",
          "student_name": "Abhinav B Kumar",
          "code_url": null,
          "proposal_id": "ITylGX94",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uEB2as1n"
        },
        {
          "title": "Highly Granular Quantization for CICADA",
          "short_description": "The project aims to enhance the CICADA anomaly detection system in the Compact Muon Solenoid (CMS) Level-1 Trigger (L1T) by integrating highly...",
          "description": "The project aims to enhance the CICADA anomaly detection system in the Compact Muon Solenoid (CMS) Level-1 Trigger (L1T) by integrating highly granular quantization (HGQ) techniques, which allow automatic, per-weight and per-bias quantization, providing finer control over model precision and resource usage. CICADA currently uses a distilled neural network model with layer-wise quantization to meet the strict sub-500ns latency required for the CMS L1T. This project involves developing a HGQ version of the CICADA distilled model and evaluating its performance and resource consumption when deployed on a Field Programmable Gate Array (FPGA), while contributing to the open-source CICADA, HGQ2 and hls4ml frameworks as needed. Notably, the HGQ2 library is also compatible with JAX, opening the door for future integration with modern, hardware-friendly ML ecosystems. These contributions will benefit the broader fast machine learning community focused on deploying ML models in low-latency, resource-constrained environments.",
          "student_name": "Abhishikth Mallampalli",
          "code_url": null,
          "proposal_id": "ZtMEPDmX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/b1JQ9zmB"
        },
        {
          "title": "Implement and improve an efficient, layered tape with prefetching capabilities",
          "short_description": "Automatic Differentiation (AD) is a computational technique that enables efficient and precise evaluation of derivatives for functions expressed in...",
          "description": "Automatic Differentiation (AD) is a computational technique that enables efficient and precise evaluation of derivatives for functions expressed in code. Clad is a Clang-based automatic differentiation tool that transforms C++ source code to compute derivatives efficiently. A crucial component for AD in Clad is the tape, a stack-like data structure that stores intermediate values for reverse mode AD. This project aims to optimize and generalize the Clad tape to improve its efficiency, introduce multilayer storage, enhance thread safety, and enable CPU-GPU transfer.",
          "student_name": "Aditi Milind Joshi",
          "code_url": null,
          "proposal_id": "EVnl2iGV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PI3FsJoG"
        },
        {
          "title": "Using ROOT in the field of genome sequencing",
          "short_description": "This project will improve how we store and analyze DNA sequence data by using ROOT's newer RNTuple format. We'll work in two main steps: First, we'll...",
          "description": "This project will improve how we store and analyze DNA sequence data by using ROOT's newer RNTuple format. We'll work in two main steps: First, we'll set up the current system and make it faster by improving search methods, processing data in batches, and using memory more efficiently. Then, we'll build a complete new system using RNTuple, which stores data in columns rather than rows. This includes creating tools to convert between common DNA data formats and RNTuple, splitting files in smart ways, and building fast search tools. Our goal is to make DNA data analysis much faster and able to handle the growing amount of sequence data that scientists are generating. This could become a new standard for DNA data storage that works better than current methods.",
          "student_name": "Aditya18",
          "code_url": null,
          "proposal_id": "g6ad9glW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DlfupPVR"
        },
        {
          "title": "Integrating Support for Google XLS in hls4ml",
          "short_description": "At the end of Moore’s law, building domain-specific computer architectures is considered the next step in improving program efficiency. Hls4ml is an...",
          "description": "At the end of Moore’s law, building domain-specific computer architectures is considered the next step in improving program efficiency. Hls4ml is an open-source project that translates machine learning (ML) models to high-level synthesis (HLS) code for deployment on hardware accelerators. The idea stems from the high-energy physics community at CERN. Google XLS (Accelerated Hardware Synthesis) is a novel framework that implements an HLS toolchain to produce synthesizable code for FPGA and ASIC applications. Thus, XLS can be integrated as one of the backends in hls4ml for transforming ML models into synthesizable code.\n\nThe goal of this project is to integrate an XLS-based backend for the hls4ml framework. In doing so, hls4ml benefits from improved vendor compatibility and portability while also offering the potential to increase hardware efficiency. During development, we will benchmark performance and resource utilization against the existing backends (e.g., AMD Vivado, Intel Quartus). Furthermore, XLS provides a domain-specific language (DSL) called DSLX and an optimized compiler that can reduce compilation time.\n\nThe expected results are an XLS backend prototype and benchmarks performed on various metrics for the synthesized code. Everything will be documented to facilitate use and future developments.",
          "student_name": "Andrei Girjoaba",
          "code_url": null,
          "proposal_id": "sU1tNGVJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Mv9bV0rM"
        },
        {
          "title": "Physics-Constrained Autoencoders: Intelligent Compression in High Energy Physics",
          "short_description": "The Large Hadron Collider (LHC) hosts high-energy physics (HEP) experiments, such as ATLAS, which generate over 1 petabyte of data every second....",
          "description": "The Large Hadron Collider (LHC) hosts high-energy physics (HEP) experiments, such as ATLAS, which generate over 1 petabyte of data every second. However, due to bandwidth and storage limitations, only a fraction of the produced data can be stored. To ensure that CERN’s scientists can benefit from having as much data as possible, lossy compression techniques can be considered as a possible solution to CERN’s high data volume challenge. A promising contender in data compression techniques is “BALER,” a machine-learning-based compression tool under development by the particle physics divisions of the University of Manchester. Through the utilization of autoencoder neural networks, significant levels of compression while maintaining high accuracy have been achieved for a variety of datasets, including highly-dimensional LHC datasets and 2D images.\n\nThrough Google Summer of Code 2025, I plan to collaborate with HSF, Manchester, and BALER to enhance their current compression model, tailoring it for physics-specific experimental data, enabling high-fidelity reconstruction for scientific investigation and analysis. Specifically, I plan to implement a physics-informed autoencoder model and evaluate its performance on open LHC datasets. Leveraging my past experience with Tensorized Physics-Informed Neural Networks, I aim to integrate physical laws directly into the autoencoder architecture and loss function, ensuring that compressed representations maintain physical validity. Furthermore, comparing reconstructed data against the original collected data will highlight outliers and physical abnormalities. Finally, I plan to document all experiments and evaluate the physics-informed autoencoder against BALER’s current performance when compressing real-world physics experiment data. With aid from my mentors, I hope to deploy this specialized version of BALER’s tool for CERN and other groups who could benefit from powerful physics-aware data compression.",
          "student_name": "Carter Capetz",
          "code_url": null,
          "proposal_id": "agAa2xpV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8p9T1Cnr"
        },
        {
          "title": "Evaluating CVMFS for Machine Learning Model Distribution",
          "short_description": "Physicists at the LHC need to perform ML inference on massive amounts of data. Currently, the bookkeeping of ML model files is an unsolved problem....",
          "description": "Physicists at the LHC need to perform ML inference on massive amounts of data. Currently, the bookkeeping of ML model files is an unsolved problem. The goal of this project is to evaluate the CernVM File System (CVMFS) as a platform to store, organize, and distribute model files. The two primary issues to tackle are latency and infrastructure. \n\nWe know there is a latency with using CVMFS versus local storage, so I will rigorously benchmark the performance of CVMFS and determine ways to minimize this overhead. For infrastructure, I will test integrating different services with CVMFS such as Cern Document Server (CDS) or Kubeflow's KServe. \n\nThe final deliverables will include extensive documentation on benchmarks and best-practices for using CVMFS, and an overall evaluation of CVMFS and the possible integrations like KServe. An example deployment of ML models from the ML4EP project using CVMFS will also be demonstrated.",
          "student_name": "jasonwu224",
          "code_url": null,
          "proposal_id": "6Xlmaf5u",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xAitvXdz"
        },
        {
          "title": "Enable automatic differentiation of OpenMP programs with Clad",
          "short_description": "This project aims to extend Clad, a Clang-based automatic differentiation tool for C++, to support OpenMP programs. By enabling Clad to parse and...",
          "description": "This project aims to extend Clad, a Clang-based automatic differentiation tool for C++, to support OpenMP programs. By enabling Clad to parse and differentiate OpenMP directives such as parallel for, reduction, and atomic, we will allow gradient computation in multi-threaded environments. The implementation will include enhancements to Clad’s AST parsing, variable scope analysis, and differentiation logic for both forward and reverse modes. Deliverables include robust OpenMP AD support, comprehensive tests, and user documentation.",
          "student_name": "Jiayang Li",
          "code_url": null,
          "proposal_id": "X01O6Wg2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XboSFIbL"
        },
        {
          "title": "Background Enrichment augmented Anomaly Detection (BEAD)– Contrastive VAE & Transformer Architecture",
          "short_description": "This project aims to enhance the BEAD framework for anomaly detection in high-energy physics by developing a new multi-stage architecture that...",
          "description": "This project aims to enhance the BEAD framework for anomaly detection in high-energy physics by developing a new multi-stage architecture that combines a contrastive variational autoencoder (VAE) with a self-supervised transformer and multi-task fine-tuning layers. The key goal is to learn generator-invariant representations from 4-momentum vectors of background events by pretraining the VAE using generator labels (e.g., Pythia, Herwig, Sherpa). The latent variables produced are then masked and enriched with high-level physics features (e.g., MET, HT, Meff) and passed through a transformer trained to reconstruct them, encouraging deeper physics representation learning.\n\nThe enhanced latent space is decoded using fine-tuning layers that perform multiple tasks simultaneously: reconstructing event-level features, predicting jet properties, and regressing unseen quantities. This structure encourages collaboration between the VAE and transformer components, increasing robustness against spurious correlations and improving anomaly detection performance.\n\nDeliverables will include:\n- A modular implementation of the full architecture within BEAD\n- Integration with tools like Weights & Biases for experiment tracking\n- Docker support for reproducibility\n- Evaluation benchmarks on synthetic datasets\n- Final documentation and presentation of findings at the CERN ML Forum",
          "student_name": "JohnKala",
          "code_url": null,
          "proposal_id": "nwNyBlkV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6RCE7sFt"
        },
        {
          "title": "Benchmarking Sustainability of Classical & Quantum Algorithms for particle trajectory reconstruction",
          "short_description": "The Large Hadron Collider (LHC) particle track reconstruction faces increasing computational demands, driving exploration into novel methods like...",
          "description": "The Large Hadron Collider (LHC) particle track reconstruction faces increasing computational demands, driving exploration into novel methods like Quantum Computing QC. However, evaluating these requires assessing factors such as performance and sustainability. This project aims at developing a modular Python benchmarking framework to systematically compare classical algorithms e.g., Kalman Filter-based, GNN-based against quantum approaches e.g., QAOA, VQC simulated via PennyLane for tracking tasks using TrackML dataset. The framework will evaluate algorithms based on physics performance efficiency, purity, computational cost runtime, memory, quantum resource requirements qubits, depth, and sustainability indicators simulated/projected energy consumption. The key deliverable is the framework itself, providing the community with a tool for quantitative comparison, understanding performance/sustainability trade-offs, and informing future directions in deploying potentially sustainable computing solutions for High Energy Physics.",
          "student_name": "KaranSingh",
          "code_url": null,
          "proposal_id": "ptspTebl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kBQyVgrm"
        },
        {
          "title": "Implementing a deprecation system for Ganga",
          "short_description": "This project aims to introduce a structured, automated deprecation system for the Ganga project. Ganga currently lacks a formal process for phasing...",
          "description": "This project aims to introduce a structured, automated deprecation system for the Ganga project. Ganga currently lacks a formal process for phasing out legacy APIs and outdated code, resulting in accumulated technical debt and maintenance difficulties. The proposed solution includes decorator-based deprecation utilities (leveraging PEP 702), CI workflows to track expiry deadlines, and tools to detect regressions using deprecated features in pull requests. Deliverables also include test coverage and tooling for maintainers to enforce clean removals. This will improve maintainability, reduce clutter, and enhance developer experience across the project.",
          "student_name": "Kossi GLOKPOR",
          "code_url": null,
          "proposal_id": "G1JjxL6e",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hIrlU5CX"
        },
        {
          "title": "RNTuple in JSROOT",
          "short_description": "This project addresses the lack of RNTuple support in JSROOT, a critical gap hindering browser-based visualization and analysis of high-energy...",
          "description": "This project addresses the lack of RNTuple support in JSROOT, a critical gap hindering browser-based visualization and analysis of high-energy physics (HEP) data. \n\nMy Solution:\nBy developing a JavaScript parser for RNTuple’s binary format, extending JSROOT’s interface to mirror its `TSelector` API for TTrees, and integrating visualization tools (histograms, scatter plots), researchers will gain seamless access to RNTuple data directly in web browsers. \n\nKey deliverables include:  \n\n1. Validated Parser: Tested against ROOT-generated datasets (via C++ macros) for accuracy.  \n\n2. JSROOT Integration: A `TRootupleSelector` interface enabling reuse of existing visualization modules.  \n\n3. Interactive Visualizations: Histograms, scatter plots, and UI features (tooltips, zoom) for real-time data exploration.  \n\n4. Optimized Performance: Stress-tested with 1M+ entries, cross-browser compatibility (Chrome, Firefox, Safari, Edge).  \n\nThis work will bridge the gap between RNTuple and browser-based HEP analysis, enhancing accessibility for global researchers.",
          "student_name": "Kriti Mahajan",
          "code_url": null,
          "proposal_id": "MzazMujD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JJDvSbP6"
        },
        {
          "title": "Extending support on custom kernels with virtme-ng",
          "short_description": "The CernVM File System - CVMFS distributes LHC experiment software and conditions data to the LHC computing infrastructure. The client application is...",
          "description": "The CernVM File System - CVMFS distributes LHC experiment software and conditions data to the LHC computing infrastructure. The client application is a read-only filesystem in userspace - a FUSE module, and may be sensitive to the different versions of linux kernel. Currently the integration test suite of CVMFS is run on different linux distributions and platforms and has coverage over a handful of kernel versions. The goal of this project is to increase this coverage and allow systematic testing for specific kernel versions and features.",
          "student_name": "Madlani Shivam",
          "code_url": null,
          "proposal_id": "7DTXdxrr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oh10qRfo"
        },
        {
          "title": "Implement activity analysis for reverse-mode differentiation of (CUDA) GPU kernels",
          "short_description": "GPUs and CUDA have revolutionized computing beyond graphics rendering, becoming essential in various fields due to their parallel processing...",
          "description": "GPUs and CUDA have revolutionized computing beyond graphics rendering, becoming essential in various fields due to their parallel processing capabilities. Clad, a Clang plugin, provides automatic differentiation for C++ functions by modifying Abstract-Syntax-Tree using LLVM compiler features. While Clad supports reverse-mode differentiation of CUDA kernels, data-race conditions are very frequent and considerably slow down the execution. Thread Safety Analysis helps detect data races to optimize performance by potentially reducing atomic operations in generated code.",
          "student_name": "Maksym Andriichuk",
          "code_url": null,
          "proposal_id": "YrIukEYZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XSdlsEEe"
        },
        {
          "title": "Rucio WebUI Revamp",
          "short_description": "As a final-year Software Engineering student at Kyiv Polytechnic Institute, I propose transforming Rucio WebUI into a more powerful, intuitive, and...",
          "description": "As a final-year Software Engineering student at Kyiv Polytechnic Institute, I propose transforming Rucio WebUI into a more powerful, intuitive, and sustainable platform. Drawing from my previous contributions and technical expertise, I've developed a comprehensive strategy that addresses current limitations while setting the foundation for future growth.\n\nMy plan focuses on migrating to modern technologies (Next.js 15, React 19, TailwindCSS 4.x), implementing server-side rendering for improved performance, enhancing the authentication system with NextAuth.js and RBAC, and fixing critical bugs like DID slash-handling issues and non-functional replicas loading. I'll also optimize performance through advanced streaming mechanisms for large data volumes, improve architecture with a transition to NX monorepo, enhance entity management functionalities, and implement comprehensive UI/UX refinements.\n\nWith substantial experience in the Rucio WebUI codebase from my previous internship and 30+ contributions to the project, I've demonstrated my commitment and technical ability to execute this comprehensive modernization plan. My current work with Next.js and NX at a startup provides me with cutting-edge expertise that I can directly apply to enhance the project's development and implementation.",
          "student_name": "MytsV",
          "code_url": null,
          "proposal_id": "GFlBDJTV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IzibloUu"
        },
        {
          "title": "Intelligent Log Analysis for the HSF Conditions Database",
          "short_description": "The nopayloaddb tool works as an implementation of the conditions database reference for the HSF. The project is based upon Nginx, Django, and the...",
          "description": "The nopayloaddb tool works as an implementation of the conditions database reference for the HSF. The project is based upon Nginx, Django, and the PostgreSQL database. The tool also includes RESTful APIs and Helm charts to provide easier development and integration. However, the tool lacks centralized logging to effectively monitor and debug issues. \n\nThis project aims to implement intelligent logging software that can enhance observability and performance. The solution will aggregate logs from multiple sources into a centralized logging system. It will ensure streamlined monitoring and use machine learning to analyze logs for potential issues, inefficiencies, or failures.\n\nBy detecting anomalies, the system will help address problems before they escalate and will provide insights for optimal parameter adjustments during high request loads. Comprehensive documentation and an integration guide will be provided for long-term maintainability. In conclusion, this solution will enhance the reliability, efficiency, and scalability of the nopayloaddb tool.",
          "student_name": "Osama Tahir",
          "code_url": null,
          "proposal_id": "jE3QNFwX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bD4yyXz6"
        },
        {
          "title": "Improve automatic differentiation of object-oriented paradigms using Clad",
          "short_description": "The project addresses a limitation in Clad, a Clang plugin for C++ automatic differentiation, which currently cannot fully support non-trivially...",
          "description": "The project addresses a limitation in Clad, a Clang plugin for C++ automatic differentiation, which currently cannot fully support non-trivially copyable types, restricting its use in Object-Oriented Programming. I am going to enhance Clad's reverse mode differentiation by modifying its forward sweep functions to store intermediate values effectively and improving the To-Be-Recorded analysis to handle nested function calls and pointer operations. Deliverables include support for non-copyable types, enhanced TBR analysis, and optimized memory usage. These improvements will significantly extend Clad's applicability in modern C++ codebases using object-oriented design patterns.",
          "student_name": "Petro Zarytski",
          "code_url": null,
          "proposal_id": "qbJAi82F",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/78v5Tl8E"
        },
        {
          "title": "Integration of STL concurrency primitives into CLAD",
          "short_description": "CLAD is a compiler plugin that enables automatic differentiation of C++ functions. It supports differentiation of user-defined structs, however it...",
          "description": "CLAD is a compiler plugin that enables automatic differentiation of C++ functions. It supports differentiation of user-defined structs, however it struggles with complex structures/classes. It  does not account for functions with side effects either. Though this could be aided with the use of custom derivatives, it would still be useful to have built-in support of some of those complex structures and functions with side effects. One of the most useful ones is std::thread, which is the thread class from STL. Utilizing parallelism is very important for modern numerical methods and, as such, having support of std::thread and other STL concurrency primitives would be a useful feature for CLAD.",
          "student_name": "pmozil",
          "code_url": null,
          "proposal_id": "vPtaBm11",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2CTNxjSY"
        },
        {
          "title": "TMVA SOFIE - Enhancing Keras Parser and JAX/FLAX Integration",
          "short_description": "The SOFIE (System for Optimized Fast Inference Code Emit) project is an initiative within the TMVA (Toolkit for Multivariate Data Analysis) framework...",
          "description": "The SOFIE (System for Optimized Fast Inference Code Emit) project is an initiative within the TMVA (Toolkit for Multivariate Data Analysis) framework in ROOT, which aims to enhance the efficiency and speed of inference on Machine Learning Models. SOFIE converts ML models trained in different frameworks such as ONNX, PyTorch, and Tensorflow, converting them into an Intermediate Representation (IR). This IR allows SOFIE to generate optimized C++ functions for fast and effective inference of neural networks and subsequently convert them into C++ header files, which can be used in plug-and-go style for inference. \nFor GSoC 2025, this project aims to enhance the Keras parser to support models trained in the latest TensorFlow v2.18.0, which introduces NumPy 2.0 compatibility. As well as Integrate JAX/FLAX support, enabling SOFIE to generate C++ inference functions for models developed using JAX/FLAX",
          "student_name": "Prasanna Kasar",
          "code_url": null,
          "proposal_id": "cdBp3ctQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uAjGYhgX"
        },
        {
          "title": "Enhancing LLM Training Efficiency with Clad for Automatic Differentiation in C++",
          "short_description": "Training Large Language Models (LLMs) is computationally expensive, often bottlenecked by the performance limitations of Python-based frameworks....",
          "description": "Training Large Language Models (LLMs) is computationally expensive, often bottlenecked by the performance limitations of Python-based frameworks. This project addresses this challenge by enhancing LLM training efficiency within a C++ environment through the integration of Clad, a Clang/LLVM compiler plugin for automatic differentiation (AD). We will deveop a custom C++ tensor library specifically designed for optimal interaction with Clad. The core objective is to replace traditional runtime or manual gradient computations with Clad's efficient compile-time differentiation for key LLM operations within a GPT-2 training pipeline. This involves investigating effective strategies to bridge Clad's static analysis with dynamic neural network computations, benchmarking the resulting performance gains in speed and memory usage against a non-Clad baseline, and leveraging OpenMP for further parallelization.",
          "student_name": "Rohan Timmaraju",
          "code_url": null,
          "proposal_id": "45EdWDLv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TqLF4fm0"
        },
        {
          "title": "TMVA SOFIE - GPU Support for Machine Learning Inference",
          "short_description": "ROOT's TMVA( Toolkit for Multi-Variate Analysis ) has SOFIE (System for Optimized Fast Inference code Emit) which offers a parser capable of...",
          "description": "ROOT's TMVA( Toolkit for Multi-Variate Analysis ) has SOFIE (System for Optimized Fast Inference code Emit) which  offers a parser capable of converting ML models trained in Keras, PyTorch, or ONNX format into its own Intermediate Representation, and generates C++ functions that can be easily invoked for fast inference of trained neural networks. It is currently implemented for CPU inference along with a SYCL implementation.\n \n This project aims to explore different GPU stacks (such as CUDA, ROCm, ALPAKA) and implement GPU-based inference functionalities in SOFIE. Although there exist CPU implementations, working with HEP applications, need for GPU inferences become important. \n\nWe will be writing optimized GPU Kernels for various operators such as RELU, GEMM, CONV2D, etc. that SOFIE already has for CPU implementation. \n\nTesting and experimenting which tech stack (such as CUDA, ROCm, ALPAKA) will be best aligned with SOFIE is our first goal. After getting to know about the pros and cons we can decide which one aligns with our goal.\n\nOur next aim would be to integrate all operators for GPU implementation in a incremental fashion ensuring each operator gets enough testing for edge cases.\n\nOnce we have done basic implementation, we move on to optimizing thread-block config by using tools like Nsight for maximum performance.\n\nOnce we have implemented our operators for the GPU stack, there is a need for performance benchmarking against popular frameworks like Pytorch/Tensorflow.\n\nLast part of the project would be extensive testing and benchmarking memory usage and execution time.\n\nI would end the project with proper documentation on how exactly to implement and scopes for further improvements.",
          "student_name": "S.Akash",
          "code_url": null,
          "proposal_id": "EOzEmlCA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WbEjJL5j"
        },
        {
          "title": "GreenML@CERN – A Comprehensive Framework for Energy-Efficient Scientific Machine Learning",
          "short_description": "The project addresses the rising energy consumption of ML workloads in high-energy physics (HEP) at CERN. While models like Baler and ATLAS top...",
          "description": "The project addresses the rising energy consumption of ML workloads in high-energy physics (HEP) at CERN. While models like Baler and ATLAS top taggers are essential for real-time data processing at the LHC, they impose significant carbon and energy costs. This proposal introduces GreenML@CERN, a holistic framework for optimizing the energy footprint of scientific ML workflows. The solution combines cross-architecture energy profiling (GPUs, CPUs, TPUs), scheduler efficiency analysis (HTCondor, Kubernetes), algorithmic optimizations (quantization, pruning, dynamic training), and an automated Jupyter-based energy profiler with a real-time dashboard.\n\nDeliverables include energy-optimized versions of CERN ML models, benchmarking datasets, a profiling toolkit, and visual dashboards. The project extends CERN's ongoing GreenDIGIT sustainability efforts with developer-focused ML tools to help the community balance performance with energy awareness—contributing directly to CERN’s 2030 carbon neutrality goals.",
          "student_name": "Sakshi Kumar",
          "code_url": null,
          "proposal_id": "tw7fG9a6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/r6G5rINJ"
        },
        {
          "title": "Agent-Based Simulation of CAR-T Cell Therapy Using BioDynaMo",
          "short_description": "This project aims to develop an agent-based simulation of CAR-T cell therapy using the BioDynaMo platform to better understand and optimize...",
          "description": "This project aims to develop an agent-based simulation of CAR-T cell therapy using the BioDynaMo platform to better understand and optimize immunotherapy treatments. \nUsing BioDynaMo, this project will model key components of CAR-T therapy, including T-cell migration, tumor cell engagement, and the influence of microenvironmental factors like hypoxia. The simulation will incorporate dynamic agent behaviors for both CAR-T and tumor cells, simulate various tumor types (e.g., solid tumors, leukemia), and progressively integrate biological complexities such as chemotaxis, apoptosis, and immune evasion mechanisms.\n\nDeliverables include:\n- A complete and well-documented BioDynaMo-based simulation modeling CAR-T cell therapy.\n- Custom analysis scripts to visualize tumor shrinkage and evaluate CAR-T cell performance.\n- Performance comparisons across multiple therapeutic strategies through benchmarking.\n- A scientific-style report detailing results, insights, and potential implications.\n\nBy combining computational modeling with biological insights, this project will support researchers in designing better CAR-T strategies and understanding treatment dynamics under diverse conditions.",
          "student_name": "Salvador de la Torre Gonzalez",
          "code_url": null,
          "proposal_id": "FPJrumUj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VycIbWat"
        },
        {
          "title": "Data Representation Optimisation for Generative Model-based Fast Calorimeter Shower Simulation",
          "short_description": "Summary: This project addresses a critical computational bottleneck in high-energy physics: the simulation of particle showers in calorimeters, which...",
          "description": "Summary:\nThis project addresses a critical computational bottleneck in high-energy physics: the simulation of particle showers in calorimeters, which consumes up to 90% of computing resources using traditional Monte Carlo methods. Modern calorimeters generate sparse, high-dimensional data that challenges machine learning approaches. I'm developing a physics-informed clustering framework that intelligently reduces this dimensionality while preserving essential physics information through two complementary algorithms: a Modified DBSCAN with CLUE elements and a Graph-Based approach that leverages simulation history. Both utilize physics-informed distance metrics incorporating spatial, energy, and time information and employ a cell-aware strategy that clusters dense regions aggressively when within detector cells while preserving structure between them.\n\nDeliverables:\nThe deliverables include an end-to-end pipeline that transforms detailed Geant4 shower data into optimized point cloud representations, two physics-preserving clustering algorithms, and an evaluation framework that quantifies how well these representations maintain critical shower properties while significantly reducing data complexity. This optimized representation will enable efficient training of generative models for fast calorimeter simulation, addressing a key challenge in high-luminosity experiments.",
          "student_name": "Tarun_Tej_Nandi",
          "code_url": null,
          "proposal_id": "tTAqtHnt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/C9arRGA2"
        },
        {
          "title": "Neural (De)compression for High Energy Physics",
          "short_description": "In high-energy physics experiments such as those conducted at CERN's ATLAS project, the volume of data generated is immense, reaching up to 60...",
          "description": "In high-energy physics experiments such as those conducted at CERN's ATLAS project, the volume of data generated is immense, reaching up to 60 million MB per second. While lossless compression is already employed to manage this data, lossy compression—specifically of floating-point precision—offers more aggressive reductions, potentially decreasing file sizes by over 30%. However, this comes at the cost of irreversibly discarding information, raising the challenge of how to recover or approximate full-precision data for downstream analysis.\n\nThis project proposes a novel approach using deep probabilistic models to reconstruct high-precision floating-point data from aggressively compressed representations, a problem coined as precision upsampling. The goal is to explore and compare the capabilities of three classes of generative models: autoencoders, diffusion models, and normalizing flows. Each model type offers distinct advantages: autoencoders are well-studied in neural compression, diffusion models are robust to noise and excel in reconstructing multi-scale structures, and normalizing flows offer exact likelihood estimation and invertible mappings that align well with the structured nature of physical data.\n\nDeliverables include a literature review on neural precision upsampling methods, a working baseline model adapted to CERN's PHYSLITE floating-point compressed data, and a comparative study of advanced probabilistic models—including variational autoencoders, diffusion models, and normalizing flows. Evaluation metrics will also be tailored to the data and implemented. Final outputs will include reproducible code, performance benchmarks, a written technical report, and optionally a publication or integration into the ATLAS codebase.",
          "student_name": "Yolanne",
          "code_url": null,
          "proposal_id": "JzLqI8jH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/W5UjfwMc"
        }
      ]
    },
    {
      "name": "MariaDB",
      "image_url": "https://summerofcode.withgoogle.com/media/org/mariadb/0nbzguld3ntsgeqv-360.png",
      "image_background_color": "#ffffff",
      "description": "The fastest growing Open Source Database",
      "url": "https://mariadb.org",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/mariadb",
      "ideas_url": "https://mariadb.com/kb/en/google-summer-of-code-2025/",
      "guide_url": "https://mariadb.org/gsoc2022-instructions/",
      "topics": ["Database Engines", "SQL Features"],
      "technologies": ["python", "javascript", "c/c++", "perl", "databases"],
      "irc_channel": "https://mariadb.zulipchat.com/",
      "contact_email": "",
      "mailing_list": "https://mariadb.com/kb/en/mailing-lists/",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Vacuum cleaning for empty on-disk records in MariaDB ColumnStore",
          "short_description": "MariaDB ColumnStore (MCS) does not currently reclaim disk space from empty records left behind by DELETE operations or bulk imports. These empty...",
          "description": "MariaDB ColumnStore (MCS) does not currently reclaim disk space from empty records left behind by DELETE operations or bulk imports. These empty records accumulate over time and waste both storage and CPU resources during query execution.\n\nThis project aims to address the issue by implementing manual vacuum functionality in MCS. It introduces User-Defined Functions (UDFs) for analyzing and vacuuming table and partition-level bloat. The core vacuum process involves identifying non-empty records and copying them to new extents.\n\nDeliverables include:\n- UDFs to analyze and report table and partition bloat.\n- UDFs to vacuum empty records from partitions and tables.\n- Support for table-level vacuuming with parallelism.\n- Documentation and testing for all features.\n- Autovacuum process (stretch goal).",
          "student_name": "Amr Elmohamady",
          "code_url": null,
          "proposal_id": "MldethpF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/B08vjsoS"
        },
        {
          "title": "Plugin for automatic embedding generation and introduction of expensive functions concept",
          "short_description": "Currently, there is no plugin in MariDB that can generate vector embeddings. If the user wishes to store vector embeddings for a document, they have...",
          "description": "Currently, there is no plugin in MariDB that can generate vector embeddings. If the user wishes to store vector embeddings for a document, they have to use a separate solution and then manually insert them into the database. This is inefficient and complicates related pipelines.\n\nThe goal of this project is twofold:\n1. Create a function plugin that implements a function to query OpenAI’s API to generate vector embeddings for a given input.\n2. Implement a concept of “expensive” functions in the MariaDB server. When expensive functions are used in stored generated columns, they should not be recomputed whenever possible (for example during ALTER TABLE commands). Instead, the old values should be copied to the new table, just like with regular columns\n\nFor this project to be successfully completed, the goal would be to create a PR to MariaDB’s server repository that:\n1. Implements a function plugin for generating vector embeddings via API calls to OpenAI\n2. Introduces and implements the concept of “expensive” functions, to avoid recomputing them whenever possible \n3. Ensures the quality of the newly developed features is up to standards, via appropriate testing and documentation",
          "student_name": "Apostolis Stamatis",
          "code_url": null,
          "proposal_id": "6gamHA8H",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8n0c6PsY"
        },
        {
          "title": "Implementation of Native INTERVAL Data Type",
          "short_description": "This project aims to transform MariaDB's INTERVAL keyword into a first-class data type, enabling its use in table columns, stored routines, and...",
          "description": "This project aims to transform MariaDB's INTERVAL keyword into a first-class data type, enabling its use in table columns, stored routines, and hybrid functions.",
          "student_name": "Hazem Alrawi",
          "code_url": null,
          "proposal_id": "Jdx0IC6E",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2Q6aPhXV"
        },
        {
          "title": "FRM parser Utility for MariaDB",
          "short_description": "FRM files are what MariaDB uses to store metadata about tables. These files can be used to generate DDL statements (CREATE TABLE ...). We are lacking...",
          "description": "FRM files are what MariaDB uses to store metadata about tables. These files can be used to generate DDL statements (CREATE TABLE ...). We are lacking a utility to parse these files which could in turn make DBAs lives easier. The task of this project is to have this utility implemented, making use of MariaDB's FRM parsing logic. You may have to carry out some refactoring to extract the parsing code into a reusable library, once for MariaDB Server, once for the FRM parsing tool.",
          "student_name": "hp77",
          "code_url": null,
          "proposal_id": "hZI2Q6I4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vAVydntH"
        },
        {
          "title": "Enhanced mysqltest Language with Expressions and Variable Substitutions",
          "short_description": "The mysqltest tool is a core component of MariaDB’s testing infrastructure. Currently, it has two limitations that restrict the flexibility and...",
          "description": "The mysqltest tool is a core component of MariaDB’s testing infrastructure. Currently, it has two limitations that restrict the flexibility and expressiveness of test scripts:\n1. Limited Variable Substitution: The tool only supports basic variable access patterns.\n2. Lack of Expression Support: It lacks support for arithmetic, comparison, and boolean\noperations.\nThis project addresses both limitations by implementing SQL-like function support and expression evaluation to the mysqltest language. It also enables users to write more concise, maintainable, and powerful test scripts while ensuring backward compatibility with existing tests.",
          "student_name": "Khaled Riyad",
          "code_url": null,
          "proposal_id": "ijQusMdh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lkS4SUrA"
        },
        {
          "title": "Replication to Enable Filtering on Master",
          "short_description": "Currently there are two ways of replication filters in MariaDB. One method filters data on the primary node by not writing unwanted events to the...",
          "description": "Currently there are two ways of replication filters in MariaDB. \n\nOne method filters data on the primary node by not writing unwanted events to the binary log, However, this approach risks losing important data and can cause issues with point-in-time recovery. \nThe alternative is to send all data from the primary node to the replicas and let them filter out what they don't need although this method not only increases network traffic and resource usage but also creates a risk of inconsistent data if replicas are misconfigured.\n\nThis proposal suggests adding a filter on the primary node that checks which data should be sent to the replicas, while still logging all events in the binary log. The filter will help control what gets replicated without affecting the ability to recover data. \n\nThis would lead to less network bandwidth being used, less work needed on the replicas, and more consistent replicas by applying the same filtering rules in one place (primary filter instead of replica filter).",
          "student_name": "Mohanad Khaled",
          "code_url": null,
          "proposal_id": "Ryn8CiJk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uzgYlzc5"
        },
        {
          "title": "Reduce computations in JOINs by using Bloom-filter-based pre-joins",
          "short_description": "Implement an efficient Bloom Filter to reduce JOIN's computations. Idea is to apply Bloom filter on columns to filter the data as much as possible,...",
          "description": "Implement an efficient Bloom Filter to reduce JOIN's computations. Idea is to apply Bloom filter on columns to filter the data as much as possible, and then feed the data to JOIN. This will significantly reduce the amount of memory taken by JOIN operation and increase its performance.",
          "student_name": "Thunder333",
          "code_url": null,
          "proposal_id": "JT1BeYZa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DSvUKctm"
        }
      ]
    },
    {
      "name": "KDE Community",
      "image_url": "https://summerofcode.withgoogle.com/media/org/kde-community/1mbnnsqwd2ejcmy8-360.png",
      "image_background_color": "#ffffff",
      "description": "Control your digital life",
      "url": "https://kde.org/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/kde-community",
      "ideas_url": "https://community.kde.org/GSoC/2025/Ideas",
      "guide_url": "https://community.kde.org/GSoC",
      "topics": ["education", "science", "applications", "desktop environment"],
      "technologies": ["c++", "qt", "qml", "data structures"],
      "irc_channel": "https://userbase.kde.org/IRC_Channels",
      "contact_email": "",
      "mailing_list": "https://mail.kde.org/mailman/listinfo/kde-devel",
      "twitter_url": "https://twitter.com/kdecommunity",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 15,
      "projects": [
        {
          "title": "Porting ISO Image Writer GUI to Kirigami",
          "short_description": "The current KDE ISO Image Writer has an outdated interface and lacks features like direct ISO downloads and other nice-to-have features. This...",
          "description": "The current KDE ISO Image Writer has an outdated interface and lacks features like direct ISO downloads and other nice-to-have features. This proposal aims to Modernize the app using Kirigami for a responsive UI, integrate distribution repositories for direct ISO downloads, fix UI inconsistencies along with some nice to have features like a progress bar.\n\nDeliverables:\n\n    A polished Kirigami-based UI.\n    Backend support for downloading and writing ISOs.\n    Pre-authentication and cross-platform improvements.\n    Documentation and testing.\n\nThe resulting port of ISO Image writer will be a more user-friendly tool for creating bootable USB drives across Linux, Windows, and macOS.",
          "student_name": "@AkkiSingh",
          "code_url": null,
          "proposal_id": "kQTWeSyz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NsnXJcxf"
        },
        {
          "title": "Improving Kdenlive timeline markers",
          "short_description": "Kdenlive currently supports single-point timeline markers, which limits efficiency for workflows that require marking time ranges, such as highlight...",
          "description": "Kdenlive currently supports single-point timeline markers, which limits efficiency for workflows that require marking time ranges, such as highlight editing or collaborative annotations. This project proposes enhancing Kdenlive's marker system by introducing duration-based markers that define a clear start and end time.\n\nThe project will extend the marker data model to support a duration attribute while maintaining backward compatibility. The UI will be updated to visualize range markers as colored regions on the timeline, with interactive handles for resizing and editing. These markers will be integrated with key features like zone-to-marker conversion, search and navigation, rendering specific ranges, and import/export capabilities-streamlining workflows and aligning Kdenlive with professional editing tools.",
          "student_name": "Ajay Chauhan 1",
          "code_url": null,
          "proposal_id": "eoUDx07I",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/sfesp3KZ"
        },
        {
          "title": "Expanding the KDE Mentorship and Recruitment Website",
          "short_description": "The KDE Mentorship website plays a crucial role in onboarding new contributors to the KDE community. However, the current site lacks a modern,...",
          "description": "The KDE Mentorship website plays a crucial role in onboarding new contributors to the KDE community.\nHowever, the current site lacks a modern, user-friendly ui, and doesn’t fully support KDE’s broader goals of recruitment and engagement.\nThis project aims to redesign the website into a contributor onboarding and recruitment platform. \nIt will organize the site into clear sections—Mentorship Programs, Communication Channels, Resources, Community Engagement and Recruitment Services.\nThe project will be built using HuGo for static site generation,  Go for the backend logic such as personalized resource recommendations and contributor assessment.\nDeliverables include a fully responsive  website which shows all the mentorship program details, resource recommendations, contributor testimonials, and a recruitment pathfinder system.\nThis project directly aligns with KDE’s goal: \"KDE Needs You\" ,\nwhich aims to bring more contributors into the community for next two years.",
          "student_name": "Anish Tak",
          "code_url": null,
          "proposal_id": "n0Cycyz4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rlwNxSAK"
        },
        {
          "title": "Enhancing GCompris Server with GUI Sub-Programs for Dataset Creation",
          "short_description": "This project aims to enhance the GCompris educational suite by introducing a set of intuitive, GUI-based tools tailored for teachers. These tools...",
          "description": "This project aims to enhance the GCompris educational suite by introducing a set of intuitive, GUI-based tools tailored for teachers. These tools will allow educators to easily create and manage custom datasets for various activities, improving adaptability and personalization in the learning experience.\n\nThe activities targeted for dataset creation include:\n\n    1.Grammar Analysis\n    2.Graduated Lines\n    3.Decimal Numbers\n    4. Share\n    5.Fractions Create\n\nThe core of the solution involves building user-friendly interfaces using QML, allowing teachers to input data without dealing with raw JSON or technical configurations. On the backend, we will enhance and adapt the activity logic using JavaScript to ensure compatibility with both newly created and existing datasets. These tools will be implemented as modular plugins integrated into the GCompris infrastructure.\n\nBy empowering teachers to contribute customized content directly, the project fosters a more dynamic and inclusive educational environment, catering to diverse learning needs.",
          "student_name": "Ashutosh Singh26",
          "code_url": null,
          "proposal_id": "dnCc3RsB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1uDvux79"
        },
        {
          "title": "Add more fuzzed libraries to oss-fuzz",
          "short_description": "Fuzzing is an automated testing technique that feeds random or unexpected inputs to programs to find bugs and security issues. OSS-Fuzz is a SaaS by...",
          "description": "Fuzzing is an automated testing technique that feeds random or unexpected inputs to programs to find bugs and security issues. OSS-Fuzz is a SaaS by Google that continuously runs fuzzers against open source projects to catch these issues early. This project aims to expand OSS-Fuzz integration across more KDE libraries, focusing on those that handle external inputs like file parsers and thumbnail generators, which are prone to parsing and memory bugs. By identifying high-priority targets, writing and setting up dedicated fuzzers, the goal is to catch potential vulnerabilities early and improve the security and stability of the KDE ecosystem.",
          "student_name": "Azhar Momin",
          "code_url": null,
          "proposal_id": "twZU8mVI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HGa6a2Vn"
        },
        {
          "title": "Python virtual environments in Cantor",
          "short_description": "Implement the Python virtual environment switching function based on Cantor, so that the virtual environment switching function can be implemented in...",
          "description": "Implement the Python virtual environment switching function based on Cantor, so that the virtual environment switching function can be implemented in Cantor's application settings.\nIf time permits, I can explore the following:\n1. Support switching between different virtual environments: venv, conda\n2. Support virtual environment management (create, delete) and package management\n3. Support environment management for different Python versions\n\nThe key points to achieve this:\n1. Understand the principles of Python virtual environment management\n2. Read Cantor and Python environment related codes to understand how Cantor interacts with the Python interpreter\n3. Implement system environment switching through C++ and apply it in Cantor\n4. Ensure the compatibility of different Python environments(if an exception occurs)\n5. Write test cases to verify the reliability of the code\n6. Implement a switching process that interacts well with users\n7. Record the implementation process for subsequent development and maintenance",
          "student_name": "billy zheng",
          "code_url": null,
          "proposal_id": "smr9eeCg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/wDIDmwxD"
        },
        {
          "title": "Developing Karton, the KDE Virtual Machine Manager",
          "short_description": "The KDE Community will benefit greatly from a native Qt Quick/Kirigami virtual machine manager. Currently, KDE users must use GTK-based VMMs such as...",
          "description": "The KDE Community will benefit greatly from a native Qt Quick/Kirigami virtual machine manager. Currently, KDE users must use GTK-based VMMs such as virt-manager or GNOME Boxes. Karton, the KDE Virtual Machine Manager, will be able to better integrate with Plasma and can align with the goals of KDE.  This project will use the libvirt API rather than the QEMU CLI, which abstracts away some of the low-level implementation details and potentially allow for the app to be cross-platform. \n\nA custom graphical viewer will need to be implemented using the SPICE protocol. Registering mouse and keyboard input callbacks should also allow users to interact with virtual machines. Virtual machines created with Karton should be fully customizable through libvirt's domain XML file format. Karton should also have the feature to create snapshots in order to load previous and save states of the virtual machine. \n\nOverall, the ultimate goal is to create a polished virtual machine manager that is able to replace our available alternatives.",
          "student_name": "Derek Lin",
          "code_url": null,
          "proposal_id": "YkCKwSKW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/phUCjPUf"
        },
        {
          "title": "KDE Linux Website",
          "short_description": "KDE Linux (called Project Banana) is new Linux OS by KDE community. But it don’t have a website yet like other KDE apps. So, many users don’t know...",
          "description": "KDE Linux (called Project Banana) is new Linux OS by KDE community. But it don’t have a website yet like other KDE apps. So, many users don’t know where to find info, download links or how to get help. This project is to make one nice website using Hugo that have all useful things in one place – like what is KDE Linux, how to download it, join community, ask for help, and more.\r\n\r\nThe website will be easy to use and mobile friendly. It will have pages like About, Download, Community, FAQ and Support. There will be search bar, dark/light mode, multi-language, and CI to auto-update download links. I also write guides for installing KDE Linux, and FAQs like how to install app or fix common problems. There will be links to Matrix, Mastodon and more KDE places where people talk and share.\r\n\r\nI already made starting version of the website before applying. I will now improve it step by step in GSoC time. After GSoC, I will still keep working to make it better and fix things. I want to help KDE Linux grow and make more people try it. I really like KDE and open source, and happy to contribute more.",
          "student_name": "Desh Deepak Kant",
          "code_url": null,
          "proposal_id": "9OdAVcCm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zk0uzwI6"
        },
        {
          "title": "Akonadi resources - Remove QtWidgets dependency",
          "short_description": "The primary goal of this project is to refactor Akonadi’s agents and resources by decoupling their configuration dialogs from their underlying logic....",
          "description": "The primary goal of this project is to refactor Akonadi’s agents and resources by\ndecoupling their configuration dialogs from their underlying logic. This change will\nallow us to remove the inclusion of heavy QtWidgets header files, which currently\nlead to unnecessary memory usage. Reducing this overhead is essential for making\nthe Merkuro suite fully usable on mobile devices, where resource constraints are\ncritical.\nAt present, many components load their GUI elements by default, unnecessarily\nincreasing the memory footprint and hindering performance on resource-constrained\nplatforms. By refactoring these configuration dialogs into separate, dynamically\nloaded plugins, the agents and resources can run leaner and more efficiently (it\nwould save around 15-20 Mib of RAM per agent/resource) while still providing\nfull-featured configuration interfaces when needed by host applications.\nProject Deliverables\n● Refactor as many as reasonably possible of the selected Akonadi agents\nand resources within the GSoC timeframe. The goal is not necessarily to port\nall agents, but to make meaningful progress and establish a repeatable\npattern for others to follow, ensuring the project is successful even if not every\ntarget is completed.\n● Eliminate embedded QtWidgets dependencies—such as replacing\nQApplication with QCoreApplication—in their primary functionality.\n● Identify and replace additional usages of QtWidgets beyond the configuration\ndialogs—such as QMessageBox instances used to show error messages.\n● Modify build configurations (CMake files) to strip out unnecessary UI files and\nreduce dependencies, thereby lowering memory usage.\n● Create dedicated configuration plugins that encapsulate the GUI functionality\npreviously embedded within agents and resources.\n● Test and document all changes to verify that memory usage is indeed reduced\nand that the new plugin-based configuration system functions correctly across\nboth desktop and mobile environments.",
          "student_name": "Pabarino",
          "code_url": null,
          "proposal_id": "xNCrlYeV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0Qcb864C"
        },
        {
          "title": "Selection Action Bar",
          "short_description": "KDE’s Krita does not have a floating action bar for layers. When users select a layer in Krita, there is no UI to display common selection actions....",
          "description": "KDE’s Krita does not have a floating action bar for layers. When users select a layer in Krita, there is no UI to display common selection actions. This makes it difficult for non-keyboard users to switch between modes and is not intuitive for new or experienced user interaction. The idea is to create a toggleable floating toolbar that will allow users to switch between commonly used actions without having to read deep into user manuals or require a keyboard shortcut. This feature would improve accessibility and the overall experience of users by introducing an ‘on-screen’ toggleable shortcut for common selection actions. My goal is to develop the UI, test rigorously, join the community, get user feedback, and create documentation through user guides and tutorials.",
          "student_name": "rossrosales",
          "code_url": null,
          "proposal_id": "UmZMYqkq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ANWyc6fI"
        },
        {
          "title": "Video Call Support in NeoChat",
          "short_description": "My project is to implement two-person unencrypted video calls in NeoChat based on MatrixRTC, using the LiveKit Rust SDK. Features to be implemented:...",
          "description": "My project is to implement two-person unencrypted video calls in NeoChat based on MatrixRTC, using the LiveKit Rust SDK. Features to be implemented: \n\nCall Management and UI\n- Users are able to start a video call.\n- Incoming calls are shown in the UI\n- Users can accept / decline an incoming call via the UI\n- Users can end an ongoing call\n- The call state (incoming, in-progress, ended) should be correctly tracked\n- Basic call information (participants, call duration) should be correctly recorded\n\nVoice\n- Receive and play incoming audio (limited to one audio feed)\n- Capture microphone input\n- Correctly stream and route audio using LiveKit\n\nVideo\n- Receive and render incoming video (limited to one video feed)\n- Capture local webcam feed\n- Correctly stream and route video feed using LiveKit",
          "student_name": "sakshigupta1771",
          "code_url": null,
          "proposal_id": "Iv3Kofp6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hvvLIQi4"
        },
        {
          "title": "Port Account Management to QML",
          "short_description": "This project aims to modernize the account management system in Merkuro by porting resource configurations to QML, enhancing usability across...",
          "description": "This project aims to modernize the account management system in Merkuro by porting resource configurations to QML, enhancing usability across platforms. The focus will be on building a shared infrastructure that supports both QWidget and QML configurations and porting singlefileresource-based resources to QML, ensuring backward compatibility while enabling modern UI development. This foundation will make it easier and more consistent to adopt QML-based modern UI development in the future.",
          "student_name": "Shubham  Shinde",
          "code_url": null,
          "proposal_id": "2xTaw9Ia",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7gZfxxeY"
        },
        {
          "title": "Integrate KTextEditor into Cantor",
          "short_description": "Cantor is a core tool in the KDE ecosystem that focuses on scientific computing and interactive analysis. It supports mathematical modeling and data...",
          "description": "Cantor is a core tool in the KDE ecosystem that focuses on scientific computing and interactive analysis. It supports mathematical modeling and data visualization through engines such as Python, Julia, and Maxima. In order to improve its text editing experience and maintainability, this project plans to deeply integrate the KTextEditor framework to transform Cantor into a more \"developer-friendly\" scientific research platform. By using QGraphicsProxyWidget to seamlessly replace existing custom cells, professional functions such as Vi editing mode, intelligent code completion, dynamic syntax highlighting (supporting user-defined symbol injection) are implemented, while simplifying the code structure and reducing redundant component code. This improvement not only aligns Cantor's editing experience with KDE professional tools such as Kate and KDevelop, but also lays the foundation for future integrated debuggers, version control and other advanced functions by sharing the KTextEditor plug-in ecosystem.",
          "student_name": "SIMple-lives",
          "code_url": null,
          "proposal_id": "90vfESSr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SScmFOOS"
        },
        {
          "title": "Mankala: Adding RL based Computerized Opponent with Varying Difficulties Level",
          "short_description": "This project enhances the MankalaEngine by introducing two major features: a Reinforcement Learning (RL) opponent and the integration of Simpler Bao,...",
          "description": "This project enhances the MankalaEngine by introducing two major features: a Reinforcement Learning (RL) opponent and the integration of Simpler Bao, a variant of Bao La Kiswahili. The RL agent, trained through self-play using algorithms like Q-learning or SARSA, will offer an adaptive and scalable AI capable of learning game strategies autonomously. Simpler Bao brings unique mechanics such as wandering, eating, and sleeping, contributing both cultural richness and gameplay diversity. Together, these additions transform MankalaEngine into a more intelligent, educational, and culturally representative platform, fostering deeper engagement and broadening its utility across learning tools and traditional game preservation.",
          "student_name": "Srisharan V S",
          "code_url": null,
          "proposal_id": "Gbdqa8KQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TWsh0ytJ"
        },
        {
          "title": "Improving Game Controller Support in KWin",
          "short_description": "Currently KWin's handling of game controller input is fragmented. Applications directly manage controller input, leading to inconsistencies, the...",
          "description": "Currently KWin's handling of game controller input is fragmented. Applications directly manage controller input, leading to inconsistencies, the inability of the system to recognize controller input for power management, and unintentionally enabling/disabling \"lizard mode\" in certain controllers. This project proposes a solution to unify game controller input within KWin by capturing controller events, creating a virtual controller emulation layer, and ensuring proper routing of input to applications.",
          "student_name": "Yelsin 'yorisoft' Sepulveda",
          "code_url": null,
          "proposal_id": "IY7EElUf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cBR33y2a"
        }
      ]
    },
    {
      "name": "Uramaki LAB",
      "image_url": "https://summerofcode.withgoogle.com/media/org/uramaki-lab/pr3ivuk0zg7lhgj1-360.png",
      "image_background_color": "#ffffff",
      "description": "The User Experience LAB based on IA",
      "url": "https://github.com/ruxailab",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/uramaki-lab",
      "ideas_url": "https://github.com/ruxailab/gsoc/blob/main/ideas2025.md",
      "guide_url": "https://github.com/ruxailab/gsoc/tree/main",
      "topics": [
        "user experience",
        "Usability",
        "User Evaluation",
        "Eye Tracking",
        "Sentimental Analysis"
      ],
      "technologies": ["python", "javascript", "html", "css", "Firebase"],
      "irc_channel": "https://github.com/ruxailab/RUXAILAB/issues",
      "contact_email": "mailto:ruxailab@gmail.com",
      "mailing_list": "https://discord.gg/6P4C6xuqtC",
      "twitter_url": "",
      "blog_url": "https://github.com/ruxailab/RUXAILAB/discussions",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Transcription Tool for Usability Testing",
          "short_description": "In moderated usability testing sessions, moderators often need to revisit specific points mentioned during the session. Without clear markers, this...",
          "description": "In moderated usability testing sessions, moderators often need to revisit specific points mentioned during the session. Without clear markers, this typically requires replaying the entire video recording, which is time-consuming and inefficient. Providing task-based transcriptions of these sessions significantly streamlines the review process. However, such transcriptions allow moderators to quickly locate and focus on relevant parts of the session, enabling them to reflect, annotate, and derive insights more effectively. Furthermore, these transcripts can be easily shared with collaborators, facilitating collective analysis and deeper understanding of user behaviors and challenges encountered during the session.",
          "student_name": "Basma Elhoseny",
          "code_url": null,
          "proposal_id": "w4KDwl2r",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aOHlFhUA"
        },
        {
          "title": "Improving User Testing with Eye Tracking, Sentiment Analysis & Pre/Post Tasks",
          "short_description": "This project aims to enhance RUXAILAB, an open-source platform for usability evaluation, by integrating three key components: eye tracking, sentiment...",
          "description": "This project aims to enhance RUXAILAB, an open-source platform for usability evaluation, by integrating three key components: eye tracking, sentiment analysis, and pre/post form tasks. These additions will support real-time, data-rich user testing and improve the understanding of user behavior and emotional responses.\n\nWe will embed affordable eye tracking to visualize attention (e.g., heatmaps, gaze paths), implement multimodal sentiment analysis using facial expression recognition and NLP, and enable customizable pre/post-test forms to evaluate usability (e.g., SUS, NASA-TLX) and cognitive load.\n\nBuilt with a user-centered, modular, and API-first approach, the project will also define evaluation protocols, publish open datasets, and validate the system with real users. The outcome will be a comprehensive, extensible, and community-driven tool for empirical UX research, bridging qualitative and quantitative insights.",
          "student_name": "João Franzoni",
          "code_url": null,
          "proposal_id": "B3HKfcmL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KrpA8CbI"
        },
        {
          "title": "UI Layout Optimization for RUXAILAB and Migrating the Codebase to Vue 3",
          "short_description": "This project aims to enhance the usability, accessibility, and responsiveness of the RUXAILAB UI while modernizing its codebase by migrating from Vue...",
          "description": "This project aims to enhance the usability, accessibility, and responsiveness of the RUXAILAB UI while modernizing its codebase by migrating from Vue 2 to Vue 3.\nThe solution involves redesigning the entire user interface in Figma, focusing on improved navigation flows, responsive layouts, and WCAG accessibility compliance. These designs will then be implemented using Vue 3 alongside Vuetify 3 as a component framework to accelerate development.\nAlso, the project will systematically migrate the codebase from Vue 2 to Vue 3 using a phased approach with @vue/compat, methodically updating all major packages including Vue Router, Vuetify, Vuex, and Vue-i18n.\nThe final deliverables include a fully migrated Vue 3 codebase leveraging the Composition API for better code organization, a completely redesigned user interface with intuitive navigation, responsive layouts, WCAG-compliant accessibility features, and seamless dark mode functionality.",
          "student_name": "sahitya-chandra",
          "code_url": null,
          "proposal_id": "43H8FaS8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iTnW9V5g"
        },
        {
          "title": "Integration of GitHub Actions with Discord Role Management",
          "short_description": "Problem ------- Open-source projects struggle with manual Discord role management, inconsistent PR workflows, and lack of contributor analytics. This...",
          "description": "Problem\n-------\nOpen-source projects struggle with manual Discord role management, inconsistent PR workflows, and lack of contributor analytics. \nThis creates overhead for maintainers and limits recognition and coordination within the community.\n\nSolution\n--------\nIntegrate GitHub Actions with Discord to automate contributor recognition and streamline collaboration:\n\n- Automated Role Assignment:\n  Scheduled GitHub Actions fetch contribution data (PRs, issues, commits). \n  A Discord bot updates roles accordingly to reflect contributors’ involvement.\n\n- PR Management:\n  Automate PR reviews (via Maverick), assign labels using GitHub Actions, and send real-time notifications to a Discord channel.\n\n- Contributor Analytics:\n  Generate visual charts and leaderboards to track contribution metrics and recognize top contributors.\n\n- Custom Workflows:\n  Enable maintainers to define project-specific rules for PR handling, auto-merging, and CI/CD notifications.\n\n- RUXAILAB Integration:\n  Extend functionality to research projects by auto-creating Discord channels and tracking evaluation metrics.\n\nDeliverables\n------------\n1. GitHub Action that schedules and collects contribution data from GitHub.\n2. Discord Bot that displays user stats and repository status in real-time.\n3. Automated Role Management that assigns roles on Discord based on contribution thresholds.\n4. AI PR Review Integration that automates review comments and suggestions.\n5. PR Labeling System that automatically categorizes pull requests.\n6. A Notification System that sends GitHub activity updates to a dedicated Discord channel.\n7. Contributor Analytics Visualization that generates and displays charts of contributions/hall of fame.\n8. CI/CD Notification Integration that reports build and deployment statuses to Discord.\n9. Research Extension that creates dedicated channels and tracks research metrics on Discord.",
          "student_name": "Tianqin Meng",
          "code_url": null,
          "proposal_id": "SpNonjnN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gZbjuWuX"
        },
        {
          "title": "AI-Powered Accessibility Evaluation in Ruxailab",
          "short_description": "This project aims to develop a comprehensive AI-powered accessibility evaluation system within RUXAILAB, focusing on automating and enhancing WCAG...",
          "description": "This project aims to develop a comprehensive AI-powered accessibility evaluation system within RUXAILAB, focusing on automating and enhancing WCAG compliance testing. By integrating artificial intelligence with semi-automated evaluation techniques, this system will assist developers and usability experts in identifying and addressing accessibility barriers in digital content, including websites, documents, and mobile applications. The system will provide detailed, multi-dimensional reports, offering both quantitative compliance scores and qualitative insights in plain language.",
          "student_name": "vishalwith4iie",
          "code_url": null,
          "proposal_id": "3MWDOPH2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/sId6ueuE"
        }
      ]
    },
    {
      "name": "Meshery",
      "image_url": "https://summerofcode.withgoogle.com/media/org/meshery/4ywkbdszwd1sw2rq-360.png",
      "image_background_color": "#ffffff",
      "description": "the extensible, collaborative, Kubernetes manager",
      "url": "https://meshery.io",
      "category": "Infrastructure and cloud",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/meshery",
      "ideas_url": "https://meshery.io/programs/gsoc/2025",
      "guide_url": "https://docs.meshery.io/project/contributing",
      "topics": [
        "collaboration",
        "devops",
        "Platform Engineering",
        "cloud native infrastructure",
        "infrastructure as design"
      ],
      "technologies": ["javascript", "golang", "kubernetes", "visual design"],
      "irc_channel": "https://slack.meshery.io",
      "contact_email": "mailto:https://meshery.io/subscribe",
      "mailing_list": "http://discuss.meshery.io",
      "twitter_url": "https://x.com/mesheryio",
      "blog_url": "https://meshery.io/blog",
      "facebook_url": "https://www.linkedin.com/showcase/meshery",
      "num_projects": 2,
      "projects": [
        {
          "title": "kubectl (krew) Plugin for MeshSync Integration and k8s resource mapping in MeshSync",
          "short_description": "This proposal describes: - the implementation of krew plugin for kubectl based on the meshsync binary. - add integration tests to meshsync; - add...",
          "description": "This proposal describes:\n- the implementation of krew plugin for kubectl based on the meshsync binary. \n- add integration tests to meshsync;\n- add functionality of mapping k8s native resources to meshsery models to meshsync with the goal to remove this functionality from meshsery server;\n------\n\nThis is the final (non draft) version of proposal.",
          "student_name": "n2 h9",
          "code_url": null,
          "proposal_id": "p7OHkVxP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/c1hQOJMd"
        },
        {
          "title": "Expanding end-to-end test coverage in Meshery using Playwright",
          "short_description": "Meshery integrates with a bunch of CNCF tools, and keeping those integrations stable needs proper automation. The goal of this project is to improve...",
          "description": "Meshery integrates with a bunch of CNCF tools, and keeping those integrations stable needs proper automation. The goal of this project is to improve and expand end-to-end (E2E) test coverage using Playwright, so that the Meshery UI and workflows stay reliable even as new changes come in.\n\nI'll start by understanding the current test setup and structure, identify gaps or flaky tests, and then refactor or write new Playwright tests that are modular and clean. These tests will be fully integrated with the CI (GitHub Actions), ensuring they run with every PR and provide quick feedback.\n\nDeliverables include new E2E tests for major workflows, fixes for unstable tests, performance improvements through parallelization, updated documentation for contributors, and a more robust CI test pipeline. I'll be actively collaborating with the Meshery community throughout",
          "student_name": "Varad Gupta",
          "code_url": null,
          "proposal_id": "EUXs5fqo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PHXvPh03"
        }
      ]
    },
    {
      "name": "Internet Health Report",
      "image_url": "https://summerofcode.withgoogle.com/media/org/internet-health-report/lifcnmh2qkq9cl5o-360.png",
      "image_background_color": "#ffffff",
      "description": "Monitoring the Internet",
      "url": "https://ihr.iijlab.net",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/internet-health-report",
      "ideas_url": "https://github.com/InternetHealthReport/gsoc/blob/main/ideas.md",
      "guide_url": "https://github.com/InternetHealthReport/gsoc/blob/main/contributor-guidance.md",
      "topics": [
        "networking",
        "routing",
        "communication",
        "internet",
        "data analytics"
      ],
      "technologies": ["python", "javascript", "apache kafka", "VueJS"],
      "irc_channel": "",
      "contact_email": "mailto:admin@ihr.live",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/ihr_alerts",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Integration of BGPlay API and Improving BGP Monitoring Dashboard",
          "short_description": "Currently, the IHR website features a tool called the real-time BGP monitor, which is very useful for real-time BGP monitoring but lacks the...",
          "description": "Currently, the IHR website features a tool called the real-time BGP monitor, which is very\nuseful for real-time BGP monitoring but lacks the functionality to view past BGP events. This proposal aims to improve the BGP monitoring dashboard by integrating the BGPlay\nAPI and implementing additional features. The enhanced BGP monitoring dashboard\nwill allow users to view past BGP events by specifying a particular time duration, while\nalso maintaining real-time BGP monitoring functionality.",
          "student_name": "Arnab Ghosh",
          "code_url": null,
          "proposal_id": "d9RmLmGW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Yg2BrAaw"
        },
        {
          "title": "Migrate IHR API",
          "short_description": "The Internet Health Report (IHR) REST API provides access to all results displayed on the IHR website. Currently built on Django 2.2.27, an outdated...",
          "description": "The Internet Health Report (IHR) REST API provides access to all results displayed on the IHR website. Currently built on Django 2.2.27, an outdated and unsupported version, this project will migrate the API to FastAPI to enhance performance and maintainability. Additionally, the embedded database management logic will be decoupled and replaced with Bash scripts, enabling independent database initialization and management. To further improve scalability and deployment efficiency, this project will also containerize the application using Docker.",
          "student_name": "Ibraam Nashaat Rezkalla",
          "code_url": null,
          "proposal_id": "hLL6PyEk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EkdZZm7S"
        },
        {
          "title": "Traceroute visualization (continuation of GSoC'24)",
          "short_description": "RIPE Atlas publishes traceroute measurement results. A measurement result can have a large volume of data. One example of a large volume measurement...",
          "description": "RIPE Atlas publishes traceroute measurement results. A measurement result can have a large volume of data. One example of a large volume measurement is as mentioned below: \n\n\"Given around 12000 probes worldwide and the system collects traceroute data from these probes every 15 mins. The measurement has been running for 2+ years. The maximum hops a probe made in this measurement was 32.\"\n\nRIPE Atlas provides a REST API to fetch the measurement result. However, the measurement result object can be a large json response. It increases the memory usage on the server while creating a huge response. If the server succeeds in creating a huge response, the client device may not afford to render an SVG graph given the large traceroute data. \n\nThe main goal for this project is to enable the visualizer to handle traceroute measurement results of any volume. This can mainly be achieved by \n- Narrowing down the search according to the inputs (probe ids to include, time frame) provided by the user\n- Paginate the measurement result API call by probe ids, start time and stop time\n\nExperiment rendering the network graph using more efficient graph libraries and test. If by testing, the results are improved then replace the current implementation of v-network-graph. \n\nAlso, there is a scope for UI enhancements. The main thought process behind thinking UI enhancement for this project was this:\n\"The data which we can provide should simply be there on the graph when the user needs it. \nThis UI enhancement can be achieved by adding another “Detailed mode” to the network graph.\" \nDuring the GSoC timeline, I will be executing testing strategies, fixing the underlying issues of the traceroute visualizer and documenting my work.",
          "student_name": "Om Palsanawala",
          "code_url": null,
          "proposal_id": "WtXYTa5Q",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/i3G2TGJx"
        },
        {
          "title": "IYP Browser",
          "short_description": "The project enhances the IYP Browser to make the exploration of graph data more interactive and powerful. It introduces features such as node...",
          "description": "The project enhances the IYP Browser to make the exploration of graph data more interactive and powerful. It introduces features such as node expansion on click, expandable graph views, and smart Cypher query suggestions relevant to actual IYP data. The researchers and stakeholders will benefit from improved UI controls,  shareable and embeddable components, and URL-based cypher query execution. These new features will help the researchers explore and analyze networked data, get deeper insights, and make informed decisions.",
          "student_name": "Ronit Jain",
          "code_url": null,
          "proposal_id": "KWm5jGYt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bEca6Wwe"
        }
      ]
    },
    {
      "name": "BRL-CAD",
      "image_url": "https://summerofcode.withgoogle.com/media/org/brl-cad/4ec07aqdfrvygfed-360.png",
      "image_background_color": "#ffffff",
      "description": "3D CAD & other computer-aided tech (CAx)",
      "url": "https://opencax.github.io/",
      "category": "Media",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/brl-cad",
      "ideas_url": "https://github.com/opencax/GSoC/issues?q=is%3Aissue+is%3Aopen+label%3A%22GSoC+2025%22",
      "guide_url": "https://opencax.github.io/gsoc_checklist.html",
      "topics": [
        "geometry",
        "2d/3d graphics",
        "ray tracing",
        "high-performance computing",
        "deep neural net rendering"
      ],
      "technologies": ["python", "c/c++", "opengl", "opencl", "scripting"],
      "irc_channel": "https://web.libera.chat/?channel=#openscad",
      "contact_email": "mailto:devs@brlcad.org",
      "mailing_list": "https://sourceforge.net/p/ifcopenshell/discussion/",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "https://fb.me/BRL-CAD",
      "num_projects": 6,
      "projects": [
        {
          "title": "Improving the k-File to BRL-CAD Converter & proposal for BRL-CAD database to k-File converter.",
          "short_description": "This project is intended to improve the interoperability between LS‑DYNA and BRL‑CAD by enhancing the existing k‑g converter and by implementing a...",
          "description": "This project is intended to improve the interoperability between LS‑DYNA and BRL‑CAD by enhancing the existing k‑g converter and by implementing a new g‑k converter. The primary goal is to facilitate a seamless data exchange between LS‑DYNA keyword files and BRL‑CAD geometry databases, ultimately streamlining workflows for users who need to transition between advanced simulation and detailed geometric modeling.",
          "student_name": "Andrea Braghin",
          "code_url": null,
          "proposal_id": "MqwC7E60",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nbISmgHl"
        },
        {
          "title": "New BRL-CAD GUI",
          "short_description": "This project aims to improve Arbalest and MOOSE in the following ways: [1] Expand the MOOSE module CommandString to support and expose the entire...",
          "description": "This project aims to improve Arbalest and MOOSE in the following ways:\n[1] Expand the MOOSE module CommandString to support and expose the entire libged API to Arbalest (and any other application).\n[2] Add a qged-like Command Line Interface to Arbalest as a first step to merge qged and Arbalest.\n[3] Revert the hacks done to create a personalized title bar and use the standard Qt title bar instead (in order to make Arbalest more portable and easier to maintain).\n[4] Fix how Arbalest themes work with the goal of making them appear correctly on all Operative Systems (right now there are confirmed theme related problems on Debian/Ubuntu distributions, and these problems are most likely present on all Linux distributions) and to support runtime changes (without having to close and reopen the application).\n[5] Add a functionality to create new themes and modify existing ones directly from Arbalest with the goal of making the software simpler to customize for everyone and more accessible for people with vision impairment.",
          "student_name": "Lorenzo Pegorari",
          "code_url": null,
          "proposal_id": "1vXUwuc9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/25f08iuM"
        },
        {
          "title": "Web Application to create and check BIM project exchange requirements for IfcOpenShell",
          "short_description": "Information Delivery Specification (IDS) is a standard for defining information requirements in a computer interpretable form, written in XML....",
          "description": "Information Delivery Specification (IDS) is a standard for defining information requirements in a computer interpretable form, written in XML.\nManually writing XML in compliance with the IDS schema can be an extremely difficult task for non-technical BIM users, giving rise to a need for a web interface to compose IDS specifications in a user-friendly manner.\n\nThe current implementation suffers from bugs, outdated UI, and lacks important authoring usability features. The primary goal of this proposal is to rebuild the web app on a new foundation - the IfcOpenShell WASM build, eliminating the need for a API backend, improving privacy, and enabling innovative features like in-browser IFC compliance checking, contextual autocompletions, and enhanced UX/UI.\n\nThe new implementation will be comprised of 3 modules:\n1) IDS Module - for composing and editing IDS specifications in a user-friendly way.\n2) WASM Module - to interface with IfcOpenShell WASM.\n3) Application Module  - built with Svelte 5 and shadcn-ui to deliver a modern, responsive UI.\n\nAdditionally, this proposal introduces a built-in XML (IDS) editor, in-browser audit report generation, and integration with Bonsai’s websocket-based Web UI system for fetching \"smart context\" from Blender.",
          "student_name": "Sayan Jyoti Das",
          "code_url": null,
          "proposal_id": "r3JGISyx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/888lO1F8"
        },
        {
          "title": "BRL-CAD OGV Migration",
          "short_description": "This project proposes a complete rewrite of BRL-CAD's existing OGV, which currently uses Meteor.js, an older framework no longer actively maintained....",
          "description": "This project proposes a complete rewrite of BRL-CAD's existing OGV, which currently uses Meteor.js, an older framework no longer actively maintained. I suggest converting it to a more stable and maintainable framework. I plan to use Next.js, a modern  React-based framework, for the frontend. SCSS/SASS will be used for styling, Nest.js will be used as the backend framework for better efficiency and type-safety, and Three.js will be used for modelling 3-D graphics on the web. Additionally, the frontend will be redesigned following industry-standard UI/UX best practices.. Also, it will be made sure to use libraries that have LTS support and are correctly maintained.",
          "student_name": "Simarjot",
          "code_url": null,
          "proposal_id": "buAwoXIN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tp9RLaEx"
        },
        {
          "title": "Development and Build Support for Native Windows",
          "short_description": "OpenSCAD currently supports Windows development/build setup through 2 key ways: MSYS2 and MXE. A MSVC based build has instructions circa 2012, but...",
          "description": "OpenSCAD currently supports Windows development/build setup through 2 key ways: MSYS2 and MXE. A MSVC based build has instructions circa 2012, but with significant changes in project structure, and updated/new third party libraries and dependencies, it would be useful to work on adding modern MSVC build support for Windows. Currently, most CI builds use MSYS2 instructions, which has a Unix style build system. The benefits of adding support for MSVC builds include having executable and library outputs (.exe/.dll), vcpkg support for third party libraries OpenSCAD depends on, and support for parallel builds for speed.",
          "student_name": "Sparsh N",
          "code_url": null,
          "proposal_id": "NXeaQrRY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MPJPiTJb"
        },
        {
          "title": "Enhance 3D mesh offset for manifold",
          "short_description": "Current manifold uses Minkowski Sum to implement Offset operation, which is a general method but claims to be ineffective in most research. By...",
          "description": "Current manifold uses Minkowski Sum to implement Offset operation, which is a general method but claims to be ineffective in most research. By benchmark all common offset implements, it turns out their short come vary in robustness, effective and output quality. As it becomes an open problem, I further research in linear approximate distance field way, which is most close to balancing all the shortcoming. Finally, archive an effective offset operation for large-scale complex mesh.",
          "student_name": "Trzeth",
          "code_url": null,
          "proposal_id": "BhPoGR5T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LNlkt0XJ"
        }
      ]
    },
    {
      "name": "The Honeynet Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-honeynet-project/pvycoc21p2ketj7b-360.png",
      "image_background_color": "#ffffff",
      "description": "Honeypots and Threat Intelligence R&D",
      "url": "https://honeynet.org",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-honeynet-project",
      "ideas_url": "https://www.honeynet.org/gsoc/gsoc-2025/google-summer-of-code-2025-project-ideas/",
      "guide_url": "https://www.honeynet.org/gsoc/",
      "topics": ["honeypots", "malware analysis", "Threat Intelligence"],
      "technologies": ["python", "javascript", "django", "go", "docker"],
      "irc_channel": "https://discord.gg/68B8Ru5fSU",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://www.honeynet.org/blog/",
      "facebook_url": "",
      "num_projects": 9,
      "projects": [
        {
          "title": "IntelOwl Improvements: Analyzers and Integrations",
          "short_description": "This project aims to add more analyzers to Intelowl further enhancing it's capabilities and refactoring the old ones which are working as per...",
          "description": "This project aims to add more analyzers to Intelowl further enhancing it's capabilities and refactoring the old ones which are working as per expectations.\nAlong with this new Ingestor will be added as part of adding more types of plugins to Intelowl.\nAny additional work or integrations desired by the Intelowl mentors such as podman support, etc will be carried as well, if time permits.",
          "student_name": "akshitmaheshwary",
          "code_url": null,
          "proposal_id": "IpntmJTn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8p6BwDeL"
        },
        {
          "title": "#7 Improving the DICOMHawk medical honeypot",
          "short_description": "DICOMHawk is a honeypot system designed to emulate a vulnerable DICOM (Digital Imaging and Communications in Medicine) server, primarily to detect,...",
          "description": "DICOMHawk is a honeypot system designed to emulate a vulnerable DICOM (Digital Imaging and Communications in Medicine) server, primarily to detect, analyze, and understand malicious activity targeting healthcare infrastructure. This project proposes a set of enhancements aimed at improving its operational effectiveness, observability, and deployment experience. The plan involves integrating CanaryToken webhooks to enable deception-based detection of unauthorized file access, refining the logging system with structured and enriched logs to support real-time threat monitoring, and optimizing the Docker configuration to follow best practices for security, automation, and resource efficiency. Additionally, the proposal explores simulating another protocol, such as FTP or Telnet, to broaden the attack surface and attract a wider range of adversarial behaviors. These technical enhancements will be supported by thorough documentation, testing, and monitoring setup using tools like Prometheus, Grafana, Loki, and Jaeger. Together, these contributions aim to make DICOMHawk more robust, extensible, and easier to deploy while contributing meaningfully to the field of threat intelligence in healthcare cybersecurity.",
          "student_name": "Anaiii",
          "code_url": null,
          "proposal_id": "dxHmzL5H",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/i3Yo26LE"
        },
        {
          "title": "Extending the Artemis scanner",
          "short_description": "This project aims to enhance Artemis, a modular vulnerability scanner, by automating technology-specific scans, expanding vulnerability detection,...",
          "description": "This project aims to enhance Artemis, a modular vulnerability scanner, by automating technology-specific scans, expanding vulnerability detection, and improving usability. Key tasks include implementing Nuclei workflows, adding support for detecting new vulnerabilities, creating a generic login bruteforcing tool, enabling direct URL scanning, and optimizing performance. Additionally, I will actively address critical issues to ensure Artemis remains robust and efficient.",
          "student_name": "Dr4g0n",
          "code_url": null,
          "proposal_id": "7mM0JDpr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6OpdvwMk"
        },
        {
          "title": "Alerting Module Enhancement: Standardization, Customization, and Improvements",
          "short_description": "This project aims to enhance BuffaLogs alerting system by integrating new alerters, standardizing configurations, and introducing advanced features...",
          "description": "This project aims to enhance BuffaLogs alerting system by integrating new alerters, standardizing configurations, and introducing advanced features like configurable thresholds, customizable templates, scheduled digests, and rate limiting. It will also implement user-specific alert preferences, email integration, and support for common security platforms. Alongside backend improvements, the project will include detailed documentation, and demo tutorials to improve developer experience and usability.",
          "student_name": "kunalsz",
          "code_url": null,
          "proposal_id": "5FoBCtDw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JVMdDf9a"
        },
        {
          "title": "Glutton : Refactoring protocol parsers originally written in Go into Spicy",
          "short_description": "The proposed project aims to develop Spicy-based protocol parsers for HTTP and DNS. Although Go is an efficient language used for system programming...",
          "description": "The proposed project aims to develop Spicy-based protocol parsers for HTTP and DNS. Although Go is an efficient language used for system programming and network tasks, it requires a more hands-on, step-by-step approach to parsing. This means dealing with the intricate details of state machines, binary data, and protocol-specific rules. On the other hand, Spicy uses a higher-level, declarative style that simplifies these complexities, letting us focus more on understanding the protocol itself.",
          "student_name": "namay",
          "code_url": null,
          "proposal_id": "q1whP1ri",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lSllhsuW"
        },
        {
          "title": "Improving the SweetCam IP camera honeypot",
          "short_description": "Problem: IP cameras are frequent targets for cyberattacks due to their widespread use and often weak security. Current honeypots like SweetCam lack...",
          "description": "Problem:  \nIP cameras are frequent targets for cyberattacks due to their widespread use and often weak security. Current honeypots like SweetCam lack comprehensive protocol support and realistic emulation, limiting their effectiveness in detecting and analyzing threats.  \nSolution:\nThis project aims to transform SweetCam into a versatile, multi-protocol honeypot by:  \n1. Expanding protocol support for RTSP and ONVIF, enabling deeper interaction with attackers.  \n2. Introducing template-based device emulation using YAML to simulate real-world cameras (e.g., Dahua, Hikvision).  \n3. Improving usability with Docker enhancements, automated configuration, and a realistic HTTP interface featuring error simulation and multi-language support.  \nDeliverables:  \n- A production-ready SweetCam with RTSP/ONVIF support and 5+ device templates.  \n- Optimized Docker deployment (multi-stage builds, Compose profiles).  \n- Enhanced HTTP interface (login flows, error simulation, i18n).  \n- Comprehensive documentation, including setup guides and protocol specifications.  \nImpact:\nThis upgrade will equip researchers and defenders with a powerful tool to study attacker behavior, improve IoT security, and contribute to the broader honeypot ecosystem.",
          "student_name": "Olha Patsyienko",
          "code_url": null,
          "proposal_id": "kagv8KnQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Z0fvicFa"
        },
        {
          "title": "BuffaLogs: Developing BuffaCLI for Command-Line Management and BuffaWatch for Real-Time Log Tracking",
          "short_description": "BuffaLogs is a tool designed to detect anomalous login activities. However, it currently lacks real-time analysis of login data and only offers a web...",
          "description": "BuffaLogs is a tool designed to detect anomalous login activities. However, it currently lacks real-time analysis of login data and only offers a web interface built with Django, with configuration done by directly editing configuration files.\nMy proposed project aims to enhance BuffaLogs by developing BuffaWatch, a real-time monitoring tool that integrates seamlessly with BuffaLogs and BuffaCLI, a command-line interface tool that serves as an alternative to the web UI and allows for terminal-based configuration management.  BuffaWatch will enable real-time capabilities by processing log files and providing a middleware that can be easily installed into a Python web service.",
          "student_name": "Onunwa Goodness",
          "code_url": null,
          "proposal_id": "oiijKpa7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pKbVs9U0"
        },
        {
          "title": "IntelOwl improvements: refactor analyzer tests",
          "short_description": "This project aims to improve the testing framework for IntelOwl analyzers by transitioning from the existing monkeypatch-based approach to a more...",
          "description": "This project aims to improve the testing framework for IntelOwl analyzers by transitioning from the existing monkeypatch-based approach to a more structured unit testing strategy using Python’s unittest framework. \nThe project will be executed in three phases. The first phase will focus on creating a prototype of the new testing model, implementing unit tests for a few analyzers. The second phase will involve writing unit tests for all analyzers and removing monkeypatching. Finally, in the last phase, we will document the new testing system to ensure clarity and ease of use.",
          "student_name": "Pranjal Gupta",
          "code_url": null,
          "proposal_id": "AclwIIgM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/H09maFA9"
        },
        {
          "title": "Implementing Protocol Parsers for Glutton Using Spicy",
          "short_description": "This project addresses the challenge of enhancing Glutton's protocol parsing capabilities by implementing HTTP and DNS parsers using Spicy, a...",
          "description": "This project addresses the challenge of enhancing Glutton's protocol parsing capabilities by implementing HTTP and DNS parsers using Spicy, a specialized domain-specific language for robust protocol parsing. The existing Go-based protocol handlers in Glutton will be reimagined through Spicy's grammar-based approach, creating parsers that precisely match the current implementation's behavior, including special case handling for attack vectors like Ethereum RPC exploits and Hadoop YARN vulnerabilities. The project involves the creation of a Go wrapper framework to integrate these Spicy-generated parsers with Glutton's architecture and the delivery of fully functional HTTP and DNS parsers. This work will demonstrate how specialized grammar-based protocol parsing can enhance Glutton's maintainability and extensibility while maintaining its effectiveness as a protocol-agnostic honeypot for security research.",
          "student_name": "Suyash Handa",
          "code_url": null,
          "proposal_id": "9YLOuuhX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/u2N2grii"
        }
      ]
    },
    {
      "name": "FOSSASIA",
      "image_url": "https://summerofcode.withgoogle.com/media/org/fossasia-bg/rquaoyo4v86xj21l-360.png",
      "image_background_color": "#ffffff",
      "description": "Free and Open Source Software in Asia",
      "url": "https://fossasia.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/fossasia-bg",
      "ideas_url": "https://docs.google.com/document/d/1Tz1KxYefreKzBr98C4vbCv9UwnchZoyTwO8rBrz_lmg/edit?tab=t.0#heading=h.9sjk3ie7l2o2",
      "guide_url": "https://fossasia.org",
      "topics": ["web", "hardware", "event solutions", "android", "firmware"],
      "technologies": ["c", "python", "javascript", "django", "android"],
      "irc_channel": "",
      "contact_email": "mailto:office@fossasia.org",
      "mailing_list": "",
      "twitter_url": "https://x.com/fossasia",
      "blog_url": "https://fossasia.org/blog",
      "facebook_url": "",
      "num_projects": 19,
      "projects": [
        {
          "title": "Complete the Port of the PSLab app to Flutter",
          "short_description": "As we plan to take the PSLab project to the next level, developing multiplatform support for the app and enhancing its communication capabilities are...",
          "description": "As we plan to take the PSLab project to the next level, developing multiplatform support for the app and enhancing its communication capabilities are key to making PSLab more accessible and effective for students, educators, and science enthusiasts across diverse environments.\n\nCurrently, the Pocket Science Lab (PSLab) mobile application is available only for Android, limiting its usability in institutions where iOS, desktop, or web platforms are widely used. This project aims to rebuild the existing Android app using Flutter, enabling support for Android, iOS, desktop (Windows, macOS, Linux), and web, all from a single codebase. Flutter’s flexibility and performance make it an ideal choice for this cross-platform transformation, ensuring a smooth user experience across all device types and screen sizes.\n\nAnother crucial part of this project is enhancing the hardware communication layer to accommodate platform-specific constraints—particularly Apple’s restrictions on USB communication. To address this, the project will implement Wi-Fi-based connectivity using the ESP01 chip, allowing seamless data transfer between the app and the PSLab hardware across all platforms. This ensures that iOS and web users are no longer at a disadvantage and can fully utilize the PSLab instruments.\n\nBy the end of the project, the app will offer a robust, real-time interface for core instruments like the Oscilloscope, Logic Analyzer, Multimeter, and Robot Controls, complete with interactive visualizations.",
          "student_name": "Anashuman Singh Cheema",
          "code_url": null,
          "proposal_id": "32NyzmeX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zOKL7i70"
        },
        {
          "title": "Building an Advanced Flutter-Based Drawing Canvas for Magic ePaper Badge Customization",
          "short_description": "This project aims to deliver a fully-featured, cross-platform canvas-based editor for the Magic ePaper Badge, built entirely in Flutter without...",
          "description": "This project aims to deliver a fully-featured, cross-platform canvas-based editor for the Magic ePaper Badge, built entirely in Flutter without relying on third-party libraries. The application empowers users to create intricate badge designs with a highly customizable interface tailored specifically for ePaper screens, supporting tri-color rendering (red, white, black) and precise editing controls.\n\nKey features include a custom drawing canvas with gesture-based freehand and line drawing tools, a text overlay system with support for font selection, scaling, rotation, and locking, and an image import module allowing for multi-image manipulation on the canvas. A layer manager provides real-time reordering of image and text overlays, mirroring professional design software like Photoshop.\n\nA polished preview and export pipeline ensures clean final renders. Users can crop and adjust the final image with brightness and contrast controls before exporting it at the badge’s native resolution (240x416). The result is optimized for both BWR and BW UC8252 display variants.\n\nThe project also includes robust NFC integration. I resolved critical issues in the original codebase, such as improper handling when NFC was disabled. I implemented a native Android method that navigates directly to the system’s NFC settings screen, significantly improving UX and cross-device reliability. The app now ensures seamless transmission of finalized designs to the ePaper badge over NFC.\n\nBy implementing all functionality from scratch, this project delivers a performance-optimized, extensible editor tailored for the Magic ePaper Badge ecosystem, advancing FOSSASIA’s vision of accessible, user-driven customization tools.",
          "student_name": "Dhruv Rastogi",
          "code_url": null,
          "proposal_id": "8vh1F0xm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mF6sXvYQ"
        },
        {
          "title": "Implement eventyay features as a plugin in eventyay-talk",
          "short_description": "The Eventyay Talk Plugin project aims to modularize and enhance the integration of key data from the Eventyay ecosystem—attendees, speakers,...",
          "description": "The Eventyay Talk Plugin project aims to modularize and enhance the integration of key data from the Eventyay ecosystem—attendees, speakers, sessions, and video—into the eventyay-talk platform. By decoupling existing functionalities into standalone plugins, this project ensures seamless synchronization across services without interfering with upstream upgrades.\n\nThe end goal is a maintainable plugin system that supports dynamic content rendering, room allocations, and live video streaming, all from centralized data. Deliverables include five core plugins, full documentation, and comprehensive testing to support a scalable and flexible event management experience.",
          "student_name": "Gagan-Ram",
          "code_url": null,
          "proposal_id": "dbFbi2U4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SPHqOZ5X"
        },
        {
          "title": "Proposal for Revamping FOSSASIA.org with WordPress for a Modern, Maintainable Website",
          "short_description": "As an experienced WordPress and Flutter developer, I propose redesigning FOSSASIA.org into a sleek, responsive, and easily maintainable website using...",
          "description": "As an experienced WordPress and Flutter developer, I propose redesigning FOSSASIA.org into a sleek, responsive, and easily maintainable website using WordPress. This project will enhance usability, improve performance, and ensure seamless content management using well-supported plugins. By focusing on modern UI/UX, SEO optimization, and security best practices, the revamped site will showcase FOSSASIA’s initiatives effectively. With a track record of delivering high-quality web solutions, I am excited to contribute my expertise to this project and create a future-proof digital presence for the FOSSASIA community.",
          "student_name": "Nimeshan",
          "code_url": null,
          "proposal_id": "R7DTSSYj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vwdtZRI3"
        },
        {
          "title": "Revamp FOSSASIA.org",
          "short_description": "The applicant has analyzed the FOSSASIA website and documented observations regarding navigation, SEO, and user experience. This proposal outlines a...",
          "description": "The applicant has analyzed the FOSSASIA website and documented observations regarding navigation, SEO, and user experience. This proposal outlines a restructured navbar for better accessibility, refinements in the XML sitemap for enhanced indexation, and SEO strategies such as structured data, mobile optimization, and internal linking. Additionally, key features and content organization have been considered, with suggestions presented for discussion to align with the organization’s objectives.",
          "student_name": "Nishil Hoogar",
          "code_url": null,
          "proposal_id": "6OSVpQbT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GXXXVnix"
        },
        {
          "title": "Enhancing Scrum Helper Chrome Extension",
          "short_description": "The project Scrum Helper is designed to aid individuals in generating and injecting daily scrums into popular email clients such as Gmail, Outlook,...",
          "description": "The project Scrum Helper is designed to aid individuals in generating and injecting daily scrums into popular email clients such as Gmail, Outlook, and Yahoo. This initiative focuses on automating repetitive tasks involved in daily scrum reporting by leveraging user activity data from platforms like GitHub. The goal is to streamline scrum generation, improve developer productivity, and promote efficient communication within teams.\nKey Features:\n1.Cross-Platform Support: Generate scrums in Gmail, Outlook, Yahoo, or via a standalone popup.\n2.GitHub Integration: Auto-fetch activity to pre-fill scrum content.\n3.Customizable & Shareable: Preview, edit, copy, and save scrum templates.\n4.Secure & Optimized: OAuth-based access, responsive UI, and error handling.",
          "student_name": "preet_146",
          "code_url": null,
          "proposal_id": "AbT9MVVN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tVDF1SLa"
        },
        {
          "title": "Advanced Robot Control and  Python Integration for the PSLab  Android App",
          "short_description": "This project aims to enhance the existing robotic arm control module in the PSLab Android app by introducing advanced functionality that goes beyond...",
          "description": "This project aims to enhance the existing robotic arm control module in the PSLab Android app\n  by introducing advanced functionality that goes beyond basic manual control. While the current\n  module allows direct manipulation of servo motors, it lacks precision features and automation\n  capabilities that can greatly benefit both beginners and advanced users. To address this, I plan\n  to implement fine-tuning controls, customizable presets for servo positions, and seamless\n  integration with Python scripts. A key part of this enhancement will include adding features to\n  import, export, and execute Python-based control sequences directly within the app. This will\n  enable users to automate complex movements, while still retaining manual control when needed,\n  creating a balanced, flexible system. In addition, I will contribute comprehensive documentation\n  and a web-based UI guide, explaining the integration workflow and offering troubleshooting support.\n  My deliverables will include updated UI components, Python integration, a script management system,\n  and well-documented user guides to ensure smooth adoption and scalability of the feature.",
          "student_name": "Rahul  Das",
          "code_url": null,
          "proposal_id": "qqKpwA52",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SqGDj8iP"
        },
        {
          "title": "Revamping FOSSASIA.ORG",
          "short_description": "The project will see a complete overhaul of the current website's design and content/information architecture. The current website has not been...",
          "description": "The project will see a complete overhaul of the current website's design and content/information architecture.\n\nThe current website has not been updated in its design for years and has become increasingly disorganised or unstyled.\n\nThe clients will be interviewed first for their requirements. Together with a review of related or relevant websites, a wireframe will then be proposed on figma (or other similar tools)\n\nThe frontend design of pages and/or components will then be sketched and then coded into HTML/CSS first. Thereafter, WordPress integration will be done next, transforming the HTML/CSS file into a WordPress theme customised for the organisation.\n\nThe new website will then be customised further with relevant WordPress plugins.\n\nContent wise, a migration from existing site will be done on another environment. Once finalised, the updated content will be exported and imported into the production site.",
          "student_name": "Robert Sim",
          "code_url": null,
          "proposal_id": "aF5231Jy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SEQ3RnkS"
        },
        {
          "title": "Convert eventyay-tickets VueJS implementation to Single Page application",
          "short_description": "This proposal outlines a comprehensive plan to transform the eventyay-tickets platform from its current multi-page VueJS implementation to a modern...",
          "description": "This proposal outlines a comprehensive plan to transform the eventyay-tickets platform from its current multi-page VueJS implementation to a modern Single Page Application (SPA) architecture. The project aims to enhance user experience through seamless navigation, optimize performance with efficient data handling, and ensure broad compatibility through progressive enhancement principles.\n\nThis project will benefit the FOSSASIA community through an enhanced user experience for ticket purchases, improved maintainability with modern architecture, better developer onboarding through well-documented code, and a future-ready foundation for advanced features.",
          "student_name": "Saksham Sirohi",
          "code_url": null,
          "proposal_id": "GjuCEtHc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ejC7rj48"
        },
        {
          "title": "Enhance the feature set of the Flutter Badge Magic Application",
          "short_description": "Project Summary : The goal of this project is to take Badge Magic to the next level by adding more creative and interactive features for users. Right...",
          "description": "Project Summary :\n\nThe goal of this project is to take Badge Magic to the next level by adding more creative and interactive features for users. Right now, the app supports basic text rendering, but there’s a lot of potential to make it more fun, flexible, and powerful.\n\nThe plan is to introduce multi-font and multi-colour text support, allow users to create and store custom animations, and even play simple games like Snake and Pong directly on their LED badges. Along with that, I’ll work on improving how the app adapts to different badge sizes, add more control through advanced badge settings, and automate the deployment process across all platforms supported by Flutter.\n\nWhat I’ll deliver:\n\nSupport for different fonts, colours, gradients, and per-character styling,\nStorage slots for saving and editing custom animations,\nInteractive mini-games are playable on the badge,\nAdvanced configuration options (e.g., Bluetooth toggle, brightness),\nCross-platform support (Windows, Linux, macOS, Web) with an improved UI,\nProper testing and documentation to ensure everything works smoothly.\n\nBy the end of the project, Badge Magic will be more customizable, more interactive, and ready to support a wider range of devices and users.",
          "student_name": "Samruddhi Rahegaonkar",
          "code_url": null,
          "proposal_id": "RVthb5Zd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EAWwj9Nd"
        },
        {
          "title": "Enhance Usability of the Eventyay Badge Creator and Eventyay Check-In",
          "short_description": "The goal of this project is to streamline the process of generating and printing badges for eventyay. Organizers often need to print badges on the...",
          "description": "The goal of this project is to streamline the process of generating and printing badges for\neventyay. Organizers often need to print badges on the spot for attendees and speakers\nduring check-in. The project will focus on adding a user-friendly badge customization\nfeature in the frontend, ensuring seamless badge generation in the backend, and\nintegrating with the check-in system to allow for on-site printing. Specifically, the tasks\ninclude:\n1. Badge Design and Customization\n2. Backend API Enhancements\n3. Check-In App Integration for On-Site Printing\n4. Print Service and Configuration\n5. Containerization & Deployment\n6. Performance and Scalability\n7. Documentation and Testing",
          "student_name": "Srivatsav Auswin",
          "code_url": null,
          "proposal_id": "8znedJbb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9kNDpNth"
        },
        {
          "title": "Integration of Talks and Speakers component with eventyay Video",
          "short_description": "Integration of Talks and Speakers Component with eventyay Video I will create a seamless connection between eventyay-talk and eventyay-video...",
          "description": "Integration of Talks and Speakers Component with eventyay Video\nI will create a seamless connection between eventyay-talk and eventyay-video platforms to eliminate the current manual processes that frustrate event organizers. My implementation will:\n\nDevelop an event-driven system that automatically synchronizes rooms created in eventyay-talk to appear in eventyay-video without manual duplication\nBuild an intuitive MC assignment interface where organizers can easily assign team members to manage different video rooms using a drag-and-drop system\nIntegrate speaker profiles and session information across platforms so attendees see consistent information whether they're in talk sessions or video rooms\nCreate a unified navigation experience with consistent design elements that make the platforms feel like a single, cohesive system\n\nI'll approach this with an incremental development strategy, delivering working features every 2-3 weeks rather than a big-bang integration. Having experienced the frustration of disconnected systems while volunteering at tech events, I'm personally motivated to solve this problem for both organizers and attendees.",
          "student_name": "Suhail Nadaf",
          "code_url": null,
          "proposal_id": "7JrO6pPD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jgBR6jIw"
        },
        {
          "title": "Create a Firmware Prototype for PSLab Mini: A Compact Oscilloscope & Multimeter",
          "short_description": "The PSLab Mini is a compact version of the PSLab board that encompasses similar features but with fewer instruments, with more focus on those...",
          "description": "The PSLab Mini is a compact version of the PSLab board that encompasses similar features but with fewer instruments, with more focus on those individual instruments\n\nThe main idea behind building the PSLab Mini board is to take the already present PSLab board and use its hardware and firmware, and convert it into a lighter version, which can be achieved by stripping off the files related to other instruments along with their respective drivers.\nAlso, another aim of this project is to refactor the instruments along with their drivers to make the firmware more reliable, lighter and faster.\n\nThe Key deliverables of this project are:\n• PSLab Mini schematic and BOM list\n• PSLab Mini PCB, which is ready for prototyping\n• A working firmware that is either tested on a prototype or similar ARM-based processor\nboard\n• Improve the working of the firmware using hardware or software improvements\n• Optimize the board for low-power applications\n• Increase the capability of the instruments on board the PSLab Mini\n• Documentation of the firmware developed during the period",
          "student_name": "Tejas Garg",
          "code_url": null,
          "proposal_id": "uKRHSI23",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IDNSSH0J"
        },
        {
          "title": "Revamp FOSSASIA.org with WordPress for a Modern, Maintainable Website",
          "short_description": "This project aims to revamp FOSSASIA.org using WordPress to create a modern, maintainable, and scalable website aligned with the FOSSASIA brand...",
          "description": "This project aims to revamp FOSSASIA.org using WordPress to create a modern, maintainable, and scalable website aligned with the FOSSASIA brand identity. The current website needs an update to improve responsiveness, user experience, and ease of maintenance. I propose developing a custom WordPress theme that reflects FOSSASIA’s visual guidelines (red, gray, white), integrating widely supported plugins to manage blogs, events, contact forms, and social media features, all while ensuring minimal custom code for long-term maintainability. The project will also focus on optimizing performance, SEO, and security to ensure a seamless experience across devices. A well-structured content layout will highlight FOSSASIA’s projects, events, and community initiatives. Comprehensive documentation will be provided to support future developers and contributors.",
          "student_name": "Ubayed Bin Sufian",
          "code_url": null,
          "proposal_id": "BTciGgrs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/x6G18dFv"
        },
        {
          "title": "Enhancing Scrum Helper Chrome Extension GSoC - Vedansh Saini",
          "short_description": "The Scrum Helper Chrome Extension project is about improving the way Scrum teams generate daily standup reports by making the process smoother and...",
          "description": "The Scrum Helper Chrome Extension project is about improving the way Scrum teams generate daily standup reports by making the process smoother and more efficient. My Google Summer of Code 2025 proposal with FOSSASIA focuses on key upgrades, such as adding support for multiple email providers (Gmail, Yahoo, Outlook), creating a standalone pop-up UI, improving GitHub data fetching, and making the extension faster and more user-friendly. I have already contributed by implementing multi-client email support and will now work on UI refinements, caching, and API improvements. My timeline includes refining the design, improving performance, testing, and writing clear documentation to ensure everything works well across different platforms. With experience contributing to open-source projects like Apache, NumFOCUS, and AI-Alliance, I am eager to continue working with the FOSSASIA community and making this tool more useful for Scrum teams.",
          "student_name": "Vedansh Saini",
          "code_url": null,
          "proposal_id": "ISErb36h",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PZuZUYOI"
        },
        {
          "title": "Enhancing the Magic ePaper App for a Functional and Seamless User Experience",
          "short_description": "This project aims to transform the Magic ePaper Badge App into an intuitive, cross-platform toolkit for designing and transferring content to...",
          "description": "This project aims to transform the Magic ePaper Badge App into an intuitive, cross-platform toolkit for designing and transferring content to battery-free ePaper badges, addressing the lack of user-friendly tools and hardware-aware optimizations. The Flutter-based solution will offer content creation tools (drawing with brush/pencil modes, text styling, emojis, image effects) and hardware optimizations (tri-color previews, NFC transfer, multi-badge support), while ensuring cross-platform accessibility (Android/iOS/Web/desktop via CI/CD). Deliverables include a feature-complete app with seamless UI, NFC integration, multi-platform builds, comprehensive documentation, and a testing suite. By simplifying badge customization for conferences, IoT, and interactive displays, this project democratizes sustainable ePaper technology, empowering users globally to create eco-friendly, dynamic content without coding expertise.",
          "student_name": "Vishveshwara Uthayakumaran",
          "code_url": null,
          "proposal_id": "0DdXIwk3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Y7nMUc7g"
        },
        {
          "title": "LED BADGE MAGIC",
          "short_description": "Project Title: Flutter Badge Magic App Mentors: Aditya, MarioB, cweitat Problem: The current Badge Magic app offers limited customization (fixed...",
          "description": "Project Title: Flutter Badge Magic App\nMentors: Aditya, MarioB, cweitat \nProblem:\nThe current Badge Magic app offers limited customization (fixed fonts/colors), lacks interactive features, and restricts users to basic animations and Bluetooth configurations. Additionally, platform-specific deployment and unresolved bugs hinder accessibility and user creativity.\nSolution:\nRevamp the Flutter-based app to deliver:\nAdvanced Customization: Support multiple fonts (Google Fonts integration), hex-code color pickers, and 8 editable animation storage slots.\nInteractive Games: Integrate Snake and Tetris with swipe/tap controls optimized for LED displays.\nScalability: Auto-adapt content for diverse LED badge sizes (e.g., 11x44 to 16x45 matrices).\nFirmware Upgrades: Enable \"Bluetooth always-on\" mode and power management for stable, energy-efficient connections.\n\nMulti-Platform Reach: Automate CI/CD pipelines (GitHub Actions) for Windows, Linux, macOS, and web builds.\nDeliverables:\nFeature Enhancements:\nFont/color picker, editable animation storage (8 slots).\nMini-games (Snake, Tetris) with collision detection.\nFirmware updates for advanced badge configurations.\nCross-Platform Support: CI/CD workflows for 5+ platforms/app stores.\nTesting: 10+ unit/integration tests (90% coverage).\nDocumentation: User guides, API references, and Quick tutorials.\nBug Fixes: Resolve existing issues for a polished user experience.\nImpact:\nEmpower users to create vibrant, interactive LED displays effortlessly while ensuring seamless performance across devices and platforms.",
          "student_name": "Vivek_singh3472",
          "code_url": null,
          "proposal_id": "6p6Rgi8k",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tAM6EhAc"
        },
        {
          "title": "Enhance Usability of the Eventyay-Badge Creator",
          "short_description": "I want to greatly improve the Eventyay Badge Creator's use and capability over the GSoC period. I will redesign the user interface in the first...",
          "description": "I want to greatly improve the Eventyay Badge Creator's use and capability over the GSoC period. I will redesign the user interface in the first phase, adding drag-and-drop element placement, live previews, scaling, and alignment instructions to make it more intuitive and responsive. On desktop and mobile devices alike, this will enhance user experience. To simplify badge creation for users with diverse design expertise, I will then apply pre-designed badge templates and global customizing choices, including font styles, QR code positioning, backdrop settings, and save/load capabilities.\n\n In the last phase, I will concentrate on exporting and printing capabilities, enabling batch export in formats like PDF and SVG, optimizing print layouts, and so enhancing performance for significant badge sets. Along with internationalising (i18n) support, accessibility enhancements, thorough testing, and thorough documentation creation for next contributors and end users, I will also work on  Every phase will be accompanied by a blog post and a demo showing the results.",
          "student_name": "Yakshit Savaliya",
          "code_url": null,
          "proposal_id": "BHXkYeuT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IhaFe9a9"
        },
        {
          "title": "Magic ePaper Badge app Enhancement",
          "short_description": "Enhancing the Magic ePaper Badge Flutter App Problem Statement The Magic ePaper Badge Flutter App allows users to create and transfer customizable...",
          "description": "Enhancing the Magic ePaper Badge Flutter App\n\nProblem Statement\nThe Magic ePaper Badge Flutter App allows users to create and transfer customizable content such as text, emojis, images, and drawings to a tri-color ePaper display via NFC. However, the app currently lacks essential features such as advanced content editing, multi-platform support, and efficient NFC-based data transfer. These limitations restrict the app’s usability and cross-platform availability.\n\nProposed Solution\nThis project aims to enhance the app by:\n* Designing an intuitive Flutter UI to enable seamless content creation.\n* Implementing image editing features (rotation, brightness, contrast) and integrating a color picker.\n* Optimizing NFC-based content transfer to ensure smooth communication with the ePaper display.\n* Deploying the app across multiple platforms (Android, iOS, Web, Windows, MacOS, and Linux) with automated pipelines.\n* Improving overall user experience and ensuring robust testing and documentation.\n\nDeliverables\n* Fully functional cross-platform app with improved UI and content creation features.\n* Complete image import, editing, and NFC content transfer capabilities.\n* Deployment pipelines for seamless cross-platform availability.\n* Comprehensive documentation and contribution guidelines.\n\nThis project will significantly improve the usability, performance, and community adoption of the Magic ePaper Badge Flutter App by making it feature-rich and platform-independent.",
          "student_name": "Yugesh Kumar",
          "code_url": null,
          "proposal_id": "mbsAl09P",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AD7fchJF"
        }
      ]
    },
    {
      "name": "FOSSology",
      "image_url": "https://summerofcode.withgoogle.com/media/org/fossology/bqfblnvpsqnfg5bh-360.png",
      "image_background_color": "#ffffff",
      "description": "Open Source License Compliance by OSS",
      "url": "https://fossology.org",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/fossology",
      "ideas_url": "https://fossology.github.io/gsoc/docs/2025/GSoC-projects",
      "guide_url": "",
      "topics": [
        "automation",
        "spdx",
        "license compliance",
        "nlp",
        "compliance automation"
      ],
      "technologies": ["python", "postgresql", "c/c++", "go", "php"],
      "irc_channel": "https://fossology.slack.com/",
      "contact_email": "",
      "mailing_list": "fossology-devel@fossology.org",
      "twitter_url": "",
      "blog_url": "https://fossology.org",
      "facebook_url": "",
      "num_projects": 10,
      "projects": [
        {
          "title": "Enhancing Debian Packaging for FOSSology",
          "short_description": "This project aims to improve the Debian packaging process for FOSSology, an open-source license compliance tool. Currently, FOSSology relies on CPack...",
          "description": "This project aims to improve the Debian packaging process for FOSSology, an open-source license compliance tool. Currently, FOSSology relies on CPack for packaging, which has limitations in flexibility and Debian policy compliance. This proposal suggests transitioning to Debian's native packaging tools (dpkg, debhelper, and lintian), automating the build process, and integrating continuous integration (CI) for better package management. Deliverables include structured Debian packages, automated build scripts, CI pipelines, and detailed documentation to facilitate future maintenance. This work will make FOSSology more accessible, easier to install, and compliant with Debian standards, benefiting system administrators and developers.",
          "student_name": "Ahmed-Gamal",
          "code_url": null,
          "proposal_id": "MxWGJCxd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/x53xJCC2"
        },
        {
          "title": "Data Pipeline For Safaa",
          "short_description": "Currently in Safaa Project data was manually curated And we see that most of the things are manual here. This project will concentrate on creating a...",
          "description": "Currently in Safaa Project data was manually curated And we see that most of the things are manual here. This project will concentrate on creating a pipeline, Scripts to copy copyright data automatically from fossology instance to train the model, Utilizing LLMS and deep learning techniques to increase the accuracy of our output.",
          "student_name": "Anuk",
          "code_url": null,
          "proposal_id": "alfVXho5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mlPA9FVj"
        },
        {
          "title": "LicenseDB Platform Improvements",
          "short_description": "The goal of this project is to enhance the LicenseDB platform by integrating several important features including advanced database migrations,...",
          "description": "The goal of this project is to enhance the LicenseDB platform by integrating several important features including advanced database migrations, support for refresh tokens, and a notification system to notify users when a license is updated. In addition, it will require setting up a clean backend and fronted monorepo for simplified development. The improvements will ensure the platform is better, reliable, scalable, and more user-friendly.",
          "student_name": "Chayan_Das",
          "code_url": null,
          "proposal_id": "bMxldsPE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vphnpwAh"
        },
        {
          "title": "FOSSology UX and UI Redesign",
          "short_description": "This project aims to redesign the FOSSology interface with a user-centered design approach that enhances usability and accessibility. The redesign...",
          "description": "This project aims to redesign the FOSSology interface with a user-centered design approach that enhances usability and accessibility. The redesign will focus on improving the navigation, making it easier for users to find what they need and complete tasks more efficiently. Enhancing visual hierarchy, and ensuring consistent formatting, we will create a more intuitive experience. A scalable, reusable design system will be developed to ensure that the platform can grow and evolve in the future. Iterative testing and user feedback will guide the design process, ensuring that the final result meets user expectations and improves their overall experience with FOSSology.",
          "student_name": "Devanshi Sachan",
          "code_url": null,
          "proposal_id": "vZGiEH2T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gX6omKmk"
        },
        {
          "title": "Support text phrases and bulk based scanning for MONK a like agent",
          "short_description": "Standard license scanning tools often overlook custom or organization-specific texts, leaving critical gaps in compliance. This project enhances...",
          "description": "Standard license scanning tools often overlook custom or organization-specific texts, leaving critical gaps in compliance. This project enhances FOSSology by upgrading the MONK BULK agent to detect custom text phrases. Users will be able to define these phrases through the UI, store them in the database, and perform bulk scans to identify exact matches in uploaded files. This extension not only strengthens FOSSology’s scanning capabilities but also improves UI and database efficiency for seamless retrieval. With thorough testing for accuracy and scalability, this upgrade will make FOSSology an even more powerful and adaptable license compliance tool.\n\nDeliverables for this project:\n1.) Creating a User Interface for Text and Bulk Phrases Management\n2.) Supporting Text Phrases Scanning\n3.) Implementing Bulk Phrases Scanning\n4.) Enhancing MONK Agent Functionality\n5.) Documentation",
          "student_name": "Harshit Gandhi",
          "code_url": null,
          "proposal_id": "Y9Llh838",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/897MRrjD"
        },
        {
          "title": "Complete microservices  infrastructure for  FOSSology",
          "short_description": "This project aims to complete the microservices infrastructure for FOSSology by continuing the work from GSoC 2021, with a goal to fully deploy...",
          "description": "This project aims to complete the microservices infrastructure for FOSSology by continuing the work from GSoC 2021, with a goal to fully deploy FOSSology on Kubernetes. Over the past few years, multiple changes have been made to the codebase and the build system, requiring updates and integration strategies. \n\nKey deliverables include:\n- Reviewing and aligning the legacy GSoC Kubernetes setup with the current codebase\n- Completing pending work from pull request #2086\n- Providing a fully working FOSSology Kubernetes deployment\n- Creating comprehensive documentation for Kubernetes setup\n- (Stretch Goals): Creating a single setup script, implementing health checks, and exposing usage/performance metrics\n\nThis project ensures easier deployment, better scalability, and modern DevOps practices for FOSSology’s infrastructure.",
          "student_name": "M.Salman",
          "code_url": null,
          "proposal_id": "7DYrZrbk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MjOyiOj7"
        },
        {
          "title": "Integrating OSS Review Toolkit with FOSSology",
          "short_description": "The OSS Review Toolkit (ORT) is a robust solution designed to identify and analyze the dependencies within a software project. FOSSology, on the...",
          "description": "The OSS Review Toolkit (ORT) is a robust solution designed to identify and analyze the dependencies within a software project. FOSSology, on the other hand, is a specialized tool for scanning source code to detect software licenses. This project aims to integrate FOSSology, a robust license scanning tool, into the OSS Review Toolkit (ORT), which analyzes project dependencies. By building a scanner plugin within ORT, users will have the option to utilize FOSSology’s capabilities directly in ORT workflows. The integration will involve sending SPDX data to FOSSology, retrieving scan results, and presenting them alongside ORT’s output, enhancing license compliance checks through a unified toolchain.",
          "student_name": "Prakash Mishra",
          "code_url": null,
          "proposal_id": "qqwc7aXM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zaei2pGq"
        },
        {
          "title": "RAG Powered User & Developer Assistant Chatbot using LLMs for FOSSology",
          "short_description": "The Fossology Ecosystem is a vast and mature one. It had been around for many years. Fossology Codebase and Documentation have grown to a large scale...",
          "description": "The Fossology Ecosystem is a vast and mature one. It had been around for\nmany years. Fossology Codebase and Documentation have grown to a large\nscale in the past 10-15 years. Keeping all this in mind, there is a need for an\nintelligent agent, like a Chatbot, which can provide comprehensive\nsupport to end-users and developers alike. The Chatbot should be able to\nunderstand FOSSology’s Documentation, Codebase in detail and answer\ncontext specific questions to users from its knowledge base. Before I delve\ninto the nitty gritty details of RAG or LLMs, we need to create a Knowledge\nBase from existing FOSSology Documentation, Fossology Wiki and Github\nDiscussions and save them in a Vector Database (like ChromaDB). The initial\ngoal will be to implement a Question-Answer model, powered with\nRetrieval Augmented Generation (RAG), then the next part will be to\nconvert it into a Conversational RAG and ultimately, it should be able to\nhandle multiple users at once. The future goal would be a User Interface\nDesign for the Chatbot. Once we have the API Setup, then it’s up to us to\ninclude any frontend to it.",
          "student_name": "Rajul Jha",
          "code_url": null,
          "proposal_id": "uS1bUq0O",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Lbnvb90g"
        },
        {
          "title": "Completion of UI using React.js",
          "short_description": "This project aims to complete and modernize the React-based UI of FOSSology by aligning it with the updated REST API v2 and current frontend best...",
          "description": "This project aims to complete and modernize the React-based UI of FOSSology by aligning it with the updated REST API v2 and current frontend best practices. The work includes finalizing the incomplete interface, upgrading React to 19.1.0 for improved performance and concurrency, and migrating from yarn to pnpm for faster, space-efficient development. It will also implement UX improvements from the  FOSSology UX and UI redesign project and create a reusable component library with Storybook. Comprehensive documentation and deployment guidelines will be provided to ensure long-term maintainability and contributor onboarding.",
          "student_name": "Tiyasa Kundu",
          "code_url": null,
          "proposal_id": "zWU8PbfQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QJCf0exh"
        },
        {
          "title": "LicenseDB Platform Improvements",
          "short_description": "This proposal aims to enhance LicenseDB by introducing four core improvements: database migration support, automated email notifications for license...",
          "description": "This proposal aims to enhance LicenseDB by introducing four core improvements: database migration support, automated email notifications for license updates, secure refresh token–based authentication, and a unified backend–frontend monorepo structure.\nTo begin with, I will integrate the Golang backend and the ReactJS frontend into a single monorepo, ensuring a unified project structure. Once the monorepo setup is in place, I will replace GORM’s AutoMigrate with migration tools like dbmate introducing version-controlled, reversible SQL migrations for better schema tracking. Following that, I will implement an email notification system either asynchronously using Redis and Asynq, or through a synchronous approach to notify stakeholders such as admins, license creators, and maintainers about license updates. Finally, to enhance security, I will extend the existing JWT-based authentication system by adding refresh token support.",
          "student_name": "Vaibhav Saahu",
          "code_url": null,
          "proposal_id": "MqOxPVht",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ER9UmRSf"
        }
      ]
    },
    {
      "name": "Unikraft",
      "image_url": "https://summerofcode.withgoogle.com/media/org/unikraft/5nx7anuq3iixdm54.png",
      "image_background_color": "#ffffff",
      "description": "A Fast and Secure Unikernel SDK",
      "url": "https://unikraft.org/",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/unikraft",
      "ideas_url": "https://github.com/unikraft/gsoc/blob/staging/gsoc-2025/ideas.md",
      "guide_url": "https://unikraft.org/docs/contributing/",
      "topics": [
        "virtualization",
        "cloud",
        "software reuse",
        "software configurability"
      ],
      "technologies": ["c", "xen", "golang", "kvm", "assembly language"],
      "irc_channel": "https://bit.ly/UnikraftDiscord",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/unikraftsdk",
      "blog_url": "https://unikraft.org/blog",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Update Unikraft Application Libraries",
          "short_description": "This project proposes modernizing and maintaining Unikraft application libraries (microlibraries) such as lib-nginx, lib-redis, lib-sqlite,...",
          "description": "This project proposes modernizing and maintaining Unikraft application libraries (microlibraries) such as lib-nginx, lib-redis, lib-sqlite, lib-python3, lib-libgo, and lib-lua by:\n1. Updating them to their latest upstream versions\n2. Adopting the Directory-model for structured, scalable versioning\n3. Enhancing CI integration and creating automation scripts\n4. Validating compatibility with multiple Unikraft core versions\n5. Delivering tooling for library upgrades (e.g., kraft lib upgrade)\n6. Providing detailed documentation and testing frameworks\n\nThe goal is to reduce technical debt, streamline versioning and patching, and improve developer and contributor experience through a robust infrastructure overhaul.",
          "student_name": "abhinav_1203",
          "code_url": null,
          "proposal_id": "EOqTcIOB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1dZJgC9t"
        },
        {
          "title": "Update Newlib and Pthread-embedded Libraries",
          "short_description": "This project focuses on restoring and modernizing Newlib support within the Unikraft unikernel framework, which previously removed Newlib after...",
          "description": "This project focuses on restoring and modernizing Newlib support within the Unikraft unikernel framework, which previously removed Newlib after version 0.11.0. The main goal is to port a newer version of Newlib and integrate it with pthread-embedded to enable proper multithreading support. A significant part of the work includes ensuring that pthread-embedded functions correctly alongside Musl’s existing pthread implementation, avoiding any conflicts that could arise from having two threading systems. The project also includes developing practical example applications that demonstrate the use of pthreads with both Newlib and Musl, making it easier for other developers to adopt and understand threading in Unikraft. Overall, this effort is expected to enhance Unikraft’s flexibility, improve its threading model, increase system stability through thorough testing, and broaden its appeal by giving developers more runtime options and better documentation.",
          "student_name": "Abolfazl Soltanisamani",
          "code_url": null,
          "proposal_id": "RXgtyN7u",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Q1hFzB7p"
        },
        {
          "title": "Fine-tuning Unikraft's Performance",
          "short_description": "Unikraft, a lightweight unikernel, demonstrated top-tier performance in the EuroSys 2021 paper, but its 2025 version may have regressed. This project...",
          "description": "Unikraft, a lightweight unikernel, demonstrated top-tier performance in the EuroSys 2021 paper, but its 2025 version may have regressed. This project evaluates and improves Unikraft’s current performance by re-running the 2021 benchmarks, identifying bottlenecks, and optimizing them. I’ll study the eurosys21-artifacts repository to adapt its benchmarking setup, profile Unikraft for inefficiencies, and implement targeted fixes. Deliverables include a new repository with updated experiments, GitHub issues detailing bottlenecks, and GitHub PRs with performance-enhancing patches, aiming to restore or surpass Unikraft’s 2021 advantages.",
          "student_name": "Ashirvad Mohanty",
          "code_url": null,
          "proposal_id": "jgBqSUYq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UeazUSm1"
        },
        {
          "title": "Expanding the Unikraft Software Support Ecosystem",
          "short_description": "The goal of this project is to expand the Unikraft ecosystem by enabling the execution of popular applications through binary-compatibility mode....",
          "description": "The goal of this project is to expand the Unikraft ecosystem by enabling the execution of popular applications through binary-compatibility mode. Currently, many popular applications are not supported on Unikraft, and this project will address that gap by integrating these applications into the Unikraft catalog. I will work on adding a variety of applications, such as MinIO, Consul, Traefik, and others, to the Unikraft catalog. The project will also involve extending or adding new system calls to ensure proper functionality, writing automated GitHub workflow files, and creating thorough test cases to validate that these applications run correctly. Additionally, the project will focus on performance benchmarking and resource usage measurements to ensure efficient operation within the unikernel environment. This project will significantly enhance Unikraft's application compatibility, making it more attractive to developers and helping grow the Unikraft community.",
          "student_name": "prasoon054",
          "code_url": null,
          "proposal_id": "WGMDRzoO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Nq7LcmEV"
        },
        {
          "title": "Testing Framework for Unikraft Builds",
          "short_description": "I have to develop a testing framework that is able to multiplex the variety of configuration options, VMMs, hypervisors, architectures, boot...",
          "description": "I have to develop a testing framework that is able to multiplex the variety of configuration options, VMMs, hypervisors, architectures, boot protocols, to validate the successful building and running of unikernel images. This framework can configure, build, run and test the variety of Unikraft builds. It is written in Python and is subject to improvements and refactoring.\nI must augment the testing infrastructure to make it seamless to be used by Unikraft developers and users. To this end we aim to:\n•\tConsolidate the testing framework as a separate project inside its own repository.\n•\tHave the testing framework work out-of-the-box with the catalog and catalog-core repositories.\n•\tIntegrate the testing framework with the CI/CD system used in the Unikraft organization repositories to automatically validate builds for contributions. Tests are to be triggered each time a pull request is open in the unikraft and in core library repositories.",
          "student_name": "Shashank Srivastava",
          "code_url": null,
          "proposal_id": "E8qz8Yyx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XAFE48Dj"
        }
      ]
    },
    {
      "name": "The JPF team",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-jpf-team-hg/rvqtnz4hyojrfgvw.png",
      "image_background_color": "#ffffff",
      "description": "JPF is a Java VM used to verify and debug software",
      "url": "https://github.com/javapathfinder/jpf-core/wiki",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-jpf-team-hg",
      "ideas_url": "https://github.com/javapathfinder/jpf-core/wiki/GSoC-2025-Project-Ideas",
      "guide_url": "https://github.com/javapathfinder/jpf-core/wiki/JPF-Google-Summer-of-Code-2024",
      "topics": [
        "model checking",
        "symbolic execution",
        "verification of concurrent systems",
        "program analysis",
        "test input generation"
      ],
      "technologies": ["android", "java", "distributed systems", "jvm"],
      "irc_channel": "https://discord.gg/sX4YZUVHK7",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/g/java-pathfinder",
      "twitter_url": "https://twitter.com/Java_Pathfinder",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Support Java 11/17 for JPF extensions",
          "short_description": "Java Path Finder (JPF), a specialized Java Virtual Machine for software verification, excels with Java 8 but faces challenges with modern features in...",
          "description": "Java Path Finder (JPF), a specialized Java Virtual Machine for software verification, excels with Java 8 but faces challenges with modern features in Java 11 and 17, such as bootstrap methods (e.g., lambdas and string concatenation) and internal functions like toString() and hashCode() for records. My project seeks to address this by enhancing JPF to fully support Java 11 and 17. I will upgrade BootstrapMethodInfo to manage string concatenation effectively, refine INVOKEDYNAMIC execution to mirror the host JVM’s dynamic call site generation, and ensure internal functions operate correctly for new Java features. Drawing on OpenJDK research, I’ll implement these changes and validate them with thorough testing. Deliverables include full Java 17 support in JPF’s default branch, a comprehensive test suite for string concatenation and records and  updated documentation. This work will modernize JPF, enabling it to verify advanced Java programs and strengthening its value to the verification community.",
          "student_name": "Mahmoud Khawaja",
          "code_url": null,
          "proposal_id": "bw96ogIq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3FSUKUlW"
        },
        {
          "title": "Support portfolio of solvers in SPF",
          "short_description": "Java PathFinder (JPF) is an extensible software analysis framework for java bytecode which can be used to check for concurrency defects like...",
          "description": "Java PathFinder (JPF) is an extensible software analysis framework for java bytecode which can be used to check for concurrency defects like deadlocks, and unhandled exceptions like NullPointerExceptions and AssertionErrors. Symbolic PathFinder (SPF) is its extension that enables symbolic execution of java programs. \n\nThis proposal outlines my plan to contribute to The JPF Team by working on the Support portfolio of solvers in SPF Project during Google Summer of Code 2025. \n\nThe main goal of this project is to enable the simultaneous invocation of multiple constraint solvers, where execution halts as soon as any solver returns a satisfactory result. This approach is expected to enhance SPF's ability to handle a broader range of constraints. \n\nThis Project will extend SPF branch sv-comp. The outcome will enhance SPF’s scalability and applicability in symbolic execution tasks.",
          "student_name": "Rehan Chalana",
          "code_url": null,
          "proposal_id": "zKPj1vc8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XWELkdRG"
        },
        {
          "title": "Support Runtime Exception In SPF",
          "short_description": "The project aims to support and extend SPF’s symbolic execution capabilities which are being limited by certain factors, unhandled common Java...",
          "description": "The project aims to support and extend SPF’s symbolic execution capabilities which are being limited by certain factors, unhandled common Java runtime exceptions arising from symbolic inputs and the need to polish or fix the issues related to Java 11. This project also aims to address certain issues on SPF like additional support for strings and the impact of Java 11 on previously supported model classes in Java 8 (e.g., Math.java, Scanner.java). This project aims to help SPF detect, model and explore execution paths leading to runtime exceptions such as NullPointerException and IndexOutOfBoundsException. This will involve modifying the core components like symbolic bytecode handlers and methods summarizers (e.g., SymbolicStringHandler). This work, primarily, will extend the sv-comp branch resulting in a better version of Symbolic PathFinder.",
          "student_name": "Saiff",
          "code_url": null,
          "proposal_id": "XL7amYVo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/wxOGtvXL"
        }
      ]
    },
    {
      "name": "OWASP Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/owasp-foundation/haks8qbp0yvjvzge-360.png",
      "image_background_color": "#ffffff",
      "description": "No more insecure software.",
      "url": "https://owasp.org",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/owasp-foundation",
      "ideas_url": "https://owasp.org/www-community/initiatives/gsoc/gsoc2025ideas",
      "guide_url": null,
      "topics": [
        "web",
        "cloud",
        "application security",
        "cybersecurity",
        "DevSecOps"
      ],
      "technologies": ["python", "javascript", "java", "ZAP", "Juice Shop"],
      "irc_channel": "https://owasp.org/slack/invite",
      "contact_email": "mailto:gsoc-admins@owasp.org",
      "mailing_list": "https://groups.google.com/g/owasp-gsoc?pli=1",
      "twitter_url": "https://twitter.com/owasp",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 15,
      "projects": [
        {
          "title": "Owasp Nest API and Schema Development",
          "short_description": "The OWASP Nest API and Schema Development project aims to enhance OWASP Nest API infrastructure by migrating to Django Ninja for optimized REST API...",
          "description": "The OWASP Nest API and Schema Development project aims to enhance OWASP Nest API infrastructure by migrating to Django Ninja for optimized REST API performance, replacing Graphene with Strawberry GraphQL, and implementing structured API key management for secure authentication. Additionally, it introduces YAML-based JSON schemas to standardize metadata for OWASP projects, chapters, and committees, ensuring consistency across repositories. The project focuses on performance improvements through Redis caching and rate limiting, automated schema validation using GitHub Actions, and SDK generation in Python, Go, and TypeScript for easier integrations. Comprehensive API documentation will be developed using OpenAPI and Swagger UI, and 80%+ test coverage with Pytest will ensure stability. By implementing these enhancements, the project will improve security, maintainability, and developer experience, fostering a structured and efficient approach to OWASP Nest API and metadata management.",
          "student_name": "abhayymishraa",
          "code_url": null,
          "proposal_id": "VbqTHGeB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vka6VICK"
        },
        {
          "title": "Improving Recon Scan and Optimising Task Handling",
          "short_description": "This project aims to improve the reconnaissance scan features of Nettacker while also addressing the issues caused by high parallelization....",
          "description": "This project aims to improve the reconnaissance scan features of Nettacker while also addressing the issues caused by high parallelization. Additional deliverables include better output types and improved test coverage.",
          "student_name": "Achintya Jai",
          "code_url": null,
          "proposal_id": "Uj8esnfG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dPsZWqOg"
        },
        {
          "title": "MultiJuicer as a CTF Platform",
          "short_description": "MultiJuicer currently provides multi-instance Juice Shop deployments but lacks essential features for a dedicated CTF platform. The existing...",
          "description": "MultiJuicer currently provides multi-instance Juice Shop deployments but lacks essential features for a dedicated CTF platform. The existing scoreboard is basic, there's no integrated hint system, and detailed progress tracking is missing, limiting its use for engaging competitions.\nThis project will transform MultiJuicer into a feature-rich CTF platform by:\n- Redesigning the Scoreboard: Implementing a visually appealing, real-time UI with dynamic visualizations (score history, statistics), first-blood tracking, basic theming, and integrated group score display using React, TailwindCSS, and Server-Sent Events.\n- Integrating a Hint System: Leveraging canonical Juice Shop hints, allowing teams to purchase available hints (text/URL) using points based on configurable rules (cost, time-locks), and persistently tracking purchased hints via Kubernetes annotations to prevent double deductions and enable redisplay.\n- Enhancing the Backend: Modifying the Go-based services to calculate effective scores (deducting hint costs), track score history and first bloods, aggregate group scores, and provide new/updated APIs for the frontend.",
          "student_name": "Ayushraj Parihar",
          "code_url": null,
          "proposal_id": "Lgm5r0U6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/w06DWrdP"
        },
        {
          "title": "OWASP NestBot as an AI agent/assistant",
          "short_description": "OWASP's Nest bot currently relies on fixed commands, which is not able to answer general user questions or project related questions due to its...",
          "description": "OWASP's Nest bot currently relies on fixed commands, which is not able to answer general user questions or project related questions due to its pre-programmed commands. 'OWAP Nest bot with AI agent/assistance' project will upgrade the Nest bot with AI-capabilities using Retrieval-Augmented Generation (RAG) for accurate and context-aware answers along with a trained classifier model to route users to relevant Slack channels based on their queries. This project includes the trained classifier, the AI-enhanced Nest bot, testing mechanisms, and user documentation for using the Nest bot.",
          "student_name": "Dishant Miyani",
          "code_url": null,
          "proposal_id": "19SRjksZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dfCvsOOU"
        },
        {
          "title": "Pygoat v3: Architecture and Educational Experience Redefined",
          "short_description": "This project enhances OWASP PyGoat, a vulnerable Django-based web app used to teach secure coding, by improving its architecture, usability, and...",
          "description": "This project enhances OWASP PyGoat, a vulnerable Django-based web app used to teach secure coding, by improving its architecture, usability, and educational value. The current app lacks modularity and modern features that support scalable learning and community engagement.\nThe project introduces a microservice-based design, where each lab is Dockerized and independently deployable. The UI will be redesigned for clarity, with hint toggles, success indicators, and a secure/exploit mode for comparing vulnerabilities and their patches. New labs covering OWASP Top 10:2025 categories, including business logic flaws and misconfigurations, will be added.\nAdditional features include red team vs. blue team modes, a security patch showcase, gamified achievements, an AI-powered chatbot assistant, internationalization, and a PostgreSQL-based feedback system for continuous improvement.\n\nKey Deliverables:\n1. UI overhaul with hints, success flags, and clear lab instructions.\n2. Dockerized lab microservices for isolation and scalability.\n3. New labs aligned with OWASP Top 10:2025.\n4. Red/Blue team mode and secure/exploit toggle.\n5. Security Patch Showcase with CVE and best practice references.\n6. Gamification (badges, XP, profiles)\n7. AI chatbot for in-app guidance\n8. PostgreSQL-backed user feedback form\n9. Internationalization support for global reach\n\nThis project transforms PyGoat into a modern, modular, and engaging platform for practical Web application security education.",
          "student_name": "Garvita Kataria",
          "code_url": null,
          "proposal_id": "XnzqBWwO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YFAVTBLl"
        },
        {
          "title": "Juice Shop side-project rennovation",
          "short_description": "The Juice Shop CTF Tool, currently made with vanilla JavaScript, needs to be upgraded to TypeScript to align with the main project for easier...",
          "description": "The Juice Shop CTF Tool, currently made with vanilla JavaScript, needs to be upgraded to TypeScript to align with the main project for easier maintenance. Also, its code quality should be improved by applying Juice Shop's ESLint standards. The project's tests coverage and relevance should also be reviewed and strengthened where necessary . Furthermore, several other sub-projects like Juicy Statistics, Juicy Coupon Bot , Juicy Chat Bot should also be renovated",
          "student_name": "hxrshxz",
          "code_url": null,
          "proposal_id": "SSMTr3ix",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rzlkFqYj"
        },
        {
          "title": "AI-Driven Blockchain Rewards System and Gamification (Ordinals and Solana)",
          "short_description": "The OWASP Bug Logging Tool (BLT) is adopting a gamified, AI-powered blockchain rewards system to incentivize open-source security contributions. This...",
          "description": "The OWASP Bug Logging Tool (BLT) is adopting a gamified, AI-powered blockchain rewards system to incentivize open-source security contributions. This project will integrate BACON tokens deployed on Bitcoin Ordinals and Solana, enabling developers to earn rewards for bug reporting, issue resolution, and community engagement. AI-driven scoring will assess the quality of blog posts, issues, and suggestions, ensuring high-value contributions. The initiative also includes staking mechanisms, automated token distribution, and a non-custodial wallet system, fostering transparency, participation, and decentralized rewards within OWASP BLT.",
          "student_name": "Krrish Sehgal",
          "code_url": null,
          "proposal_id": "2HKIDoJG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aa32KeGu"
        },
        {
          "title": "BugSim(Bug Simulator and Learning)",
          "short_description": "BugSim (Bug Simulator and Learning) is an advanced bug simulation platform integrated into OWASP BLT. It helps security researchers, ethical hackers,...",
          "description": "BugSim (Bug Simulator and Learning) is an advanced bug simulation platform integrated into OWASP BLT. It helps security researchers, ethical hackers, and developers understand, simulate, and resolve vulnerabilities in real-world environments.\nThe project includes features like:\nHands-on bug simulation and learning with various vulnerability categories (SQL Injection, XSS, CSRF, etc.).\nWeekly vulnerability challenges and structured bug reporting.\nIntegration with OWASP ZAP for automated security testing.\nLive hackathons and competitive bug hunting with leaderboards.\nGamification with points, badges, and rewards.\nThis project will enhance OWASP BLT by creating an engaging and interactive cybersecurity learning platform. The deliverables include a fully functional BugSim module, complete with vulnerability simulations, a scoring system, and real-time security reporting.",
          "student_name": "Lucky Negi",
          "code_url": null,
          "proposal_id": "oVSlRV54",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DygR4afn"
        },
        {
          "title": "OWTF MiTM Proxy Modernization",
          "short_description": "OWTF's built-in MiTM proxy was developed nearly a decade ago and is currently outdated, limited in functionality, and hard to maintain. This project...",
          "description": "OWTF's built-in MiTM proxy was developed nearly a decade ago and is currently outdated, limited in functionality, and hard to maintain. This project aims to completely modernize the MiTM proxy component to make it as feature-rich, stable, and flexible as modern alternatives like mitmproxy. The upgraded proxy will support TLS interception, live modification of HTTP(S) requests and responses, robust transaction logging, and seamless integration with the OWTF framework and frontend. Deliverables include a fully functional, test-covered modern proxy component with improved logging, dynamic tampering support, and compatibility with OWTF's plugin and reporting infrastructure.",
          "student_name": "Navprak",
          "code_url": null,
          "proposal_id": "L4LNXhDh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QSMKm9KO"
        },
        {
          "title": "Optimizing OpenCRE: AI-Driven Gap Analysis, Frontend Enhancement and Graph Debugging for scalability",
          "short_description": "This project enhances OpenCRE’s cybersecurity compliance platform by addressing scalability, usability, and transparency gaps. The resource-intensive...",
          "description": "This project enhances OpenCRE’s cybersecurity compliance platform by addressing scalability, usability, and transparency gaps. The resource-intensive gap analysis tool will be optimized through Neo4j query refinements, Redis caching, and Python code streamlining to run efficiently on laptops (under 5 hours, <16GB RAM). A React-based frontend for MyOpenCRE will simplify compliance workflows with drag-and-drop CSV uploads and AI automation (leveraging NLP models) to map standards like SOC2 to CREs, while unmapped controls trigger suggestions for new CREs. The Explorer module gains debugging tools to visualize hierarchical relationships, root nodes, and metadata (e.g., shared tags), improving maintainability. Deliverables include a performant engine, intuitive UI, rigorous testing (50%+ coverage), and documentation, all merged into OpenCRE’s codebase to empower enterprises, auditors, and contributors with scalable, open-source compliance management.",
          "student_name": "Parth Sohaney",
          "code_url": null,
          "proposal_id": "YXUGlzUQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vp6emy5M"
        },
        {
          "title": "Improve Kubernetes Deployment and Introduce Azure Support for OWTF",
          "short_description": "OWASP OWTF supports use of terraform to deploy OWTF on AWS and manifests for Kubernetes. To improve its capabilities, I will introduce support of...",
          "description": "OWASP OWTF supports use of terraform to deploy OWTF on AWS and manifests for Kubernetes. To improve its capabilities, I will introduce support of Microsoft Azure and Improve current kubernetes manifest to support separate frontend and backend deployment of OWTF.",
          "student_name": "RahulSurwade",
          "code_url": null,
          "proposal_id": "OLUBFuht",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LIP7GtyP"
        },
        {
          "title": "OWASP Contribution Hub Development",
          "short_description": "The Contribution Hub will be a platform that helps newcomers find mentors for open source projects. The system will let users log in with GitHub,...",
          "description": "The  Contribution Hub will be a platform that helps newcomers find mentors for open source projects. The system will let users log in with GitHub, create profiles showing their skills, and get matched with the right mentors based on what they know and want to learn.\nContributors will see a dashboard with project suggestions and issues that match their skill level. They'll also be able to track their progress and see how they're improving. For beginners, the platform will highlight easy-to-start issues and group similar tasks together for hackathons.\nThe system will help solve common problems new contributors face by providing guidance, recommending tasks they can handle, and connecting them with experienced mentors who can help them grow. Regular feedback from both mentors and contributors will help make the platform better over time.",
          "student_name": "Rajgupta36",
          "code_url": null,
          "proposal_id": "qzdXxdjL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pZB3XGpa"
        },
        {
          "title": "Organization Dashboard – Enhanced Vulnerability & Bug Management",
          "short_description": "Security teams and open-source organizations often struggle with managing vulnerability reports, bug bounties, and contributor performance...",
          "description": "Security teams and open-source organizations often struggle with managing vulnerability reports, bug bounties, and contributor performance efficiently. The current organization dashboard lacks advanced filtering, real-time analytics, and collaboration tools, making it difficult to track and resolve security issues effectively.\n\nThis project aims to redesign and enhance the dashboard to provide a more intuitive, data-driven, and collaborative experience. Using Django Templates/HTMX and Tailwind CSS, the new dashboard will introduce advanced filtering, interactive analytics, and role-based collaboration tools to streamline vulnerability management.\n\nKey Deliverables:\n1. Redesigned Dashboard UI for seamless navigation.\n2. Advanced Filtering & Search for security reports.\n3. Real-time Analytics & Insights for better decision-making.\n4. Collaboration Features (issue assignment, commenting, notifications).\n5. Optimized Backend with secure API endpoints and role-based access.\n6. Comprehensive Testing & Documentation for future maintainability.",
          "student_name": "Rinkit Adhana",
          "code_url": null,
          "proposal_id": "AiAaLGBY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2awtU4Oi"
        },
        {
          "title": "AI-Powered Code Review & Smart Prioritization System for Maintainers",
          "short_description": "This project aims to build an AI-powered GitHub assistant that helps open-source maintainers review code, detect security issues, and prioritize...",
          "description": "This project aims to build an AI-powered GitHub assistant that helps open-source maintainers review code, detect security issues, and prioritize tasks efficiently. The assistant will analyze pull requests, identify bugs and vulnerabilities, and provide real-time feedback using LLMs and advanced rule-based scanning. A smart prioritization system will rank issues based on urgency and impact, ensuring maintainers focus on the most critical work. The project will deliver a GitHub-integrated bot, an AI-driven code review system, and a dashboard for managing tasks, making open-source development faster, more secure, and easier to maintain.",
          "student_name": "Sahil Dhillon",
          "code_url": null,
          "proposal_id": "hcu6YlCu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tU5Ws4Nh"
        },
        {
          "title": "Optimizing Graph Database Performance for Efficient Gap Analysis in OWASP OpenCRE",
          "short_description": "The OpenCRE project enables connections between security standards (like NIST, OWASP, etc.) and security-relevant knowledge (like CWE, CAPEC)....",
          "description": "The OpenCRE project enables connections between security standards (like NIST, OWASP, etc.) and security-relevant knowledge (like CWE, CAPEC). Currently, its gap analysis functionality is resource-intensive, especially for large standards. This project proposes a performance overhaul of the gap analysis engine. The goal is to reduce memory usage, optimize Cypher queries in Neo4j, and experiment with a CRE-focused comparison approach to speed up the analysis. Deliverables include optimized Cypher/Redis logic, reduced redundant calculations, and an optional prototype for CRE-level gap detection, improving analysis time, scalability, and developer usability.",
          "student_name": "Shasanka",
          "code_url": null,
          "proposal_id": "OpiU7UU1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KDpsEyhP"
        }
      ]
    },
    {
      "name": "QC-Devs",
      "image_url": "https://summerofcode.withgoogle.com/media/org/qc-devs/nywcx8edxlpsz2kg-360.png",
      "image_background_color": "#ffffff",
      "description": "Sustainable software for quantum chemistry & more",
      "url": "https://qcdevs.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/qc-devs",
      "ideas_url": "https://qcdevs.org/join/qcdevs_gsoc/",
      "guide_url": "https://qcdevs.org/join/qcdevs_gsoc/#contributor-guidance",
      "topics": [
        "data science",
        "scientific visualization",
        "quantum chemistry",
        "Computational Science",
        "numerical algorithms"
      ],
      "technologies": ["python", "github", "c++", "julia", "jupyter"],
      "irc_channel": "",
      "contact_email": "mailto:qcdevs@qcdevs.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/QCDevs",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Refactor AtomDB Structure",
          "short_description": "Efficient data storage and retrieval are essential for the performance and scalability of scientific databases. AtomDB, a valuable resource for...",
          "description": "Efficient data storage and retrieval are essential for the performance and scalability of scientific databases. AtomDB, a valuable resource for atomic data, currently relies on MsgPack for data storage, which presents challenges such as limited compatibility with version control, lack of support for schema evolution, and difficulties in debugging. This project proposes refactoring AtomDB by replacing MsgPack with TinyDB, a lightweight database that integrates seamlessly with Python and offers enhanced flexibility for data inspection and versioning. The proposed implementation includes merging the SpeciesData dataclass into the Species class to simplify the structure and remove redundant methods, developing a robust migration script to convert existing MsgPack files without data loss, and updating build configurations to include TinyDB as a dependency. The refactored solution will undergo comprehensive testing and benchmarking to ensure improved maintainability and compatibility, preserving existing functionality while better aligning with modern development practices.",
          "student_name": "Enjy Ashraf",
          "code_url": null,
          "proposal_id": "mmuKbfEl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iOSDCvNs"
        },
        {
          "title": "ModelHamiltonian: Manipulating Model Hamiltonians and Building Interfaces to External Packages",
          "short_description": "ModelHamiltonians is already a well-structured library to express and simulate Hamiltonians in the context of quantum chemistry. The package,...",
          "description": "ModelHamiltonians is already a well-structured library to express and simulate\nHamiltonians in the context of quantum chemistry. The package, however, lacks some\nmanipulations of the Hamiltonians that can be useful to researchers to efficiently\nmanipulate and analyze electronic structure calculations while maintaining the flexibility to work with different standard theoretical frameworks.\nTo address this, this proposal is related to the creation of a toolkit module that will\nmainly allow:\n1. Atomic Orbital to Molecular Orbital transformations, generalizing to all\nHamiltonians are available in the library;\n2. Conversions to the geminal basis, enabling researchers to work with alternative\nrepresentations of Hamiltonians for specialized applications.\n3. Reduced Density Matrix (RDM) manipulations, improving the usability of ModelHamiltonians in many-body representations.\n4. Add support for FCIDump file format reading and writing\n5. Develop an interface with PySCF and write tests for all implemented\nfunctionalities.",
          "student_name": "Giovanni BENEDETTI DA ROSA",
          "code_url": null,
          "proposal_id": "EDyipDJe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UUGIKoxV"
        },
        {
          "title": "Improving Gbasis Performance Using Screening",
          "short_description": "The efficient computation of molecular integrals is crucial for large-scale quantum chemistry calculations to obtain the properties of the system....",
          "description": "The efficient computation of molecular integrals is crucial for large-scale quantum chemistry calculations to obtain the properties of the system. Gbasis is a free and open-source Python library for molecular property calculations using Gaussian basis functions, which are commonly used in quantum chemistry. It can evaluate various functions expanded in a Gaussian basis set, such as the electron density, as well as integrals over Gaussian basis functions. For all of these computations, a large number of complex integrals must be evaluated. Gbasis can compute various one- and two-electron integrals, but as the system size increases, these integrations become increasingly time- and memory-intensive.\n\nScreening is common in computational chemistry, and most codes use it to skip unnecessary integral evaluations. Currently, Gbasis applies screening only to overlap integrals. The aim of this project is to extend screening to other one-electron and two-electron integrals. By evaluating different types of integrals, a variety of properties such as the electrostatic potential, electron density, and its derivatives can be obtained. These evaluations are typically performed on a spatial grid, and screening for such grid-based evaluations will also be addressed in this work.",
          "student_name": "Omid Hosseinzadeh",
          "code_url": null,
          "proposal_id": "9pOylRb3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/z7Ryg9a3"
        },
        {
          "title": "Enhancing NICE.jl with a Hybrid Solver and Manual Jacobian for Reaction Network Analysis",
          "short_description": "The NICE.jl package, a Julia-based tool for reaction network analysis, currently lacks efficient handling of complex systems with oscillations or...",
          "description": "The NICE.jl package, a Julia-based tool for reaction network analysis, currently lacks efficient handling of complex systems with oscillations or stiff kinetics, limiting its applicability in computational chemistry. This proposal addresses this by developing a hybrid solver that combines kinetic Monte Carlo (KMC) simulations with an exact solver, enhanced by a manually derived Jacobian to improve convergence and performance. The solution involves implementing the hybrid method, validating it against existing solvers, and optimizing initial guess strategies. Deliverables include: (1) a working hybrid_solve function integrated into NICE.jl, (2) a manual Jacobian implementation with unit tests, (3) Jupyter tutorials demonstrating usage, and (4) comprehensive documentation. This enhancement will make NICE.jl more robust for real-world reaction systems, benefiting the Julia and computational chemistry communities.",
          "student_name": "Sparsh Karna",
          "code_url": null,
          "proposal_id": "bHLb9AZG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RDAPq7QJ"
        },
        {
          "title": "Transformed Cubic Grids",
          "short_description": "My GSoC 2025 proposal focuses on enhancing the \"Transformed Cubic Grids\" framework (Issue #264) within the QC-Devs organization by implementing...",
          "description": "My GSoC 2025 proposal focuses on enhancing the \"Transformed Cubic Grids\" framework (Issue #264) within the QC-Devs organization by implementing adaptive quadrature methods. Current Becke-style molecular grids suffer from overlapping atomic grids, leading to redundant computations and reduced accuracy in quantum chemistry simulations. Building on prior work (Issues #7, #15, #96), I will develop algorithms to dynamically adjust grid points and weights based on integrand behavior, such as electron density, ensuring high accuracy with fewer points. My deliverables include refreshing and merging Pull Request #136, implementing adaptive methods (e.g., trapezoidal or Simpson’s rule with refinement), writing comprehensive tests and documentation, and creating Jupyter notebook tutorials for practical use in molecular property calculations.",
          "student_name": "tutou2356",
          "code_url": null,
          "proposal_id": "tkC29Gz5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gL4q2C9U"
        }
      ]
    },
    {
      "name": "PEcAn Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/pecan-project/kijyzllr7r1g0ukz-360.png",
      "image_background_color": "#ffffff",
      "description": "Develop and promote tools for ecosystem modeling",
      "url": "https://pecanproject.github.io/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/pecan-project",
      "ideas_url": "https://pecanproject.github.io/gsoc_ideas",
      "guide_url": "https://pecanproject.github.io/gsoc.html",
      "topics": [
        "data science",
        "ecosystem models",
        "scientific visualization",
        "climate science",
        "Ecological Forecasting,"
      ],
      "technologies": ["r", "docker", "api", "geospatial"],
      "irc_channel": "https://join.slack.com/t/pecanproject/shared_invite/enQtMzkyODUyMjQyNTgzLWEzOTM1ZjhmYWUxNzYwYzkxMWVlODAyZWQwYjliYzA0MDA0MjE4YmMyOTFhMjYyMjYzN2FjODE4N2Y4YWFhZmQ",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/PEcAnProject",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Development of Data Preparation Workflows for Ensemble-Based Modeling",
          "short_description": "This project focuses on developing modular data preparation workflows within the PEcAn ecosystem to support ecological modeling.It targets the...",
          "description": "This project focuses on developing modular data preparation workflows within the PEcAn ecosystem to support ecological modeling.It targets the integration of diverse data sources for meteorology (e.g, NARR, ECMWF/ERA5, Ameriflux), soil (e.g, gSSURGO, SoilGrids, BADM), and vegetation initial conditions (e.g, LandTrendr AGB, BADM, bespoke CSV files)—and generate ensemble-based initial condition files. The goal is to create ensemble-ready inputs that enable sensitivity and uncertainty analyses. As a stretch goal, the project will implement an integrated workflow that runs the SIPNET model over these ensembles and performs variance partitioning to quantify the contribution of each data source to model output uncertainty. \nCurrent variance decomposition in PEcAn only supports parameter uncertainty. This project aims to address this gap by developing modular data preparation workflows that propagate and analyze uncertainty from multiple sources—including parameter, meteorological data, soil data and vegetation initial conditions. \nDeliverables include reusable R functions, data preparation modules, documentation, and example workflows integrated into the PEcAn system.",
          "student_name": "Akash B V",
          "code_url": null,
          "proposal_id": "1q6P0957",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rQV9ToRO"
        },
        {
          "title": "Development of Notebook-based PEcAn Workflows",
          "short_description": "This project aims to develop Quarto notebooks as an accessible yet flexible interface for running PEcAn workflows, bridging the gap between the...",
          "description": "This project aims to develop Quarto notebooks as an accessible yet flexible interface for running PEcAn workflows, bridging the gap between the limited web-based UI and the more advanced API or R script methods. It will create workflow templates that cater to both new and experienced users. To support adoption, the project will also produce a written vignette demonstrating their use.",
          "student_name": "Aritra Dey",
          "code_url": null,
          "proposal_id": "95OVzSDe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cFQgJgsm"
        },
        {
          "title": "GSoC 2025 Proposal: Global Sensitivity Analysis /  Uncertainty Partitioning in PEcAn",
          "short_description": "This proposal aims to enhance PEcAn's ecological forecasting workflows by implementing Sobol' global sensitivity analysis for more accurate...",
          "description": "This proposal aims to enhance PEcAn's ecological forecasting workflows by implementing Sobol' global sensitivity analysis for more accurate uncertainty quantification. Currently, PEcAn uses one-at-a-time methods that overlook interactions between key inputs such as meteorology, soils, and vegetation. By integrating Sobol’ sensitivity analysis, this project will automate the process of uncertainty partitioning across multiple inputs, improving climate impact assessments in both natural and managed ecosystems.\n\nThe approach involves refactoring an existing Sobol’ prototype code into PEcAn's core ensemble workflow, automating sensitivity analysis, and validating the system with real-world case studies. The key deliverables include an automated Sobol' workflow integrated into PEcAn, validation reports for case studies (ED2 and SIPNET), comprehensive documentation, and successful pull requests for code integration.",
          "student_name": "Blesson Thomas",
          "code_url": null,
          "proposal_id": "JHRmO4km",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1Q4oXnAh"
        },
        {
          "title": "Database and data improvements",
          "short_description": "This project aims to decouple PEcAn’s dependency on BETYdb—a centralised PostgreSQL database used for storing trait data, yield data, and provenance...",
          "description": "This project aims to decouple PEcAn’s dependency on BETYdb—a centralised PostgreSQL database used for storing trait data, yield data, and provenance tracking—by introducing a flexible, file-based fallback system. \nThis enhancement will allow PEcAn workflows to run seamlessly in environments without PostgreSQL access, such as CI pipelines, offline setups, educational use-cases, or cloud-execution environments. The solution involves auditing current modules (query.traits.R, query.yields.R, query.citations.R, etc.) to identify database-dependent components, and systematically refactoring them to support alternative data sources like CSV, JSON, or lightweight SQLite databases.\nAdditionally, tools will be developed for syncing offline results back to BETYdb when needed, preserving compatibility. \nKey deliverables include a standalone trait dataset, workflow execution independent of PostgreSQL, improved module interoperability, and documentation updates to support adoption. This work will significantly improve PEcAn’s accessibility, portability, and usability across a broader set of environments and users.",
          "student_name": "Harsh7024",
          "code_url": null,
          "proposal_id": "6PmAOiBW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AiNuxjxW"
        }
      ]
    },
    {
      "name": "Alaska",
      "image_url": "https://summerofcode.withgoogle.com/media/org/alaska/uuu8lxevgc3jof9c.png",
      "image_background_color": "#ffffff",
      "description": "Many Traditions, One Alaska",
      "url": "https://www.uaa.alaska.edu/research",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/alaska",
      "ideas_url": "https://github.com/uaanchorage/GSoC",
      "guide_url": "https://github.com/uaanchorage/GSoC/blob/main/CONTRIBUTOR-GUIDE.md",
      "topics": [
        "deep learning",
        "neuroscience",
        "radiology",
        "heathcare",
        "Polar Science"
      ],
      "technologies": ["python", "mysql", "java", "matlab", "dicom"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://github.com/uaanchorage/GSoC/discussions",
      "twitter_url": "",
      "blog_url": "https://github.com/uaanchorage/GSoC/wiki",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Support for Logarithmic Number Systems in a Deep-Learning Framework",
          "short_description": "This project aims to integrate Logarithmic Number Systems (LNS) into a deep-learning framework, offering an alternative to traditional floating-point...",
          "description": "This project aims to integrate Logarithmic Number Systems (LNS) into a deep-learning framework, offering an alternative to traditional floating-point arithmetic. LNS simplifies multiplication and division, potentially reducing power consumption and improving efficiency in applications like deep learning, where approximate results are acceptable. However, current deep-learning frameworks, such as PyTorch and TensorFlow, are hardcoded to use floating-point (FP) operations, limiting the adoption of LNS.\n\nWe seek to bridge that gap by developing a system that supports LNS arithmetic while maintaining compatibility with PyTorch. By creating custom layers, optimizers, and benchmarking tools, the project will enable the simulation of LNS arithmetic in FP hardware for neural network training and inference. The expected outcome is a robust, open-source solution to make research and exploration of LNS in deep-learning applications easier, paving the way for future hardware implementations.",
          "student_name": "akrentz6",
          "code_url": null,
          "proposal_id": "M4o1WvbW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/syhxELgs"
        },
        {
          "title": "Developing Distributed Algorithm for Metagenomic Error Correction and Assembly",
          "short_description": "Metagenomic assembly is essential for understanding microbial communities, but existing tools often struggle with fragmented genomes, misclassified...",
          "description": "Metagenomic assembly is essential for understanding microbial communities, but existing tools often struggle with fragmented genomes, misclassified errors, and scalability issues. My goal is to develop a distributed algorithm for error correction and assembly, making it easier to process large and complex metagenomic datasets efficiently.\n\nTo achieve this, I plan to use distributed computing frameworks like Dask to improve scalability, ensuring that even terabyte-scale datasets can be handled smoothly. I also aim to design better error correction techniques to preserve low-abundance species and improve assembly accuracy. Additionally, I want to explore GPU acceleration and machine learning to refine error detection and optimize processing times.\n\nAt the core of my approach is a distributed de Bruijn graph assembly algorithm that constructs graphs from k-mers while clustering and annotating nodes based on coverage, GC content, and paired-end data. Unlike existing tools like Velvet (designed for single-genome assembly) and MetaVelvet (for metagenomic assembly), my method will efficiently break down graphs into species-specific subgraphs, reducing errors and improving the quality of the final assemblies. This will lead to better contig generation, taxonomic classification, and error correction, while also ensuring the method scales well for large datasets.\n\nDeliverables:\n1. A distributed error correction module that improves accuracy while retaining biologically important data.\n2. An optimized assembly pipeline to generate high-quality contigs and scaffolds for taxonomic and functional analysis.\n3. A novel species-aware de Bruijn graph decomposition to improve metagenomic assembly and reduce errors.\n4. Scalability improvements to ensure smooth performance across HPC clusters and cloud platforms.\n5. AI/ML enhancements to improve error correction and sequencing accuracy.\n6. Comprehensive documentation and testing to make the tool easy to use and reproducible.",
          "student_name": "Gauri Ket",
          "code_url": null,
          "proposal_id": "GaVT5Vua",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7MLG6Q1y"
        },
        {
          "title": "Beehive:  Health Metrics Framework for Behavioral Health in Alaska.",
          "short_description": "Beehive aims to be a scalable web application that enables users to capture, upload, and manage images seamlessly while ensuring automation,...",
          "description": "Beehive aims to be a scalable web application that enables users to capture, upload, and manage images seamlessly while ensuring automation, security, and efficiency. The project will feature a robust UI, a secure backend with role-based access, and cloud deployment with CI/CD integration for smooth updates.\n\nFinal Deliverables:\n- Fully functional web application\n- Secure authentication and role-based access\n- Automated CI/CD & cloud deployment\n- Testing & security validation",
          "student_name": "IshaanxGupta",
          "code_url": null,
          "proposal_id": "h6qWQxN2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VEikwBq6"
        },
        {
          "title": "Bio-Block: A Blockchain-based Data Repository and Payment Portal.",
          "short_description": "The problem I am trying to solve is less monetary benefits received by the data owners. I am creating a decentralized solution where the data owner...",
          "description": "The problem I am trying to solve is less monetary benefits received by the data owners. I am creating a decentralized solution where the data owner can upload his/her dataset and get compensated well whenever people buy the dataset. My proposed architecture is secure as well as scalable. I using 2 smart contracts and thereby making a dual chain architecture for handling dataset and payment.",
          "student_name": "Karthik Sathish",
          "code_url": null,
          "proposal_id": "Kk4UEmnf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0fukgxzJ"
        },
        {
          "title": "AWANTA: A Virtual Router based on RIPE Atlas Internet Measurements",
          "short_description": "The purpose of this project is to build AWANTA, a software virtual router that adapts Internet traffic routing in real time based on network...",
          "description": "The purpose of this project is to build AWANTA, a software virtual router that adapts Internet traffic routing in real time based on network measurements collected by RIPE Atlas.\nThe deliverables are a working virtual router that uses RIPE Atlas data to make dynamic choice of best network paths, documentation, and performance benchmarks. The project will improve Internet connectivity in areas where stable connections are important, such as in geographical locations, by providing a more flexible and efficient routing solution.",
          "student_name": "Mohamed Abdullah",
          "code_url": null,
          "proposal_id": "5zBuGw2D",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VAxzRsh8"
        },
        {
          "title": "Automated Coastline Extraction for Erosion modeling in Alaska",
          "short_description": "Alaskan coastlines are rapidly evolving due to the direct impacts of climate change. Rising sea levels, melting sea ice, and shifting environmental...",
          "description": "Alaskan coastlines are rapidly evolving due to the direct impacts of climate change. Rising sea levels, melting sea ice, and shifting environmental conditions make accurate modeling of coastal changes a pressing need. Current approaches often miss key environmental variables like tidal shifts, temperature variation, and wave energy. Moreover, manual coastline digitization remains time-consuming and inefficient, limiting scalability.\nThe aim of the project is to develop and deliver a highly accurate, automated model that can extract vectorized coastlines directly from PlanetLabs satellite imagery. This will build upon the existing pipeline and model by re-training the water detection (NDWI-based) and segmentation methods to perform well on PlanetLabs’ imagery.\nFurther aims include:\nEnsuring the extraction is robust in challenging conditions such as water shadows, buildings, artifacts, and especially steep, cliff-like coastal areas.\nIntegrating additional data sources if needed, such as SWIR data   \nthe project will also explore the use of auxiliary data sources (Landsat & sentinel) and  elevation data for addition of topographic information, to improve accuracy.\n\nUltimately producing a finished model that can process large amounts of imagery and accurately predict coastline changes over time, which is essential for improving coastal erosion forecasts in Alaska considering the effects of climate change.",
          "student_name": "Ritika133",
          "code_url": null,
          "proposal_id": "92vZvvGp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BxxPW8Ec"
        },
        {
          "title": "Making ZeroMQ A First Class Feature of Concore",
          "short_description": "Closed-loop peripheral neuromodulation systems, essential for developing adaptive therapies like vagus nerve stimulation that can be modularly...",
          "description": "Closed-loop peripheral neuromodulation systems, essential for developing\nadaptive therapies like vagus nerve stimulation that can be modularly simulated\nusing the CONTROL-CORE framework. Although CONTROL-CORE currently\nsupports file-based and shared-memory communication, these approaches have\nlimitations about distributed execution, scalability, and latency.\n\nTo overcome these obstacles, this project suggests utilizing ZeroMQ that will\ncontribute as a high-performance messaging library as another means of\ncommunication.",
          "student_name": "Saksham Gera",
          "code_url": null,
          "proposal_id": "P88ZkrJs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SRg27gwq"
        }
      ]
    },
    {
      "name": "Apache Software Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/apache-software-foundation/hq22fwtmvdfjnsh9-360.png",
      "image_background_color": "#ffffff",
      "description": "Open source software to the public free of charge",
      "url": "https://apache.org",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/apache-software-foundation",
      "ideas_url": "https://s.apache.org/gsoc2025ideas",
      "guide_url": "https://community.apache.org/gsoc/",
      "topics": ["big data", "cloud", "libraries", "other"],
      "technologies": ["c", "java", "c++"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "http://apache.org/foundation/mailinglists.html",
      "twitter_url": "https://twitter.com/theasf",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 27,
      "projects": [
        {
          "title": "Enhancing Dubbo Python Serialization",
          "short_description": "Currently, Dubbo Python exposes a serialization function interface that requires users to implement their own serialization methods. For commonly...",
          "description": "Currently, Dubbo Python exposes a serialization function interface that requires users to implement their own serialization methods. For commonly used serialization formats such as JSON and Protobuf, users must manually configure them each time. To streamline this process, we aim to build a built-in serialization layer that provides support for these common serialization formats by default.",
          "student_name": "AdityaYadav",
          "code_url": null,
          "proposal_id": "1Uh5Dsfu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CnQMbU0M"
        },
        {
          "title": "[Kvrocks] Improve the controller UI",
          "short_description": "Apache Kvrocks currently uses a minimalistic UI for its Controller, which limits usability and lacks advanced features. This project aims to revamp...",
          "description": "Apache Kvrocks currently uses a minimalistic UI for its Controller, which limits usability and lacks advanced features. This project aims to revamp the Kvrocks Controller UI with a modern frontend stack (Next.js, Tailwind CSS) enhancing both functionality and user experience.\n\nKey deliverables include:\n\nA fully redesigned, responsive UI with clear navigation and real-time cluster visualization.\n\nSupport for single sign on (SSO) authentication.\n\nInterfaces for cluster slot migration and master node failover handling.\n\nIntuitive forms and dashboards for managing instances, namespaces, and configuration.\n\nThis improved UI will make it easier for developers and administrators to monitor and control Kvrocks clusters at scale, significantly enhancing the accessibility and robustness of the platform.",
          "student_name": "Agnik Misra",
          "code_url": null,
          "proposal_id": "lSDmv1Qr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HH06mbPA"
        },
        {
          "title": "Extend multi-raft cluster mode",
          "short_description": "The current Apache Seata Server supports the Raft cluster mode, but the performance and throughput of the cluster are significantly limited due to...",
          "description": "The current Apache Seata Server supports the Raft cluster mode, but the performance and throughput of the cluster are significantly limited due to the single leader in a single Raft group. Therefore, the goal is to extend Seata Server to support multi-raft capability.",
          "student_name": "Andrew SEif",
          "code_url": null,
          "proposal_id": "PDZwUEu1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/elIJRNz8"
        },
        {
          "title": "Enhanced Interactive Pipeline Development Environment for JupyterLab",
          "short_description": "The BeamVision extension revolutionizes interactive pipeline development in JupyterLab by transforming fragmented notebook visualizations into an...",
          "description": "The BeamVision extension revolutionizes interactive pipeline development in JupyterLab by transforming fragmented notebook visualizations into an integrated workspace, as envisioned in the original design document. At its core lies a dynamic side panel that fundamentally reimagines how users inspect Apache Beam pipelines - consolidating previously scattered visualizations while preserving the documented backward compatibility requirements. This architectural shift directly addresses the project's stated pain points of vertical space consumption and redundant JavaScript code by implementing the described collapsible interface and centralized rendering system. The solution carefully balances innovation with technical constraints through a hybrid approach combining kernel-side HTML generation for reliability with frontend D3.js rendering for interactivity, both explicitly prioritized in the project's technical specifications. Beyond basic visualization, the implementation delivers on the documented cluster management capabilities, providing seamless Flink/Dataproc integration exactly as outlined in the side panel use cases. Every component maintains strict adherence to the original vision - from the multi-tab comparison interface described in the design workflow to the incremental data loading strategy for large datasets. By systematically executing the documented requirements without introducing unsupported features, BeamVision transforms the proposal's vision of \"better UX when exploring pipeline states\" into a production-ready reality while laying foundations for future extensibility through the approved plugin architecture. The result is a purpose-built environment that finally unlocks Apache Beam's full potential within JupyterLab, precisely as the project architects intended.",
          "student_name": "Canyu Chen",
          "code_url": null,
          "proposal_id": "vxxey6Pd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xswqwNdM"
        },
        {
          "title": "Implement Agentic GraphRAG Architecture for HugeGraph",
          "short_description": "This project aims to transform HugeGraph-LLM's current GraphRAG system into an intelligent agent-based architecture that dynamically adapts to query...",
          "description": "This project aims to transform HugeGraph-LLM's current GraphRAG system into an intelligent agent-based architecture that dynamically adapts to query intents. The existing system suffers from rigid workflows, coupled execution resources, and limited feedback mechanisms, causing inefficiency and high overhead in complex scenarios.\nI propose a three-layer solution:\nDynamic Awareness Layer: Implementing an LLM-based intent classifier that categorizes queries into complexity levels (L1-L4+) with >90% accuracy, using feature extraction and caching to achieve millisecond-level response time.\nTask Orchestration Layer: Creating a preemptive scheduling mechanism that prioritizes critical queries and isolates resources, preventing long-running operations from blocking high-priority tasks.\nConcurrent Execution Engine: Decoupling the RAG pipeline into independent operations with parallel execution capabilities and automatic degradation strategies when sub-operations fail.\nDeliverables include:\nAn intent classification system with millisecond-level matching\nA flexible task orchestration framework with dynamic routing\nA concurrent execution engine with intelligent fallback mechanisms\nA dialogue memory management module for context tracking\nA semi-automatic schema generator for graph model creation\nGraph algorithm enhancements for optimized knowledge retrieval\nComprehensive documentation and performance benchmarks\nThis architecture will significantly improve system performance (40% faster response for simple queries), increase throughput (30% improvement under high load), and enhance resource utilization while maintaining robust error handling.",
          "student_name": "Chaomei Yan",
          "code_url": null,
          "proposal_id": "7o7B4LC9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZVrEnq6S"
        },
        {
          "title": "Infrastructure Automation and Cloud Resource Management for Apache Beam",
          "short_description": "Apache Beam's test infrastructure is complex and difficult to manage manually. This project aims to improve resource management and security by...",
          "description": "Apache Beam's test infrastructure is complex and difficult to manage manually. This project aims to improve resource management and security by introducing Infrastructure as Code (IaC) and automation tools.\n\nThe main objectives are:\n\n- GCP Resource Cleaner: Identify and safely delete unused or orphaned cloud resources.\n- Terraform Modules: Define and manage Beam's infrastructure in a declarative, reproducible way.\n- Key Management Utility: Securely create, rotate, and audit service account keys.\n- Monitoring Tools: Enforce security policies and trigger alerts based on GCP audit logs.",
          "student_name": "Enrique Calderon",
          "code_url": null,
          "proposal_id": "gDlovYdT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QRKMhW67"
        },
        {
          "title": "Overhaul Charts in Streampipes",
          "short_description": "Apache StreamPipes is a platform that allows you to capture, modify and display IoT data streams. But currently, the part of displaying data is very...",
          "description": "Apache StreamPipes is a platform that allows you to capture, modify and display IoT data streams. But currently, the part of displaying data is very limited. There are not many types of charts, and those that are implemented, have many missing options and features. The underlying  library ECharts can do more. This project aims to add these missing functions.",
          "student_name": "Florian G",
          "code_url": null,
          "proposal_id": "6ztFEkSd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/muN9dJS6"
        },
        {
          "title": "Airavata Research Catalog Local Agent",
          "short_description": "The Airavata Cybershuttle Research Catalog is a web platform that enables researchers to share and run Jupyter Notebooks, GitHub repositories,...",
          "description": "The Airavata Cybershuttle Research Catalog is a web platform that enables researchers to share and run Jupyter Notebooks, GitHub repositories, datasets, and scientific models. It supports project creation by combining resources for collaborative, reproducible research, with direct cloud execution of notebooks and models.\n\nTo enhance flexibility and performance, a desktop application is being developed:\n\nWeb Research Catalog\n- Audience: General users\n- Pros: No installation required; easy access to shared resources\n- Cons: Limited by cloud compute resources\n\nLocal Research Catalog (Desktop App)\n- Audience: Power users needing high performance\n- Pros:\n    - Utilizes local machine resources (GPU, RAM) for better performance\n    - Offline access to notebooks, datasets, and models\n    - Integration with local tools and file systems\n    - Seamless synchronization with the web catalog when online\n    - Runs JupyterLab and VSCode sessions locally without needing Docker or external dependencies\n\nThe local agent is designed to be lightweight, extensible, and user-friendly, with built-in support for running scientific workflows entirely from a desktop environment.",
          "student_name": "Ganning Xu",
          "code_url": null,
          "proposal_id": "ylxd4XzS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dBWuhuqs"
        },
        {
          "title": "Unlocking the Power of Metadata in Apache Seata From Load Balancing to Advanced Routing",
          "short_description": "Apache Seata's current service discovery relies on registries like Nacos and Zookeeper, which lack support for custom metadata. This limits the...",
          "description": "Apache Seata's current service discovery relies on registries like Nacos and Zookeeper, which lack support for custom metadata. This limits the flexibility of client-side load balancing. \nThis project enhances Seata by adding metadata support to the registry module, enabling advanced load balancing strategies based on server-side attributes like weight and region. The result is improved resource utilization, enhanced scalability, and better overall system performance for Seata deployments .",
          "student_name": "Guanlin Wu",
          "code_url": null,
          "proposal_id": "NLsLIfoz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jI0IGDJg"
        },
        {
          "title": "Optimizing Apache RocketMQ's POP Orderly Consumption Process",
          "short_description": "Problem: In Apache RocketMQ 5.x POP orderly consumption, when a PushConsumer's ReceiveMessage response is lost due to network issues, the client...",
          "description": "Problem:\nIn Apache RocketMQ 5.x POP orderly consumption, when a PushConsumer's ReceiveMessage response is lost due to network issues, the client generates a new attemptId for the next pull. However, the Broker blocks this new request because it still holds the original attemptId as active until its invisibleTime expires, causing consumption stalling.\n\nSolution:\n1. Enhance client-side logic (ProcessQueueImpl) to add an application-level timer for each ReceiveMessage request\n2. If timer expires without receiving response or definitive gRPC error:\n   • Client assumes response was lost\n   • Reuses original attemptId (instead of generating new one) for retry\n3. Leverages Broker's existing capability to handle reentrant requests with same attemptId\n\nDeliverables:\n• Modified Java client code (rocketmq-clients-java)\n• Comprehensive tests (unit & integration)\n• Updated documentation if needed\n• Pull Requests to relevant RocketMQ repos\n\nKey benefit: Prevents consumption stalls by ensuring retries use same attemptId when responses are lost.",
          "student_name": "Kingcide",
          "code_url": null,
          "proposal_id": "KkmrNbGn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Nv98AHeF"
        },
        {
          "title": "Airavata Django to React Migration: Admin Functionality",
          "short_description": "This proposal aims to modernize Apache Airavata's administrative features by migrating the current Django-based portal to a React based single page...",
          "description": "This proposal aims to modernize Apache Airavata's administrative features by migrating the current Django-based portal to a React based single page application. This migration includes implementing features crucial to admin functionality, such as workspaces, groups, and settings.",
          "student_name": "Krish Katariya",
          "code_url": null,
          "proposal_id": "hgpeh0sh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/O22MG1px"
        },
        {
          "title": "Apache Mahout Refactoring the Website",
          "short_description": "The project Apache Mahout Refactoring the Website aims to modernize the site by deprecating old technologies and old blogs/posts, also the Qumat...",
          "description": "The project Apache Mahout Refactoring the Website aims to modernize the site by deprecating old technologies and old blogs/posts, also the Qumat Section needs to be prioritised. The UI/UX improvements are needed which will be done through a structured format as detailed in the proposal. I have already contributed in Mahout and have a good level of understanding of the project.",
          "student_name": "Krishna Dave",
          "code_url": null,
          "proposal_id": "uu9W0QnD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SvnaDehF"
        },
        {
          "title": "Apache SkyWalking GSOC 2025 Proposal: Cloud Storage Integration for BanyanDB",
          "short_description": "Apache SkyWalking BanyanDB currently supports only local file systems through the remote.FS interface, which limits its flexibility in cloud-native...",
          "description": "Apache SkyWalking BanyanDB currently supports only local file systems through the remote.FS interface, which limits its flexibility in cloud-native environments. This project aims to extend remote.FS by implementing support for major object storage services including AWS S3, Google Cloud Storage, and Azure Blob Storage. Each backend will fully comply with the remote.FS interface to ensure seamless integration.\n\nThe implementation will include cloud-specific optimizations such as multipart uploads, resumable downloads, and SHA-256 checksum validation to ensure data integrity. Additionally, the system will handle rate limiting, transient errors, and support configurable retry strategies. The project will also include a unified error mapping layer and Prometheus-based monitoring metrics.\n\nDeliverables:\n\t•\tProduction-ready remote.FS implementations for AWS S3, GCS, and Azure Blob Storage.\n\t•\tUnit and integration tests using tools like GoMock and LocalStack.\n\t•\tLogging and observability features with structured logs and Prometheus metrics.\n\t•\tComplete documentation and setup guides.\n\t•\tCommunity demo and contribution-ready pull requests.\n\nThis enhancement will enable seamless and secure cloud deployments of BanyanDB, significantly reducing operational complexity while improving scalability and reliability.",
          "student_name": "Lihan",
          "code_url": null,
          "proposal_id": "4CFPj7h8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MZsmKHO2"
        },
        {
          "title": "Dubbo triple protocol for go language implementation",
          "short_description": "This proposal aims to implement HTTP/3 communication for Dubbo Triple in the Go language environment, enhancing the connection management...",
          "description": "This proposal aims to implement HTTP/3 communication for Dubbo Triple in the Go language environment, enhancing the connection management capabilities of the Triple protocol in dubbo-go. The proposal will address the compatibility issues between Triple communication in dubbo-go and dubbo-java by implementing keep-alive functionality at the Triple protocol layer. Additionally, the proposal plans to organize and standardize the error codes of the Triple protocol and output necessary log information.\n\nBy developing a Triple HTTP/3 server and client, seamless and high-performance communication between Dubbo Java and Dubbo Go over the HTTP/3 protocol will be achieved. We will design a connection pool to effectively manage Triple connections and ensure the validity of connections through a PING-PONG mechanism between the server and client, thus realizing keep-alive functionality. Furthermore, the error codes of the Triple protocol will be standardized according to Dubbo Java's standards to facilitate developers in obtaining detailed log information during the debugging process.\n\nThe final deliverable of the proposal is to achieve high-performance, barrier-free communication between Dubbo Go and Dubbo Java through the Triple protocol, ensuring perfect compatibility and support for interaction via the HTTP/3 protocol. Users will be able to enjoy flexible keep-alive functionality and improve debugging efficiency through standardized error codes.",
          "student_name": "marsevilspirit",
          "code_url": null,
          "proposal_id": "OlHvaxqb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iqigMBLJ"
        },
        {
          "title": "NuttX Support for IEEE 802.3-2022 10BASE-T1x Ethernet using Open Aliance SPI MAC-PHYs",
          "short_description": "This project aims to add support for IEEE 802.3-2022 10BASE-T1x Ethernet in NuttX using MAC-PHY devices with the Open Alliance SPI interface. These...",
          "description": "This project aims to add support for IEEE 802.3-2022 10BASE-T1x Ethernet in NuttX using MAC-PHY devices with the Open Alliance SPI interface. These low-cost Ethernet solutions are well-suited for embedded systems, aligning with NuttX’s target use cases.\n\nThe core deliverables include implementing a reusable driver infrastructure for Open Alliance 10BASE-T1x Serial Interface-compatible MAC-PHYs, with initial focus on the NCV7410 driver, supporting PLCA configuration, porting the driver to the ARM-based platform, and developing a test application. An optional goal is to include support for additional devices (e.g., ADIN1110) following the specification.",
          "student_name": "michal matias",
          "code_url": null,
          "proposal_id": "ENnHjBjF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bbWye78I"
        },
        {
          "title": "Beam ML Vector DB/Feature Store Integrations - Mohamed Awnallah GSoC Proposal",
          "short_description": "The goal of this project is to enhance Apache Beam’s Python SDK by developing connectors for vector databases like Pinecone, Milvus and feature...",
          "description": "The goal of this project is to enhance Apache Beam’s Python SDK by developing connectors for vector databases like Pinecone, Milvus and feature stores like Tecton. These integrations will improve support for ML use cases such as Retrieval-Augmented Generation (RAG) and feature engineering. By bridging Beam with these systems, this project will attract more users, particularly in the ML community.",
          "student_name": "Mohamed Awnallah",
          "code_url": null,
          "proposal_id": "hkt6vrXx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/X32yGjqz"
        },
        {
          "title": "Replicator and Dependency Injection Enhancements for Lucene.NET",
          "short_description": "Lucene.NET’s current replication system lacks seamless integration with ASP.NET Core and is not modular enough for use across diverse application...",
          "description": "Lucene.NET’s current replication system lacks seamless integration with ASP.NET Core and is not modular enough for use across diverse application types like Windows services or cloud-native tools. This proposal focuses on enhancing the `Lucene.Net.Replicator` by introducing full support for ASP.NET Core Dependency Injection (DI), simplifying configuration to a one-liner, and enabling real-time replication using technologies like WebSockets or gRPC. Additionally, it aims to modularize replication components to support non-web environments and build robust unit tests and real-world examples.\n\nDeliverables will include:\n- DI-based configuration system for easier integration in ASP.NET Core and beyond.\n- Real-time replication architecture replacing polling.\n- Support for Windows services, CLI tools, and distributed systems.\n- Comprehensive testing and documentation.\n\nThese changes will make Lucene.NET replication more developer-friendly, scalable, and production-ready.",
          "student_name": "NehanKhan Pathan",
          "code_url": null,
          "proposal_id": "wlM5Hsy9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DWGSyADV"
        },
        {
          "title": "[Airavata] - Designing and Developing the Model and Data Catalog Interfaces for the Apache Airavata",
          "short_description": "In the current research ecosystem, datasets and trained machine learning models (e.g., LLMs, CNNs, etc.) are often scattered across various...",
          "description": "In the current research ecosystem, datasets and trained machine learning models (e.g., LLMs, CNNs, etc.) are often scattered across various repositories and platforms, making discovery and reuse inefficient. This project proposes the design and development of a unified user interface system within Apache Airavata to consolidate and manage both datasets and models in one accessible platform. The contribution is aligned with the ticket: Come up with UX designs for Airavata data and model catalog. Through modern UI/UX design and seamless integration, this system will allow researchers and developers to find, preview, download, and reuse datasets and AI models effortlessly.",
          "student_name": "Nipuna Bandara",
          "code_url": null,
          "proposal_id": "YTEJoXnB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/t1hzdmFS"
        },
        {
          "title": "Enhancing Connection Pool Management and Visualization for Apache Seata’s AT/XA Transaction Modes",
          "short_description": "This project aims to enhance connection pool management in Apache Seata’s AT/XA transaction modes by introducing a unified, user-friendly monitoring...",
          "description": "This project aims to enhance connection pool management in Apache Seata’s AT/XA transaction modes by introducing a unified, user-friendly monitoring and configuration system.\n\nCurrently, Seata lacks a visual and configurable interface for observing and managing internal connection pools, which are essential for maintaining performance and stability in distributed transaction processing. This project addresses that gap by developing a new console dashboard that displays real-time connection pool metrics (such as active, idle, and total connections) and provides controls for adjusting parameters like minimum/maximum connections, timeouts, and keep-alive durations.\n\nThe solution will include front-end Vue components, back-end Spring Boot APIs, and a service layer to handle the core business logic. It will also include thorough unit and integration testing to ensure reliability and correctness.\n\nDeliverables include:\n1. A real-time dashboard for connection pool monitoring\n2. A dynamic console interface for configuration management\n3. Backend REST APIs and business logic for pool metrics and settings\n4. User and developer documentation\n5. Comprehensive unit and integration tests",
          "student_name": "Oscar Cheng",
          "code_url": null,
          "proposal_id": "QbFiDXtf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EPXz1kVe"
        },
        {
          "title": "GSoC Proposal: AI Agent for Apache HertzBeat with MCP",
          "short_description": "This proposal outlines the development of an AI Agent for Apache HertzBeat using the Model Context Protocol (MCP), enabling natural language...",
          "description": "This proposal outlines the development of an AI Agent for Apache HertzBeat using the Model Context Protocol (MCP), enabling natural language interaction with monitoring capabilities. The project will implement an MCP-compliant server and client architecture integrated with SpringAI, along with a chat-based frontend for the HertzBeat dashboard. This enhancement will make HertzBeat's monitoring features more accessible while serving as a reference implementation for AI integration in monitoring tools.",
          "student_name": "sarthakeash",
          "code_url": null,
          "proposal_id": "1nKfLzUk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MZlJ0wnB"
        },
        {
          "title": "Add more traffic management rule support for Dubbo Proxyless Mesh",
          "short_description": "Dubbo Proxyless mode refers to Dubbo directly communicating with the control plane and achieving capabilities such as Service Discovery and Service...",
          "description": "Dubbo Proxyless mode refers to Dubbo directly communicating with the control plane and achieving capabilities such as Service Discovery and Service Governance through the xDS protocol.",
          "student_name": "Shihao Hu",
          "code_url": null,
          "proposal_id": "PMdSAaxS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qlaBuhvs"
        },
        {
          "title": "Firmware Upgrades over Silicon-Heaven Protocol for NXboot Demonstrated on pysimCoder",
          "short_description": "The primary goal of this project is to develop a practical firmware updater for NuttX that leverages the NXBoot bootloader. The updater will transfer...",
          "description": "The primary goal of this project is to develop a practical firmware updater for NuttX that leverages the NXBoot bootloader. The updater will transfer firmware over the Silicon Heaven (SHV) protocol, a remote procedure call system.\n\nAnother key objective is to implement SHV support for memory-constrained devices and adapt it for integration into NuttX, making it available for any application that utilizes SHV for remote procedure calls.\n\nThe firmware updater will also be integrated into the pysimCoder project—a rapid control prototyping suite capable of generating NuttX-compatible code for control applications. This integration will simplify the development workflow and make rapid control prototyping more convenient.",
          "student_name": "Štěpán Pressl",
          "code_url": null,
          "proposal_id": "pxVdkupp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/whPaBXY8"
        },
        {
          "title": "Identification and Generation of Computational Experiments in AIRAVATA",
          "short_description": "In scientific computing environments like Apache Airavata, users routinely configure and execute complex computational experiments involving multiple...",
          "description": "In scientific computing environments like Apache Airavata, users routinely configure and execute complex computational experiments involving multiple parameters, workflows, and external resources. Over time, a large corpus of these experiments accumulates — each capturing valuable insights, design patterns, and implicit best practices. Once identified, these templates can be used to generate new suggested experiments—both within and beyond previously explored areas. This facilitates exploration and accelerates the scientific experimentation process.",
          "student_name": "svaibhav",
          "code_url": null,
          "proposal_id": "HCNq9qWy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/haSb0RSS"
        },
        {
          "title": "Enhancing Apache DolphinScheduler with Generalized OIDC Authentication",
          "short_description": "1. Problem: Apache DolphinScheduler currently lacks a generalized, configuration-driven mechanism to integrate with any standard OpenID Connect...",
          "description": "1. Problem:\nApache DolphinScheduler currently lacks a generalized, configuration-driven mechanism to integrate with any standard OpenID Connect (OIDC) Identity Provider (IdP), unlike its specific support for options like Casdoor. This limits its adoption in enterprise environments that require integration with various IdPs such as Keycloak, Okta, or Azure AD.   \n\n2. Solution:\nThe proposal aims to enhance Apache DolphinScheduler by adding generalized OIDC authentication support as a new, pluggable authentication type. This will be achieved by:   \n\n• Leveraging the existing Nimbusds OAuth2 library already present in the project, avoiding large new dependencies.   \n• Implementing backend changes using Java, Spring Security, and the Nimbus library. This includes loading OIDC provider configurations, integrating with the Spring Security filter chain, handling the OIDC Authorization Code Flow, and mapping/provisioning users against the existing database schema without requiring schema modifications.   \n• Modifying the dolphinscheduler-ui Vue.js frontend to dynamically display login buttons for configured OIDC providers and initiate the OIDC login flow.   \n\n3. Deliverables:\nThe project will deliver the following:   \n\n• Backend Java code for generalized OIDC support.   \n• Frontend Vue.js code for UI modifications.   \n• New configuration sections and properties for OIDC.\n• Comprehensive Unit tests (JUnit/Mockito) for the backend logic.   \n• End-to-End (E2E) tests validating the full login flow and user provisioning.   \n• A new documentation page explaining configuration and usage.",
          "student_name": "tusaryan",
          "code_url": null,
          "proposal_id": "ICXVC2Dg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RoNSW60Q"
        },
        {
          "title": "Enhancing CloudMonkey User Experience Through Intelligent Autocompletion",
          "short_description": "This project aims to significantly improve the usability of CloudMonkey, the official CLI for Apache CloudStack, by enhancing its autocompletion...",
          "description": "This project aims to significantly improve the usability of CloudMonkey, the official CLI for Apache CloudStack, by enhancing its autocompletion functionality. Currently, many API parameters lack intelligent suggestions, especially for enumerated (enum) values, which leads to increased errors and reduced developer productivity. The proposed solution involves extending the CloudStack API framework to expose enum metadata, integrating it into CloudMonkey’s autocompletion engine, and building a dynamic, context-aware suggestion system. By doing so, the CLI will provide valid, inline suggestions for fixed-choice parameters, reducing input errors and streamlining user interactions with CloudStack.",
          "student_name": "Vedansh_s",
          "code_url": null,
          "proposal_id": "sVxnLBuR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/C6ZvliqD"
        },
        {
          "title": "Add Suricata integration to CloudStack.",
          "short_description": "Apache CloudStack currently lacks deep security capabilities. It relies on Layer 3/4 Access Control Lists (ACLs), which cannot inspect...",
          "description": "Apache CloudStack currently lacks deep security capabilities. It relies on Layer 3/4 Access Control Lists (ACLs), which cannot inspect application-level (Layer 7) traffic or detect advanced threats like SQL injection or XSS.\n\nExisting workarounds involve third-party firewalls (e.g., PFsense, FortinetVM), but they come with limitations such as static routing issues, lack of tenant isolation, and complexity in auto-scale environments.",
          "student_name": "Veds",
          "code_url": null,
          "proposal_id": "yjbUehI9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cKbZO2vr"
        },
        {
          "title": "Modernizing RocketMQ Dashboard: UI Refactor, Performance Optimization & Security Enhancements",
          "short_description": "Problem: The current RocketMQ Dashboard suffers from outdated UI design, slow API responses, security vulnerabilities (e.g., plaintext passwords),...",
          "description": "Problem:\nThe current RocketMQ Dashboard suffers from outdated UI design, slow API responses, security vulnerabilities (e.g., plaintext passwords), and incomplete documentation. These issues hinder usability, performance, and adoption.\nSolution:\nI propose a comprehensive refactor to modernize the dashboard by:\nFrontend:  Replacing AngularJS/Bootstrap with modular components (e.g., ECharts for dynamic charts) and fixing misaligned UI elements.\nBackend:  Optimizing APIs via caching and async processing to reduce latency (e.g., topic queries from 30s to <1s).\nSecurity: Implementing Spring Security with BCrypt encryption, RBAC, and audit logs.\nInfrastructure: Updating Docker images and improving documentation with quick-start guides.\n\nDeliverables:\nModernized UI with responsive design and interactive charts.\nOptimized APIs with reduced response times.\nSecure authentication (RBAC + audit logging).\nUpdated Docker deployment and comprehensive documentation.",
          "student_name": "许億驰",
          "code_url": null,
          "proposal_id": "nPWTPVdi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gkHyVAIG"
        }
      ]
    },
    {
      "name": "Haskell.org",
      "image_url": "https://summerofcode.withgoogle.com/media/org/haskellorg/ivy7hfguqhoz8onp-360.png",
      "image_background_color": "#ffffff",
      "description": "Purely functional programming language",
      "url": "https://haskell.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/haskellorg",
      "ideas_url": "https://summer.haskell.org/ideas.html",
      "guide_url": "https://summer.haskell.org/tips.html",
      "topics": [
        "compilers",
        "programming languages",
        "functional programming",
        "programming tools"
      ],
      "technologies": ["haskell", "ghc"],
      "irc_channel": "https://www.haskell.org/irc/",
      "contact_email": "mailto:committee@haskell.org",
      "mailing_list": "https://discourse.haskell.org/",
      "twitter_url": "https://twitter.com/HaskellOrg",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/HaskellOrg/",
      "num_projects": 4,
      "projects": [
        {
          "title": "Documenting and improving cmm",
          "short_description": "Cmm is the intermediate representation and code generation layer used by the Glasgow Haskell Compiler (GHC). It is written in Haskell and sits...",
          "description": "Cmm is the intermediate representation and code generation layer used by the Glasgow Haskell Compiler (GHC). It is written in Haskell and sits between GHC's high-level STG output and low-level native or LLVM code generation.\n\n Cmm enables multiple backends: a fast native code generator and a more sophisticated LLVM backend. In principle, this design allows users to choose between faster compilation or better runtime performance.\n\nHowever, like other parts of GHC, the documentation for Cmm is sparse, fragmented, and in many places outdated. For example, references to Static Single Assignment (SSA) form often describe it as \"future work,\" even though there has been a prior attempt at implementing it. There is no cohesive documentation to explain what was done, how the backend currently works, or how one might extend it. This is an obstacle to contributors, researchers, and users alike.\n\nIn practice, the LLVM backend suffers from long compile times and a fragile implementation. It depends on a custom LLVM AST that is hard to maintain, and requires users to install a specific, outdated version of LLVM. Meanwhile, the native backend is fast but unable to fully optimize performance-critical code.\n\nThis project proposes to address these issues in stages:\n1. Document the Cmm pipeline, the backend interfaces, and existing SSA infrastructure.\n2. Then, depending on the mentor's and community's feedback, pursue one of two improvement paths:",
          "student_name": "Diego Antonio Rosario Palomino",
          "code_url": null,
          "proposal_id": "SB4X5EZF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BvobfRuf"
        },
        {
          "title": "Language Server Support for cabal.project Files",
          "short_description": "This project proposes to implement a new plugin for the Haskell Language Server (HLS) that adds full IDE-style support for cabal.project files. This...",
          "description": "This project proposes to implement a new plugin for the Haskell Language Server (HLS) that adds full IDE-style support for cabal.project files. This includes completions, diagnostics, and eventually syntax highlighting for fields, file paths, and enumerated values. The goal is to provide a consistent developer experience for cabal.project files, mirroring the support already available for .cabal files.",
          "student_name": "Rachel M",
          "code_url": null,
          "proposal_id": "P79bdJOq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dDJUUPt8"
        },
        {
          "title": "Google Summer of Code 2025 Proposal: CodeWorld GHC Update by Sreenadh Singamaneni",
          "short_description": "CodeWorld is a widely used browser-based learning platform where students can learn Haskell interactively through browsers. However, it is presently...",
          "description": "CodeWorld is a widely used browser-based learning platform where students can learn Haskell interactively through browsers. However, it is presently based on the outdated GHCJS compiler, which is difficult to maintain and incompatible with recent GHC improvements. My project focuses on solving this critical issue by porting CodeWorld to recent versions of GHC, which natively support JavaScript and WebAssembly compilation.\nMy approach is to refactor the build system to support GHC's new backends, migrate the runtime and foreign function interfaces (FFI) to make integration easier, and achieve feature parity with thorough testing. With previous experience in compiler development (ANTLR/Java), implementation of interpreters in Haskell, and runtime management in complex networking projects, I have a strong foundation for approaching these efficiently.\n\nDeliverables:\n\nA deployable version of CodeWorld that can be executed using GHC's JavaScript/WebAssembly backend.\n\nModern build scripts, runtime changes, and JavaScript/WASM integration.\n\nFeature parity tests in-depth (interactive graphics, animations, games).\n\nMaintainability optimizations and performance improvements.\n\nDocumentable documentation for future developers.\n\nWhen time permits, I will also make CodeWorld's programming language and the requirements checker tool more educational.",
          "student_name": "Sreenadh Singamaneni",
          "code_url": null,
          "proposal_id": "C5wysqEH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VdMQhyaZ"
        },
        {
          "title": "Qualified Imports and Alias Resolution in Liquid Haskell",
          "short_description": "This proposal aims to enhance Liquid Haskell’s name resolution mechanism by enabling qualified imports for both (logic) type and predicate aliases....",
          "description": "This proposal aims to enhance Liquid Haskell’s name resolution mechanism by enabling qualified imports for both (logic) type and predicate aliases. Currently, ambiguities arise when identical aliases are exported from multiple modules, adversely affecting both user experience and internal processing. The proposed solution will modify the internal alias representation and update all relevant use sites to construct fully qualified names, thereby allowing users to disambiguate identical aliases. Additionally, the project will conduct a detailed study of predicate alias use cases to evaluate the potential deprecation of these aliases in favor of the overlapping functionality provided by inline annotations. The primary deliverables include merged pull requests implementing qualified import support for type and predicate aliases, comprehensive documentation, and a blog post detailing design decisions, implementation processes, and the outcomes of the predicate alias study.",
          "student_name": "Xavier Góngora",
          "code_url": null,
          "proposal_id": "rRRfZzRj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ALSN6wwr"
        }
      ]
    },
    {
      "name": "Kubeflow",
      "image_url": "https://summerofcode.withgoogle.com/media/org/kubeflow/uqphmd1y7opxpjim-360.png",
      "image_background_color": "#ffffff",
      "description": "The Machine Learning Toolkit for Kubernetes (AI)",
      "url": "https://kubeflow.org",
      "category": "Infrastructure and cloud",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/kubeflow",
      "ideas_url": "https://www.kubeflow.org/events/gsoc-2025/",
      "guide_url": null,
      "topics": ["machine learning", "kubernetes", "AI/ML", "generative AI"],
      "technologies": ["python", "go", "kubernetes", "typescript", "YAML"],
      "irc_channel": "https://cloud-native.slack.com/archives/C0742LBR5BM",
      "contact_email": "mailto:https://groups.google.com/g/kubeflow-discuss",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/kubeflow",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 11,
      "projects": [
        {
          "title": "Project 7: GPU Testing for LLM Blueprints",
          "short_description": "This project aims to use self-hosted runners to run GPU-intensive tasks like LLM blueprint or (planned) AI Playground. The necessary infra is...",
          "description": "This project aims to use self-hosted runners to run GPU-intensive tasks like LLM blueprint or (planned) AI Playground. The necessary infra is provided by Oracle, plan is to use Oracle Kubernetes Engine (OKE) with NVIDIA GPUs for this task. Any code or sample that requires GPU-intensive resources will be transferred to OKE infra instead of generic GitHub infra for faster and more efficient execution.\nFor now, the idea is to have a specific policy that whenever any Jupyter Notebook code will be added to a trainer/examples/pytorch/** folder (e.g., in trainer/example/pytorch/image-generation/sample.ipynb), that action is transferred to OKE infra by the GitHub self runner. For security reasons, this process will require manual approval from one of the maintainers to trigger the self-runner build. I will set up the GitHub workflow to monitor changes in the respective folder. Once approved, the CI action will execute the code using the GitHub self-runner on the OKE infrastructure. Additionally, we will set up a dashboard for monitoring and metrics to understand usage patterns and identify bottlenecks.\nThe scope of this project is set up on OKE, but theoretically, this is platform-agnostic; it can be deployed on any Kubernetes cluster with sufficient GPU resources.",
          "student_name": "Akash Jaiswal",
          "code_url": null,
          "proposal_id": "24VdSJ1G",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fwZkvPr0"
        },
        {
          "title": "Project 5: JupyterLab Plugin for Kubeflow",
          "short_description": "This project addresses the issue of fragmented tools within the Kubeflow ecosystem, specifically Elyra, Kale, and Jupyter Scheduler, which...",
          "description": "This project addresses the issue of fragmented tools within the Kubeflow ecosystem, specifically Elyra, Kale, and Jupyter Scheduler, which complicates workflows for data scientists. The proposal aims to solve this by developing a unified JupyterLab plugin for Kubeflow. This plugin will consolidate and modernize the functionalities of the existing tools, providing a cohesive environment for developing, testing, and deploying machine learning workflows directly from JupyterLab.\nThe plugin will achieve this by implementing seamless integration with Kubeflow Pipelines. Users will be able to convert notebook cells to pipeline steps, define and visualize pipeline workflows, submit pipeline runs, and monitor their execution status, all within JupyterLab. The plugin will be built with a modular architecture, including Python backend components for interacting with Kubeflow Pipelines and parsing notebooks, and TypeScript/React frontend components for the user interface.\nThe key deliverables of this project are:\n• A unified JupyterLab plugin architecture consolidating Elyra, Kale, and Jupyter Scheduler functionalities.\n• Seamless integration with Kubeflow Pipelines, enabling notebook-to-pipeline conversion, workflow definition and visualization, pipeline submission, and monitoring within JupyterLab.\n• A user-friendly UI for pipeline development and management using modern React components.\n• Initial integration with Kubeflow Notebooks for easier notebook provisioning.\n• Comprehensive documentation and usage examples.\n• A robust testing framework to ensure plugin reliability, including unit tests, integration tests, user acceptance testing, continuous integration, and compatibility testing.\nThis unified plugin is expected to significantly improve workflow efficiency for data scientists and ML engineers by bridging the gap between interactive development and production-grade ML infrastructure.",
          "student_name": "AmritKumar",
          "code_url": null,
          "proposal_id": "8JS2QiBt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vtdQwx7U"
        },
        {
          "title": "Project3:  Istio CNI and Ambient Mesh for Secure Kubeflow Deployments",
          "short_description": "This project aims to enhance Kubeflow's security posture by implementing Istio CNI by default and providing an optional Ambient Mesh configuration....",
          "description": "This project aims to enhance Kubeflow's security posture by implementing Istio CNI by default and providing an optional Ambient Mesh configuration. \n\nThe work involves securing the service mesh, creating controllers for HTTPRoute and AuthorizationPolicies, updating manifests to support these new features, securing KServe with proper authentication protocols, and making Kubeflow rootless by default. \n\nThe project will also introduce performance benchmarking so that users can compare between the three available modes: Istio CNI (default), Istio init containers, and Ambient Mesh.",
          "student_name": "Ayush Gupta (Madmecodes)",
          "code_url": null,
          "proposal_id": "6yn5QybT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WAHCCi8V"
        },
        {
          "title": "Batch Processing Gateway Integration",
          "short_description": "Jupyter Notebooks provide a powerful, interactive environment widely used by data scientists and ML engineers for exploratory analysis,...",
          "description": "Jupyter Notebooks provide a powerful, interactive environment widely used by data scientists and ML engineers for exploratory analysis, visualization, and prototyping. However, as the scale and complexity of data workloads grow, running computations locally within notebook pods becomes inefficient and limiting.\r\n\r\nThe Batch Processing Gateway integrates with Kubeflow Spark Operator to manage the full lifecycle of Spark applications in a cloud-native environment. It enables distributed computation at scale and automates job deployment, resource management, and status tracking using Kubernetes Custom Resource Definitions (CRDs).\r\n\r\nThis project proposes integrating Jupyter Notebooks and the Batch Processing Gateway, enabling it to manage the notebook kernel lifecycle of remote Spark kernels as distributed Spark applications. This decouples computation from the notebook pod and scales Spark workloads efficiently in Spark.\r\n\r\nTo achieve this, we will introduce Batch Processing Gateway to manage the lifecycle of Notebook kernels and introduce Jupyter Enterprise Gateway (JEG) for runtime communication to enable Jupyter messaging protocol for notebook cell execution during runtime.",
          "student_name": "Fellipe Resende",
          "code_url": null,
          "proposal_id": "dk4027eG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zRPtxGBI"
        },
        {
          "title": "Project 2: Kserve Models Web App",
          "short_description": "The KServe Models Web App is a crucial front-end interface for managing ML models deployed through KServe, a core component of Kubeflow. However, the...",
          "description": "The KServe Models Web App is a crucial front-end interface for managing ML models deployed through KServe, a core component of Kubeflow. However, the application has become outdated, with deprecated dependencies and technical debt. This project aims to modernize and enhance the app by upgrading its tech stack, resolving open issues, and implementing a robust CI/CD pipeline with GitHub Actions. \n\nKey improvements include regression testing with Cypress, model editing capabilities, and synchronization with KServe 0.14+. Additionally, the project explores migrating the app from kserve/kserve-models-web to kubeflow/kserve-model-ui for better integration. \n\nThe deliverables include a stabilized, modernized codebase, improved user experience for ML engineers, and streamlined contributor documentation. This effort will reduce operational overhead, enhance usability, and support Kubeflow’s mission of making ML workflows simpler and more scalable.",
          "student_name": "Harshit Nayan",
          "code_url": null,
          "proposal_id": "dvpTePex",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/K9iend9b"
        },
        {
          "title": "Project 1: Kubeflow Platform Enhancements",
          "short_description": "This project aims to enhance Kubeflow’s infrastructure by productionizing the SeaweedFS proof of concept as a secure alternative to MinIO, improving...",
          "description": "This project aims to enhance Kubeflow’s infrastructure by productionizing the SeaweedFS proof of concept as a secure alternative to MinIO, improving artifact isolation in Pipelines using a single bucket, and streamlining code migration to proper repositories. Additionally, adding group-based authentication support, and improving CI/CD scripts in Manifests to support testing across multiple Kubernetes versions. The deliverables include a secure and scalable object storage setup, better pipeline isolation, completed code migrations, enhanced auth features, and robust CI/CD tooling.",
          "student_name": "Harshvir Potpose",
          "code_url": null,
          "proposal_id": "8qchamo9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PWDq4Zvt"
        },
        {
          "title": "Deploying Kubeflow with Helm",
          "short_description": "The proposed project aims to bridge a critical gap in the Kubeflow ecosystem by introducing robust Helm-based deployment support. While Kustomize has...",
          "description": "The proposed project aims to bridge a critical gap in the Kubeflow ecosystem by introducing robust Helm-based deployment support. While Kustomize has been the default configuration tool, many organizations have standardized on Helm for managing Kubernetes applications due to its templating capabilities and ecosystem support. This mismatch has led to significant maintenance burdens, with adopters often resorting to maintaining custom Kustomize forks to support essential components such as Istio and OAuth2. These customizations introduce complexity in upgrades and contribute to version drift, undermining reliability. By enabling Helm-based deployment, the project will align Kubeflow with mainstream Kubernetes practices, simplify maintenance, and foster broader community adoption. This initiative also supports the CNCF’s goal of interoperability and standardization across cloud-native projects.",
          "student_name": "Kunal Dugar",
          "code_url": null,
          "proposal_id": "lrYgtUyJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/azZltU0y"
        },
        {
          "title": "Project 8: Support JAX and TensorFlow Training Runtimes",
          "short_description": "This project implements key components of KEP-2170, introducing the Kubeflow Training V2 API. Specifically, it focuses on creating the...",
          "description": "This project implements key components of KEP-2170, introducing the Kubeflow Training V2\nAPI. Specifically, it focuses on creating the TrainingRuntime and ClusterTrainingRuntime for\nthe JAX and TensorFlow frameworks, built upon the Kubernetes JobSet API. These runtimes\nwill serve as blueprints for model training (including LLMs) within cloud-native ML pipelines. This\nabstraction allows Data Scientists and MLOps Engineers to easily reuse standardized runtimes\nand launch training jobs, particularly via the SDK, without needing deep knowledge of\nunderlying Kubernetes complexities.",
          "student_name": "Mahdi Khashan",
          "code_url": null,
          "proposal_id": "O4l8vxal",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/50KbkoaM"
        },
        {
          "title": "Project 12: Empowering Kubeflow Documentation with LLMs",
          "short_description": "refer notion site for better view :...",
          "description": "refer notion site for better view : https://smart-rhubarb-c5c.notion.site/GSoC-2025-Proposal-Project-12-Empowering-Kubeflow-Documentation-with-LLMs-1c209ac9a7bd80e6941ee51ab6601c7c\n\nThis project aims to build an AI-powered assistant for the Kubeflow ecosystem using Retrieval-Augmented Generation (RAG) and a long-context LLM. The assistant will index Kubeflow Github repository including, GitHub issues, and community discussions using a structured pipeline involving Feast (feature store) and Milvus (vector DB). It will support real-time queries through a FastAPI WebSocket interface and serve responses via KServe.\n\nKey deliverables include:\nEnd-to-end RAG pipeline integrated with Kubeflow Pipelines & Feast\nGitHub-triggered document ingestion and vector index updates\nLLM deployment and retrieval API with RBAC controls\nEvaluation loop using “LLM-as-a-Judge”\nMonitoring setup with Prometheus + Grafana\nFrontend integration with Hugo-based docs site\nThis project will improve Kubeflow’s developer experience by enabling contextual, cited answers directly from its ecosystem.",
          "student_name": "Santhosh Toorpu",
          "code_url": null,
          "proposal_id": "6qXw7H1a",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/a9JPxfEh"
        },
        {
          "title": "Project 10: Support Volcano Scheduler in Kubeflow Trainer",
          "short_description": "This document outlines a proposal to support Volcano for gang-scheduling in Kubeflow Trainer, so as to provide users with more AI-specific scheduling...",
          "description": "This document outlines a proposal to support Volcano for gang-scheduling in Kubeflow Trainer, so as to provide users with more AI-specific scheduling capacities like priority scheduling and queue resource management.  This will allow for better control over resources, with features like queue management and job prioritization. Thanks to the Kubeflow Trainer Pipeline Framework, we can seamlessly integrate Volcano into Kubeflow Trainer as a runtime plugin.  \nThe deliverables include:\n1. The integration of the Volcano plugin into the Trainer, allowing for Gang-Scheduling and resource management.\n2. Documentation updates, including usage examples and design details.\n3. Testing the plugin's functionality and performance under various environments.",
          "student_name": "Xinmin Du",
          "code_url": null,
          "proposal_id": "BhjjvwI0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZWbY1Rfj"
        },
        {
          "title": "Project 11: Support Postgres for Kubeflow Pipelines Backend",
          "short_description": "Kubeflow Pipelines (KFP) currently only supports MySQL/MariaDB databases, creating a significant limitation for many organizations that standardize...",
          "description": "Kubeflow Pipelines (KFP) currently only supports MySQL/MariaDB databases, creating a significant limitation for many organizations that standardize on PostgreSQL. This project aims to implement comprehensive PostgreSQL support across the KFP stack, including the API server, cache server, and ML Metadata components. The solution involves developing database abstraction layers, SQL dialect adapters, and migration tools that enable users to seamlessly deploy KFP with PostgreSQL backends. By providing this integration, the project will greatly expand deployment options for enterprise environments where MySQL is prohibited by policy, benefit organizations leveraging PostgreSQL's superior data warehousing capabilities, and eliminate the need for unsupported workarounds that currently require substantial effort from users. The end result will be a more flexible, enterprise-ready Kubeflow Pipelines platform that meets diverse organizational requirements.",
          "student_name": "Yunkai Li",
          "code_url": null,
          "proposal_id": "kxMOoOaO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fw66akzN"
        }
      ]
    },
    {
      "name": "SageMath",
      "image_url": "https://summerofcode.withgoogle.com/media/org/sagemath/1tcj7svgwadc13cj-360.png",
      "image_background_color": "#ffffff",
      "description": "Open-source mathematics software system",
      "url": "https://www.sagemath.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/sagemath",
      "ideas_url": "https://wiki.sagemath.org/GSoC/2025",
      "guide_url": "https://wiki.sagemath.org/GSoC/Contributors",
      "topics": ["mathematics", "education", "research"],
      "technologies": ["python", "cython"],
      "irc_channel": "https://sagemath.zulipchat.com/",
      "contact_email": "mailto:tcscrims@gmail.com",
      "mailing_list": "https://groups.google.com/g/sage-gsoc",
      "twitter_url": "https://twitter.com/sagemath",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Classification of Maximal Exceptional Sequences on Smooth Fano Toric Varieties",
          "short_description": "This project will enhance SageMath to systematically handle maximal exceptional sequences on smooth Fano toric varieties. We will add new Fano...",
          "description": "This project will enhance SageMath to systematically handle maximal exceptional sequences on smooth Fano toric varieties. We will add new Fano examples from known classifications, develop methods for detecting line bundles with zero cohomology, and automate the construction of maximal-length exceptional collections. Our module will support mutation and normalization of these sequences and offer fullness verification to confirm whether a sequence generates the derived category. Along with a publicly accessible library of full exceptional collections, we will provide thorough documentation and examples to streamline computational research in toric geometry and strengthen SageMath’s capabilities in algebraic geometry.",
          "student_name": "Aolong Li",
          "code_url": null,
          "proposal_id": "WbR7qXMG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DacbFeo5"
        },
        {
          "title": "Poincaré normal form of Riemann matrices",
          "short_description": "The project aims to compute the Poincaré normal form of Riemann matrices in SageMath. This computation enables the decomposition of theta functions...",
          "description": "The project aims to compute the Poincaré normal form of Riemann matrices in SageMath.  This computation enables the decomposition of theta functions into a product of lower-dimensional theta functions, which can be evaluated much faster.  The project will implement the methods described by Martens to equip SageMath with tools for detecting and performing these reductions.  \n\nThe solution involves finding the reduction matrix M (if it exists), computing the Poincaré normal form of M, and applying a transformation to the period matrix. We aim to deliver a SageMath module for computing M and its normal form, a function for transforming the period matrix, a fully tested implementation for Poincaré reduction, and comprehensive documentation.",
          "student_name": "Caleb Aryee",
          "code_url": null,
          "proposal_id": "v5Lz80Pp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jnvwvAbh"
        },
        {
          "title": "On the Implementation of the O(|E|⋅√|V|) Micali-Vazirani Algorithm",
          "short_description": "Matchings and perfect matchings have received considerable attention in graph theory as well as in other related domains (such as, but not limited...",
          "description": "Matchings and perfect matchings have received considerable attention in graph theory as well as in other related domains (such as, but not limited to, algorithms and optimization). There still remain many open problems — such as Barnette’s conjecture, Berge-Fulkerson conjecture, and so on — due to which it continues to remain an active area of research. At the heart of all this research lies the bottleneck of finding a maximum cardinality matching in undirected graphs. The objective of this project is to implement the Micali-Vazirani algorithm in SageMath — which achieves the best known theoretical runtime of O(|E|⋅√|V|) for computing such a matching — and to make all of this available freely to students, educators as well as researchers all across the world.",
          "student_name": "Janmenjaya Panda",
          "code_url": null,
          "proposal_id": "3ABTqQvc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0BAiIfUe"
        },
        {
          "title": "The Boson-Fermion Correspondence and Vertex Operators",
          "short_description": "The boson-fermion correspondence is an isomorphism of two representations of the Heisenberg algebra. It can be stated as a way to construct a special...",
          "description": "The boson-fermion correspondence is an isomorphism of two representations of the Heisenberg algebra. It can be stated as a way to construct a special family of symmetric functions called Schur functions, using certain objects called vertex operators. The goal of this project is to implement vertex operators in SageMath, and to thereby verify the boson-fermion correspondence by computer. A detailed description of the problem, including mathematical background, a list of deliverables, and more, can be found in the attached pdf.",
          "student_name": "Joe McDonough",
          "code_url": null,
          "proposal_id": "SgO8QlA4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qZ75cron"
        },
        {
          "title": "Functionalities for Krylov methods over exact fields",
          "short_description": "This project aims to add Krylov subspace methods for matrices over exact fields: representation of the kernel, co-kernel of a matrix of univariate...",
          "description": "This project aims to add Krylov subspace methods for matrices over exact fields: representation of the kernel, co-kernel of a matrix of univariate polynomials over an exact field as a module, and associated invariants, as well as computation of the characteristic polynomial if the matrix is square via recent methods.\n\nThe performance relies heavily on a few core linear algebra operations, so care must be taken to use the most efficient implementations and to exploit any additional characteristics of the specific use cases. Consideration may also be given to more general optimisation of methods for matrices over univariate polynomials.\n\nKey goals for the project are to have the above functionalities implemented efficiently, with accompanying documentation and tests to meet the project standards.",
          "student_name": "Nicholas Bell",
          "code_url": null,
          "proposal_id": "ddRVJd8c",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BUMbi6Vs"
        },
        {
          "title": "Paths and cycles enumeration methods in graphs",
          "short_description": "This project focuses on enumeartion of k shotest simple paths. This problem has practical applications in various networks, such as road and...",
          "description": "This project focuses on enumeartion of k shotest simple paths.\nThis problem has practical applications in various networks, such as road\nand transporation networks. Thus, solving this problem practically as\nfast as possible is essential. There are several algorithms to achieve the\ncurrent best order of time complexity in research field, but in practice one\nof them is faster than others depending on an input graph or the amount\nof memory used. The goal of this project is to implement a unified function\nof these algorithms. It will help Sage users to choose a suitable algorithm\nin each scenario. This project also aims to extend the cycle enumeartion\nmethod in directed graphs currently implemented in Sage to undirected or\nweighted graphs.",
          "student_name": "Yuta",
          "code_url": null,
          "proposal_id": "I6iCzD6j",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cTcLUQcj"
        },
        {
          "title": "Self Paired Hopf Algebra on Double Posets",
          "short_description": "This project implements the combinatorial Hopf algebra of double posets. A double poset is a set with two partial orders, and their isomorphism...",
          "description": "This project implements the combinatorial Hopf algebra of double posets. A double poset is a set with two partial orders, and their isomorphism classes form the basis of a graded Hopf algebra \\(\\mathbb{Z}\\mathbf{D}\\), equipped with a bilinear pairing via \\emph{pictures}.\n\nThe implementation includes a \\texttt{DoublePoset} class, picture counting, and the bialgebra structure using Sage’s \\texttt{Bialgebra} framework. It also defines a homomorphism to quasisymmetric functions via \\(\\pi\\)-partitions, supports internal products, and develops the sub-bialgebra of special double posets mapping to permutations.",
          "student_name": "Yuxuan Sun",
          "code_url": null,
          "proposal_id": "BAC9ElkI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fSP7xErF"
        }
      ]
    },
    {
      "name": "Open Technologies Alliance - GFOSS",
      "image_url": "https://summerofcode.withgoogle.com/media/org/open-technologies-alliance-gfoss/kiyijull8pfdypve-360.png",
      "image_background_color": "#ffffff",
      "description": "Promote Open Standards and Open Source",
      "url": "http://www.gfoss.eu",
      "category": "Development tools",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/open-technologies-alliance-gfoss",
      "ideas_url": "https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas",
      "guide_url": "https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas",
      "topics": [
        "web",
        "robotics",
        "open hardware",
        "c++",
        "Artificial Inteligence"
      ],
      "technologies": [
        "javascript",
        "c/c++",
        "nodejs",
        "python 3",
        "Machine Learning (ML)"
      ],
      "irc_channel": "",
      "contact_email": "mailto:info@eellak.gr",
      "mailing_list": "https://lists.ellak.gr/gsoc-developers/listinfo.html",
      "twitter_url": "https://twitter.com/eellak",
      "blog_url": "https://gfoss.eu/",
      "facebook_url": "",
      "num_projects": 9,
      "projects": [
        {
          "title": "Analysis and System Design Proposal to myUni For GSOC 2025",
          "short_description": "Problem Statement: The current MyUoM app for Greek universities is a central hub for students and faculty, but it's missing some key features. Right...",
          "description": "Problem Statement:\n\nThe current MyUoM app for Greek universities is a central hub for students and faculty, but it's missing some key features. Right now, it lacks a solid login system, a scalable backend, and real-time updates from official university sources. Plus, there’s no easy way for other universities to customize or integrate the platform to fit their needs. This makes the app less flexible and limits its potential to be a truly unified solution for higher education in Greece.\n\nProposed Solution:\n\nI’m proposing MyUni—a unified, open-source platform that fixes these headaches. Built with a modern MERN stack (Next.js, Express.js, MySQL), MyUni will offer a scalable backend, real-time data syncing via APIs, and a flexible CMS for announcements and updates. It’ll support multiple universities with customizable branding and layouts, all wrapped in a user-friendly interface. Using TypeScript, microservices, and tools like Nginx and Redis, I’ll ensure it’s fast, secure, and ready to grow.\n\nDeliverables:\n\n By the end of GSoC 2025, I’ll deliver:  \n* Web application that provide good user experience(UX) and has\ngood User Interface(UI)\n* Admin dashboard where myuni admin can able to handle CMS and more\n* Student dashboard where student can able to take-care of their profile,\nnotifications of academics, and more\n* Backend Architecture which serves as solution to all project\nrequirements\n* REST APIs with at least 95% test coverage\n* REST APIs with modern design patterns\n* Docker container image of entire app",
          "student_name": "Adil Kadival",
          "code_url": null,
          "proposal_id": "IV123trV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tz6ymx0o"
        },
        {
          "title": "Enabling GlossAPI to interpret Greek characters",
          "short_description": "This project addresses the lack of accessible, Greek high-quality datasets for training Large Language Models (LLMs). Although robust LLM frameworks...",
          "description": "This project addresses the lack of accessible, Greek high-quality datasets for training Large Language Models (LLMs). Although robust LLM frameworks are widely available, open-source Greek-specific datasets are severely underrepresented, especially those that captures regional variations and dialects.\n\nThis project's mission is to integrate Optical Character Recognition (OCR) capabilities into the processing pipeline and expand its dataset resources to support these linguistic nuances. The goal is to evolve GlossAPI into a centralized hub for open-source Greek NLP datasets.",
          "student_name": "Dimitrios Athanasopoulos",
          "code_url": null,
          "proposal_id": "SoXbhxvs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WaioHmfG"
        },
        {
          "title": "Flexible GovDoc Scanner - Eftihis Drakakis",
          "short_description": "Greece’s public business records, available through the GEMI portal, contain valuable information such as company names, founding dates, and key...",
          "description": "Greece’s public business records, available through the GEMI portal, contain valuable information such as company names, founding dates, and key individuals, but much of it is locked away in difficult-to-search PDFs. To make this data more accessible, we’re building an open-source tool that transforms these documents into a searchable, user-friendly database—legally and ethically. Instead of scraping, we will systematically fetch records from Greece’s official Open Data Portal, extract metadata and text using OCR  and NLP tools , and organize everything in OpenSearch, which efficiently handles Greek text. A simple REST API will allow users to query companies, dates, and individuals while ensuring scalability, smart search, pagination, and overload protection. The project will provide an automated pipeline for downloading, processing, and indexing documents, along with clear documentation, Docker support, and easy cloud deployment. By unlocking these records, we’re not just solving a technical problem—we’re making public data truly public, empowering watchdogs, entrepreneurs, and citizens to better understand Greece’s business landscape.",
          "student_name": "Eftihis D",
          "code_url": null,
          "proposal_id": "guof8XAr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dKzwxQT9"
        },
        {
          "title": "Extending the capabilities of OpenTRIM",
          "short_description": "OpenTRIM is a C++ Monte Carlo simulation framework that models the interaction of ions with matter, tracking energy deposition and defect creation....",
          "description": "OpenTRIM is a C++ Monte Carlo simulation framework that models the interaction of ions with matter, tracking energy deposition and defect creation. Currently, it includes a fixed tallying system for recording standard outputs, such as energy lost to ionization or defects. This project aims to extend OpenTRIM's capabilities by implementing a flexible, user-customizable tally system.\n\nThe new tally system will allow users to define, via JSON configuration, what simulation events to track (e.g., ion stopping, vacancy creation), how to bin data (e.g., in cylindrical or Cartesian coordinates), and what physical quantities to record (e.g., ion depth, deposited energy). It will be implemented as a new class hierarchy in C++, inheriting from the existing tally class, and will make use of the ArrayND data structure for multidimensional data storage.\n\nDeliverables include:\na) A customizable tally class with support for user-defined event handling\nb)JSON-configurable tally setup (geometry, energy bins, spatial bins, etc.)\nc) Sample tally implementations (e.g., ion range profiling)\nd) Unit tests, documentation, and tutorials for extending the system\n\nThis work will empower researchers and developers to tailor OpenTRIM output to their specific simulation needs, improving its usability and scientific value.",
          "student_name": "Iridanos",
          "code_url": null,
          "proposal_id": "g8563JSa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4sZ62NJY"
        },
        {
          "title": "PersonalAIs: Generative AI Agent for Personalized Music Recommendations",
          "short_description": "PersonalAIs: Generative AI Agent for Personalized Music Recommendations This project aims to enhance music streaming experiences by building an AI...",
          "description": "PersonalAIs: Generative AI Agent for Personalized Music Recommendations\n\nThis project aims to enhance music streaming experiences by building an AI agent that offers emotionally intelligent, personalized music recommendations. Traditional recommendation systems often overlook users’ real-time emotional states. To address this, we propose a full-stack solution that uses large language models (LLMs), emotion detection, and Spotify API integration to tailor music suggestions based on users’ mood and preferences.\n\nKey deliverables include:\n\t•\tA conversational chatbot UI for user interaction\n\t•\tEmotion detection using LLMs\n\t•\tIntegration with Spotify for real-time user data\n\t•\tA hybrid recommendation system (recall & rank) based on listening behavior and emotional context\n\t•\tA frontend-backend architecture for seamless user experience\n\nThis project will deliver a working prototype capable of understanding user emotions and musical tastes, and recommending tracks that resonate with the user’s current mood.",
          "student_name": "Ke Ye",
          "code_url": null,
          "proposal_id": "wvyBf3Q0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AyCEnJDE"
        },
        {
          "title": "Exploring and Abstracting Triplestore  Alternatives - Maira Papadopoulou",
          "short_description": "This project aims to develop a Python library that abstracts multiple RDF triplestore systems into a unified, developer-friendly interface. By...",
          "description": "This project aims to develop a Python library that abstracts multiple RDF triplestore systems into a unified, developer-friendly interface. By standardizing how applications interact with different SPARQL backends, the library will simplify the use of semantic web technologies and promote greater flexibility in backend selection. The work will involve comparative research on triplestore architectures, performance benchmarking, and the design of an extensible abstraction layer. Deliverables include a well-documented codebase, performance analysis, and integration of four triplestore systems, supported by real-world testing and usage examples.",
          "student_name": "Maira Papadopoulou",
          "code_url": null,
          "proposal_id": "5fvnArJs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xCZ8a9MZ"
        },
        {
          "title": "Identifying Transition Points in the ZGB Model Using Machine Learning",
          "short_description": "The Ziff–Gulari–Barshad (ZGB) model describes how CO and O₂ molecules adsorb and react on a metal surface represented as a square lattice. CO...",
          "description": "The Ziff–Gulari–Barshad (ZGB) model describes how CO and O₂ molecules adsorb and react on a metal surface represented as a square lattice. CO occupies a single site, while O₂ dissociates into two oxygen atoms placed on adjacent sites. When a CO and an O atom meet, they form CO₂, which leaves the surface and frees up space. As the CO partial pressure (yCO) changes, the surface transitions from oxygen-poisoned (no CO₂ production) to reactive (CO₂ formation) and eventually to CO-poisoned. Apothesis is a kinetic Monte Carlo simulator that models these surface reactions with high precision.\n\n\nThis project will build a Python-based “outer shell” around Apothesis to identify transition points using machine learning. We'll extract and label structured data (from SurfaceSpecies.dat and output.log) and generate surface images with Matplotlib or Pygame, classifying each state as “Poisoned” or “Not Poisoned.” A range of ML models—including traditional classifiers, CNNs, RNNs/LSTMs, GNNs, and physics-guided models—will be trained and evaluated. The best-performing model will be integrated with Apothesis for real-time predictions. Additionally, we will develop PyApothesis, a user-friendly Python interface to change parameters, visualize simulations, and use the ML model—all through Python code.",
          "student_name": "Om Swastik",
          "code_url": null,
          "proposal_id": "1hsA1Kh7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Hk2P4uiG"
        },
        {
          "title": "Expanding HassIO Smart Home Capabilities via Low-Code Automation Development with SmAuto",
          "short_description": "Smart home environments are increasingly popular, integrating a wide range of IoT devices to enhance user experience. However, the complexity of...",
          "description": "Smart home environments are increasingly popular, integrating a wide range of IoT devices to enhance user experience. However, the complexity of managing these devices limits the realization of their full potential. SmAuto, originally developed by the ISSEL research team at AUTH, is a Domain Specific Language (DSL) that simplifies the creation of complex automation scenarios for smart environments through a textual and web-based low-code interface. Currently, SmAuto lacks features such as integration with external REST data sources, time delays, semantic annotations, and direct access to HomeAssistant (HA) entities, restricting its utility in advanced smart home setups.\n\nThis project aims to enhance SmAuto by:\n\n    Extending the DSL to support the REST protocol for accessing external data sources.\n    Introducing auxiliary concepts like Delay, Switches, and Compute nodes to enrich automation workflows.\n    Integrating SmAuto into HomeAssistant as an open-source addon, enabling users to design and deploy automations graphically using SmAuto’s low-code environment and HA’s existing entities.",
          "student_name": "Venetis",
          "code_url": null,
          "proposal_id": "aQVNAVJ0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QcCTOSbs"
        },
        {
          "title": "Docker for Consul Democracy citizen participation platform",
          "short_description": "Consul Democracy is a civic participation platform used by over 200 municipalities worldwide, each running their own decentralized installation....",
          "description": "Consul Democracy is a civic participation platform used by over 200 municipalities worldwide, each running their own decentralized installation. Currently, production deployments rely on manual Ansible and Capistrano setups, which can be complex and limit broader adoption — especially for institutions using Docker-based infrastructure.\n\nThis project aims to simplify and modernize the deployment process by introducing a production-ready Docker workflow using Kamal, Rails’ native Docker deployment tool. It will also add a GitHub Codespaces-compatible devcontainer to support faster onboarding for new contributors. Throughout the process, care will be taken to maintain the existing developer Docker setup and reduce duplicated config across environments.\n\nDeliverables include:\n\n- A multi-stage production Dockerfile\n- A working kamal.yml deployment setup for services like Puma and DelayedJob\n- A .devcontainer/ setup compatible with GitHub Codespaces\n- Refactored shared scripts and configuration\n- Complete updated documentation for development and production environments\n\nThis work will help unify the ecosystem, making it easier for more cities to adopt and maintain Consul Democracy.",
          "student_name": "Veronika Rybak",
          "code_url": null,
          "proposal_id": "9E9nNxTn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dE3cQTn8"
        }
      ]
    },
    {
      "name": "Blender Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/blender-foundation/vdfgx9yyygdjjvym-360.png",
      "image_background_color": "#ffffff",
      "description": "The Freedom to Create",
      "url": "https://www.blender.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/blender-foundation",
      "ideas_url": "https://developer.blender.org/docs/programs/gsoc/ideas/",
      "guide_url": "https://developer.blender.org/docs/programs/gsoc/",
      "topics": ["games", "graphics", "3d", "rendering", "animation"],
      "technologies": ["c", "python", "opengl", "c++", "vulkan"],
      "irc_channel": "https://blender.chat/channel/gsoc-2025",
      "contact_email": "",
      "mailing_list": "https://devtalk.blender.org/c/contributing-to-blender/summer-of-code/15",
      "twitter_url": "",
      "blog_url": "https://devtalk.blender.org/c/contributing-to-blender/summer-of-code/15",
      "facebook_url": "",
      "num_projects": 8,
      "projects": [
        {
          "title": "Improving Sampling in the Compositor",
          "short_description": "The goal of this project is to improve the compositor's sampling situation. This includes exposing the interpolation option to all nodes reliant on...",
          "description": "The goal of this project is to improve the compositor's sampling situation. This includes exposing the interpolation option to all nodes reliant on it. The interpolation options are already partially implemented, as seen in this issue: https://projects.blender.org/blender/blender/issues/119592.\n\nFurthermore, sampling requires boundary conditions, such as zero, extend, or wrap. Currently, these conditions are not exposed to the user, but use the wrap condition across different sampling methods. The conditions should also be selectable in the node giving more freedom to the users.\n\nLastly, there is one sampling method that requires some special attention – BLI_ewa_filter. \nCurrently, the EWA sampling uses different implementations across CPU and GPU, leading to different results on different devices/OSs. Blender uses EWA sampling primarily for anisotropic texture sampling. The goal is to write an implementation of the EWA filter for the CPU, which is transferable to the GPU, aiming for similar/equal results for CPU and GPU versions, allowing it to be used in the compositor to enable anisotropic compositing.",
          "student_name": "Benjamin Beilharz",
          "code_url": null,
          "proposal_id": "39OVu1Bq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NbWXDomc"
        },
        {
          "title": "Improving Regression Test Coverage for the Compositor",
          "short_description": "This project will improve compositor regression testing by adding tests to expand code coverage. The compositor is being actively developed, so...",
          "description": "This project will improve compositor regression testing by adding tests to expand code coverage. The compositor is being actively developed, so ensuring that new changes do not introduce bugs is very important for users. The goal is to have a straightforward, simple, and useful feature implemented by the end of the program. Deliverables will include a comprehensive survey of current code coverage, target nodes, and new regression tests based on the priority from the survey.",
          "student_name": "Ian Yoo",
          "code_url": null,
          "proposal_id": "OHyWhdA1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NvO9JBt7"
        },
        {
          "title": "Compositor: Glare Node Enhancement",
          "short_description": "This project aims to enhance Blender’s Glare node by addressing UX and technical limitations, improving usability, and performance. By resolving...",
          "description": "This project aims to enhance Blender’s Glare node by addressing UX and technical limitations, improving usability, and performance. By resolving long-standing issues such as unintuitive controls, resolution dependency, and bad performance particularly in modes like Simple Star and Streaks. The updated Glare node will offer a more intuitive and efficient implementation.\nThe general improvements I aim to implement are stated in the following task:\nIssue: Compositor: Future of Glare node #124176",
          "student_name": "Mohamed-Hassan",
          "code_url": null,
          "proposal_id": "CobBXsKq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/t1j0P0IB"
        },
        {
          "title": "Optimizing Mesh and Multires Sculpting Performance in Blender",
          "short_description": "I’m working on speeding up Blender’s sculpting system, especially for artists working with high-res meshes. Sculpting can get laggy with dense meshes...",
          "description": "I’m working on speeding up Blender’s sculpting system, especially for artists working with high-res meshes. Sculpting can get laggy with dense meshes specially for lower end systems, so this project aims to make things efficient under the hood.\n\nI’ll be focusing on a few key areas: spatially sorting mesh vertex data to improve cache coherence, experimenting with smarter undo data storage using compression, and adding multithreading inside nodes to better utilize CPU.\n\nBy the end of the project, artists should notice a more responsive sculpting experience, and generally snappier performance.",
          "student_name": "Namit Bhutani",
          "code_url": null,
          "proposal_id": "CxW5bmIR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kSM1BuKa"
        },
        {
          "title": "Create Keyframes in VSE Preview",
          "short_description": "This project seeks to introduce the functionality of creating keyframes directly in the VSE preview by using the “I” or “K” key, adhering to the same...",
          "description": "This project seeks to introduce the functionality of creating keyframes directly in the VSE preview by using the “I” or “K” key, adhering to the same rules and preferences as the 3D viewport, including keysets. This feature will allow users to keyframe sequences directly in the preview area, thereby improving the video editing workflow and facilitating quicker story-boarding.",
          "student_name": "Ramón_1",
          "code_url": null,
          "proposal_id": "9e1hcb2f",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Tr1Cr4Ta"
        },
        {
          "title": "Edit-Mesh Mirror Improvements",
          "short_description": "This project addresses Blender’s edit-mode mirror limitations by enhancing its functionality to support multiple axes and operators. It will enable...",
          "description": "This project addresses Blender’s edit-mode mirror limitations by enhancing its functionality to support multiple axes and operators.  It will enable artists to edit symmetrically without relying on workarounds like deleting half the model to apply a mirror modifier which is a method impractical for nearly finished models and incompatible with shape keys, which require actual vertex positions rather than modifier-driven symmetry. I’ll analyze the transformation system, refine the mirroring utilities, and extend support to operators that do not support mirroring. The deliverables include these enhancements, detailed documentation for users and developers, and a set of tests to ensure consistent operation. This will make symmetrical modeling more efficient for artists.",
          "student_name": "Tariq",
          "code_url": null,
          "proposal_id": "gIGDzAJx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NRPXeA2r"
        },
        {
          "title": "Pitch Correction for Sound Playback in Sequencer",
          "short_description": "The goal of this project is to integrate pitch-correction into Blender's video sequence editor (VSE). While the editor supports retiming video and...",
          "description": "The goal of this project is to integrate pitch-correction into Blender's video sequence editor (VSE). While the editor supports retiming video and audio through the retiming keys, one particular feature that is missing for audio clips is being to preserve the original pitch of the audio when it is sped up or slowed down. So, this project will add a \"Pitch Correction\" toggle option to the audio strips in the editor, allowing the audio to retain its natural tonal quality if retimed.",
          "student_name": "TheKaceFiles",
          "code_url": null,
          "proposal_id": "xDJ7Wz8F",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pJUULEjM"
        },
        {
          "title": "Adding handy features and  UI improvements to Flamenco",
          "short_description": "Flamenco, whose target audience is small studios of artists and Blender users, could benefit by adding features that enhance the user-friendliness...",
          "description": "Flamenco, whose target audience is small studios of artists and Blender users, could benefit by adding features that enhance the user-friendliness and speed up the workflow. The main features to be implemented for this project are: 1) a configuration editor page with simple form inputs that lets users visualize, edit, and save the settings directly to/from the YAML file 2) a mass deletion function for unneeded/unwanted render jobs and 3) UI-related bug fixes to improve the overall user experience.",
          "student_name": "Vivian Leung (vivz753)",
          "code_url": null,
          "proposal_id": "kn6HpcoJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oxlTyZNy"
        }
      ]
    },
    {
      "name": "OpenWISP",
      "image_url": "https://summerofcode.withgoogle.com/media/org/openwisp/xgfy0r7femccwzvj-360.png",
      "image_background_color": "#ffffff",
      "description": "The Hackable Network Management System",
      "url": "https://openwisp.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/openwisp",
      "ideas_url": "https://openwisp.io/docs/dev/developer/gsoc-ideas-2025.html",
      "guide_url": "https://openwisp.io/docs/developer/contributing.html",
      "topics": [
        "networking",
        "network management system",
        "wifi",
        "vpn",
        "sdn"
      ],
      "technologies": ["python", "javascript", "django", "lua", "openwrt"],
      "irc_channel": "https://gitter.im/openwisp/general",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/forum/#!aboutgroup/openwisp",
      "twitter_url": "https://www.linkedin.com/company/openwisp/",
      "blog_url": "https://openwisp.org/blog/",
      "facebook_url": "https://www.facebook.com/OpenWISP",
      "num_projects": 5,
      "projects": [
        {
          "title": "WHOIS Information and IP Address-Based Geolocation",
          "short_description": "The proposal aims to provide a feature to enable WHOIS details lookup and fuzzy location creation and using those details to enhance OpenWISP’s...",
          "description": "The proposal aims to provide a feature to enable WHOIS details lookup and fuzzy location creation and using those details to enhance OpenWISP’s device management capabilities. \n\nThe implementation involves fetching WHOIS details for a device when last_ip changes for a device and is public via using `geoip2` library. This task is performed asynchronously in background via celery without blocking main thread. Fuzzy locations are identified through `fuzzy` field. Using custom filters will enable filtering instances having `fuzzy` locations on admin level. At API level, `django-filters` will be used to provide the similar filtering functionalities as admin to maintain consistency.  Using a BriefSerializer for summary details and a DetailedSerializer for complete details fetch of WHOIS record on API level for device details and list APIs will provide flexibility. The fuzzy locations will be managed at global and organizational level using `FallbackBooleanChoiceField`, maintaining consistency with existing configuration practices.\n\nAs per above implementation, this feature will allow users to get WHOIS details of their devices if its 'last_ip' changes and is public ip allowing to manage it better and get its estimate location—unless manually refined. Updated locations will trigger notifications, improving device visibility and management. Users will be able to enable/disable fuzzy locations via configuration at global/organization level. The WHOIS record will be fetched at summary level (on device details and list APIs) and an option to view detailed view on device details API. The Device admin UI will display the newly fetched WHOIS details alongside last_ip with filters for devices having fuzzy locations. The Location admin interface will include clear indicators for fuzzy locations, along with filters to help users identify and manage such locations. The APIs will provide similar filtering functionality as admin also involving the fetched details in required APIs.",
          "student_name": "Aman Jagotra",
          "code_url": null,
          "proposal_id": "eNqaq8h4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bJdRSq0X"
        },
        {
          "title": "Improve OpenWISP General Map: Indoor, Mobile, Linkable URLs",
          "short_description": "This project aims to enhance the general network visualization capabilities in OpenWISP by introducing a unified and interactive new map page for...",
          "description": "This project aims to enhance the general network visualization capabilities in OpenWISP by introducing a unified and interactive new map page for both geographic and indoor device layouts. The current view is limited to the dashboard with constrained space and lacks features such as real-time updates, indoor floorplan support, and deep-linking to specific devices or views.\n\nTo address these gaps, a new dedicated page will be developed to display all network devices with a clean, full-screen interface. Devices located indoors will be visualized on floor plans, with support for multiple floors within the same view. A working prototype demonstrating floorplan overlays on top of geographic layouts has already been implemented and deployed.\n\nThe project will also introduce dynamic URLs, allowing users to bookmark or share direct views of specific devices, links, or positions. Additionally, new buttons will be added to the device detail and floorplan pages to help users quickly navigate to their focused views on the map.",
          "student_name": "Deepanshu Sahu",
          "code_url": null,
          "proposal_id": "53boszxJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/sKabOs8i"
        },
        {
          "title": "Improve UX and Flexibility of the Firmware Upgrader Module",
          "short_description": "This project addresses the need to enhance user experience and operational efficiency in the OpenWISP firmware upgrader module. The objective is to...",
          "description": "This project addresses the need to enhance user experience and operational efficiency in the OpenWISP firmware upgrader module. The objective is to solve issues related to user experience and limited flexibility in mass firmware upgrade operations. By implementing real-time UI updates and cancellation features for stuck upgrades, administrators will gain better control and visibility over the upgrade process. Additionally, introducing mass upgrade capabilities by group and location will streamline large-scale deployments.",
          "student_name": "roshan0902",
          "code_url": null,
          "proposal_id": "txJeY1JX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nHk9QZFU"
        },
        {
          "title": "Enhancing Uspot Captive Portal for OpenWrt",
          "short_description": "I intend to implement missing features in Uspot, in particular traffic accounting and traffic usage limits as well as improve the documentation of...",
          "description": "I intend to implement missing features in Uspot, in particular traffic accounting and traffic usage limits as well as improve the documentation of Uspot and its sibling projects ('ratelimit').",
          "student_name": "Thibaut",
          "code_url": null,
          "proposal_id": "UIpM2IUP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/292OF54a"
        },
        {
          "title": "Improve netjsongraph.js Resiliency and Visualization",
          "short_description": "This proposal targets enhancing netjsongraph.js, a JavaScript library for visualizing network topology based on the NetJSON format. The primary...",
          "description": "This proposal targets enhancing netjsongraph.js, a JavaScript library for visualizing network topology based on the NetJSON format. The primary objectives are to:\n\nImprove resiliency: Prevent crashes caused by duplicate node IDs and invalid link data, ensuring robust handling of unexpected or malformed data.\nEnhance visualization: Introduce dynamic node label visibility based on zoom level, prevent overlapping clusters, implement category-specific styling, and display additional numeric data (e.g., connected clients) directly on nodes.\nDeliver comprehensive testing and documentation: Implement unit and browser tests, along with updated documentation and visual mock-ups that clearly explain the new features.\nThe proposed solution includes a phased implementation plan with specific milestones addressing each improvement area. If accepted, this project will deliver a more reliable and user-friendly version of netjsongraph.js that meets the needs of the OpenWISP community.",
          "student_name": "Yashaswi Kumar",
          "code_url": null,
          "proposal_id": "ZkmJ3Edd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1S9WKRxs"
        }
      ]
    },
    {
      "name": "Sugar Labs",
      "image_url": "https://summerofcode.withgoogle.com/media/org/sugar-labs/pgbt7fp6gr6lhihd-360.png",
      "image_background_color": "#ffffff",
      "description": "Learning software for children",
      "url": "https://sugarlabs.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/sugar-labs",
      "ideas_url": "https://github.com/sugarlabs/GSoC/blob/master/Ideas-2025.md",
      "guide_url": "https://github.com/sugarlabs/GSoC",
      "topics": [
        "education",
        "programming languages",
        "games",
        "desktop",
        "generative AI"
      ],
      "technologies": ["python", "gtk", "typescript", "javascipt", "LLM"],
      "irc_channel": "https://discord.com/channels/1078051575580336249/1078051576284975226",
      "contact_email": "",
      "mailing_list": "https://lists.sugarlabs.org/listinfo/sugar-devel",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/SugarLabsforall/",
      "num_projects": 11,
      "projects": [
        {
          "title": "Sugarizer Human Activity pack",
          "short_description": "The Sugarizer Human Activity Pack project aims to enhance the educational tools provided by Sugar Labs by developing two engaging and interactive...",
          "description": "The Sugarizer Human Activity Pack project aims to enhance the educational tools provided by Sugar Labs by developing two engaging and interactive activities. The first, the 3D Human Body Activity, will expand on the existing anatomical visualization tool by integrating multiple human body systems, including skeletal, muscular, cardiovascular, and digestive systems. It will allow users to toggle between different layers, interact with body structures dynamically, and engage in real-time collaborative learning through a dedicated \"Doctor Mode.\" Additional features such as interactive quizzes, UI/UX refinements, and localization support will ensure accessibility and usability across different regions and devices.\n\nThe second component, the Stickman Animation Activity, will introduce an interactive keyframe animation tool where users can manipulate a stick figure by adjusting its nodes to create animations. This tool will support essential animation features such as playback, speed control, and exporting animations as videos. It will also include a collection of pre-designed templates for common movements like running, jumping, and dancing. A standout feature of this activity is the ability to import a photo of a human body and generate a corresponding stick figure in the same pose using AI-assisted pose detection.\n\nBy the end of the project, Sugar Labs will gain two fully functional, optimized, and localized activities that provide immersive learning experiences in human anatomy and animation principles. The enhancements to the 3D Human Body Activity will enable students to explore anatomy in a more interactive and engaging way, moving beyond static textbook images to dynamic 3D models. The Stickman Animation Activity will encourage creativity and spatial understanding by allowing students to experiment with motion and animation concepts. Together, these activities will significantly contribute to making education more engaging, interactive, and widely accessible.",
          "student_name": "AdityaKrSingh",
          "code_url": null,
          "proposal_id": "gczEWONn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/etFtxnpi"
        },
        {
          "title": "Math Games",
          "short_description": "I plan to develop 10 Math games for Sugar within the GSoC’25 timeline. The development of these activities will include basic functionalities of the...",
          "description": "I plan to develop 10 Math games for Sugar within the GSoC’25 timeline. \nThe development of these activities will include basic functionalities of the game in addition to other features which are not mentioned particularly like Sound and themes and sugar features like journals (to keep the changes saved for game resume features), user color schemes, toolbar, etc",
          "student_name": "Bishoy Wadea",
          "code_url": null,
          "proposal_id": "NUVZBGuk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/F4pBAJ4C"
        },
        {
          "title": "AI tools for reflection",
          "short_description": "Reflective learning enables students to recall past experiences, develop critical thinking skills, and improve future actions by analyzing them. This...",
          "description": "Reflective learning enables students to recall past experiences, develop critical thinking skills, and improve future actions by analyzing them. This technique allows students to learn quickly and intelligently. Hence, this project aims to implement a reflective learning feature in Music Blocks using open source LLMs and frameworks like LangChain to harness AI to assist student in their reflective learning process.",
          "student_name": "Diwangshu Kakoty",
          "code_url": null,
          "proposal_id": "hdCFsDaA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/R3d0p1yv"
        },
        {
          "title": "Advanced JavaScript Editor with MusicBlocks Interactions",
          "short_description": "This project aims to significantly enhance the JavaScript editor within Sugar Labs' MusicBlocks environment. By implementing translation from...",
          "description": "This project aims to significantly enhance the JavaScript editor within Sugar Labs' MusicBlocks environment. By implementing translation from JavaScript code to MusicBlocks visual blocks, users will gain a powerful tool for iterative learning and code exploration. Additionally, the project will introduce a JavaScript visualizer for step-by-step debugging and syntax highlighting to improve the editor's usability and appeal to young learners. This upgrade will bridge the gap between visual programming and text-based coding, promoting a deeper understanding of real programming and empowering kids to debug effectively.",
          "student_name": "ElwinL",
          "code_url": null,
          "proposal_id": "alwlr3wn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dIr4SJCY"
        },
        {
          "title": "Refactor the chatbot in the Speak Activity to use gen-AI",
          "short_description": "This project aims to modernize the Speak Activity by integrating a large language model (LLM) to enhance the chatbot and voice features, making it...",
          "description": "This project aims to modernize the Speak Activity by integrating a large language model (LLM) to enhance the chatbot and voice features, making it more educational and engaging for early learners. The Speak Activity, traditionally used for promoting reading skills through synthetic speech, will be upgraded to provide a more natural and interactive experience.\n\nThe primary objective is to implement an LLM-based chatbot offering improved conversational abilities and a more human-like interaction style. For the voice feature a high-quality, natural-sounding Text-to-Speech (TTS) model that accurately handles pronunciation and phonetics will be used. By fine-tuning the LLM to manage invented spelling and grammatical inaccuracies, the chatbot will offer a supportive and child-friendly interaction, guiding learners in an encouraging manner.\n\nThe project will utilize Python and a fine-tuned model hosted on the cloud and accessed via an API endpoint. This design ensures compatibility and seamless integration with the existing Speak Activity, without adding extra dependencies.\n\nTo support offline functionality, a lightweight, fine-tuned fallback model will be packaged with the activity. This fallback ensures continued usability even without an internet connection, albeit with slightly less accurate responses compared to the cloud-hosted model.\n\nThis enhancement will make the Speak Activity a more effective and child-friendly tool, promoting better language learning through engaging and conversational interactions.",
          "student_name": "Mebin J Thattil",
          "code_url": null,
          "proposal_id": "2jdsUR6J",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tOYcmF2u"
        },
        {
          "title": "GTK4 Exploration",
          "short_description": "The Sugar desktop environment currently relies on GTK3, which is approaching EOL. This project aims to modernize Sugar by completing its migration to...",
          "description": "The Sugar desktop environment currently relies on GTK3, which is approaching EOL. This project aims to modernize Sugar by completing its migration to GTK4, ensuring long-term sustainability improved performance and give access to modern UI features. The work involves porting the core toolkit (sugar-toolkit-gtk3), updating the Sugar shell migrating key activities (Fructose set) (Given Time Permits) , and creating comprehensive documentation for upcoming contributors.",
          "student_name": "MostlyK",
          "code_url": null,
          "proposal_id": "KtiWMUWh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rsHsYZKy"
        },
        {
          "title": "Git backend for Turtle Blocks and Music Blocks",
          "short_description": "Music Blocks and Turtle Blocks lack a structured version control system, making it difficult for users to manage project history, collaborate, and...",
          "description": "Music Blocks and Turtle Blocks lack a structured version control system, making it difficult for users to manage project history, collaborate, and contribute effectively. This project aims to integrate Git-based version control, allowing users to track changes, fork projects, submit pull requests, and collaborate seamlessly.\n\nTo achieve this, I will develop a backend API that interacts with GitHub or GitLab, enabling repository creation, commit tracking, forking, and merging. A user-friendly frontend UI will be implemented to provide an intuitive experience for project management. \nDeliverables:\n-A backend API supporting Git operations (repository creation, commits, forks, PRs, merges)\n-A frontend \"Git Menu\" for managing project versions, viewing history, and contributing.\n-A \"Projects\" page displaying repositories with commit history and branches.\n-Robust testing and documentation to ensure maintainability.\n-Initial user testing with community contributors and educators.\nThe goal is to use GitHub as a back-end and database and use Git's powerful features to make learning more effective for students.",
          "student_name": "Nikhil-Bhatt",
          "code_url": null,
          "proposal_id": "Yevsh2rd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WmtwWvab"
        },
        {
          "title": "AI-powered Debugger for Music Blocks",
          "short_description": "Music Blocks is a visual programming environment that combines programming and music creation, but users often struggle to debug their projects due...",
          "description": "Music Blocks is a visual programming environment that combines programming and music creation, but users often struggle to debug their projects due to unclear error messages and a lack of guided assistance. This challenge limits the platform’s educational potential. To address this, the project proposes an AI-powered debugger that will analyze user projects, detect errors, and provide real-time, context-aware solutions. By leveraging open-source LLMs like LLaMA 3 and Retrieval-Augmented Generation (RAG), the debugger will understand Music Blocks-specific issues and offer structured guidance, helping users learn while troubleshooting.\nThe solution involves developing a JSON-to-text converter to interpret project structures, training an LLM on curated Music Blocks datasets, and implementing RAG to fetch relevant documentation and examples. A user-friendly debugger widget will be integrated into the Music Blocks interface, enabling seamless interaction with features like error detection, step-by-step explanations, and creative suggestions. The backend will use FastAPI for efficient API handling and AWS for scalable deployment, ensuring the system remains responsive and accessible to users worldwide.\nThe debugger will empower users to independently troubleshoot projects, enhance learning, and make Music Blocks more accessible. By combining AI with guided problem-solving, it aligns with Sugar Labs’ mission to foster creativity and education through open-source tools.",
          "student_name": "Om Santosh Suneri",
          "code_url": null,
          "proposal_id": "HoNzSpMt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/l4402WCJ"
        },
        {
          "title": "Music Blocks 4 Program Engine",
          "short_description": "This project will develop the core execution engine for Music Blocks 4, an educational platform that helps students explore music, mathematics, and...",
          "description": "This project will develop the core execution engine for Music Blocks 4, an educational platform that helps students explore music, mathematics, and programming through block-based coding. The Program Engine will allow users to create musical programs by arranging visual blocks and then execute these programs to generate music with precise timing.\n\nI will implement a robust Abstract Syntax Tree (AST) representation of programs, an interpreter that executes block instructions, a state manager to track variables and program state, and a scheduler for time-based musical operations. Key deliverables include a complete execution system for basic programming constructs, music generation capabilities, concurrent execution for multi-part compositions, and comprehensive error handling to provide clear feedback to users.\n\nThe end result will be a performant, reliable foundation that enables Music Blocks users to create, share, and learn through interactive musical programming, with special attention to educational use cases and accessibility.",
          "student_name": "Safwan Sayeed",
          "code_url": null,
          "proposal_id": "q5FZwPwX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5JJPNdip"
        },
        {
          "title": "Music Blocks 4 Masonry Module",
          "short_description": "This project aims to significantly improve the user experience within the Music Blocks v4 workspace by designing and implementing a modern...",
          "description": "This project aims to significantly improve the user experience within the Music Blocks v4 workspace by designing and implementing a modern drag-and-drop Palette system, an efficient brick rendering engine, and optimized interaction handling. The current system lacks modularity and intuitive interaction, limiting ease of use and extensibility.\n\nTo address this, I will deep dive into the existing Music Blocks v4 and builder module, leveraging libraries like React Aria, React Spectrum, and Storybook to build reusable UI primitives with accessibility and performance in mind. Key components include a configurable brick rendering engine, infinite scrolling workspace, and a dynamic palette with categorized blocks. Interactions like drag-and-drop, snapping, connection/disconnection, and AST (Abstract Syntax Tree) serialization will be enhanced for clarity and usability.\n\nDeliverables include an improved brick rendering and interaction logic, real-time visual feedback during user actions, support for infinite scrolling, fully functional Palette UI, comprehensive documentation, and a clean, testable codebase ready for future expansion. This work will lay a strong foundation for both end users and developers, enabling smoother creation and manipulation of musical blocks in the Music Blocks environment.",
          "student_name": "Saumya Shahi",
          "code_url": null,
          "proposal_id": "6DeIZrJU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/41SuFWum"
        },
        {
          "title": "Color sensor for Music Blocks for photos and real-time video.",
          "short_description": "Music Blocks has a feature to detect the color of pixels generated from drawing within the program, but it cannot detect the color of pixels from...",
          "description": "Music Blocks has a feature to detect the color of pixels generated from drawing within the program, but it cannot detect the color of pixels from images that are either uploaded or from a webcam. By adding a feature to detect color from both uploaded images and a live webcam stream, users would be able to implement Lego music notation for the blind and similarly interactive programs.\n\nThe goal of the project is to develop extended functionality to our existing tools of turtle/mouse glyph movement and limited color detection to sense color from uploaded images, as well as the real-time feed from a webcam. Upon successful implementation, the turtle/mouse glyph will be able to detect the color of pixels underneath it, regardless of whether those pixels were drawn by the turtle/mouse itself, part of an uploaded image stamped to the canvas, or part of a live webcam video feed into Music Blocks. One test of success is to run our Lego music notation for the blind project with a live feed. The result should be able to playback and record the abstract brick notation based on its contrasting colors.",
          "student_name": "ShubhamSingh1",
          "code_url": null,
          "proposal_id": "iwB9eB4A",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/N4KQIX8T"
        }
      ]
    },
    {
      "name": "Drupal Association",
      "image_url": "https://summerofcode.withgoogle.com/media/org/drupal-association/kfbn4ws0uftixkho-360.png",
      "image_background_color": "#ffffff",
      "description": "The best open source digital experience platform",
      "url": "https://drupal.org",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/drupal-association",
      "ideas_url": "https://www.drupal.org/project/gsoc",
      "guide_url": "https://www.drupal.org/community/contributor-guide/reference-information/google-summer-of-code/for-gsoc-students-where-to",
      "topics": ["web", "cloud", "DXP", "Massive community", "Inclusive"],
      "technologies": ["mysql", "javascript", "html", "php", "symfony"],
      "irc_channel": "https://www.drupal.org/community/contributor-guide/reference-information/talk/tools/slack",
      "contact_email": "",
      "mailing_list": "https://groups.drupal.org/google-summer-code",
      "twitter_url": "https://twitter.com/drupal",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Entity Display Manager Module",
          "short_description": "The Entity Display Manager module aims to simplify how entity displays are handled in Drupal. Currently, managing view modes and form displays across...",
          "description": "The Entity Display Manager module aims to simplify how entity displays are handled in Drupal. Currently, managing view modes and form displays across different entities can be tedious and repetitive. This project will introduce a centralized, user-friendly interface to configure, duplicate, and synchronize entity displays efficiently. By providing intuitive tools and supporting bulk operations, the module will improve developer productivity and site-building experience in Drupal.",
          "student_name": "Chinmayi D S",
          "code_url": null,
          "proposal_id": "OsVF96dD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ykLQlcjx"
        },
        {
          "title": "Integration of Augmentor AI plugin with DALL·E 3 OPEN AI model",
          "short_description": "This proposal aims to integrate OpenAI's dall·e 3 model into Augmentor's plugin framework, simplifying content creation by allowing the generation of...",
          "description": "This proposal aims to integrate OpenAI's dall·e 3 model into Augmentor's plugin framework, simplifying content creation by allowing the generation of high-quality images directly within Drupal using text prompts. \n\nThis project will involve developing a user-friendly interface for configuring image generation parameters and previewing results, integrating OpenAI API into Augmentor's module, and documenting the integration along the way.",
          "student_name": "Furo",
          "code_url": null,
          "proposal_id": "9e6AcCS6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GMSbojWG"
        },
        {
          "title": "AI-Powered Unified Accessibility Compliance Suite for Drupal - GSoC 2025 Proposal",
          "short_description": "This project proposes an AI-powered accessibility auditing and remediation toolkit tailored for Drupal environments. It integrates automated...",
          "description": "This project proposes an AI-powered accessibility auditing and remediation toolkit tailored for Drupal environments. It integrates automated accessibility scanners (e.g., Deque Axe API), and NLP models (such as GPT-4 or BLIP-2) to suggest intelligent alt-text and identify layout/media accessibility issues. A dynamic dashboard will be built to track scan results, remediation progress, and generate compliance documentation in formats like PDF and CSV.\nThe system will be developed using Symfony (backend), HTML+Twig (frontend templating), and MongoDB (for storing audit results and history). Key components include API communication layers, a feedback system for rating AI suggestions, and tight workflow integration with Drupal, enabling accessibility checks before content is published. The architecture emphasizes modularity, ethical AI use, and compatibility with WCAG standards.",
          "student_name": "Ned9776",
          "code_url": null,
          "proposal_id": "4WbiBZXE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XafQwRPZ"
        },
        {
          "title": "Assisting Modules in Drupal 11 Compatibility",
          "short_description": "This project focuses on upgrading high-impact modules in Drupal to be fully compatible with the upcoming Drupal 11 release. The work includes...",
          "description": "This project focuses on upgrading high-impact modules in Drupal to be fully compatible with the upcoming Drupal 11 release. The work includes identifying deprecated code, replacing it with supported APIs, writing automated tests, and ensuring backward compatibility. The deliverables will be high-quality, merge-ready module upgrades that support the Drupal ecosystem and reduce technical debt. The upgrades will follow Drupal's coding standards and be closely coordinated with module maintainers.",
          "student_name": "RAJAS SAMSE",
          "code_url": null,
          "proposal_id": "VZvQ3nAy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Rmosgrai"
        },
        {
          "title": "Vector Search Integration for Drupal: FAISS & Elasticsearch",
          "short_description": "This project aims to bring AI-powered semantic search to Drupal by integrating FAISS and Elasticsearch as pluggable vector search backends. FAISS...",
          "description": "This project aims to bring AI-powered semantic search to Drupal by integrating FAISS and Elasticsearch as pluggable vector search backends. FAISS offers fast, in-memory similarity search ideal for local use, while Elasticsearch supports distributed, scalable search for production. The goal is to build two provider modules under a shared VectorProviderInterface, allowing developers to switch between backends easily. The project will include embedding generation (via OpenAI or HuggingFace), indexing, Top-K similarity search, and admin configuration UI, along with Search API integration and a \"Similar Content\" block. This will give Drupal users modern search capabilities and lay the groundwork for future vector backend integrations.",
          "student_name": "Rigzin Yangdol",
          "code_url": null,
          "proposal_id": "XKgYbYkL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0117Q39b"
        },
        {
          "title": "Appwrite Integration Module for Drupal: Secure BaaS Integration for Modern Web Workflows",
          "short_description": "This project aims to develop a robust, secure, and extensible Drupal module that integrates with Appwrite, an open-source backend-as-a-service...",
          "description": "This project aims to develop a robust, secure, and extensible Drupal module that integrates with Appwrite, an open-source backend-as-a-service (BaaS). The module will enable seamless support for Appwrite’s authentication, file storage, and database APIs within Drupal’s architecture. By bridging these platforms, the module will empower developers to build dynamic, serverless applications while leveraging Drupal’s powerful CMS capabilities. The project will prioritize modularity, configurability, and maintainability, ensuring that it aligns with both Appwrite’s evolving API surface and Drupal’s best practices.\n\nProject Goals:\nDevelop a Drupal module that connects with Appwrite’s OAuth-based authentication system (supporting providers like Google, GitHub, Apple, etc.).\nEnable media file management by integrating with Appwrite's object storage APIs, reducing the dependency on traditional cloud storage solutions.\nIntegrate Appwrite’s document database to store and retrieve structured Drupal content efficiently.\nCreate an intuitive configuration interface within Drupal for managing all Appwrite-related settings.",
          "student_name": "Ritesh_Kumar_Singh",
          "code_url": null,
          "proposal_id": "D2TbqNLU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5QrB2MPf"
        },
        {
          "title": "AI-Powered Media Caption Generator",
          "short_description": "AI-Powered Media Caption Generator aims to build a smart Drupal module that automatically generates rich, customizable captions, alt text, and...",
          "description": "AI-Powered Media Caption Generator aims to build a smart Drupal module that automatically generates rich, customizable captions, alt text, and metadata for media uploads. It will use Hugging Face Transformers and OpenAI API for NLP-based captioning and Google Vision for image understanding. Users can personalize outputs by selecting tone, caption length (0–2000 characters), keywords, and emoji usage. The backend, built with Python (using FastAPI or Flask), will offer API-based integration with Drupal and support features like batch processing, real-time previews, feedback collection, and SEO metadata enhancement. Final deliverables include the AI backend, full Drupal integration, adaptive feedback system, and complete documentation.",
          "student_name": "Soham Lad",
          "code_url": null,
          "proposal_id": "Q3EhoM22",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/irxh4wgB"
        }
      ]
    },
    {
      "name": "The Palisadoes Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-palisadoes-foundation/d9zsxo0idjsl7kug-360.png",
      "image_background_color": "#ffffff",
      "description": "Social media and member management for non-profits",
      "url": "https://www.palisadoes.org",
      "category": "Social and communication",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-palisadoes-foundation",
      "ideas_url": "https://developer.palisadoes.org/docs/internships/gsoc/gsoc-ideas",
      "guide_url": "https://developer.palisadoes.org/docs/internships/gsoc/gsoc-introduction",
      "topics": ["web", "api", "networking", "ai", "mobile"],
      "technologies": [
        "python",
        "postgresql",
        "flutter",
        "graphql",
        "typescript"
      ],
      "irc_channel": "https://www.palisadoes.org/slack",
      "contact_email": "",
      "mailing_list": "https://www.freelists.org/list/palisadoes",
      "twitter_url": "",
      "blog_url": "https://www.palisadoes.org/news/",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Enhanced SwitchMap-NG Web Features",
          "short_description": "The existing SwitchMap-NG web UI relies on flask-table, which is outdated and limits improvements. The lack of visualization tools makes it difficult...",
          "description": "The existing SwitchMap-NG web UI relies on flask-table, which is outdated and limits improvements. The lack of visualization tools makes it difficult to interpret network data effectively. Additionally, there is currently no system in place to store historical bandwidth and location-related data in the database. As a result, generating historical bandwidth charts and device movement visualizations for long-term analysis is not possible.\nThis project focuses on modernizing the SwitchMap-NG web UI/UX to improve usability and expand adoption by the wider community. Key improvements include:\n1. Integrating a React-based frontend with the existing Flask backend to modernize the UI.\n2. Replacing deprecated packages with a modern alternative, such as React Table.\n3. Implementing network topology charts using CDP/LLDP data with react-graph-vis.\n4. Adding historical device movement visualization with React-Leaflet & OpenStreetMap.\n5. Introducing bandwidth charting for better insights using tools like Recharts.\n6. Containerizing the new UI for seamless deployment.\n7. Automating documentation generation and ensuring 100% test coverage.\n\nDeliverables:\n1. Modern React-Based UI replacing legacy table views\n2. Interactive Network Topology Visualization using CDP/LLDP data\n3. Historical Bandwidth and Movement Charts with time-based insights\n4. Containerized UI with install/config scripts for easy deployment\n5. Autogenerated Documentation and GitHub Actions integration\n6. 100% Test Coverage and fully enforced CI/CD pipelines",
          "student_name": "Abhi Murali",
          "code_url": null,
          "proposal_id": "Y3MuolbP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lXkF8ycI"
        },
        {
          "title": "Implementing Efficient Recurring Events and Solidifying Core Features",
          "short_description": "This proposal addresses the implementation of a scalable recurring events system for Talawa, focusing on efficient data management and association...",
          "description": "This proposal addresses the implementation of a scalable recurring events system for Talawa, focusing on efficient data management and association handling. Current event management in Talawa lacks support for recurring events in postgres branch, a critical feature for organization planning. The previous implementation faced scalability issues, particularly with memory consumption, transaction timeouts, and database bloat and no implementation to handle association like (action items, agenda items, attendance, etc).\nThe proposed solution introduces a \"Temporal Sliding Window with Inherited Associations\" approach that:\nSeparates recurrence patterns from event instances\nUses a materialization window to pre-generate near-term events\nImplements an association inheritance model to minimize data duplication\nEmploys background processing to maintain system performance",
          "student_name": "Divyanshu Gautam",
          "code_url": null,
          "proposal_id": "iqx9jEZQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/knuq1bth"
        },
        {
          "title": "Enhanced SwitchMap-NG Scalability",
          "short_description": "SwitchMap-NG currently faces scalability challenges in distributed networks, including data loss due to unreliable connections and slow polling when...",
          "description": "SwitchMap-NG currently faces scalability challenges in distributed networks, including data loss due to unreliable connections and slow polling when monitoring thousands of devices.\n\nMy proposed solution introduces a layered architecture: regional hubs will collect device data from edge pollers, buffer it locally during outages, and forward it to a central server.\n\nTo improve performance, I’ll implement asynchronous polling, decouple frequent performance updates (e.g., every 5 minutes) from less frequent status checks (e.g., hourly), and introduce historical data tracking along with new device metrics like CPU, memory, and power usage.\n\nThe final deliverables will include a fully containerized deployment alongside local buffering, complete testing, automated documentation.\n\nThis will significantly improve the reliability, speed, and scalability of SwitchMap-NG, making it better suited for large-scale network monitoring and management.",
          "student_name": "imexyyyyy",
          "code_url": null,
          "proposal_id": "37u7weYr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DxsDARQQ"
        },
        {
          "title": "Microkernel Architecture for Drop-in Plugins",
          "short_description": "This project introduces a microkernel-based drop-in plugin system that enables seamless integration of new features like payments, analytics, and AI...",
          "description": "This project introduces a microkernel-based drop-in plugin system that enables seamless integration of new features like payments, analytics, and AI tools without modifying the core API, Admin, or App codebases. A dedicated plugin manager will handle plugin discovery, activation, and updates, while predefined extension points will allow plugins to inject functionality where needed. The system will include a secure, CDN-backed plugin store with cryptographic validation, support for containerized AI/ML plugins, and ready-to-use plugins such as a payment gateway and an AI summarizer powered by Hugging Face models. This architecture will improve scalability, foster community contributions, and make Talawa more adaptable to future needs.",
          "student_name": "Jai Pannu",
          "code_url": null,
          "proposal_id": "Zb6o0FRQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/r0JYdqkQ"
        },
        {
          "title": "Enhanced-notification",
          "short_description": "Refactor the messaging and notification features of the Talawa Admin code base to reduce technical debt, enhance security, and introduce new features...",
          "description": "Refactor the messaging and notification features of the Talawa Admin code base to reduce technical debt, enhance security, and introduce new features related to notifications. Focus on improving the features and related UI/UX while ensuring the code meets modern best practices.",
          "student_name": "Manish Biswal",
          "code_url": null,
          "proposal_id": "HhO57Ooo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UngUZLGi"
        },
        {
          "title": "Improved Usability & Hardening - Talawa Mobile",
          "short_description": "The Talawa Mobile App Refactor and Enhancement project addresses technical debt, usability issues, and security concerns to deliver an optimized user...",
          "description": "The Talawa Mobile App Refactor and Enhancement project addresses technical debt, usability issues, and security concerns to deliver an optimized user experience. Key improvements include a robust security framework, real-time notifications, enhanced event management features, semiotic UX upgrades like animations and visual cues, and code optimization for modularity and efficiency. These updates aim to create a seamless, secure, and user-friendly app.",
          "student_name": "Mohit Maulekhi",
          "code_url": null,
          "proposal_id": "omdjhSjy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cSr38uDj"
        },
        {
          "title": "Talawa Enhanced Testing",
          "short_description": "To enhance the testing infrastructure across the Talawa ecosystem by introducing a robust, automated, and scalable testing strategy. This project...",
          "description": "To enhance the testing infrastructure across the Talawa ecosystem by introducing a robust, automated, and scalable testing strategy. This project will implement End-to-End (E2E) testing for the Talawa Admin and Mobile applications, integrate AI-powered tools for automated unit test generation, and establish custom checks to enforce best coding practices. It will also optimize memory usage to improve performance and reduce application bloat. The deliverables include a complete E2E test suite, AI-integrated unit test automation, improved CI/CD workflows with preventive checks, and a more efficient, maintainable codebase.",
          "student_name": "syedali237",
          "code_url": null,
          "proposal_id": "SB4kaaWm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dBNdnkCt"
        }
      ]
    },
    {
      "name": "Keploy",
      "image_url": "https://summerofcode.withgoogle.com/media/org/keploy/txoec8qr8fyegtmv-360.png",
      "image_background_color": "#ffffff",
      "description": "Unit, API test generation agent using AI & EBPF",
      "url": "https://keploy.io",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/keploy",
      "ideas_url": "https://github.com/keploy/gsoc/tree/main/2025",
      "guide_url": "https://github.com/keploy/keploy/blob/main/CONTRIBUTING.md",
      "topics": [
        "AI/ML",
        "API Testing",
        "Dev Tool",
        "Functional Testing",
        "AI Testing Agent"
      ],
      "technologies": ["python", "golang", "node", "ai", "MERN"],
      "irc_channel": "https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw",
      "contact_email": "mailto:hello@keploy.io",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/Keployio",
      "blog_url": "https://keploy.io/blog",
      "facebook_url": "https://www.linkedin.com/company/keploy/",
      "num_projects": 6,
      "projects": [
        {
          "title": "TestSuite Idempotency Checker",
          "short_description": "Keploy currently needs an automated way to detect idempotency violations and handle noisy fields in test cases. This leads to inconsistencies in test...",
          "description": "Keploy currently needs an automated way to detect idempotency violations and handle noisy fields in test cases. This leads to inconsistencies in test results and potential flaky tests, making it difficult for users to validate API behavior reliably.\n\nThe solution introduces an idempotency request replayer that verifies if an API request produces consistent responses across multiple replays. It also implements noise detection and configuration mechanisms to identify and manage dynamic fields that can cause flaky tests.",
          "student_name": "Ahmed Mamdouh",
          "code_url": null,
          "proposal_id": "E7zRuZHf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BzgWKdu5"
        },
        {
          "title": "AI-Powered Open-Source Code Review Agent (Using any CI/CD workflow)",
          "short_description": "The project aims to develop an intelligent code review agent that integrates with GitHub and other version control systems (VCS). This tool will...",
          "description": "The project aims to develop an intelligent code review agent that integrates with GitHub and other version control systems (VCS). This tool will provide automated, insightful feedback on code quality by combining traditional static analysis with AI-powered insights.\n\nProblem Being Solved\nCode reviews are often time-consuming and inconsistent, especially when identifying complex issues such as security vulnerabilities, performance bottlenecks, and maintainability concerns. This project addresses these challenges by automating the review process while providing actionable, contextual feedback.\n\nProposed Solution\nThe solution employs a modular webhook-based architecture with the following components:\n1. A webhook receiver to capture GitHub events (e.g., pull request creations/updates).\n2. A code fetcher to retrieve and parse changed files.\n3. An orchestrator to coordinate multiple analysis tools.\n4. A result aggregator to combine findings and remove duplicates.\n5. A response handler to post intelligent comments directly on pull requests.\n\nKey Deliverables\n1. A system that provides actionable, contextual feedback rather than merely flagging issues.\n2. Support for multiple programming languages (initially Go, JavaScript, and Python).\n3. Implementation of dependency vulnerability detection.\n4. An AI-powered layer to enhance basic linter outputs.\n5. Extensibility for future language support and additional features.",
          "student_name": "Gaurav ( euclid )",
          "code_url": null,
          "proposal_id": "ZNHpOyPt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lViOdKco"
        },
        {
          "title": "API contract matching - Adding Features and Platform support",
          "short_description": "The project tackles inefficiencies in API contract testing for microservices, focusing on schema management, validation, and consistency across...",
          "description": "The project tackles inefficiencies in API contract testing for microservices, focusing on schema management, validation, and consistency across distributed systems, which often cause bugs and delays due to fragmented schemas and poor versioning. I propose enhancing Keploy’s contract testing by implementing local schema storage as a mock registry, unifying schemas into a single service contract, adding advanced comparison with dependency resolution and real-time validation, and introducing provider-driven testing with contract publishing and rollback capabilities. My solution builds on a Go-based prototype, utilizing tools like Cobra, YAML, and Docker, with extensibility to S3. Deliverables include an integrated CLI with versioning and multi-format support, schema merging with diffing and real-time validation, and a provider-driven testing framework with rollback, all supported by comprehensive documentation and tests. This will streamline microservice interactions, ensuring scalability and consistency for developers.",
          "student_name": "Harsh Vashishtha Sharma",
          "code_url": null,
          "proposal_id": "XkVHtju5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xqiYOsI7"
        },
        {
          "title": "OSS Code Indexer for Efficient Retrieval",
          "short_description": "Keploy - OSS Code Indexer for Efficient Retrieval. (Project-2) Problem solved - Current AI models struggle to generate high-quality Unit Tests for...",
          "description": "Keploy - OSS Code Indexer for Efficient Retrieval. (Project-2)\n\nProblem solved - Current AI models struggle to generate high-quality Unit Tests for large codebases without a deep, structured understanding of the source code.\n\nSolution Plan- \n1. I implemented code parsing using tree-sitter to create semantic chunks, preserving essential context.\n2. Then generating embeddings for these chunks with Gemini, openAI, huggigface and store them in a Milvus vector database.\n3. I'm utilizing HNSW indexing within Milvus for efficient semantic similarity search.\n4. Then I have extracted code relationships (function calls, class inheritance etc.) and store them as a knowledge graph in Neo4j.\n5. Embeddings are generated with Gemini :- https://huggingface.co/spaces/mteb/leaderboard\n6. I have developed a dynamic indexing mechanism (using file watching/Git hooks, potentially enhanced by Difftastic) to keep both Milvus and Neo4j synchronized with code changes.\n7. Then I build a hybrid retrieval system querying both Milvus (for semantic relevance) and Neo4j (for structural context).\n8. Then I integrated this combined context into Keploy's existing Unit Test Generation (UTG) workflow, feeding it to the Gemini API for test creation.\n9.  Then I need further suggestion to implement an LLM-as-a-judge component to evaluate the generated tests.\n\nDeliverables:- A robust GraphRAG system integrated into Keploy. This includes codebase indexing (vector embeddings in Milvus, structural graph in Neo4j), dynamic index updates, hybrid context retrieval, and integration with the Gemini, leading to substantially improved Unit Test Generation quality and relevance for users with large or complex codebases.\n\nThanks.\nRegards\nSparsh.",
          "student_name": "Sparshh",
          "code_url": null,
          "proposal_id": "HsWu1rF1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/wIsioRXL"
        },
        {
          "title": "Keploy Dashboard - Modular Metrics Visualization Platform",
          "short_description": "Building upon a comprehensive Proof of Concept (POC) [https://poc-frontend-beta.vercel.app/] developed before the GSoC application, this proposal...",
          "description": "Building upon a comprehensive Proof of Concept (POC) [https://poc-frontend-beta.vercel.app/] developed before the GSoC application, this proposal aims to transform the existing prototype into a robust, open-source dashboard solution for Keploy. The project will leverage the foundation of the POC repositories (Backend: github.com/Swapnendu003/poc-backend, Frontend: github.com/Swapnendu003/poc-frontend) to create a comprehensive platform that transforms complex software development metrics into intuitive, customizable visualizations. By developing a modular, real-time dashboard with advanced widget systems, intelligent data processing, and flexible template configurations, the project will empower development teams to gain unprecedented insights into their code merge and test activities. Utilizing Next.js, Go, and modern web technologies, the dashboard will provide a scalable, extensible tool that adapts to diverse project needs, offering real-time updates, in-depth analytics, and a user-friendly interface for tracking and analyzing software development performance.",
          "student_name": "Swapnendu Banerjee",
          "code_url": null,
          "proposal_id": "OGQdqSf9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4QMWwr8y"
        },
        {
          "title": "Improve Keploy Open-Source Playground console",
          "short_description": "The Keploy Open Source Playground Console is an interactive web platform that allows developers to explore and test Keploy’s features directly in the...",
          "description": "The Keploy Open Source Playground Console is an interactive web platform that allows developers to explore and test Keploy’s features directly in the browser without any local setup. This project aims to modernize the Playground by introducing a dynamic backend with containerized environments supporting multiple programming languages, enabling real-time code execution, test case generation via Keploy’s CLI, and delivering outputs and YAML files seamlessly to the frontend. Alongside backend improvements, the frontend will be revamped for an intuitive user experience with better code editing, live feedback, and enhanced error handling, ultimately improving developer onboarding, experimentation, and engagement with Keploy.",
          "student_name": "Yaten Dhingra",
          "code_url": null,
          "proposal_id": "aL145jek",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XxAVrIBL"
        }
      ]
    },
    {
      "name": "OpenAstronomy",
      "image_url": "https://summerofcode.withgoogle.com/media/org/openastronomy/3wvadxwxjc2arepg-360.png",
      "image_background_color": "#ffffff",
      "description": "Look at the Universe with the power of Open Source",
      "url": "https://openastronomy.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/openastronomy",
      "ideas_url": "https://openastronomy.org/gsoc/gsoc2025/#/projects",
      "guide_url": "https://openastronomy.org/gsoc/student_guidelines.html",
      "topics": [
        "image processing",
        "astronomy",
        "data analysis",
        "solar physics",
        "high energy astrophysics"
      ],
      "technologies": ["c", "python", "c++", "julia"],
      "irc_channel": "https://openastronomy.element.io/#/room/#openastronomy:openastronomy.org",
      "contact_email": "mailto:openastronomy.organization@gmail.com",
      "mailing_list": "https://community.openastronomy.org/",
      "twitter_url": "https://astrodon.social/@OpenAstronomy",
      "blog_url": "https://openastronomy.org/Universe_OA/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Electronic spectra for RADIS",
          "short_description": "This project will extend RADIS to calculate electronic spectra, enabling analysis of high-temperature phenomena in plasmas, flames, and exoplanet...",
          "description": "This project will extend RADIS to calculate electronic spectra, enabling analysis of high-temperature phenomena in plasmas, flames, and exoplanet atmospheres. Currently, RADIS excels at rovibrational calculations but lacks electronic capabilities. This project will implement electronic spectroscopy in RADIS by leveraging existing ExoMol integration, adding separate electronic temperature parameters, implementing population distributions for electronic states, and creating functions for manual adjustment of electronic band intensities. Deliverables include OH electronic spectra with manual band adjustment capability, implementation of electronic temperature handling, non-equilibrium OH spectrum calculation, and extension to support electronic spectra for all ExoMol molecules. This enhancement will make RADIS a comprehensive spectroscopic tool capable of handling the full range of molecular transitions within a unified framework.",
          "student_name": "Darshan Patil",
          "code_url": null,
          "proposal_id": "XZKy7plx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/P7UQlBwc"
        },
        {
          "title": "Time Series Analysis in Stingray.jl",
          "short_description": "This project aims to enhance Stingray.jl, the Julia-based implementation of the Stingray library, to advance X-ray timing analysis in high-energy...",
          "description": "This project aims to enhance Stingray.jl, the Julia-based implementation of the Stingray library, to advance X-ray timing analysis in high-energy astrophysics. The primary goal is to leverage Julia’s performance benefits to develop analysis tools and workflows that are challenging to implement efficiently in Python-based environments. Key contributions include creating robust frameworks for handling EventLists and Lightcurves, improving Fourier transform and periodogram modules, updating dependencies, and building reusable plotting recipes for power spectra and periodograms. An important aspect of the project is to enhance I/O operations for FITS files, thereby supporting both simulated and real datasets such as NICER observations.\n\nHaving already gained familiarity with the Stingray codebase through multiple pull requests—demonstrating contributions in event reading, data plotting, and cross-spectral analysis—the proposal builds on this solid foundation. With continued guidance from mentors and proactive community engagement, the work focuses on refining timing tools, integrating advanced analysis features like coherence spectra and energy-resolved variability, and ensuring a stable, scalable, and modular framework. The final deliverable will empower the astrophysics community by providing a cutting-edge toolset that streamlines complex timing analysis tasks and drives novel scientific insights.",
          "student_name": "Kashish Shrivastav",
          "code_url": null,
          "proposal_id": "IfDjxgAi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bDXTorET"
        },
        {
          "title": "Interactive Database for X-ray observations",
          "short_description": "The project aims to create an interactive database for X-ray observations, enabling on-the-fly visualization of data products generated with the...",
          "description": "The project aims to create an interactive database for X-ray observations, enabling on-the-fly visualization of data products generated with the Stingray library. The final product will be a quick-look dashboard application that stores, analyzes, and organizes key data products from multiple observations, allowing the astrophysics research community to track and predict the evolution of black hole binaries. By removing the difficulties of traditional data processing procedures—which vary across missions—this tool simplifies the workflow, enabling astrophysicists to extract all data products with just one click. It also provides the functionality to study multiple data products from an observation in real time, offering a comprehensive view of these sources' phenomenology and ultimately enhancing the efficiency of scientific decision-making.",
          "student_name": "MOHAMMAD ADNAN",
          "code_url": null,
          "proposal_id": "mddnlYxD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j5YJQN6s"
        },
        {
          "title": "[RADIS] Optimizing Radis app",
          "short_description": "The RADIS app is a web application designed for high-resolution infrared molecular spectra using RADIS. Instead of requiring users to write code,...",
          "description": "The RADIS app is a web application designed for high-resolution infrared molecular spectra using RADIS. Instead of requiring users to write code, this project focuses on developing an intuitive user interface (UI). It leverages RADIS internally to generate spectra, with its optimized algorithms enabling the computation of millions of spectral lines within minutes. However, certain enhancements are needed. This project aims to improve the user experience by introducing advanced features, modernizing the UI, optimizing performance through caching, and ensuring system reliability by establishing comprehensive test coverage.",
          "student_name": "Mohy Elden Khalid",
          "code_url": null,
          "proposal_id": "HVgjDmRn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iYVASbTw"
        },
        {
          "title": "Fast Parsing of Large Databases and Execution Bottlenecks",
          "short_description": "The RADIS code was developed for the characterization of plasmas, flames and atmospheres. High-temperature spectral calculations are required to...",
          "description": "The RADIS code was developed for the characterization of plasmas, flames and atmospheres. High-temperature spectral calculations are required to resolve the shape of tens of millions of lines, which is the usual performance bottleneck. RADIS implements a new algorithm to compute these lineshapes and is already one of the fastest line-by-line spectral codes available. It can also compute many different types of spectra (absorption/emission/equilibrium / non-equilibrium). In a typical calculation, a database of coefficients is loaded and these coefficients are multiplied according to physics laws to generate a set of line strengths in a spectrum. RADIS can also handle different molecular databases such as HITRAN, HITEMP, EXOMOL, and GEISA.\n\nWith more and more lines added to the databases, some files grew considerably in size. To be as fast as possible, RADIS convert compressed databases into the HDF5 format. This conversion also increases the size of the files which can take hours to be written in the hard drive (2-3 hours for HITEMP CO2 in its 2025 version). The objective of this project is to accelerate the parsing to HDF5 files.",
          "student_name": "Pratham Hole",
          "code_url": null,
          "proposal_id": "YccBzIme",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/va1YConE"
        }
      ]
    },
    {
      "name": "Neuroinformatics Unit",
      "image_url": "https://summerofcode.withgoogle.com/media/org/neuroinformatics-unit/ebzgcbxkxvbe9igk.png",
      "image_background_color": "#ffffff",
      "description": "Open-source tools for neuroscience and ML",
      "url": "https://neuroinformatics.dev",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/neuroinformatics-unit",
      "ideas_url": "https://neuroinformatics.dev/get-involved/gsoc",
      "guide_url": "https://neuroinformatics.dev/get-involved/gsoc/guidelines",
      "topics": [
        "visualization",
        "neuroscience",
        "data-science",
        "Computer-Vision",
        "neuroanatomy"
      ],
      "technologies": ["python", "numpy", "pytorch", "Scipy", "napari"],
      "irc_channel": "https://neuroinformatics.zulipchat.com",
      "contact_email": "mailto:code@adamltyson.com",
      "mailing_list": "",
      "twitter_url": "https://x.com/swc_niu",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "BrainGlobe: Automating Region Selection in brainglobe-registration",
          "short_description": "Synopsis: This project aims to enhance the brainglobe-registration tool by automating the selection of atlas regions for aligning 2D or 3D brain...",
          "description": "Synopsis:\n\nThis project aims to enhance the brainglobe-registration tool by automating the selection of atlas regions for aligning 2D or 3D brain images to a standard anatomical reference via brainglobe-atlasapi. Currently, this process is manual, time-consuming, and subjective, posing a barrier to reproducibility and efficiency. By introducing a new preprocessing step that automatically identifies the optimal atlas region – using methods such as adaptive grid search, machine learning, or Bayesian optimisation – this project will streamline the workflow and improve accuracy. Deliverables include at least two implemented approaches, benchmarking, comprehensive testing, full documentation, and a blog post to showcase the new functionality.\n\nThis automation directly benefits my research in paediatric radiotherapy, where mapping histology images to an atlas is essential for analysing cellular behaviour across brain regions. By making this process faster and more robust, it not only enhances my own work but also enables broader adoption of BrainGlobe tools by researchers in neuroscience and healthcare, even those without extensive anatomical expertise.\n\nMinimal Set of Deliverables:\n\n•\tImplement a new preprocessing step to automatically select the atlas region.\n•\tCompare at least two region-selection methods (e.g., adaptive grid search vs ML/Bayesian optimisation).\n•\tAdd tests to validate the new functionality.\n•\tDocument the new pipeline and add usage instructions.\n•\tWrite a blog post showcasing the project and results.",
          "student_name": "Saarah Hussain",
          "code_url": null,
          "proposal_id": "xZdss07P",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7Xk4Fl7t"
        },
        {
          "title": "Datashuttle: Allow Google Drive or AWS as remote storage (Shrey)",
          "short_description": "This is a proposal to extend Datashuttle's functionality to allow connections to Google Drive and AWS buckets as remote storage options. This project...",
          "description": "This is a proposal to extend Datashuttle's functionality to allow connections to Google Drive and AWS buckets as remote storage options. This project aims to improves the flexibility and adoption of Datashuttle to allow neuroscience researchers use a variety of storage options with the most popular ones being Google Drive and AWS buckets.\n\nThis will be done by extending Rclone's wrapping of Datashuttle and extending the terminal user interface to allow connections to Google Drive and AWS buckets. \n\n**Deliverables**\n\n- Support for setting up connections to Google Drive and AWS and transferring data in the Datashuttle's Python API using Rclone.\n- TUI tabs and screens to enable users to setup connections to Google Drive and AWS and transfer data via the TUI.\n- Integration and TUI tests for the implemented features.\n- Documentation for setting up Google Drive or AWS as central storage.",
          "student_name": "Shrey Singh",
          "code_url": null,
          "proposal_id": "MdUK4Ajz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/33o1XAWV"
        }
      ]
    },
    {
      "name": "Zulip",
      "image_url": "https://summerofcode.withgoogle.com/media/org/zulip/sx5ruvwv6nyugbk7-360.png",
      "image_background_color": "#ffffff",
      "description": "Organized chat for distributed teams",
      "url": "https://zulip.com/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/zulip",
      "ideas_url": "https://zulip.readthedocs.io/en/latest/outreach/gsoc.html",
      "guide_url": "https://zulip.readthedocs.io/en/latest/outreach/apply.html",
      "topics": [
        "great developer tooling",
        "visual design",
        "teaching quality codebase",
        "team chat",
        "integrations"
      ],
      "technologies": ["python", "django", "flutter", "css", "typescript"],
      "irc_channel": "https://chat.zulip.org/",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://blog.zulip.com/",
      "facebook_url": "",
      "num_projects": 14,
      "projects": [
        {
          "title": "Improve Zulip Integration Library & Feature Around Config Views, Admin Resets, and Watched Phrases",
          "short_description": "For my project with Zulip, I propose to elevate the platform by finalizing and expanding incomplete features, enhancing webhook integrations, and...",
          "description": "For my project with Zulip, I propose to elevate the platform by finalizing and expanding incomplete features, enhancing webhook integrations, and resolving existing issues. I will commit 25-35 hours per week over the 12-week project period to deliver impactful, high-quality improvements, including creating configurable navigation views, enabling administrators to reset user settings, addressing integration bugs, adding new integrations, and strengthening the integration framework. Throughout, I'll leverage my skills and community support to deliver impactful contributions while prioritizing code quality and collaboration.",
          "student_name": "Aditya Kumar Kasaudhan",
          "code_url": null,
          "proposal_id": "DpGQ03VV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5UBGdwnl"
        },
        {
          "title": "Cluster of priority features focused around message feed and editing",
          "short_description": "For my GSoC project, I wish to implement larger full-stack features while continuing to investigate and fix bugs in the areas I'm familiar with....",
          "description": "For my GSoC project, I wish to implement larger full-stack features while continuing to investigate and fix bugs in the areas I'm familiar with. These areas include the message feed, message editing, emojis, popovers, search, sidebars, settings, and invitations. The issues I specifically aim to solve this summer are: Dates should be “Jump to Date” buttons, Add a “Block a User” feature, UI for message reminders, Make read receipts always visible in direct message conversations, Limit who can resolve a topic to those who can post, Allow the deletion of items in a message’s edit history, Add a “Frequently Used” section to the emoji picker, Ensure the search filter updates with a single click when a filter is removed, and Indicate on the user card when an imported account has not been activated.",
          "student_name": "Aman (whilstsomebody)",
          "code_url": null,
          "proposal_id": "zqKP3Xjm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TMaH7Aaf"
        },
        {
          "title": "Features around Zulip’s search, message actions, API, integrations and overall UX.",
          "short_description": "The project involves implementing a cluster of priority and user requested features: 1. Adding search operators for date and supporting new...",
          "description": "The project involves implementing a cluster of priority and user requested features:\n1. Adding search operators for date and supporting new functionality in existing operators such as searching from multiple channels.\n2. Copy and paste enhancements\n3. Compose validation\n4. User mention pills, markdown and typeahead support in /todo widget\n5. Features around User groups\n6. Adding new APIs and modifying existing ones.\n7. Integrations around Zendesk, Vercel and GitLab. \n8. UI improvements related to the extended stream description\n9. Message reaction narrow and notifications for reactions.\n10. Selecting multiple messages to perform bulk-delete, bulk-move operations.",
          "student_name": "Apoorva Pendse",
          "code_url": null,
          "proposal_id": "UUSlM2tg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Q1ro054m"
        },
        {
          "title": "Cluster of priority features and completing some unfinished projects",
          "short_description": "My main objective is to implement on a cluster of priority features and complete some unfinished projects. I feel that these issues would greatly...",
          "description": "My main objective is to implement on a cluster of priority features and complete some unfinished projects. I feel that these issues would greatly improve the utility and UX of the Zulip web app. I am familiar with many areas of the codebase, and have been exploring those which are relevant to the issues in the proposal. Same goes for the unfinished projects, some of which are my own from the previous year.",
          "student_name": "Kislay U. Verma",
          "code_url": null,
          "proposal_id": "otn3qE5U",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fL3BMJHf"
        },
        {
          "title": "Cluster of priority features focused on search filters and setting areas",
          "short_description": "This project aims to implement a set of high-priority features in Zulip, focusing on improvements to the search filter and settings areas. On the...",
          "description": "This project aims to implement a set of high-priority features in Zulip, focusing on improvements to the search filter and settings areas. \nOn the search side, it introduces new filters such as `channels:all`, `channels:subscribed`, support for searching in multiple channels, and exact phrase matching.\n In the settings section, it proposes adding group-based, channel-level permissions for resolving and creating topics, along with a channel-level setting to enforce mandatory email notifications for users.",
          "student_name": "Kumar Aniket",
          "code_url": null,
          "proposal_id": "5TYV04CI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AtsZHFbc"
        },
        {
          "title": "Cluster of priority features focused on channel settings",
          "short_description": "This project proposal focuses on implementing a set of high-priority features in the zulip/zulip repository, specifically around enhancing...",
          "description": "This project proposal focuses on implementing a set of high-priority features in the zulip/zulip repository, specifically around enhancing channel-level settings and introducing support for creating and managing channel groups within an organization.",
          "student_name": "Kunal Sharma",
          "code_url": null,
          "proposal_id": "16OMPOLh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ArbRx2eI"
        },
        {
          "title": "Cluster of priority features around settings panel, search filters and UI redesign",
          "short_description": "This project focuses on improving the overall user experience and feature completeness in Zulip’s settings panel, search filters, and UI components....",
          "description": "This project focuses on improving the overall user experience and feature completeness in Zulip’s settings panel, search filters, and UI components. By addressing a curated set of issues that have been prioritized by the community and where I already have hands-on experience, I aim to deliver impactful and user-focused enhancements.\n\nKey areas include redesigning and refactoring parts of the settings interface (such as the creation of an Imported Users settings panel, phone number custom profile fields, and making self-role management possible for admins), improving search and filtering capabilities (by adding filters like resolved/unresolved in Inbox and stream filters in Recent Topics), and making Zulip more customizable (e.g., default link preview visibility, hiding spammer emails from non-admins, and flexible name change permissions).\n\nAdditionally, the project involves UI/UX improvements like migrating all buttons to the modern action-button framework and extending the messages_overlay system for advanced message movement interactions.",
          "student_name": "Maneesh Shukla",
          "code_url": null,
          "proposal_id": "jI6XLVS1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jmG4TO0R"
        },
        {
          "title": "Migrate Zulip’s Direct Message Recipient Data Structures to a New Model",
          "short_description": "In Zulip, each message has a sender (linked to UserProfile) and a recipient (referencing the Recipient model). The Recipient model supports three...",
          "description": "In Zulip, each message has a sender (linked to UserProfile) and a recipient (referencing the Recipient model). The Recipient model supports three types:\n1. Personal -- linked to a single UserProfile\n2. Stream -- linked to a Stream\n3. Direct Message Group -- linked to a DirectMessageGroup\n\nCurrently, 1:1 direct messages use the Personal type that directly links recipients to individual users. This project aims to migrate them to use the Direct Message Group type instead.\n\nThe migration should be seamless with minimal downtime. It involves:\n1. Updating the codebase to support 1:1 DMs using DirectMessageGroup.\n2. Running a backfill migration to create a DirectMessageGroup for each user pair with existing 1:1 messages.\n3. Cleaning up legacy code and adding additional fields that are needed.\n\nThis migration enables per-conversation settings for direct messages, and features like pinning or hiding DM conversations can be implemented more easily.",
          "student_name": "Mohammad Reza Kianifar",
          "code_url": null,
          "proposal_id": "WWCij2Xr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZAHeChuF"
        },
        {
          "title": "Improve Zulip's mirroring and data import tools",
          "short_description": "This proposal aims to improve existing data import tools, such as better conversion of Slack to Zulip features when importing Slack's data export, as...",
          "description": "This proposal aims to improve existing data import tools, such as better conversion of Slack to Zulip features when importing Slack's data export, as well as starting new data import and mirroring tools for Discord.",
          "student_name": "Pieter Cardillo Kwok",
          "code_url": null,
          "proposal_id": "JZdkHtxO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1tTNDNSa"
        },
        {
          "title": "Improve messages and permissions.",
          "short_description": "This project will focus on improving Zulip web app and shipping new features. Deliverables focuses on zulip message system and permission settings...",
          "description": "This project will focus on improving Zulip web app and shipping new features. Deliverables focuses on zulip message system and permission settings but this will probably end up reaching wider areas of Zulip.",
          "student_name": "Pratik Chanda",
          "code_url": null,
          "proposal_id": "1XakXOuD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1ooHmJMl"
        },
        {
          "title": "‭Migrate Direct Message Recipient data structure,‬ ‭and add related settings‬",
          "short_description": "‭This project aims towards migrating Zulip’s 1:1 DMs to use‬‭ DirectMessageGroup‬ ‭(with group size of 2), and work on settings enabled by the...",
          "description": "‭This project aims towards migrating Zulip’s 1:1 DMs to use‬‭ DirectMessageGroup‬ ‭(with group size of 2), and work on settings enabled by the infrastructure work such as –‬\n‭Hide DM conversations‬, ‬‭Pin DM conversations‬‭, and ‬‭Name DM conversations.‬",
          "student_name": "Rohan Gudimetla",
          "code_url": null,
          "proposal_id": "mUdKqGwA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qz3jax54"
        },
        {
          "title": "Cluster of priority features (focused on message editing and settings areas)",
          "short_description": "This project aims to implement high-priority features in the Zulip server and web application, focusing on message editing and settings. In message...",
          "description": "This project aims to implement high-priority features in the Zulip server and web application, focusing on message editing and settings. In message editing, the project aims to add support for moving messages by recency, improve permission checks by hiding specific message move options when not allowed, refine how message move history is displayed, and enable deleting items from a message’s edit history.\n\nIn settings, the project aims to introduce group-based, per-channel permissions for those who can create and edit topics to give organizations better control over channel permissions.",
          "student_name": "Saubhagya Patel",
          "code_url": null,
          "proposal_id": "qT48iutw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/emVI3dqt"
        },
        {
          "title": "Future Zulip client using Flutter",
          "short_description": "This project aims to implement a handful of issues in the zulip-flutter repository to make it ready for the launch milestone. This will be a large...",
          "description": "This project aims to implement a handful of issues in the zulip-flutter repository to make it ready for the launch milestone. This will be a large project (350+ hours) with 25 issues planned for now, but most probably this number will fluctuate based on the feedback from the mentor(s). These issues are related to various areas in the Zulip Flutter application such as compose, message list, model, API, setting, and home. In my initial contributions, I have already addressed some issues related to different aspects of the app, i.e., inbox, compose, and message list. This has given me a relatively firm grasp of the project and I feel confident enough to complete the selected issues.",
          "student_name": "Sayed Mahmood Sayedi",
          "code_url": null,
          "proposal_id": "7067yHGY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XJbZhv87"
        },
        {
          "title": "Improving the framework for Zulip’s library of native integrations.",
          "short_description": "My proposal aims to improve the framework for Zulip's library of native integrations. I plan to implement new integration features, fix broken...",
          "description": "My proposal aims to improve the framework for Zulip's library of native integrations. I plan to implement new integration features, fix broken integrations caused by changes in payloads, add payload verification for some integrations, and introduce support for new webhook events in existing integrations.",
          "student_name": "Varun Kolanu",
          "code_url": null,
          "proposal_id": "PuAQ4E8z",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Kmz7FjeW"
        }
      ]
    },
    {
      "name": "FLARE",
      "image_url": "https://summerofcode.withgoogle.com/media/org/flare/6so0wjs76qeewe9v-360.png",
      "image_background_color": "#ffffff",
      "description": "Industry leading malware analysis",
      "url": "https://www.mandiant.com/",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/flare",
      "ideas_url": "https://github.com/mandiant/flare-gsoc/blob/2025/doc/project-ideas.md",
      "guide_url": "https://github.com/mandiant/flare-gsoc/blob/2025/doc/contributor-guidance.md",
      "topics": [
        "emulation",
        "disassembly",
        "decompilation",
        "malware-analysis",
        "reverse-engineering"
      ],
      "technologies": ["python", "ida-pro", "Ghidra"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://github.com/mandiant/flare-gsoc/discussions",
      "twitter_url": "https://twitter.com/Mandiant",
      "blog_url": "https://www.mandiant.com/resources/blog",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Multi-Backend Abstraction Layer with Binary Ninja/Ghidra Support",
          "short_description": "Xrefer currently functions as an IDA plugin for static binary feature extraction. The goal of this project is to abstract Xrefer’s core functionality...",
          "description": "Xrefer currently functions as an IDA plugin for static binary feature extraction. The goal of this project is to abstract Xrefer’s core functionality into a flexible multi-backend pipeline supporting static analysis on IDA, Ghidra and Binary Ninja.",
          "student_name": "__mike__",
          "code_url": null,
          "proposal_id": "jQ0EQ30E",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BXcLum6o"
        },
        {
          "title": "GoReSym (Improving Go Binary Symbol Recovery and beyond)",
          "short_description": "Go binaries have become increasingly popular for malware and red team tooling, but reversing them is notoriously hard—especially when stripped of...",
          "description": "Go binaries have become increasingly popular for malware and red team tooling, but reversing them is notoriously hard—especially when stripped of symbols. GoReSym is a tool designed to recover symbol and type metadata from Go binaries, but recent changes in Go 1.24 have broken parts of its type and method parsing logic. This project proposes a comprehensive update of GoReSym to support the latest Go versions, starting with fixing rtype parsing for field tags and method names.\n\nThe project will also include refactoring parsing logic for maintainability, implementing version-aware structures, and addressing selected open GitHub issues such as inlined instance data and memory usage improvements. The final result will be a more robust and scalable GoReSym that can keep pace with Go’s evolving runtime and remain usable for both reverse engineers and malware analysts.",
          "student_name": "SumanthV",
          "code_url": null,
          "proposal_id": "WG14EfLS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3bGPGK2t"
        },
        {
          "title": "Extending capa to Android: Dynamic Analysis of Java and Native Code for Malware Capability Detection",
          "short_description": "This project aims to extend the FLARE team's capa malware capability detection tool by adding dynamic analysis support for the Android platform. Capa...",
          "description": "This project aims to extend the FLARE team's capa malware capability detection tool by adding dynamic analysis support for the Android platform. Capa is an effective tool for identifying malware capabilities on the Windows platform, but currently lacks support for Android threats. With the surge in Android malware, attackers increasingly combine code obfuscation, native libraries (.so files), and anti-analysis techniques, limiting the effectiveness of traditional static analysis methods in detecting Android malware.\nI will extend capa by developing a new component called AndroidFeatureExtractor, which uses the Frida dynamic instrumentation framework to monitor Java and native code layer behaviors at runtime. The extracted behavioral features will be seamlessly mapped to capa's existing feature model, allowing security analysts to leverage the rule system they are already familiar with, while making appropriate adjustments for Android-specific execution environments. This project provides security researchers with a systematic feature extraction tool that can be used to design rules for identifying complex Android malware capabilities specifically designed to evade traditional detection.",
          "student_name": "xukunzh",
          "code_url": null,
          "proposal_id": "I1FANDNa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/E61CThH6"
        }
      ]
    },
    {
      "name": "Checker Framework",
      "image_url": "https://summerofcode.withgoogle.com/media/org/checker-framework/zgooweugtqicf1jx-360.png",
      "image_background_color": "#ffffff",
      "description": "Prevent programming errors via simple verification",
      "url": "https://checkerframework.org/",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/checker-framework",
      "ideas_url": "https://rawgit.com/typetools/checker-framework/master/docs/developer/new-contributor-projects.html",
      "guide_url": "https://rawgit.com/typetools/checker-framework/master/docs/developer/new-contributor-projects.html",
      "topics": [
        "software engineering",
        "verification",
        "bug finding",
        "programmer productivity",
        "type systems"
      ],
      "technologies": [
        "java",
        "compilers",
        "Verification",
        "formal methods",
        "type systems"
      ],
      "irc_channel": "",
      "contact_email": "mailto:checker-framework-gsoc@googlegroups.com",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "NullnessLight: A Lightweight Nullness Bug Detector for the Checker Framework",
          "short_description": "I propose to develop NullnessLight, a lightweight, easy-to-use nullness checker built on the Checker Framework. NullnessLight will trade full...",
          "description": "I propose to develop NullnessLight, a lightweight, easy-to-use nullness checker built on the Checker Framework. NullnessLight will trade full soundness for usability and speed, helping developers catch common null-related bugs without requiring extensive annotations or setup. Inspired by tools like NullAway, NullnessLight will disable some of the more complex features of the existing Nullness Checker, such as initialization analysis and alias invalidation, and provide user-configurable options for these trade-offs. This project will broaden the Checker Framework's usability spectrum and help users gradually adopt deeper verification. Deliverables include the implementation of NullnessLight, a suite of comparisons with existing checkers (e.g., NullAway, FindBugs), and documentation with usage recommendations.",
          "student_name": "Abhijit Kulkarni",
          "code_url": null,
          "proposal_id": "KS46gAPm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Cek33Jhn"
        },
        {
          "title": "Mutable Index Checker: Index Checking for Mutable Length Data Structures with the Checker Framework",
          "short_description": "This project aims to enhance the Checker Framework by introducing a Mutable Index Checker, which provides compile-time guarantees of index safety for...",
          "description": "This project aims to enhance the Checker Framework by introducing a Mutable Index Checker, which provides compile-time guarantees of index safety for dynamically sized data structures such as ArrayList, LinkedList, and Deque. Unlike the current Index Checker, which focuses on fixed-length structures like arrays and strings, this checker will track collection size changes across mutations, enabling flow-sensitive reasoning and validation of index accesses.\n\nThe checker will support annotations like @IndexFor, @LengthOf, @SameLen, and custom subtyping rules to enforce both lower and upper bounds on index values. It will also provide support for aliasing-aware length consistency, post-mutation invalidation, and integration with purity annotations.\n\nDeliverables include:\n    - A new pluggable type checker integrated into the Checker Framework.\n    - Support for standard mutable collections with annotated APIs.\n    - Type qualifiers and subtyping rules for index tracking.\n    - Flow-sensitive analysis and invalidation logic on mutations.\n    - Real-world examples, documentation, and a case study on annotating existing codebases.\n\nThis tool will help developers prevent IndexOutOfBoundsException in mutable structures by enforcing correctness at compile-time—making Java applications safer and more robust.",
          "student_name": "Damika",
          "code_url": null,
          "proposal_id": "J3fTbvLN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KIzghcua"
        }
      ]
    },
    {
      "name": "Invesalius",
      "image_url": "https://summerofcode.withgoogle.com/media/org/invesalius/ktlk8dmldhfmlyb2-360.png",
      "image_background_color": "#ffffff",
      "description": "3D Medical visualization and neuronavigation tool",
      "url": "https://invesalius.github.io/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/invesalius",
      "ideas_url": "https://github.com/invesalius/gsoc/blob/main/gsoc_2025_ideas.md",
      "guide_url": "https://github.com/invesalius/gsoc/blob/main/gsoc_application.md",
      "topics": [
        "ehealth",
        "medical imaging",
        "3D Reconstruction",
        "3d printing",
        "Neuronavigation"
      ],
      "technologies": ["python", "cython", "numpy", "dicom", "Vtk"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://github.com/invesalius/invesalius3/discussions",
      "twitter_url": "",
      "blog_url": "https://invesalius.github.io/publication.html",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "3D edition of masks",
          "short_description": "InVesalius is an open-source software that enables synchronous 2D and 3D visualization of medical images, facilitating the reconstruction of computed...",
          "description": "InVesalius is an open-source software that enables synchronous 2D and 3D visualization of medical images, facilitating the reconstruction of computed tomography (CT) and magnetic resonance imaging (MRI) data into three-dimensional models. It allows users to create masks easily through various preset parameters, such as predefined threshold values for different tissues and materials. However, in cases where automatic segmentation is insufficient, manual editing becomes necessary. This process can be quite slow and labor-intensive, as it requires editing each slice individually, which is particularly time-consuming for large volumes.\n\nImplementing a feature that enables mask creation through projections directly on the 3D rendering screen would significantly enhance InVesalius's usability and \nefficiency. Currently, mask editing in InVesalius requires a slice-by-slice approach, which can be repetitive and prone to errors. By allowing users to edit the entire volume simultaneously via 3D projections, the segmentation process would\nbe streamlined, saving time and increasing accuracy.",
          "student_name": "Felipe Cybis Pereira",
          "code_url": null,
          "proposal_id": "wXxz5lp4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/H1nIn5ni"
        },
        {
          "title": "Add unit tests to InVesalius to ease the process of adding new features",
          "short_description": "This project addresses the lack of automated testing in InVesalius, which currently relies on manual verification, slowing development and risking...",
          "description": "This project addresses the lack of automated testing in InVesalius, which currently relies on manual verification, slowing development and risking regressions. By implementing a comprehensive pytest-based test suite (unit, functional, and GUI tests) and integrating GitHub Actions CI/CD, the project will ensure core functionalities like DICOM processing, 3D visualization, and GUI interactions remain stable as new features are added. Deliverables include:\n\n1)A structured test suite covering the entire inVesalius codebase.\n\n2)GitHub Actions workflows to automate testing on commits/pull requests.\n\n3)Mock file systems and dependency isolation for safe, repeatable tests.\n\n4)Well-documented test cases to guide future contributors.\nThis will reduce reviewer workload, accelerate debugging, and foster community growth by lowering the barrier to entry for new developers.",
          "student_name": "Hrishav Deka",
          "code_url": null,
          "proposal_id": "CNDgDUEe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QsOP2iEF"
        },
        {
          "title": "Use GitHub actions to create installers for macOS",
          "short_description": "The proposed project aims to automate the creation of nightly and release installers for InVesalius on macOS using GitHub Actions. By leveraging...",
          "description": "The proposed project aims to automate the creation of nightly and release installers for InVesalius on macOS using GitHub Actions. By leveraging continuous integration workflows, this project will streamline the build, packaging, and distribution process, eliminating the need for manual compilation. The automation will utilize PyInstaller to generate macOS application bundles and installers while ensuring compatibility with system dependencies. This solution will enhance accessibility for macOS users, providing a reliable and up-to-date distribution method for InVesalius.",
          "student_name": "Mann Patwa",
          "code_url": null,
          "proposal_id": "Xs0GcwTf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2LCxiDo6"
        },
        {
          "title": "Simultaneous visualization and control of Two Robots for Dual Transcranial Magnetic Stimulation",
          "short_description": "Development and integration of the functionality for simultaneous control of two robots, aimed at applying dual-site Transcranial Magnetic...",
          "description": "Development and integration of the functionality for simultaneous control of two robots, aimed at applying dual-site Transcranial Magnetic Stimulation (TMS) in InVesalius (currently, support is provided for only one TMS coil attached to one robot). This feature is based on the existing implementation for the use of two or more coils, adapting it for multiple robots. The inclusion of this feature not only improves the speed, accuracy, and safety of the stimulatory process, but also enables the scientific exploration of interactive brain networks, by allowing concurrent, targeted TMS pulses to multiple brain areas.",
          "student_name": "Márcio Campos",
          "code_url": null,
          "proposal_id": "pcioYG3w",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vG6Rv7zY"
        },
        {
          "title": "Improvements in user response (loading and   saving files)",
          "short_description": "InVesalius, a medical imaging tool, lacks user feedback during file loading and saving (e.g., .inv3 projects) and offers a basic, non-cancellable...",
          "description": "InVesalius, a medical imaging tool, lacks user feedback during file loading and saving (e.g., .inv3 projects) and offers a basic, non-cancellable progress bar for volume rendering, frustrating users. This project aims to enhance usability by implementing a wxPython-based progress dialog with real-time updates and cancellation support. I’ll integrate this into invesalius/control.py and gui/frame.py, threading file operations (OpenPlistProject, SavePlistProject) and upgrading Volume.Render’s feedback with VTK-based stages. Deliverables include: (1) a cancellable progress dialog for .inv3 loading, (2) a similar dialog for saving, (3) a revamped volume rendering dialog with percentage updates, and (4) unit tests ensuring reliability. Built with Python, wxPython, and NumPy, this will make InVesalius more intuitive and responsive for researchers and clinicians.",
          "student_name": "Shruti Parmar",
          "code_url": null,
          "proposal_id": "xd1jKFJr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/D5nIVoDd"
        },
        {
          "title": "Segment Brain in it's Subparts",
          "short_description": "This project tackles the challenge of time-consuming manual brain segmentation in MRI by developing an automated tool using deep learning...",
          "description": "This project tackles the challenge of time-consuming manual brain segmentation in MRI by developing an automated tool using deep learning (FastSurfer) to accurately segment key brain areas critical for TMS. The approach uses advanced CNN models to quickly and precisely divide the brain into subparts like the cortex, thalamus, and hippocampus. This helps accurately position the TMS coil for effective treatment.",
          "student_name": "Shuvam Pal",
          "code_url": null,
          "proposal_id": "7pp31Q1O",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Thg42Q4y"
        }
      ]
    },
    {
      "name": "International Catrobat Association",
      "image_url": "https://summerofcode.withgoogle.com/media/org/international-catrobat-association/dfkxzmsqlkyvwi2o-360.png",
      "image_background_color": "#ffffff",
      "description": "Free visual coding apps for computational thinking",
      "url": "https://www.catrobat.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/international-catrobat-association",
      "ideas_url": "https://developer.catrobat.org/pages/development/google-summer-of-code/2025/",
      "guide_url": "https://docs.google.com/document/d/1vOGY2C80raXLV6RVRHXoqiAhcnBJFeZdU8wqMm-Rgo0/edit?usp=sharing",
      "topics": [
        "education",
        "visual programming",
        "mobile programming",
        "game engines",
        "creativity tools"
      ],
      "technologies": ["javascript", "swift", "kotlin", "php", "flutter"],
      "irc_channel": "https://github.com/Catrobat/Catroid#contributing",
      "contact_email": "mailto:contact@catrobat.org",
      "mailing_list": "",
      "twitter_url": "https://x.com/Pocket_Code",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Paintroid Flutter – A Cross-Platform Revival of the Paintroid Experience",
          "short_description": "This project aims to convert the Paintroid Kotlin app into a Flutter app, keeping all its features while improving performance and usability. The...",
          "description": "This project aims to convert the Paintroid Kotlin app into a Flutter app, keeping all its features while improving performance and usability. The goal is to make the app work smoothly on multiple platforms, fix existing issues, and enhance the user experience. Using Flutter’s powerful tools, the new version will be more efficient, responsive, and easier to use, with potential improvements in performance, design, and new features.",
          "student_name": "Amit Matth",
          "code_url": null,
          "proposal_id": "zhpOn4rI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/flohd9V3"
        },
        {
          "title": "Mobile Application for Marine Biology AR Learning",
          "short_description": "Proposing an immersive augmented reality application that transforms marine biology education through interactive experiences where users can embody...",
          "description": "Proposing an immersive augmented reality application that transforms marine biology\neducation through interactive experiences where users can embody marine creatures,\nparticularly octopuses, to understand marine ecosystems. Leveraging my experience in\nUnity AR development, Android native programming, and back-end integration, I aim to\ncreate a comprehensive learning tool that combines gesture recognition, voice commands,\nand realistic 3D environments to make marine biology accessible and engaging for students\nof all ages.",
          "student_name": "Ashwani Kumar Moudgil",
          "code_url": null,
          "proposal_id": "xcSM451z",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Kf371Wd9"
        },
        {
          "title": "Awesome Demo Game Project on Marine Biology",
          "short_description": "The marine environment is in demand of marine protection, especially in the era of climate change. This protection can only occur when people are...",
          "description": "The marine environment is in demand of marine protection, especially in the era of climate change. This protection can only occur when people are informed about the connections between biodiversity, pollution, overfishing and climate warming. To strengthen the sensibility for the marine ecosystem, demo games can be an important tool, especially to have early access to younger generations. Once the awareness of nature is manifested, it can become a guide for further life.\nIn this project I want to combine scientific knowledge with fun. So, I want to create games to reach out for children globally to let them get in touch with marine life.",
          "student_name": "Daniel Kalysch",
          "code_url": null,
          "proposal_id": "8ZqE1z5t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5UarXrUv"
        },
        {
          "title": "AI-Generated 3D Models from Marine Animals",
          "short_description": "This project aims to create AI-powered 3D models of marine species for educational use. By converting text descriptions into 2D images and then...",
          "description": "This project aims to create AI-powered 3D models of marine species for educational use. By converting text descriptions into 2D images and then transforming them into 3D structures, we will generate realistic models of marine life such as fish, octopuses, and corals. These models will be optimized and rendered in Blender or Unity, making them interactive and adaptable to different environmental conditions.\n\nThe final output will include high-quality, dynamic 3D assets that can be integrated into AR applications, helping students explore marine biology in an engaging and immersive way.",
          "student_name": "Dhruvanshu Joshi",
          "code_url": null,
          "proposal_id": "Zr5MMHXI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MjwY5Zhj"
        },
        {
          "title": "Implementing cursor, pipette & fill-tool",
          "short_description": "My idea is as following: - Getting to know the project and the architecture - Start with cursor tool, as this one is the simplest (TDD) - Next I...",
          "description": "My idea is as following:\n- Getting to know the project and the architecture\n- Start with cursor tool, as this one is the simplest (TDD)\n- Next I would like to work on the pipette-tool\n- Fill tool is the most complex as it requires the filling algorithm, but at this point I will be very familiar with the project and this will not be a problem.",
          "student_name": "haske",
          "code_url": null,
          "proposal_id": "bpLREb7k",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zcnr4Cov"
        },
        {
          "title": "AI Mentor for PocketCode Students",
          "short_description": "This project aims to develop an AI Mentor feature for Pocket Code to assist beginner users by providing real-time, context-aware support while...",
          "description": "This project aims to develop an AI Mentor feature for Pocket Code to assist beginner users by providing real-time, context-aware support while working on their projects. Many users struggle with understanding how blocks work or how to fix issues in their code. To address this, I propose a retrieval-based system that uses an on-device vector database to find relevant entries from a curated knowledge base. The system will then send the most relevant context along with the user’s query to an external API (e.g., Gemini or ChatGPT) to generate a helpful response.\n\nBy combining efficient on-device vector search with powerful cloud-based language models, this feature will offer lightweight, accurate, and accessible programming guidance.",
          "student_name": "Muhammad Haris Sabil Al Karim",
          "code_url": null,
          "proposal_id": "rJ4oUM35",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qgCaS94l"
        },
        {
          "title": "AR-Based Interactive Marine Ecosystem Simulation",
          "short_description": "My project aims to develop an immersive Augmented Reality (AR) Marine Ecosystem Simulation that will serve as an interactive educational tool within...",
          "description": "My project aims to develop an immersive Augmented Reality (AR) Marine Ecosystem Simulation that will serve as an interactive educational tool within Catrobat's ecosystem. This simulation will allow users to explore marine environments through AR technology, visualizing complex ecological interactions such as food chains, coral reef dynamics, and the impacts of pollution in real-time.\n\nThe primary challenge lies in creating a physically accurate, engaging simulation that runs efficiently on mobile devices while maintaining educational value. I propose to solve this by:\n\n - Developing a modular AR framework using Unity that integrates with ARKit and ARCore\n - Implementing realistic physics-based interactions between marine organisms\n - Creating an adaptive AI system that evolves the ecosystem based on user interactions\n - Designing intuitive interfaces that make complex ecological concepts accessible\n\nThe project will deliver:\n\n - A fully functional AR marine ecosystem simulation compatible with Catrobat's existing applications\n - A library of interactive marine organisms with realistic behaviors and interactions\n - Real-time visualization tools for environmental factors (temperature, pH, pollution)\n - Educational scenarios demonstrating ecological principles\n - Comprehensive documentation and integration guides",
          "student_name": "Prabhakar Joshi",
          "code_url": null,
          "proposal_id": "Q3q33pH4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/U2zuXGHZ"
        }
      ]
    },
    {
      "name": "BeagleBoard.org",
      "image_url": "https://summerofcode.withgoogle.com/media/org/beagleboardorg/4w6td6bjy31ei9v2-360.png",
      "image_background_color": "#ffffff",
      "description": "Open hardware computing for educators and makers",
      "url": "https://www.beagleboard.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/beagleboardorg",
      "ideas_url": "https://bbb.io/gsocideas",
      "guide_url": "https://bbb.io/gsoc",
      "topics": [
        "robotics",
        "iot",
        "ai",
        "software defined radio",
        "Personal Server"
      ],
      "technologies": ["linux", "fpga", "risc-v", "dsp", "Zephyr RTOS"],
      "irc_channel": "https://bbb.io/gsocchat",
      "contact_email": "mailto:gsoc@beagleboard.org",
      "mailing_list": "https://bbb.io/gsocml",
      "twitter_url": "https://twitter.com/beagleboardorg",
      "blog_url": "https://www.beagleboard.org/blog",
      "facebook_url": "https://www.facebook.com/beagleboard",
      "num_projects": 5,
      "projects": [
        {
          "title": "A Conversational AI Assistant for BeagleBoard using RAG and Fine-tuning",
          "short_description": "BeagleMind will develop an AI documentation assistant for BeagleBoard that combines fine-tuned LLMs with Retrieval-Augmented Generation (RAG) to...",
          "description": "BeagleMind will develop an AI documentation assistant for BeagleBoard that combines fine-tuned LLMs with Retrieval-Augmented Generation (RAG) to deliver accurate technical support. By specializing an LLM on BeagleBoard documentation using efficient PEFT/LoRA adaptation and augmenting it with a vector database of official resources, the system will provide precise, citation-backed answers while minimizing errors. The project will deliver a production-ready solution including both web and command-line interfaces, deploy the optimized model via Hugging Face Inference Endpoints, and implement automated evaluation agents to continuously verify answer quality. This assistant will help BeagleBoard users quickly find reliable technical information, significantly reducing development bottlenecks and support demands while improving the overall user experience.",
          "student_name": "Fayez Zouari",
          "code_url": null,
          "proposal_id": "XY5hDFJD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pbanUSAu"
        },
        {
          "title": "Fix Beaglev Ahead Support",
          "short_description": "Work on fixing support for beaglev ahead. Additionally work on fixing the broken WiFi and port mikroBUS driver to this board. There are a bunch of...",
          "description": "Work on fixing support for beaglev ahead. Additionally work on fixing the broken WiFi and port mikroBUS driver to this board. There are a bunch of documentation fixes to be done.",
          "student_name": "Kanak Shilledar",
          "code_url": null,
          "proposal_id": "4GDcH7aL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SO5KvcNL"
        },
        {
          "title": "Upstream Greybus Module for Zephyr",
          "short_description": "The Greybus module for Zephyr currently exists as an out-of-tree component, making maintenance, testing, and contributions difficult. This project...",
          "description": "The Greybus module for Zephyr currently exists as an out-of-tree component, making maintenance, testing, and contributions difficult. This project aims to upstream Greybus as an official Zephyr module, improving maintainability, accessibility, and seamless integration within the Zephyr RTOS ecosystem.\n\nBy upstreaming Greybus, BeagleConnect and other Greybus-enabled platforms will gain native support in Zephyr, removing the need for custom patches or kernel modifications. Originally developed by Google as part of Project Ara, Greybus is a lightweight, high-speed protocol designed for efficient, low-power communication across diverse hardware interfaces. While initially intended for modular smartphones, Greybus has since expanded into IoT and industrial applications, particularly in wireless sensor networks.\n\nThis project will focus on cleaning up and refactoring the existing Greybus module, revamping its testing infrastructure, and ensuring compatibility with Zephyr’s CI/CD workflows. The successful completion of this work will enable seamless hardware-software interaction, making Greybus more accessible for embedded systems development within Zephyr.",
          "student_name": "Sahil Jaiswal",
          "code_url": null,
          "proposal_id": "3Z5uZeoB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/we7PbNHN"
        },
        {
          "title": "Update beagle-tester for mainline testing",
          "short_description": "The objective is to enhance the Beagle-Tester framework for BeagleBoard devices by adding mikroBUS support and updating it for mainline kernel...",
          "description": "The objective is to enhance the Beagle-Tester framework for BeagleBoard devices by adding mikroBUS support and updating it for mainline kernel testing. This project aims to develop an automated regression test suite for Linux kernel and device-tree overlays on BeagleBoard hardware, enabling continuous validation within the OpenBeagle CI server.\n\nThe approach includes developing comprehensive test cases for interfaces such as PWM, ADC, UART, I2C, SPI, and GPIO, integrating automated power cycling capabilities for test farms, building a web interface for real-time monitoring of test results, and optimizing the framework for seamless Buildroot deployment.\n\nKey deliverables include an enhanced Beagle-Tester with mikroBUS support, an automated regression testing framework for kernel updates, a GitLab CI pipeline for weekly testing, a modular test farm design with power cycling capabilities, a web-based monitoring interface, and comprehensive documentation with tutorials.",
          "student_name": "Vidhu",
          "code_url": null,
          "proposal_id": "nXCc2QIU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/c9jqkFDp"
        },
        {
          "title": "Upstream wpanusb bcfserial",
          "short_description": "The project aims to enhance and upstream the existing wpanusb and bcfserial drivers in Linux to meet upstream quality standards. Currently, several...",
          "description": "The project aims to enhance and upstream the existing wpanusb and bcfserial drivers in Linux to meet upstream quality standards. Currently, several key driver operations are missing, such as listen before talk and setting frame retries. Preliminary sketches exist but are non-functional pending corresponding changes in the Zephyr firmware side. The project will also add the ability to read the device's permanent extended address, support generic radio configuration (including band, channels, and power levels), and provide comprehensive querying of radio properties. In addition, improvements are required to accommodate upcoming features like management frames and active/passive scanning. This effort is aimed at enabling seamless interoperation between the radio and Zigbee protocols while ensuring support for both 2.4GHz and SubGHz operations, ensuring that the solution meets upstream quality standards and is maintainable over the long term.",
          "student_name": "Whiz-Manas",
          "code_url": null,
          "proposal_id": "8zwO65oa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xZofecH8"
        }
      ]
    },
    {
      "name": "ScummVM",
      "image_url": "https://summerofcode.withgoogle.com/media/org/scummvm/bnok4srtehdy3fbj-360.png",
      "image_background_color": "#ffffff",
      "description": "Adventure and RPG preservation project",
      "url": "https://www.scummvm.org/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/scummvm",
      "ideas_url": "https://www.scummvm.org/gsoc-2025-ideas",
      "guide_url": "https://wiki.scummvm.org/index.php/GSoC_Application",
      "topics": [
        "games",
        "game engines",
        "software preservation",
        "software archeology"
      ],
      "technologies": ["python", "opengl", "c++", "assembly", "php"],
      "irc_channel": "https://discord.gg/4cDsMNtcpG",
      "contact_email": "",
      "mailing_list": "https://wiki.scummvm.org/index.php/Summer_of_Code/GSoC_Contact",
      "twitter_url": "",
      "blog_url": "https://planet.scummvm.org/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Add Keymapper to more games",
          "short_description": "This project adds keymapper support to numerous ScummVM game engines, allowing players to customize controls for a better experience across different...",
          "description": "This project adds keymapper support to numerous ScummVM game engines, allowing players to customize controls for a better experience across different devices. It involves updating input handling in each engine, integrating ScummVM’s keymapper system, and thoroughly testing for functionality. This improves accessibility, playability, and helps preserve classic games for modern platforms.",
          "student_name": "Aun Noman",
          "code_url": null,
          "proposal_id": "pvxF9F29",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dI9Rr3YP"
        },
        {
          "title": "Implementing minigame interface in qdEngine",
          "short_description": "Last year, qdEngine was ported to ScummVM. However, not all games are supported yet. Games with advanced minigames are not playable, and some titles...",
          "description": "Last year, qdEngine was ported to ScummVM. However, not all games are supported yet. Games with advanced minigames are not playable, and some titles need playtesting. This project will address these problems.\nMy first main goal is to implement the advanced minigame interface, which will help advanced minigames be playable. Secondly, I will be going through the rest of the games, identifying issues and fixing bugs along the way.",
          "student_name": "balpykov_a",
          "code_url": null,
          "proposal_id": "YhwSskYV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9h8o85NL"
        },
        {
          "title": "Add Text-to-Speech Support to More Games",
          "short_description": "Text-to-speech is a critical accessibility feature that is currently not present in many ScummVM engines. Adding text-to-speech to more engines can...",
          "description": "Text-to-speech is a critical accessibility feature that is currently not present in many ScummVM engines. Adding text-to-speech to more engines can assist language learners and those with visual impairments, as well as standardize implementation of text-to-speech across engines. In this project, text-to-speech is implemented on an engine-by-engine basis by defining GUI options for text-to-speech; identifying procedures that display text, which may include objects, menus, dialogue, and other forms of text; cleaning up the text, if necessary; and feeding this text into text-to-speech. It aims to include full text-to-speech support for a variety of engines.",
          "student_name": "ellm135",
          "code_url": null,
          "proposal_id": "Kbii2NzM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jLcJUtAS"
        },
        {
          "title": "Expanding Director Engine compatibility in ScummVM",
          "short_description": "The Macromedia Director engine is an incomplete engine in ScummVM. ScummVM has been working on it since 2020. It potentially adds a number of games...",
          "description": "The Macromedia Director engine is an incomplete engine in ScummVM. ScummVM has been working on it since 2020. It potentially adds a number of games to the growing list of supported games in ScummVM. This proposal aims to add support for Director Engine to get it closer to that possibility. \n\nThis project proposes implementation of a number of unfinished functions including STUBed code and Director Xtras. The Lingo Dictionary will be helpful for figuring out the functionality offered by each STUBed function.\n\nThe main focus of this project is to restructure the Director engine's internal data structure of storing Director movie files (.dir and .dcr) which enables saving them in Director. The project by djsrv available on GitHub is a great reference for solving this problem.\n\nThe proposal also hopes to improve the support for a couple of director games namely, The Journeyman Project and Safecracker. Comparing these games to their original versions, this project hopes to make playable without any hiccups.",
          "student_name": "Malhar Badve",
          "code_url": null,
          "proposal_id": "uSbdsjiw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zLwn3ie5"
        },
        {
          "title": "System for Checking Game Files Integrity",
          "short_description": "This project aims to finalize the system for verifying the integrity of game files within ScummVM. It introduces a server-client architecture where...",
          "description": "This project aims to finalize the system for verifying the integrity of game files within ScummVM. It introduces a server-client architecture where hash-based checksums are computed for game files and compared against a curated database. The system provides moderators tools to validate, merge, and maintain the database. A major focus is on automating the pipeline, enhancing moderation tools, and addressing edge cases.",
          "student_name": "Shivang Nagta",
          "code_url": null,
          "proposal_id": "f7KtaOcd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YDOcc4ze"
        }
      ]
    },
    {
      "name": "AboutCode",
      "image_url": "https://summerofcode.withgoogle.com/media/org/aboutcode/pmcafargc6wvl1ck-360.png",
      "image_background_color": "#ffffff",
      "description": "Scan code for origin, license and vulnerabilities",
      "url": "https://aboutcode.org",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/aboutcode",
      "ideas_url": "https://github.com/aboutcode-org/aboutcode/wiki/GSOC-2025-Project-Ideas",
      "guide_url": "https://github.com/aboutcode-org/aboutcode/wiki/GSOC-2025",
      "topics": [
        "dependencies",
        "vulnerabilities",
        "SoftwareCompositionAnalysis",
        "License",
        "SBOM"
      ],
      "technologies": [
        "python",
        "javascript",
        "Django+PostgreSQL",
        "C/Rust/Go"
      ],
      "irc_channel": "https://matrix.to/#/#aboutcode-org_gsoc2025:gitter.im",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://www.aboutcode.org/category/news.html",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Create file-system tree view for project scans",
          "short_description": "The current directory browsing experience in ScanCode.io is limited to viewing one folder at a time, which becomes inefficient and cumbersome for...",
          "description": "The current directory browsing experience in ScanCode.io is limited to viewing one folder at a time, which becomes inefficient and cumbersome for navigating large codebases. This project aims to enhance the usability of ScanCode.io by implementing a file-system tree view that provides a more structured and user-friendly navigation experience.",
          "student_name": "AayushKumar",
          "code_url": null,
          "proposal_id": "SkcBfLjg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OQ4Mahel"
        },
        {
          "title": "Have variable license sections in license rules",
          "short_description": "In this project, the main goal was to simplify license rules while allowing for greater flexibility by supporting extra words and variable components...",
          "description": "In this project, the main goal was to simplify license rules while allowing for greater flexibility by supporting extra words and variable components in the rules. I focused on enhancing the detection_log to clearly indicate when extra words or perfect matches are detected. This improvement ensures that the results include helpful information about unmatched or additional words, making it easier to analyze the output. Additionally, I implemented a CLI option that displays extra and unmatched words, enabling users to easily identify which parts of a text don't align with the defined rules. This feature significantly improves debugging and rule refinement.",
          "student_name": "Alokkumar97",
          "code_url": null,
          "proposal_id": "R7ORYlGD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EvCogGhq"
        },
        {
          "title": "ScanCode.io: Update SCIO/SCTK for use in CI/CD",
          "short_description": "This project is about simplifying it to use ScanCode Toolkit and ScanCode.io in common CI/CD systems such as GitHub Actions, GitLab, Jenkins, and...",
          "description": "This project is about simplifying it to use ScanCode Toolkit and ScanCode.io in common CI/CD systems such as GitHub Actions, GitLab, Jenkins, and Azure. The target is to make it possible for developers to scan their code for license and security issues automatically in their everyday development processes.\n\nOne of the biggest aspects of the project is enhancing the management of software dependencies. It will feature tools that identify whether any of the libraries a project is based on have known vulnerabilities. When they have, the system will recommend alternatives that are safer, automatically test them, and create a pull request if the updates are compatible.\n\nAnother area of emphasis is enhancing the way license information is managed—making it more uniform and readable. The project will also assist in identifying third-party code and creating the necessary metadata to provide accurate attribution and license clarity.\n\nNotably, the project also seeks to enhance compliance. It will make automated checks to verify code adheres to license and security policies defined by organizations. If something is amiss, it can alert early during development, keeping teams compliant without additional effort.",
          "student_name": "Manit Singh",
          "code_url": null,
          "proposal_id": "EkqbxbsY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DsDoR5eF"
        },
        {
          "title": "VulnerableCode: On-demand live evaluation of packages and integration with VulnTotal",
          "short_description": "Currently, VulnerableCode runs importers in bulk where all the data from advisories are imported (and reimported) at once and stored to be displayed...",
          "description": "Currently, VulnerableCode runs importers in bulk where all the data from advisories are imported (and reimported) at once and stored to be displayed and queried.\nThe objective of this project is to have another endpoint and API where we can dynamically import available advisories for a single PURL at a time.\nThis API will be used to improve VulnTotal by supporting a local mode for the VulnerableCode data source.\nAdditionally, this update will benefit the VulnTotal browser extension, which will be updated as well and will ensure direct and easy interaction with the new VulnerableCode API endpoint.",
          "student_name": "Michael Ehab Mikhail",
          "code_url": null,
          "proposal_id": "iAh0RBYA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uF0kzMAg"
        },
        {
          "title": "Add ability to store/query downloaded packages",
          "short_description": "This project focuses to enhance SCIO by introducing a feature to store and manage packages that are downloaded and scanned. The goal is to add...",
          "description": "This project focuses to enhance SCIO by introducing a feature to store and manage packages that are downloaded and scanned. The goal is to add features for downloading, storing, and querying software packages, making it easier for users to manage and verify dependencies and to store these packages locally or cloud, ensuring compliance with source redistribution obligations.  The feature will be configurable, allowing users to enable it and connect external databases or storage solutions as needed. This enhancement will streamline package management, improve accessibility, and bolster compliance with redistribution requirements.",
          "student_name": "Varsha U N",
          "code_url": null,
          "proposal_id": "FHKQem7P",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/x7sA6uN6"
        }
      ]
    },
    {
      "name": "The P4 Language Consortium",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-p4-language-consortium/tru8mncy4zqlbxhe.png",
      "image_background_color": "#ffffff",
      "description": "Evolve the programmable data plane ecosystem!",
      "url": "https://p4.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-p4-language-consortium",
      "ideas_url": "https://github.com/p4lang/gsoc/blob/main/2025/ideas_list.md",
      "guide_url": "https://github.com/p4lang/gsoc/blob/main/2025/contributor_guidance.md",
      "topics": [
        "networking",
        "programming language",
        "compiler",
        "AI/ML Networking",
        "networking security"
      ],
      "technologies": ["llvm", "c++", "mlir", "ebpf", "Z3"],
      "irc_channel": "https://p4lang.zulipchat.com/",
      "contact_email": "",
      "mailing_list": "https://p4.org/join/",
      "twitter_url": "https://x.com/p4lang/",
      "blog_url": "https://p4.org/blog/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Accelerating OVS with Gigaflow: A Smart Cache for SmartNICs",
          "short_description": "Gigaflow is an innovative solution to accelerate network processing in large-scale data centers by leveraging flow locality and pipeline-aware...",
          "description": "Gigaflow is an innovative solution to accelerate network processing in large-scale data centers by leveraging flow locality and pipeline-aware caching, offloading processing to SmartNICs. Currently, it supports only Alveo U250 FPGAs, limiting its versatility. This proposal aims to extend Gigaflow’s backend support by developing new APIs for flow integration, enabling compatibility with Pensando DPUs. Additionally, the current implementation of Sub-Treversal Partitioning (STP) incurs high CPU overhead during startup, minimizing the system's performance benefits. This project will optimize STP to reduce CPU usage and improve startup efficiency.\nFinally, Gigaflow’s newness requires further optimization in the compilation, LTM, and driver pipeline, alongside additional testing for alternative strategies for priority selection and rule deletion. The proposal will address these challenges. By achieving these goals, the project will streamline Gigaflow caches in the OVS backend, facilitating more efficient and flexible solutions for modern data centers.",
          "student_name": "Advay Singh",
          "code_url": null,
          "proposal_id": "dratGYEI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YD415t5R"
        },
        {
          "title": "SpliDT: Scaling Stateful Decision Tree Algorithms in P4",
          "short_description": "Contemporary developments of Machine Learning Applications in real-time Networks to classify traffic for better security and performance are examples...",
          "description": "Contemporary developments of Machine Learning Applications in real-time Networks to classify traffic for better security and performance are examples of cutting-edge research happening. This growing idea begs for an efficient framework of ML Models to adapt to needs and match the expected output, more like making a General ML Model into a Network domain-specific ML one.\n\nThis project aims to adapt the SpliDT Framework, a partition-based approach for implementing decision tree inference directly in the data plane using P4. It will be optimized through TensorFlow, and HyperMapper and using Python libraries like scikit-learn.",
          "student_name": "Sankalp Jha",
          "code_url": null,
          "proposal_id": "kjMg63jO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Qvq4a3yR"
        },
        {
          "title": "P4Sim Control Plane Enhancement",
          "short_description": "This project aims to extend the existing P4sim module integrated within the ns-3 network simulator by implementing control plane functionalities. The...",
          "description": "This project aims to extend the existing P4sim module integrated within the ns-3 network simulator by implementing control plane functionalities. The P4sim currently supports the simulation of P4-programmable data planes in ns-3, providing a powerful environment for research and development in programmable networking. \nThis project proposes to bridge that gap by integrating a control plane to support P4 Runtime, like changing the openconfig-interfaces, the ethernet augments and other runtime configurable features. The enhancements will improve the realism and usability of the simulator for research and experimentation involving P4",
          "student_name": "Vineet Goel",
          "code_url": null,
          "proposal_id": "crqICQWK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4Kwb6VGX"
        },
        {
          "title": "P4MLIR: MLIR-based high-level IR for P4 compilers",
          "short_description": "P4C, being a reference compiler for the P4 language, struggles with some fundamental shortcomings of its internal code representation (IR). These...",
          "description": "P4C, being a reference compiler for the P4 language, struggles with some fundamental shortcomings of its internal code representation (IR). These issues result in increased running time of the compiler itself as well as unacceptable memory consumption of certain compiler passes.\n\n\nSince these problems lie at the foundation of the present IR, as an alternative to just fixing them (that would require some redesign of the IR and would require some invasive changes in the compiler codebase) we are aiming to explore alternative solutions that might at the same time open more opportunities for future growth and expansion of the compiler. One of such possibilities is to explore the adoption of the results of MLIR project to be used within P4C.\n\n\nIn particular, we aim to develop a P4-specific MLIR dialect (P4HIR) that would allow reuse the infrastructure, code analysis, and transformation passes that have recently been developed within MLIR framework.",
          "student_name": "Xiaomin Liu",
          "code_url": null,
          "proposal_id": "Vb2UNlVC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/c7FcHjXq"
        },
        {
          "title": "BMv2 With All Possible Output Packets",
          "short_description": "P4 empowers developers to program the data plane of network devices—switches, routers, and NICs—at a level of detail previously only accessible to...",
          "description": "P4 empowers developers to program the data plane of network devices—switches, routers, and NICs—at a level of detail previously only accessible to hardware designers. P4 software/simulated switches like BMv2 make the development even easier by having the programs and control plane run on developers' computers and give instant feedback. \n\nThis project aims to further improve the capability of BMv2 and enable a potentially broader insight for developers to analyze their P4 program. \n\nWhile traditionally one packet only goes through one path within the switch and thus obtains only one result, there are many situations where it is more useful to have all possible outputs from a P4 simulation. For example, we use this for diff testing, to determine whether the switch is doing something correct or something incorrect.\n\nMultiple allowed behaviors and results usually arise from various multi-path constructs (e.g. ECMP, WCMP, or perhaps LAGs) which are often modeled as action profiles/selector in P4. BMv2 currently allows users to set a mode determining action profile/selector behavior, like `round robin` where every time one sends in the same packet, it would invoke the next possible forwarding action (eventually wrapping around).\n\nThe goal of this project is to provide a new mode for BMv2 to output all possible behaviors. This will both require extending the action profile modes, and extending the notion of output from a set of packets to a set of sets of packets.",
          "student_name": "Xiyu Hao",
          "code_url": null,
          "proposal_id": "g3zrKPnd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dsjZn7sx"
        }
      ]
    },
    {
      "name": "Git",
      "image_url": "https://summerofcode.withgoogle.com/media/org/git/mbqqznjbaohwgq80-360.png",
      "image_background_color": "#ffffff",
      "description": "Fast,Scalable,Distributed revision control system",
      "url": "https://git-scm.com/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/git",
      "ideas_url": "https://git.github.io/SoC-2025-Ideas/",
      "guide_url": "https://git.github.io/General-Application-Information/",
      "topics": ["version control", "dvcs"],
      "technologies": ["shell script", "git", "c language"],
      "irc_channel": "https://git-scm.com/community",
      "contact_email": "mailto:git@vger.kernel.org",
      "mailing_list": "https://git-scm.com/community",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Refactoring in order to reduce Git’s global state",
          "short_description": "Git currently relies on a global object the_repository and several global environment-related variables, which limits modularity and complicates...",
          "description": "Git currently relies on a global object the_repository and several global environment-related variables, which limits modularity and complicates long-term maintainability. This project aims to refactor Git’s environment handling by relocating global variables into more appropriate repository-specific contexts, primarily struct repository and struct repo_settings.\n\nHowever, some global variables are only relevant to specific subsystems. In such cases, instead of placing them in the repository structure, they will be moved into subsystem-specific contexts that better reflect their scope. \n\nOverall, the project will reduce global state and improve the maintainability and modularity of the codebase.",
          "student_name": "Ayush Chandekar",
          "code_url": null,
          "proposal_id": "edYSEbKn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/no7dVMeG"
        },
        {
          "title": "Machine-Readable Repository Information Query Tool",
          "short_description": "This project introduces a new Git sub-command (currently intended to be called git repo-info) that will centralize data currently retrieved by git...",
          "description": "This project introduces a new Git sub-command (currently intended to be called git repo-info) that will centralize data currently retrieved by git rev-parse in a JSON format.",
          "student_name": "Lucas Oshiro",
          "code_url": null,
          "proposal_id": "XGcRKExG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fGgMYHwl"
        },
        {
          "title": "Consolidate ref-related functionality into git-refs",
          "short_description": "This project aims to streamline reference management in Git by consolidating functionality currently spread across multiple commands into a single...",
          "description": "This project aims to streamline reference management in Git by consolidating functionality currently spread across multiple commands into a single git-refs command. The updated git refs command will offer sub-commands to list, retrieve, verify/check existence, write, and optimize references. The deliverables include the git refs command along with its numerous sub-commands, updated documentation, and thorough test coverage.",
          "student_name": "Meet Soni",
          "code_url": null,
          "proposal_id": "hcHxJPhQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xVrT5e2q"
        }
      ]
    },
    {
      "name": "openSUSE Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/opensuse-project/zq11ebxj038xotbe-360.png",
      "image_background_color": "#ffffff",
      "description": "Makers' choice for sysadmins, developers & users",
      "url": "https://get.opensuse.org/",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/opensuse-project",
      "ideas_url": "https://github.com/openSUSE/mentoring/issues",
      "guide_url": "https://github.com/openSUSE/mentoring/wiki/Contributor-Guidance-for-Google-Summer-of-Code",
      "topics": [
        "AIML",
        "operating system developer tools",
        "containers kubernetes",
        "Security Cryptography",
        "systems management"
      ],
      "technologies": ["python", "c/c++", "go", "ruby", "reactjs javascript"],
      "irc_channel": "https://discord.com/invite/opensuse",
      "contact_email": "mailto:ddemaio@opensuse.org",
      "mailing_list": "https://lists.opensuse.org/archives/list/factory@lists.opensuse.org/",
      "twitter_url": "https://twitter.com/openSUSE",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/groups/opensuseproject/",
      "num_projects": 7,
      "projects": [
        {
          "title": "Log Detective for openSUSE/OBS",
          "short_description": "This research project addresses the problem of time-consuming debugging of RPM build failures in openSUSE. By integrating the Log Detective model...",
          "description": "This research project addresses the problem of time-consuming debugging of RPM build failures in openSUSE. By integrating the Log Detective model into the openSUSE workflow. The integration will be achieved through developing an osc plugin for command-line interaction and creating a web component within the Open Build Service (OBS) interface.    \nThe project aims to deliver a research document detailing Log Detective's AI approach, tools and scripts for log submission, and proof-of-concept implementations of both the osc plugin and the OBS web component.",
          "student_name": "Aazam Thakur",
          "code_url": null,
          "proposal_id": "ArYWKuFH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SZ1Va8yZ"
        },
        {
          "title": "AI-Driven Test Selection in Uyuni's Pull Request Acceptance Tests",
          "short_description": "Uyuni is the open-source upstream of SUSE Manager, a configuration and infrastructure management solution for administering multiple Linux systems....",
          "description": "Uyuni is the open-source upstream of SUSE Manager, a configuration and infrastructure management solution for administering multiple Linux systems. To ensure code quality, Uyuni employs two types of tests:\n\n1. Continuous Integration Tests: These tests are run periodically on the master branch to catch breakages that have slipped through earlier testing. When these tests fail, developers must revisit older tasks, leading to frequent context switching and reduced productivity.\n\n2. Pull Request Acceptance Tests: These tests are run on new pull requests to prevent breakages from reaching the master branch. They provide fast feedback to developers, helping them fix issues while they are still focused on their tasks.\n\nCurrently, Pull Request Acceptance Tests execute most of the test suite, with an average runtime of one hour. This delays feedback for developers and increases infrastructure costs.\n\nThis project aims to develop a machine learning model that, using past pull requests, test results, code coverage data, and other relevant information, predicts which small subset of tests is most likely to fail for a new pull request. Running only this smaller subset of tests will speed up developer feedback, reduce infrastructure costs, and maintain high test coverage.\n\nInspired by Facebook's Predictive Test Selection paper, this project applies and extends its techniques to optimize Uyuni’s testing strategy and increase developer productivity.",
          "student_name": "Ahmed Khaled (Akayiz)",
          "code_url": null,
          "proposal_id": "Wge1bqbJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2mlAbkgB"
        },
        {
          "title": "Analytics edge ecosystem workloads: entertainment vertical",
          "short_description": "In this project, we aim to demonstrate an open-source example deployment of a fully functional workload. This project focuses on the entertainment...",
          "description": "In this project, we aim to demonstrate an open-source example deployment of a fully functional workload. This project focuses on the entertainment vertical, the main idea is to segment movies into scenes and make the segmented scenes queryable with natural language text. This project would involve LLMs, text embeddings to create scene summaries and vector database to store the embeddings for each scene, so that it can be queried easily . We will brainstorm an end-to-end example approach and explore the possibility of adapting certain components to different technological contexts. Our strategy involves utilizing Rancher, a Kubernetes-as-a-Service platform, to efficiently manage clusters and deploy microservices.",
          "student_name": "AkashKumar",
          "code_url": null,
          "proposal_id": "42FJaL3F",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/D4vbeivQ"
        },
        {
          "title": "Support for Ubuntu Snap Packages in Uyuni",
          "short_description": "Today, with Ubuntu increasingly adopting Snap packages, Uyuni currently lacks support for managing these applications. This project proposes adding...",
          "description": "Today, with Ubuntu increasingly adopting Snap packages, Uyuni currently lacks support for managing these applications. This project proposes adding native Snap support to Uyuni, including install, update, remove, and channel management. By extending Uyuni’s capabilities to cover Snap, this work fills a key gap and ensures continued relevance for Ubuntu system management.\n\nI explored how Uyuni manages CVE audits and package upgrades for Ubuntu systems. Initially, Uyuni connects to client machines via SSH to install and register the Salt Minion. Once set up, all communication occurs through Salt’s remote execution system, eliminating the need for SSH. Salt gathers package data using grains, pillars, and custom modules, which Uyuni then compares to its centralized SUSE Manager database.\n\nFor CVE auditing, Uyuni fetches security metadata (e.g., CVEs, OVAL data) from upstream sources like Ubuntu Security Notices and stores it in a PostgreSQL database. When Salt reports installed packages, Uyuni analyzes the data and generates patch or upgrade recommendations. APT repositories are mirrored into structured software channels, allowing clients to receive updates without direct internet access.\n\nBuilding on this workflow, I propose extending Uyuni to support Snap packages. While Snap lacks structured CVE metadata, we can implement a version-based upgrade system: Uyuni retrieves the latest Snap versions from the Snap Store and compares them to client versions reported via Salt, suggesting upgrades when newer versions exist.\n\nTo support airgapped environments, we can pre-download .snap and .assert files on a connected system and distribute them through Uyuni’s software channels. Additionally, to manage storage and stability, Uyuni admins can choose which Snap channels (stable, beta, etc.) to mirror—defaulting to stable.\n\nDeliverables: Support Snap auditing, lifecycle management, airgapped environments, testing/validation, and user documentation in Uyuni.",
          "student_name": "Kathy Xu",
          "code_url": null,
          "proposal_id": "dG7pSUah",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qJxTxgAc"
        },
        {
          "title": "Edge Focused Deep Research AI Agents using openSUSE and SUSE Rancher",
          "short_description": "In this project, we look forward to developing Edge-Focused Deep Research AI Agents that operate fully on edge devices using open-source Large...",
          "description": "In this project, we look forward to developing Edge-Focused Deep Research AI Agents that operate fully on edge devices using open-source Large Language Models (LLMs) and Small Language Models (SLMs). Building on last year’s openSUSE GSoC project in edge analytics and Retrieval-Augmented Generation (RAG) pipelines, we will create a privacy-first AI research assistant. The agent will leverage Ollama to run LLMs locally, ensuring no sensitive data or queries are sent to the cloud. It will iteratively search and analyze information, combine local knowledge base queries with optional web search, and produce comprehensive markdown reports with citations. Deployment will utilize the SUSE stack (openSUSE Leap as base layer operating system, SUSE Rancher, K3s, Longhorn, and SLE BCI containers) to orchestrate the solution on resource-constrained edge environments. This project aims to deliver a fully open-source research agent that empowers domains like document Q&A, local knowledge bases, and on-site research, all while maintaining data privacy and leveraging openSUSE Leap as base  layer operating system for containerization.",
          "student_name": "Rudraksh Karpe",
          "code_url": null,
          "proposal_id": "G5Piic8E",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JPbCjwEn"
        },
        {
          "title": "Smart Cities - Traffic Prediction Microservice",
          "short_description": "Project Summary: Real-Time Traffic Prediction and Management System Problem: Urban traffic congestion poses significant challenges, leading to...",
          "description": "Project Summary: Real-Time Traffic Prediction and Management System\n\nProblem: Urban traffic congestion poses significant challenges, leading to delays, increased pollution, and inefficient resource allocation. Existing systems often lack real-time predictive capabilities and edge-based solutions, limiting their effectiveness in dynamic environments.\n\nSolution: This project will develop a scalable, real-time traffic prediction and management system using AI-driven models (e.g., LSTM, GRU) trained on diverse data sources (Kaggle, OpenStreetMap, real-time APIs). The solution will integrate a data ingestion pipeline (using Apache Kafka/Airflow,ML), deploy models on edge devices via Docker and Kubernetes, and provide a Streamlit-based web UI for visualization and alerts. The system will predict traffic flow, detect anomalies, and trigger congestion alerts to optimize traffic management.\n\nDeliverables:\nA fully deployed edge-based traffic prediction microservice with low-latency inference.\nAn automated data pipeline integrating multiple traffic data sources.\nA user-friendly Streamlit web interface for real-time monitoring and alerts.\nComprehensive documentation (setup, architecture, deployment) and a 5-minute demo video showcasing the system’s capabilities.",
          "student_name": "sameer chauhan",
          "code_url": null,
          "proposal_id": "s0HF6b5B",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qc3bwrNj"
        },
        {
          "title": "GSoC Proposal - Extract and Containerize Uyuni Salt Event Processor",
          "short_description": "This project aims to extract the Salt event processor from Uyuni's Tomcat web server and turn it into a standalone containerized service. Currently,...",
          "description": "This project aims to extract the Salt event processor from Uyuni's Tomcat web server and turn it into a standalone containerized service. Currently, Tomcat handles both web requests and Salt event processing. The problem is that processing Salt events can be resource-intensive, potentially affecting the performance of the web application also running in Tomcat. By decoupling these components, I'll create a containerized service that processes Salt events independently, improving overall system performance and reliability.\n\nThe implementation will involve extracting the existing Salt event processing logic, packaging it as a standalone service, containerizing it, and extending Uyuni-tools to deploy and manage this new component with scalable considerations. The current event processing logic will be preserved while adding proper scaling, monitoring, and configuration capabilities.\n\nDeliverables include a fully functional Salt event processor containerized service, integration with Uyuni-tools for deployment management, documentation, and performance benchmarks showing improvements. This architectural improvement will allow Tomcat to focus solely on serving web requests while the event processor can handle Salt events in a more scalable manner.",
          "student_name": "Sywen Chen",
          "code_url": null,
          "proposal_id": "HPaGA0ut",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xq7KEb4Y"
        }
      ]
    },
    {
      "name": "webpack",
      "image_url": "https://summerofcode.withgoogle.com/media/org/webpack/bb5phgrkm0y4op3e-360.png",
      "image_background_color": "#ffffff",
      "description": "webpack is the module bundler for web projects",
      "url": "https://webpack.js.org",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/webpack",
      "ideas_url": "https://docs.google.com/document/d/1JOtAdpoqHGieg_nJpjkWDv1BoErPQ9L1GnZmX55E-W0/edit?usp=sharing",
      "guide_url": "https://webpack.js.org/contribute/",
      "topics": [
        "web development",
        "javascript",
        "webassembly",
        "Node.js",
        "webpack"
      ],
      "technologies": ["javascript", "typescript", "node"],
      "irc_channel": "https://twitter.com/evenstensberg",
      "contact_email": "mailto:evenstensberg@gmail.com",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/webpack?lang=en",
      "blog_url": "https://medium.com/webpack",
      "facebook_url": "",
      "num_projects": 1,
      "projects": [
        {
          "title": "Enhancing Webpack with ESM Module Output",
          "short_description": "This project aims to modernize Webpack by implementing comprehensive support for ECMAScript Modules (ESM) output. Webpack currently lacks robust ESM...",
          "description": "This project aims to modernize Webpack by implementing comprehensive support for  ECMAScript Modules (ESM) output. Webpack currently lacks robust ESM output capabilities, creating challenges for developers working with modern JavaScript. The implementation will focus on four key areas: parser and module analysis enhancements to detect strict mode compatibility issues and identify statically exportable modules; code generation improvements to properly transform CommonJS to ESM exports; runtime optimization to eliminate unnecessary boilerplate; and platform-specific feature support for CSS modules, URL handling, and ESM workers.",
          "student_name": "Ryuya",
          "code_url": null,
          "proposal_id": "jvB8mII1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HJMdVfAT"
        }
      ]
    },
    {
      "name": "FreeCAD",
      "image_url": "https://summerofcode.withgoogle.com/media/org/freecad/hka287elz3d4wvzu.png",
      "image_background_color": "#ffffff",
      "description": "Cross-platform 3D parametric modeler",
      "url": "https://freecad.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/freecad",
      "ideas_url": "https://wiki.freecad.org/Google_Summer_of_Code_2025",
      "guide_url": "https://wiki.freecad.org/GSoC_Checklist",
      "topics": [
        "engineering",
        "graphics",
        "cad",
        "3d",
        "architecture",
        "BIM",
        "CAM"
      ],
      "technologies": ["python", "c++", "qt", "OpenCASCADE", "OpenInventor"],
      "irc_channel": "https://matrix.to/#/#FreeCAD_FreeCAD:gitter.im",
      "contact_email": "",
      "mailing_list": "https://forum.freecad.org",
      "twitter_url": "https://twitter.com/freecadnews",
      "blog_url": "https://blog.freecad.org/",
      "facebook_url": "https://www.facebook.com/FreeCAD/",
      "num_projects": 3,
      "projects": [
        {
          "title": "3D PDF Export in FreeCAD",
          "short_description": "The 3D PDF Export for FreeCAD project aims to develop a native capability for exporting interactive 3D models directly to PDF format, enhancing...",
          "description": "The 3D PDF Export for FreeCAD project aims to develop a native capability for exporting interactive 3D models directly to PDF format, enhancing FreeCAD's documentation and collaboration capabilities. Currently, FreeCAD users must rely on complex multi-step workflows involving external tools like MeshLab, LaTeX, or even commercial CAD software to create 3D PDFs, often resulting in loss of model fidelity, colors, and structure.\n\nThis project proposes implementing a seamless 3D PDF export feature integrated directly into FreeCAD's TechDraw workbench. Users will be able to create standard technical drawings with traditional orthographic views and dimensions, plus an interactive 3D view that appears as a regular isometric view in print but becomes fully interactive when viewed digitally.\n\n\nKey components of the implementation include:\n1.\tDocument Structure Access: Utilizing FreeCAD's Python API to traverse the document object hierarchy or need to rely on Qt for accessing certain structural information. \n2.\t3D Format Conversion: Implementing exporters for both U3D format and PRC format to support NURBS surfaces for higher fidelity representation.\n3.\tPDF Generation: Creating a PDF container that properly embeds the 3D content with interactive viewing capabilities.\n4.\tTechDraw Integration: Extending the TechDraw workbench to include a new \"3D View\" type alongside traditional orthographic views.\n\nThe completed feature will significantly enhance FreeCAD's usability for professional documentation, enabling users to share interactive 3D models with clients and collaborators who don't have CAD software, addressing a long-requested feature within the FreeCAD community.",
          "student_name": "chiragsingh1711",
          "code_url": null,
          "proposal_id": "8zS4ZHDD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/istlFWLD"
        },
        {
          "title": "Interactive controls in the 3D View",
          "short_description": "This project aims to add interactive controls like Gizmos along with On- View-Parameters (OVPs) directly to the 3D model view of FreeCAD,...",
          "description": "This project aims to add interactive controls like Gizmos along with On-\nView-Parameters (OVPs) directly to the 3D model view of FreeCAD, predominantly for the Part Design workbench. This will allow users to perform the operations more easily with increased visual feedback. Through this project they will be able to directly set different parameters needed for a particular operation in the 3D view without needing\nto use the task dialog continuously. The controls will be configurable and\nwon’t interfere with the existing experience.",
          "student_name": "Sayantan Deb (captain0xff)",
          "code_url": null,
          "proposal_id": "P4NKWm45",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CCXJAFdQ"
        },
        {
          "title": "Multiple files parallel editing",
          "short_description": "As of march 2025 FreeCAD cannot have more than one active document. If a task is going on in a file, another file cannot be edited until that...",
          "description": "As of march 2025 FreeCAD cannot have more than one active document. If a task is going on in a file, another file cannot be edited until that operation is resolved. The project's aim is to instantiate an editor per tab (document) and therefore allow parallel editing of multiple files. This would not only make the software more powerful for advanced users, but also friendlier for beginners.",
          "student_name": "theo-vt",
          "code_url": null,
          "proposal_id": "B7VtmqmF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xukQtkzX"
        }
      ]
    },
    {
      "name": "JAX and Keras",
      "image_url": "https://summerofcode.withgoogle.com/media/org/jax-and-keras/7czut6i8nmxbyzkp-360.png",
      "image_background_color": "#ffffff",
      "description": "Python libraries for large-scale machine learning",
      "url": "https://docs.jax.dev/",
      "category": "Artificial Intelligence",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/jax-and-keras",
      "ideas_url": "https://docs.google.com/document/d/16uAZEldrXUBHjrszSO22Hr81OmVSjzVXza0szZl6Fxw/edit?usp=sharing",
      "guide_url": "https://forms.gle/yJaBBLJfqTJfWfyt6",
      "topics": ["machine learning", "Jax", "keras", "PYTHON LIBRARY"],
      "technologies": ["python", "machine learning", "ai"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "jax-keras-gsoc-2025@google.com",
      "twitter_url": "",
      "blog_url": "https://deepmind.google/discover/blog/using-jax-to-accelerate-our-research/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Benchmarking and Improving Large Language Model Serving Performance",
          "short_description": "Large Language Model (LLM) serving frameworks like vLLM must deliver high throughput and low latency to justify the substantial cost of GPU and TPU...",
          "description": "Large Language Model (LLM) serving frameworks like vLLM must deliver high throughput and low latency to justify the substantial cost of GPU and TPU deployments. This project targets systematic benchmarking, profiling, and optimization of vLLM, one of the most widely adopted open-source LLM serving systems. The goal is to push its performance limits under realistic workloads and contribute meaningful improvements back to the community.",
          "student_name": "Bob Chen",
          "code_url": null,
          "proposal_id": "kOadfIEt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hn9YIJn3"
        },
        {
          "title": "Integrating VBLoRA into Keras",
          "short_description": "VB-LoRA (Vector Bank Low-Rank Adaptation) is a parameter-efficient fine-tuning technique that extends LoRA (Low-Rank Adaptation) by introducing a...",
          "description": "VB-LoRA (Vector Bank Low-Rank Adaptation) is a parameter-efficient fine-tuning technique that extends LoRA (Low-Rank Adaptation) by introducing a shared vector bank and a differentiable top-k selection mechanism. This allows dense layers to adapt to new tasks by training a small set of parameters while keeping the original weights frozen. The goal of this project is to implement VB-LoRA in Keras, integrating it into layers—Dense, EinsumDense, BaseConv, Embedding, and Attention —and extending it to the backbones of model architectures in Keras Hub. The implementation will involve initializing VB-LoRA parameters, creating a vector bank and logits, computing low-rank matrices, and ensuring seamless integration with comprehensive testing and documentation.",
          "student_name": "Dhiraj BM",
          "code_url": null,
          "proposal_id": "TX7HLzOK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vcABnzOo"
        },
        {
          "title": "Implement open LLM models with JAX and Flax",
          "short_description": "As interest in large language models continues to grow, many open-source implementations exist across various frameworks—but accessible, modular, and...",
          "description": "As interest in large language models continues to grow, many open-source implementations exist across various frameworks—but accessible, modular, and well-documented implementations in Flax, built on JAX, remain limited. This lack of resources makes it more difficult for developers and researchers to understand, experiment with, and extend LLMs in the JAX ecosystem.\nThis project addresses that gap by implementing one or more open LLM architectures in Flax. The goal is to provide reference models that are easy to read, modify, and build upon. The project will also include a comprehensive test suite to ensure reliability, and an interactive educational notebook that explains the architecture, shows how to load pretrained weights, and demonstrates how to run inference.",
          "student_name": "Megan Andrews",
          "code_url": null,
          "proposal_id": "lAqe8CeL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GKcZodMM"
        },
        {
          "title": "\"Pomni\" - JAX Code Assistant",
          "short_description": "Current Frontier LLMs are really bad at assisting with writing JAX code due to the sparse resources spread across multiple different forums and...",
          "description": "Current Frontier LLMs are really bad at assisting with writing JAX code due to the sparse resources spread across multiple different forums and platforms which are often inacessible/unscrapeable (such as discord) by conventional search engine indexers or web scrapers. Thus they usually do not make it into the final pretraining datasets, hurting frontier models' performance on those frameworks.\n\nI want to fine-tune OSS models on JAX code, where the data is manually scraped/collected by hand from diverse sources like YT talks, GitHub discussions, Books & Papers and even XLA HLO dumps to enhance the models' understanding of the compiler internals and improve debugging capabilities as well as better guide the developers when dealing with the internals.\n\nAnother key focus would be incorporating commonly-used popular libraries like Equinox, Optax and Scalax as well because current SOTA LLMs are not familiar with these (relatively) niche but handy libraries and thus prove to be less helpful and prone to hallucinating components of the ecosystem that don't exist.\n\nThis pretrained model will be available externally through an API or a CLI interface like Aider/Claude Code styled wherein it'd be accessible to everyone regardless of their development environment or IDE/Editor.\n\nI would also experiment with new ideas such as integrating type-annotations, Array and PyTree shape annotations and packaging other auxiliary information embedded in the AST to provide further context to the model apart from the raw code itself.",
          "student_name": "neel04",
          "code_url": null,
          "proposal_id": "75vXYPfZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HdO43aXo"
        }
      ]
    },
    {
      "name": "dora-rs",
      "image_url": "https://summerofcode.withgoogle.com/media/org/dora-rs-tb/u8emntrmqq6vgcih-360.png",
      "image_background_color": "#ffffff",
      "description": "Simplify robotic apps with low latency & distributed dataflow",
      "url": "https://dora-rs.ai",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/dora-rs-tb",
      "ideas_url": "https://github.com/dora-rs/dora/wiki/GSoC_2025",
      "guide_url": "https://github.com/dora-rs/dora/blob/main/CONTRIBUTING.md",
      "topics": [
        "middleware",
        "Embodied AI",
        "Python Robotics",
        "Autonomous Drive",
        "Robot Dataflow"
      ],
      "technologies": ["python", "ros", "c++", "rust", "Autonomous drive"],
      "irc_channel": "",
      "contact_email": "mailto:huangyu@dora-rs.org",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://x.com/bobd98846595?t=b3gA64CFMvmEF-0sIKrNsA&s=09",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Robot Data Collection improvement",
          "short_description": "This project aims to enhance robot data collection using affordable kits and the Dora framework. It involves building a modular MuJoCo simulation for...",
          "description": "This project aims to enhance robot data collection using affordable kits and the Dora framework. It involves building a modular MuJoCo simulation for robotic arms, implementing a Dora data collection node in the LeRobot format, and generating diverse manipulation datasets. The collected data will be documented, open-sourced on HuggingFace, and supported by beginner-friendly tutorials and demos to showcase real-world applications. Deliverables include simulations, a data collection tool, a sample dataset, documentation, tutorials, and a public dataset release.",
          "student_name": "Shashwat Patil",
          "code_url": null,
          "proposal_id": "7UT7UV4a",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JzWj3E87"
        },
        {
          "title": "Improve Dora-Lerobot Demo Tutorial and Support additional hardware",
          "short_description": "Lerobot is a framework for rapidly developing embodied intelligent robots, which includes classic imitation learning strategies such as ACT and...",
          "description": "Lerobot is a framework for rapidly developing embodied intelligent robots, which includes classic imitation learning strategies such as ACT and Diffusion Policy, as well as low-cost robot hardware. It is necessary to combine it with dora.\n\nRecently, support for the SO-ARM100, a low-cost robotic arm, was added to Dora through its driver. However, there is currently no end-to-end tutorial available for using this arm. Tutorials and documentation are critical for making the project more accessible to new users.\n\nThe goal of this project is to improve the Python-based tutorial for using the SO-ARM100 robotic arm with Dora-LeRobot, enabling users to easily get started and contribute to the ecosystem.\n\nExpected Outcomes:\n1.Fix issues and add missing code so that Dora-LeRobot can be run with SO-ARM100 successfully.\n2.Writing detailed setup and usage tutorials.\n3.Implementing code for calibration, control, training, and inference.\n4.Creating video tutorials and improve based on community feedbacks.\n5.Creating test plan for user testing to ensure the tutorial is easy to follow.\n6.Developing the Rust library for UR5 control. A well-documented, efficient, and effective Rust library that interfaces with UR5 robots through Dora.",
          "student_name": "Xiang Yang",
          "code_url": null,
          "proposal_id": "K90iTZAI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bS0earbh"
        }
      ]
    },
    {
      "name": "GitLab",
      "image_url": "https://summerofcode.withgoogle.com/media/org/gitlab/mfhpav5dgegzwg8z-360.png",
      "image_background_color": "#ffffff",
      "description": "Everyone can contribute",
      "url": "https://about.gitlab.com/community/",
      "category": "Infrastructure and cloud",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/gitlab",
      "ideas_url": "https://gitlab.com/gitlab-org/developer-relations/contributor-success/google-summer-of-code-2025/-/issues",
      "guide_url": "https://contributors.gitlab.com",
      "topics": ["cloud", "ai", "devops", "git", "DevSecOps"],
      "technologies": ["javascript", "ruby on rails", "go", "ruby", "vue"],
      "irc_channel": "https://discord.gg/gitlab",
      "contact_email": "mailto:contributors@gitlab.com",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/gitlab",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Kashkoush - Enhancing GitLab's Web IDE with Advanced Source Control Features",
          "short_description": "This project aims to implement essential Git operations in GitLab's Web IDE, eliminating inefficient repository cloning for common version control...",
          "description": "This project aims to implement essential Git operations in GitLab's Web IDE, eliminating inefficient repository cloning for common version control tasks. The project will add commit amend, force push, stash, and rebase functionality. \nImplementation will proceed methodically, beginning with features requiring no backend changes before addressing REST API modifications. These enhancements will significantly improve developer productivity by enabling complete Git workflows within the browser, bringing Web IDE capabilities closer to VS-Code source control.",
          "student_name": "Ahmed Kashkoush",
          "code_url": null,
          "proposal_id": "OPctwS0x",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mNwPEdaV"
        },
        {
          "title": "Allow users to use Workspaces without having to build a custom image",
          "short_description": "Users can not use their popular pre-built images in GitLab workspaces due to conflict in the way how GitLab configures its container and how the...",
          "description": "Users can not use their popular pre-built images in GitLab workspaces due to conflict in the way how GitLab configures its container and how the pre-built images are configured. Providing volume remounting, ACL, Linux special file permissions and clear error messages integrated into GitLab system to outcome this. Enhancing user’s workspace experience and ensuring workspaces are working smoothly without any additional work and setup.",
          "student_name": "Omar Nasser",
          "code_url": null,
          "proposal_id": "yQhQS4YE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Y9R088Nb"
        },
        {
          "title": "Expand Vulnerability GraphQL Offering",
          "short_description": "GitLab's security features help developers find vulnerabilities in their code, but the current API doesn't expose all the important information that...",
          "description": "GitLab's security features help developers find vulnerabilities in their code, but the current API doesn't expose all the important information that security teams need. For example, users can't easily access details about when vulnerabilities were first discovered, who authored the related commits, or which pipelines detected the issues. This makes it difficult for teams to automate their security workflows and track vulnerability trends over time.",
          "student_name": "Patrick He",
          "code_url": null,
          "proposal_id": "MB61DzkW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NESmAewc"
        },
        {
          "title": "[Deployment Management]  Add Notification for expiring Deploy Tokens: E-mail and Webhook",
          "short_description": "This project is a notification system that alerts its users before their deploy tokens expire. Deploy tokens are used to provide secure access to...",
          "description": "This project is a notification system that alerts its users before their deploy tokens expire. Deploy tokens are used to provide secure access to repositories and container registries, independent of a user account. Due to this reason, they are used in CI/CD pipelines, automation scripts, and third-party integrations. Some of these tokens are configured to have an expiry date at the time of creation. \n\nCurrently, GitLab lacks an automated way to notify users about tokens that are about to expire. This can lead to last-minute troubleshooting and potential downtimes. To address this, we can integrate a notification system that notifies the project owners, group owners and admins at different intervals [14, 7, 1] days through email notifications and webhooks. This will ensure timely renewals of the token and avoid unexpected failures.",
          "student_name": "Pratibha Gupta",
          "code_url": null,
          "proposal_id": "Tyex1vEc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/POJu1RD5"
        },
        {
          "title": "Protected Terraform States",
          "short_description": "When managing cloud infrastructure through GitLab using Terraform, there is a critical security concern: any maintainer can make destructive changes...",
          "description": "When managing cloud infrastructure through GitLab using Terraform, there is a critical security concern: any maintainer can make destructive changes from any branch, even unintentionally. This opens up risks where unreviewed or experimental branches can alter production environments.\n\nThis project aims to implement a system of Protected Terraform States, similar to protected branches in Git. The idea is to enforce that only designated branches (like main or production) can trigger state changes to Terraform-managed infrastructure.\n\nThe proposal includes:\nCreating backend logic to enforce state protection rules.\nDesigning GraphQL APIs to manage and query protected states.\nEnabling fine-grained permission controls for reading, writing, or deleting Terraform state files.\nIntegrating usage tracking to help teams audit and improve security.",
          "student_name": "Sahil Sarawagi",
          "code_url": null,
          "proposal_id": "L9c1YfNi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Q2S2d0FK"
        }
      ]
    },
    {
      "name": "Rspamd",
      "image_url": "https://summerofcode.withgoogle.com/media/org/rspamd/d2hi7vv5bavik21s-360.png",
      "image_background_color": "#ffffff",
      "description": "Rspamd is an email framework and spam filter",
      "url": "https://www.rspamd.com",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/rspamd",
      "ideas_url": "https://rspamd.com/gsoc2025_ideas.html",
      "guide_url": "https://github.com/rspamd/rspamd/blob/master/CONTRIBUTING.md",
      "topics": ["email", "spam filtering"],
      "technologies": ["c", "lua", "c++", "rust", "clickhouse"],
      "irc_channel": "https://rspamd.com/support.html",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://rspamd.com/blog/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Full Telegram Support for Spam Filtering",
          "short_description": "The bot will support real-time spam reporting, rate limiting, and user reputation management. The implementation will leverage Rust for interfacing...",
          "description": "The bot will support real-time spam reporting, rate limiting, and user reputation management. The implementation will leverage Rust for interfacing with the Telegram Bot API, Lua for scripting automation rules, and innovative rule engine design to ensure scalability and responsiveness. The final deliverable includes an advanced moderation UI and comprehensive documentation, benefitting both administrators and the broader open source community by providing an innovative tool for spam mitigation.",
          "student_name": "Elizaveta Alpatskaia",
          "code_url": null,
          "proposal_id": "92H92c5M",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hJDJf3Ea"
        },
        {
          "title": "Multi-Class Bayesian Classifier",
          "short_description": "Rspamd's Bayesian classifier currently supports only binary classification (spam/ham), this project aims to extend its capabilities. The goal is to...",
          "description": "Rspamd's Bayesian classifier currently supports only binary classification (spam/ham), this project aims to extend its capabilities. The goal is to enhance the current Bayesian classifier to support multiple configurable categories to streamline email management. Additionally, the project will integrate an AI-driven learning mechanism using a GPT plugin to dynamically update classification models based on evolving email patterns.",
          "student_name": "Kevin Shah",
          "code_url": null,
          "proposal_id": "Okra0QTU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hqn47hW8"
        }
      ]
    },
    {
      "name": "GNU Radio",
      "image_url": "https://summerofcode.withgoogle.com/media/org/gnu-radio/v1g5y6exzlwgfulv-360.png",
      "image_background_color": "#ffffff",
      "description": "The free & open software radio ecosystem",
      "url": "https://www.gnuradio.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/gnu-radio",
      "ideas_url": "https://wiki.gnuradio.org/index.php?title=GSoCIdeas",
      "guide_url": "https://www.gnuradio.org/gsoc/",
      "topics": [
        "real-time",
        "dsp",
        "communications engineering",
        "cybersecurity",
        "Software-Defined Radio"
      ],
      "technologies": ["python", "c++", "qt", "simd"],
      "irc_channel": "https://chat.gnuradio.org/#/welcome",
      "contact_email": "",
      "mailing_list": "https://lists.gnu.org/mailman/listinfo/discuss-gnuradio",
      "twitter_url": "https://twitter.com/gnuradio",
      "blog_url": "https://www.gnuradio.org/blog/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "5G CELL SCANNER",
          "short_description": "This project aims to develop an open-source 5G cell scanner using GNU Radio and SDR hardware. The scanner will passively detect and decode 5G...",
          "description": "This project aims to develop an open-source 5G cell scanner using GNU Radio and SDR hardware. The scanner will passively detect and decode 5G signals, extracting key Broadcast information such as Master Information Block(MID) and System Information  Block 1 (SIB1). Unlike existing solutions, this tool will provide real-time monitoring, improved multi-band scanning, and enhanced usability for researchers and network analysts. I will first implement a Python-based DSP Pipeline for 5G synchronization and decoding to achieve this. Then, I will integrate the pipeline into GNU Radio, creating modular, reusable blocks for real-time SDR processing. The final deliverables will include- \n1. A Python-based DSP prototype for 5G signal decoding.\n2. A GNU Radio OOT (Out-of-Tree) module implementing 5G cell scanning.\n3. Visualisation and logging tools for analyzing detected 5G networks.\n4. Comprehensive documentation for ease of use and future development\n\nThis project will enhance GNU Radio's capabilities in 5G signal analysis, benefiting the open-source wireless community and enabling advanced research in cellular networks",
          "student_name": "<Aaditya/>",
          "code_url": null,
          "proposal_id": "lCUqcknV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mh8bSn66"
        },
        {
          "title": "GNU Radio FT8/WSPR OOT Module",
          "short_description": "This project aims to develop a comprehensive Out-of-Tree (OOT) module for GNU Radio that enables amateur radio enthusiasts to incorporate FT8 and...",
          "description": "This project aims to develop a comprehensive Out-of-Tree (OOT) module for GNU Radio that enables amateur radio enthusiasts to incorporate FT8 and WSPR functionality directly into their applications. Currently, most operators rely on standalone applications like WSJT-X, limiting flexibility and integration possibilities.\nThe proposed solution is to create modular, reusable components for encoding, modulating, demodulating, and decoding FT8/WSPR messages. These components will include:\n\nFT8/WSPR Message Encoder: Implementing standard message formats with validation for callsigns, grid locators, and signal reports\nFT8/WSPR Modulator: Building 8-FSK modulation for FT8 and 4-FSK modulation for WSPR with proper timing and tone spacing\nFT8/WSPR Demodulator: Creating components to detect signals, handle frequency drift, and extract weak signals from noise\nFT8/WSPR Message Decoder: Implementing error correction algorithms and partial decode support\nIntegration Components: Developing example flowgraphs, time synchronization, and potentially QSO tracking features\n\nThis module will allow experimentation with weak signal protocols, enable integration into complex signal processing chains, provide educational value for understanding digital mode implementation, and support development of new applications leveraging these protocols—ultimately bringing more skilled contributors to the GNU Radio community.",
          "student_name": "Daniel Paul",
          "code_url": null,
          "proposal_id": "qHyLNt9M",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2yVGddvs"
        },
        {
          "title": "Expanding the GNU Radio 4.0 Block Set",
          "short_description": "I propose to migrate and enhance critical signal-processing blocks from GNU Radio 3.x to the next-generation GNU Radio 4.0 architecture. Leveraging...",
          "description": "I propose to migrate and enhance critical signal-processing blocks from GNU Radio 3.x to the next-generation GNU Radio 4.0 architecture. Leveraging modern C++ (reflection macros, named ports, template-based blocks) and GR4’s updated plugin registry, I will port essential analog (AM/FM), digital (PSK, QAM, synchronization), and audio I/O blocks. This ensures a robust, fully tested, and documented library, enabling researchers and hobbyists to build end-to-end flowgraphs entirely in GR4. Deliverables include:\n\n1.An OOT module with ported AM/FM demodulators, core digital modems, and real-time audio blocks\n\n2.Thorough unit tests (GoogleTest) & CI integration\n\n3.Example flowgraphs demonstrating real-world use (FM radio receiver, QPSK transceiver)\n\n4.Comprehensive documentation, including an official “Porting GR3 Blocks to GR4” guide and merged PRs for upstream adoption\n\nBy completing these tasks, the project will significantly expand GR4’s usability, help new adopters migrate confidently, and further solidify GNU Radio 4.0 as a high-performance, modern SDR framework.",
          "student_name": "KrishGupta",
          "code_url": null,
          "proposal_id": "ZhPIF79v",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ES4VxTjr"
        },
        {
          "title": "FM Broadcast Radio application",
          "short_description": "In this project, I aim to develop a fully fledged FM broadcast receiver application with integrated RDS and spectrum scanning. The application should...",
          "description": "In this project, I aim to develop a fully fledged FM broadcast receiver application with integrated RDS and spectrum scanning. The application should be inviting to beginners and users will little or no background in Gnu Radio. It will also serve a purpose as a demo application which would allow potential users and beginners to see how Gnu Radio can build a production-grade application.",
          "student_name": "StudHamza",
          "code_url": null,
          "proposal_id": "gxZy8xg8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/52Db7328"
        }
      ]
    },
    {
      "name": "Swift",
      "image_url": "https://summerofcode.withgoogle.com/media/org/swift/moutmu5fv3rozvrz-360.png",
      "image_background_color": "#ffffff",
      "description": "Fast, safe, and expressive programming language",
      "url": "https://swift.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/swift",
      "ideas_url": "https://www.swift.org/gsoc2025/",
      "guide_url": "https://www.swift.org/contributing/",
      "topics": [
        "compilers",
        "cross-platform",
        "Packages",
        "Server development",
        "Standard Libraries"
      ],
      "technologies": ["c++", "cmake", "swift"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://forums.swift.org",
      "twitter_url": "https://twitter.com/SwiftLang",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Improve the display of documentation during code completion in SourceKit-LSP",
          "short_description": "Currently, SourceKit-LSP only shows the first line of the documentation for code completion items. Furthermore, it doesn’t support the Language...",
          "description": "Currently, SourceKit-LSP only shows the first line of the documentation for code completion items. Furthermore, it doesn’t support the Language Server Protocol’s (LSP) signature help request which provides information about the function or subscript being completed like alternative signatures, documentation, parameter list, and parameter-specific documentation.\n\nThe goal of this project is to enhance how SourceKit-LSP displays documentation for code completion items by:\n1. Providing the full documentation for code completion items rather than the first line only.\n2. Implementing LSP’s signature help request to provide richer guidance for completing function/subscript signatures.\n\nThe implementation will require changes in SourceKit-LSP and sourcekitd in the Swift compiler codebase. This will enhance the developer experience for Swift developers using SourceKit-LSP on editors like Visual Studio Code and Neovim aligning with Swift’s vision of cross-platform support.",
          "student_name": "Ahmed Elrefaey",
          "code_url": null,
          "proposal_id": "kB2joC94",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CgWk0OF5"
        },
        {
          "title": "JNI mode for swift-java’s source jextract tool",
          "short_description": "The swift-java interoperability library provides the jextract-swift tool, which extracts Java sources that are used to call Swift code from Java....",
          "description": "The swift-java interoperability library provides the jextract-swift tool, which extracts Java sources that are used to call Swift code from Java. However, the tool uses the Foreign Function and Memory API (FFM), which requires JDK 22+, making it unavailable on platforms such as Android. The goal of this proposal is to extend the jextract-swift tool, such that it is able to generate Java sources using JNI instead of FFM and thereby allowing more platforms to utilize Swift/Java interoperability.\n\nThe solution will modify the code generation to support multiple modes through a protocol. Thereby, allowing us to generate JNI Java wrappers that that utilize the JNI functionality already defined in the library. We will modify the current Arena implementations to support memory management for JNI as well, through calls to the Swift runtime. The library will also generate Swift thunks that implement the native methods defined in Java and handle JNI/Swift conversion and object initialization. \n\nThe project will achieve feature parity with the current FFM mode and explore more complex language features, if time permits.",
          "student_name": "Mads Odgaard",
          "code_url": null,
          "proposal_id": "ykQ4dntF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oIpmPLvm"
        },
        {
          "title": "Swiftly Integration in VS Code",
          "short_description": "This project aims to integrate Swiftly with the Swift Extension for VSCode. It should allow users to install Swiftly and Swift toolchains in the...",
          "description": "This project aims to integrate Swiftly with the Swift Extension for VSCode. It should allow users to install Swiftly and Swift toolchains in the VSCode editor toolchains directly within the VSCode editor.\n\nCurrently, we have the “Swift Extension of VS Code,” which provides code completion and LSP integration, error annotations with applicable suggestions, automatic generation of launch configurations for debugging, automatic task creation, Swift PM integration, and test explorer view. \n\nSince different projects may require different versions of Swift toolchains, we want to integrate with Swiftly to provide a seamless toolchain selection experience in VSCode.",
          "student_name": "Priyambada Roul",
          "code_url": null,
          "proposal_id": "dr7ZM4V0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OnmTLTo3"
        },
        {
          "title": "Improved Console Output for Swift Testing",
          "short_description": "This project aims to enhance the console output experience for the Swift Testing framework. The goal is to design and implement a new reporting...",
          "description": "This project aims to enhance the console output experience for the Swift Testing framework. The goal is to design and implement a new reporting component that formats test output with improved readability, including live progress bars, hierarchical test structures, test metadata (display names, tags), parameterized arguments, and color-coded statuses. The work involves building a modular reporting layer that listens to testing events, integrates with Swift Package Manager, and supports user-configurable output options. Deliverables include a working implementation behind an experimental flag, documentation, community discussion proposals, and visual demonstrations of the improved output.",
          "student_name": "Tien Quoc Bui",
          "code_url": null,
          "proposal_id": "vT3Af5wb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cdZEDJcL"
        }
      ]
    },
    {
      "name": "CircuitVerse.org",
      "image_url": "https://summerofcode.withgoogle.com/media/org/circuitverseorg/rxan5pn96f3m4yfu-360.png",
      "image_background_color": "#ffffff",
      "description": "Build and learn logic circuits in the cloud!",
      "url": "http://circuitverse.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/circuitverseorg",
      "ideas_url": "https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List",
      "guide_url": "https://docs.google.com/document/d/1oeYPAuqWxeC79d-R5I9uFJywQJv4ooO4obF4pwifyTY/edit",
      "topics": [
        "education",
        "web",
        "simulation",
        "pedagogy",
        "digital logic design"
      ],
      "technologies": ["javascript", "ruby", "rails", "canvas", "vue"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://github.com/CircuitVerse/CircuitVerse/discussions",
      "twitter_url": "https://twitter.com/circuitverse?lang=en",
      "blog_url": "https://blog.circuitverse.org/",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "GSoC Circuitverse Project 1 Proposal Aditya Singh",
          "short_description": "In this proposal, I aim to enhance CircuitVerse's user experience and performance by solving key usability and efficiency issues. I'll implement a...",
          "description": "In this proposal, I aim to enhance CircuitVerse's user experience and performance by solving key usability and efficiency issues. I'll implement a folder-based organization for subcircuits to simplify project navigation, introduce group-specific visibility for better classroom management, optimize database queries to resolve performance bottlenecks, develop an engaging Explore page to promote circuit discovery and community interaction, build a real-time leaderboard for weekly contests, and create an intuitive global language selector. By delivering these improvements, I intend to make CircuitVerse more intuitive, scalable, and engaging for all users, contributing directly to both its educational and collaborative goals.",
          "student_name": "Aditya Umesh Singh",
          "code_url": null,
          "proposal_id": "ybMebbui",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jLQVUDdz"
        },
        {
          "title": "Development of Desktop Application and Completion of Vue Simulator",
          "short_description": "The project aims to complete the development of the Tauri Desktop Application. This project will finally mark the completion of the Vue-simulator and...",
          "description": "The project aims to complete the development of the Tauri Desktop Application. This project will finally mark the completion of the Vue-simulator and replace the legacy simulator with the Vue-simulator. This project has been divided into 7 parts -\n1. Fixing the current bugs in the simulator and Desktop App - Fix the bugs, refactor the user Authentication for the Desktop Application, fix the broken Verilog module and Test bench enhancements.\n2. Type script integration and Vue frontend updates - Ts integration, replacing Options API with Composition API, replacing JQuery with Vue's reactivity and increasing the use of Vue lifecycle hooks.\n3. Testing for Web and Desktop simulator - Fix the current test failures, Mock APIs for desktop application testing, writing additional tests for Tauri app for the Verilog, Testbench fixes and the additional features added to Tauri App.\n4. Integration of Vue simulator with the primary codebase - Replace the legacy simulator with the vue-simulator for development and production.\n5. Versioning of App and Release for the Desktop Application and Update Mechanism for Tauri App - Deploying a seamless release pipeline for versioned releases with the artifacts mentioned, optimizing those built artifacts, and implementing  a reliable update mechanism to deliver the future improvements seamlessly.\n6. Implementing Verion switch (backend).\n7. Documentation for the Vue-simulator and the Desktop Application.",
          "student_name": "Harsh Ashok Rao",
          "code_url": null,
          "proposal_id": "ilK11UqE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RLcXZOiF"
        },
        {
          "title": "Migrate to View Components & Improve Search Experience",
          "short_description": "This proposal aims to significantly enhance CircuitVerse's user experience and technical foundation by migrating core UI elements to reusable View...",
          "description": "This proposal aims to significantly enhance CircuitVerse's user experience and technical foundation by migrating core UI elements to reusable View Components, optimizing search performance and UI/UX using Hotwire/Stimulus, improving overall site navigation with Turbo Drive, fixing UI bugs, streamlining user flows, and implementing RTL language support.",
          "student_name": "Harsh Bhadu",
          "code_url": null,
          "proposal_id": "BVPjFMOY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8dgkuzjy"
        },
        {
          "title": "Open Hardware Component Library",
          "short_description": "This project aims to improve CircuitVerse by adding new components that are useful for learning about real hardware, such as shift registers (SISO,...",
          "description": "This project aims to improve CircuitVerse by adding new components that are useful for learning about real hardware, such as shift registers (SISO, SIMO, MISO, MIMO), comparators, and a buzzer (speaker), Priority MUX, etc. It will also introduce support for connecting CircuitVerse with real devices using the Browser’s Web Serial API, allowing users to interact with physical hardware directly through the simulator. These features will help people better understand how digital circuits work—both in theory and in practice. The goal is to make CircuitVerse more powerful and helpful for learning digital circuits and embedded systems.",
          "student_name": "Nihal Rajpal",
          "code_url": null,
          "proposal_id": "axzByKdo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cIgWR2eT"
        },
        {
          "title": "Enhanced Verilog Support & Stability",
          "short_description": "The Verilog feature in CircuitVerse has been a great experimental addition till now. It has allowed users to write, experiment, and test their...",
          "description": "The Verilog feature in CircuitVerse has been a great experimental addition till now. It has allowed users to write, experiment, and test their Verilog code along with graphical circuit design using CV simulator. But currently, the Verilog feature is full of bugs, unstable, and unreliable which leads to its failure and causes loss of trust in CircuitVerse among its userbase. The project aims to fix the bugs, make the Verilog feature stable, refine the Verilog interface, make it more intuitive, enable users to generate, view, edit, test circuits comprehensively, and fix the testbench generation feature for Verilog code. Other goals include adding detailed documentation for Verilog and added improvements to assist users. Additional enhancements like adding play/pause functionality to simulator, and implementing full-screen view for the Boolean Logic Table is also covered in this project.",
          "student_name": "Vivek Kumar Ray",
          "code_url": null,
          "proposal_id": "mYtiN4sT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9cZjeC5m"
        },
        {
          "title": "Proposal_CiruitVerse_FlutterUpgrade",
          "short_description": "The CircuitVerse mobile app faces performance bottlenecks (UI jank, slow rendering), inconsistent UX (broken project cards, poor navigation), and...",
          "description": "The CircuitVerse mobile app faces performance bottlenecks (UI jank, slow rendering), inconsistent UX (broken project cards, poor navigation), and missing features (blog integration, interactive book errors). These issues degrade user experience, especially on low-end devices.\n\nSolution:\n\n1. Performance Optimization:\n\n>Upgrade Flutter, profile with DevTools, and optimize widgets (RepaintBoundary, const constructors).\n\n>Reduce rebuilds and repaints for smoother animations.\n\n2. UX Overhaul:\n\n>Revamp project cards with default images, share functionality, and Material 3 alignment.\n\n>Fix sidebar navigation and add micro interactions (ripple effects, staggered animations).\n\n3. Feature Integration:\n\n>Fix the interactive book’s rendering errors with error boundaries.\n\n>Integrate blog/Editor’s Pick sections for seamless web-app parity.",
          "student_name": "Yashvant",
          "code_url": null,
          "proposal_id": "n5ZggUXS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rcsyFcHL"
        }
      ]
    },
    {
      "name": "Open Robotics",
      "image_url": "https://summerofcode.withgoogle.com/media/org/open-robotics/6pg3nwfpieq1qmqw-360.png",
      "image_background_color": "#ffffff",
      "description": "Open source robotics and a whole lot more!",
      "url": "https://www.openrobotics.org/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/open-robotics",
      "ideas_url": "https://github.com/osrf/osrf_wiki/wiki/GSoC25",
      "guide_url": "https://github.com/osrf/osrf_wiki/wiki/GSoC25#application-template-for-students",
      "topics": ["robotics", "simulation", "Control", "fleet management"],
      "technologies": ["python", "ros", "gazebo", "c++", "Open-RMF"],
      "irc_channel": "",
      "contact_email": "mailto:gsoc@openrobotics.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/OpenRoboticsOrg",
      "blog_url": "https://discourse.ros.org/",
      "facebook_url": "",
      "num_projects": 8,
      "projects": [
        {
          "title": "Improvements to ROS 2 Tracing",
          "short_description": "Hi! I'm a second-year undergraduate student, passionate about robotics and software development. I've been actively working with ROS 2 in my projects...",
          "description": "Hi! I'm a second-year undergraduate student, passionate about robotics and software development. I've been actively working with ROS 2 in my projects and am eager to contribute to tools that improve the developer experience.\n\nThis project focuses on enhancing ROS 2 tracing by enabling it to start after an application has already launched without losing essential initialization data. Currently, tracing must begin before startup to capture the metadata required for meaningful analysis, which limits flexibility and usability.\n\nThe goal is to explore and implement solutions such as reusing cached initialization metadata or leveraging LTTng’s snapshot mode. These changes aim to make live tracing more robust and accessible, especially for diagnosing issues that are hard to reproduce or debug.\n\nBy the end of the program, I plan to deliver a functional implementation, performance evaluations, and supporting documentation to help integrate these improvements into the ROS 2 tracing workflow.",
          "student_name": "Deva07",
          "code_url": null,
          "proposal_id": "PtimqPmQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/quKpaaVA"
        },
        {
          "title": "Physics-based sonar simulation and new examples with commonly used hardware for underwater robotics",
          "short_description": "The multibeam sonar is a ray-based plugin designed to simulate the physics of acoustic signal propagation, including phase and reverberation effects....",
          "description": "The multibeam sonar is a ray-based plugin designed to simulate the physics of acoustic signal propagation, including phase and reverberation effects. Originally developed for ROS 1 Noetic and Gazebo Harmonic as part of the DAVE project, it is currently being migrated to Gazebo Harmonic and ROS 2 Jazzy. This project aims to complete the migration and enhancement of the multibeam sonar plugin, with three main deliverables.\n\nThe first is an enhanced plugin with improved performance through the introduction of half-precision calculations in CUDA. It is expected that this modification will greatly improve frame refresh rates. Numerical accuracy must be carefully taken into account when implementing it, however, and this should involve thorough testing and evaluation using quantitative metrics in comparison to the performance of the single-precision code.\n\nThe second deliverable is the extension of simulation capabilities to support additional sonar types. Building on the existing multibeam sonar, it should be feasible to implement a side-scan sonar with for seafloor imaging, taking into account shadow analysis and directivity patterns like side lobes, for example.\n\nFinally, benchmark integration is essential to make the simulation more practical and accessible. This involves incorporating hardware that is often used in maritime robotics, like the BlueROV, and not only efficiently modeling the vehicle and its sensors, but also offering examples that are effortless to use. These benchmarks will enable the simulation to be validated and more available and beneficial for the general community, researchers, and developers.",
          "student_name": "Helena Moyen",
          "code_url": null,
          "proposal_id": "n7NnXzvd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/d2fAACfv"
        },
        {
          "title": "Modernization and Improvements of VCSTool",
          "short_description": "Vcstool is a meta version control tool that simplifies working with multiple repositories and is commonly used in ROS and Gazebo environments. It is...",
          "description": "Vcstool is a meta version control tool that simplifies working with multiple repositories and is commonly used in ROS and Gazebo environments. It is available in Debian, Ubuntu, and PyPI but has seen little maintenance in recent years.\n\nThe proposal aims to modernize its Python code and fix its broken CI and outdated linters. Additionally, goals include introducing new bug fixes and feature requests from its parent repository, migrating APIs from vcstools, and publishing a well-documented structure for the codebase.",
          "student_name": "Leander",
          "code_url": null,
          "proposal_id": "HtBRWiUY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jg1C10qE"
        },
        {
          "title": "Improvements to ROS 2 Doctor",
          "short_description": "Prerequisites: Ubuntu and ROS 2 development environment, no need for specialized hardware. Necessary programming skills: Familiarity with...",
          "description": "Prerequisites: Ubuntu and ROS 2 development environment, no need for specialized hardware.\n    Necessary programming skills: Familiarity with C/C++/Python, CMake, ABI/API.\n    Difficulty level: Medium.\n    Potential mentors: Tomoya Fujita\n    Expected size: 100 hours to 150 hours.\n    Expected outcome: A ROS 2 command line interface ros2cli with doctor sub-command and ros2_documentation.\n    Detailed description: Currently, the ROS 2 doctor subcommand, ros2 doctor, is lacking a lot of useful information, such as ROS environment variables, RMW-specific environment variables, and configuration and service information (number of endpoints, QoS compatibility status, etc). This information is really important and useful for debugging issues with ROS 2, and would greatly improve our ability to support issues reported by our user community. In other words, adding this new information to our existing ROS 2 Doctor command would accelerate community communication and make bug reports much more precise! Aligned with ros2cli development, this project also targets the implementation of improved documentation on how to create an issue report with a new issue template.\n    Reference pull requests: Add default github issue templates, add: get clients, servers info",
          "student_name": "Michael Carlstrom",
          "code_url": null,
          "proposal_id": "ZamltwZR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/v0mqB5fO"
        },
        {
          "title": "Multi-Agent Traffic Optimization",
          "short_description": "This project aims to enhance the multi-agent traffic debugging tool in Open-RMF's site editor for stress testing the multi-agent path finding (MAPF)...",
          "description": "This project aims to enhance the multi-agent traffic debugging tool in Open-RMF's site editor for stress testing the multi-agent path finding (MAPF) package that is used to route multi-agent traffic for real world deployments. The site editor will be used to generate a wide variety of test cases, including complex scenarios such as two-endpoint corridors and T-junctions that require careful robot coordination to avoid deadlocks. The mapf library will then be used to simulate the planning results. This enhancement would allow users to visualize the per-iteration output of the MAPF solver to identify identify scenarios where the solver fails to produce an output or gives inconsistent results. Based on these insights, improvements to the mapf framework can then be made accordingly.",
          "student_name": "Nielsen Cugito",
          "code_url": null,
          "proposal_id": "JuyigxfM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/C1UJI3IF"
        },
        {
          "title": "Multi-Agent Traffic Optimization + Infrastructure improvements.",
          "short_description": "I am Ryan, a college student finishing their last semester for a bachelors in computer science. My contribution to the multi-agent traffic...",
          "description": "I am Ryan, a college student finishing their last semester for a bachelors in computer science.\n\nMy contribution to the multi-agent traffic optimization project would be to take the lessons I’ve learned from my previous bevy projects, and use them to update and improve rmf_site’s infrastructure over the course of several stages, and to use those improvements to add procedural generation for the tests sites that will then be used for multi-agent optimization testing.\n\nThe stages for this would be as follows:\n\n1. bevy 0.12 -> latest version of bevy + library updates.. \n2. Compile time improvements\n3. Debug tool improvements \n4. test scenario automation through procedural generation.\n\nUpdate everything:\n\nThe first thing to do would be to update rmf_site bevy and all other dependencies to their latest versions. I’ve done this for all my projects since bevy 0.11, and I can do it for rmf_site too.\n\nImprove Compile TImes:\n\nThe next step would be improving compile times. When I tested this project on my local machine. Iterative compile times took around 50 seconds.\n\nWith the appropriate restructuring of crates, slimmer crate imports, more granular feature flags, and the introduction of the mold linker, these recompile times could be cut down to around 2-7 seconds.\n\nImprove debug tools:\n\nAfter that, then comes adding more debug tools. We can add bevy_inspector_egui for bevy entity/component inspection, bevy_tracing for performance optimization via Tracy.\n\nAutomate test scenarios: \n\nLastly, would be adding procedural generation for test sites.\n\nFirst, would be adding initial tests with randomized prefab placement, then moving to procedural room layouts from tiles, then assigning different layout kinds to each of these, (storage room, office room, etc..), and then finally connecting these different layouts together into a single site.",
          "student_name": "rydb",
          "code_url": null,
          "proposal_id": "KX9VrzH5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2L1pxAFK"
        },
        {
          "title": "Ray tracing enabled Faster-Than-Real-Time GPU based LiDAR plugin for Gazebo",
          "short_description": "LiDAR (Light Detection and Ranging) plays a key role in autonomous navigation and 3D perception. To test and train LiDAR equipped systems...",
          "description": "LiDAR (Light Detection and Ranging) plays a key role in autonomous navigation and 3D\nperception. To test and train LiDAR equipped systems effectively, we need highly realistic simulation, especially for handling environments with complex interactions like reflections and occlusions.\nThis project aims to develop a faster-than-real-time GPU-based LiDAR plugin for Gazebo, exploiting ray tracing capabilities through APIs like Vulkan and frameworks like wgpu to develop a more photorealistic and physically accurate sensor simulation process.",
          "student_name": "Shashank Rao",
          "code_url": null,
          "proposal_id": "rLHrX5M5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5l83pXn9"
        },
        {
          "title": "Hardware Diagnostics Support for ros2_control",
          "short_description": "The ros2_control framework uses a plugin-based system to support multiple hardware drivers at the same time. It takes care of resource constraints...",
          "description": "The ros2_control framework uses a plugin-based system to support multiple hardware drivers at the same time. It takes care of resource constraints between different controllers and hardware components, asynchronous operation of controllers, etc. As of now, controller_manager publishes the diagnostics of itself, and for controllers and hardware components about their lifecycle state and operational statistics such as their periodicity and their execution time. However, A current limitation of the framework is that hardware components, e.g. the ros2_control hardware driver plugin for a given robot, doesn't have a good API for reporting the diagnostics of its own hardware, for instance, the state of the CAN Bus, some internal motor control board stats like temperature, error codes etc. This integration would make the ros2_control, provide complete diagnostics within its ecosystem. This project focuses on setting up an API that hardware manufacturers & driver maintainers can use to report things with minimal code changes to their existing setups.\n\nThis project thus aims to add reporting capabilities to the hardware components with minimal changes. It will also aim to unify the three existing hardware interfaces into one as they currently contain a lot of similar code. \n\nFurthermore, to enhance the contribution, there will also be focus on adding contributions to exisiting widely used Hardware Interfaces with the new API so that the work is adopted with ease, and the community has better references to work off of.",
          "student_name": "Soham P",
          "code_url": null,
          "proposal_id": "BBlN9uGP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/f6FbwO7Y"
        }
      ]
    },
    {
      "name": "Google DeepMind",
      "image_url": "https://summerofcode.withgoogle.com/media/org/google-deepmind-sq/cmdhldmexaj4kpms-360.png",
      "image_background_color": "#ffffff",
      "description": "Google DeepMind's open-source projects",
      "url": "https://github.com/google-deepmind",
      "category": "Artificial Intelligence",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/google-deepmind-sq",
      "ideas_url": "https://goo.gle/deepmind-gsoc-projects-2025",
      "guide_url": null,
      "topics": ["python", "Jax", "AI,", "Gemma"],
      "technologies": ["python", "javascript", "typescript", "Jax", "Gemma"],
      "irc_channel": "",
      "contact_email": "mailto:webpaige@google.com",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/googleaidevs",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 45,
      "projects": [
        {
          "title": "Improving Gemini Documentation for Open Source Model Providers Promptfoo and Weights & Biases",
          "short_description": "The project will close the documentation and evaluation gap for Google’s Gemini models by contributing structured onboarding guides and benchmarking...",
          "description": "The project will close the documentation and evaluation gap for Google’s Gemini models by contributing structured onboarding guides and benchmarking templates to Promptfoo and Weights & Biases Weave, with specifically introducing models like Gemini 2.5 Pro, Gemini 2.0 Flash and Gemini 2.0 Flash-Lite. Despite Gemini’s powerful features—like multimodality and advanced safety settings—its presence in open-source evaluation tools lags behind GPT or Llama models. By improving usability, comparability, and safety transparency, this work will help developers, researchers, and product teams integrate and assess Gemini effectively, making it a fully accessible option in the LLM ecosystem.",
          "student_name": "Adel Muursepp",
          "code_url": null,
          "proposal_id": "hT7jYz4L",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TwyQFyTr"
        },
        {
          "title": "Evaluate Gemini on an Open-Source Benchmark",
          "short_description": "This project aims to rigorously evaluate Google’s Gemini multimodal model on real-world tasks. We plan to address the limitations of current...",
          "description": "This project aims to rigorously evaluate Google’s Gemini multimodal model on real-world tasks. We plan to address the limitations of current benchmarks by either designing a new, comprehensive evaluation framework or extending an existing benchmark (such as MMMU or MultiBench) to include tasks that span text, image, video, and audio. This aims to include:\n\n- A curated, annotated dataset reflecting diverse, real-world multimodal tasks.\n- An automated Python-based evaluation pipeline that computes metrics for perception, reasoning, and long-context performance.\n- A comprehensive comparative analysis report detailing Gemini’s strengths and areas for improvement relative to other leading models.\n\nThis work will provide valuable insights into Gemini’s capabilities and guide future model enhancements, benefiting both research and practical applications.",
          "student_name": "Amrit Rai",
          "code_url": null,
          "proposal_id": "843JCzXC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pPwjYAm4"
        },
        {
          "title": "Enhance Gemini API Integrations in OSS Agents Tools",
          "short_description": "This project will elevate Gemini API support across widely used open-source agent frameworks like LangChain, LlamaIndex, CrewAI, and...",
          "description": "This project will elevate Gemini API support across widely used open-source agent frameworks like LangChain, LlamaIndex, CrewAI, and Composio—bridging the gap between Gemini’s full capabilities and the tools developers use to build with it. By introducing support for advanced features such as multimodal inputs, structured function calling, and streaming outputs, I aim to empower developers to build highly interactive, context-aware agents with ease. The project will include contributions to core library integrations, detailed documentation improvements, and the development of end-to-end examples showcasing Gemini in action. The result will be a robust, user-friendly ecosystem for Gemini-based agent development—making it easier than ever for developers to harness its full potential within their own workflows, products, and research.",
          "student_name": "Andy L",
          "code_url": null,
          "proposal_id": "ZdHek9GA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/P4729El9"
        },
        {
          "title": "Gemma Chat Gradio Demo",
          "short_description": "A majority of the Gemma chat applications on Hugging Face Spaces do not allow the user to adjust generation settings or system prompts, giving the...",
          "description": "A majority of the Gemma chat applications on Hugging Face Spaces do not allow the user to adjust generation settings or system prompts, giving the user only a generic experience. This project aims to provide users with total control of the model. Users will be able to fine-tune settings such as temperature, top-p, repetition penalty, and max tokens, allowing for a more personalized experience. Additionally, the project will introduce a range of predefined model personalities as well as custom context, enabling users to choose from different response styles, tones, and behaviours that best suit their preferences and use cases. I will deliver an open-source web application with comprehensive documentation accompanying it, which includes instructions, usage guides, and explanations of how different parameters influence the model's output. I believe that this project will be a valuable addition to the Gemma ecosystem on Hugging Face.",
          "student_name": "AndyC2513",
          "code_url": null,
          "proposal_id": "ZXYgdwPK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xYQnvnz5"
        },
        {
          "title": "Unified Gemini Example Cookbook: Migrating and Modernizing Open-Source Learning Resources",
          "short_description": "This proposal aims to upgrade and expand existing open-source tutorials and examples to support the new unified Gemini SDKs for JavaScript/TypeScript...",
          "description": "This proposal aims to upgrade and expand existing open-source tutorials and examples to support the new unified Gemini SDKs for JavaScript/TypeScript and Python. My approach involves three key components:\n(i) Cookbook Migration:\nMigrate existing Python examples in the Gemini Cookbook to idiomatic JavaScript/TypeScript. I will ensure the code follows best practices in both languages and is thoroughly documented like the already existing cookbook examples.\n(ii) New Tutorials & End-to-End Examples:\nDevelop fresh, comprehensive tutorials demonstrating a variety of Gemini use cases. Examples include building a chatbot, creating a text summarization tool, and generating images from text prompts. Each tutorial will include step-by-step instructions, code samples, and in-depth explanations of underlying Gemini concepts.\n\nDeliverables include:\n- A set of migrated and newly developed code examples in both Python and JavaScript/TypeScript.\n- Comprehensive, user-friendly tutorials and documentation that clearly explain the code and underlying concepts.\n- Updated examples for existing open-source libraries utilizing the Gemini SDK, with clear migration guides.",
          "student_name": "andycandy",
          "code_url": null,
          "proposal_id": "3TAT7VoP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5FqYnamd"
        },
        {
          "title": "Develop a Gemini Workspace in Postman",
          "short_description": "This project aims to create a Gemini Workspace in Postman for interacting with the Gemini API’s and providing a central hub for exploration ,...",
          "description": "This project aims to create a Gemini Workspace in Postman for interacting with the Gemini API’s and providing a central hub for exploration , integration and troubleshooting. This will reduce the onboarding time for developers to get started with Gemini and the initial learning curve. The key features of this project are : \n\n1. Pre-build collections for every feature and API requests\n2.Examples for every requests to analyse the expected response\n3. Environments for testing and production\n4. Quickstart guide and documentation of every requests - purpose and expected behaviour\n5.Test scripts to check the format of the JSON response and the status code\n6. Mock servers using the postman mocking capabilities\nAutomation via Github Action.\n\nWithout the Gemini Workspace in Postman, developers face manual setup, debugging difficulties, and a steep learning curve. The project simplifies API testing, automation, and collaboration, making the Gemini API more accessible, efficient, and user-friendly",
          "student_name": "Aniket.Saxena",
          "code_url": null,
          "proposal_id": "t9QTWJ3P",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yrmj0F4J"
        },
        {
          "title": "Evaluate Gemini on an Open-Source Benchmark",
          "short_description": "This project will evaluate Google's Gemini (2.5 Pro, 2.0 Flash) and Gemma (3, CodeGemma) models by extending multiple open-source coding benchmarks...",
          "description": "This project will evaluate Google's Gemini (2.5 Pro, 2.0 Flash) and Gemma (3, CodeGemma) models by extending multiple open-source coding benchmarks such as HackerRank ASTRA, Multi-SWE-bench, and WebDev Arena. The evaluation framework will assess coding capabilities across various dimensions, with particular emphasis on multimodal features for frontend development and will leverage the multimodal capabilities of these models, particularly for frontend development evaluation. The solution involves integrating Gemini/Gemma via their respective APIs/libraries, implementing multimodal self-assessment (using visual feedback from rendered UIs), enabling iterative evaluation (allowing models to refine solutions over multiple attempts), expanding the benchmark with complex frontend tasks (e.g., state management, API integration, basic 3D graphics), and automating the entire evaluation pipeline.\n\nDeliverables include the enhanced open-source benchmark with new benchmark tasks, automation scripts, and a public Hugging Face Space displaying continuously updated evaluation results for Gemini, Gemma, and other models, providing a clear, transparent comparison of advanced AI coding capabilities.",
          "student_name": "anxkhn",
          "code_url": null,
          "proposal_id": "EpItK0lz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oZbPWaob"
        },
        {
          "title": "EchoGem – Teaching Gemini to Think in Batches by Prioritizing What Matters",
          "short_description": "EchoGem introduces a novel batching engine designed to answer multiple questions about the same source parallelly to reduce response times heavily....",
          "description": "EchoGem introduces a novel batching engine designed to answer multiple questions about the same source parallelly to reduce response times heavily. It does so by building a modular smart batching engine for Gemini that teaches the model to think in context-aware batches.\n\nWhat sets EchoGem apart is its focus on modularity and testing—each component is designed to be independently swappable and improvable allowing for open testing and matching different strategies for different parts of the engine. Instead of a naive sliding window or top-k search approach, EchoGem uses semantic clustering of both chunks and questions to form intelligent batch groups. It is also committed to measurable, reproducible gains. Every design decision—whether it's a new chunking strategy or a different context ranking model—can be rigorously backtested using a structured evaluation suite.",
          "student_name": "aryan410",
          "code_url": null,
          "proposal_id": "UMmhqYe5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7pu5jVUL"
        },
        {
          "title": "Modernizing Gemini SDK Learning Resources: Migration, Tutorials, and Library Updates",
          "short_description": "This proposal modernizes Gemini SDK learning resources by migrating outdated examples to JavaScript / TypeScript, developing new tutorials, and...",
          "description": "This proposal modernizes Gemini SDK learning resources by migrating outdated examples to JavaScript / TypeScript, developing new tutorials, and updating 2-3 key open-source libraries. Deliverables include 10-12 migrated examples, two tutorials, and library updates, all with comprehensive documentation, enhancing Gemini's accessibility.",
          "student_name": "Guan-Ming (Wesley), Chiu",
          "code_url": null,
          "proposal_id": "lzjjEpbe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/q59WH6jl"
        },
        {
          "title": "Develop a Gemini Workspace in Postman",
          "short_description": "This project aims to develop a comprehensive Postman workspace for Google's Gemini API, providing a central hub for exploration, integration, and...",
          "description": "This project aims to develop a comprehensive Postman workspace for Google's Gemini API, providing a central hub for exploration, integration, and troubleshooting. The plan is to create a well-organized API collection covering all Gemini functionalities (text generation, image/video/audio analysis, and code generation), with configured environments for development and production. \n\nDeliverables include:\n1. Pre-built Postman API collection;\n2. Detailed technical documentation within Postman;\n3. Mock server for offline development/testing;\n4. Automated update mechanism via GitHub Actions. \n\nThis project will significantly reduce the learning curve for developers adopting Gemini API, promote best practices, and establish a sustainable framework that evolves alongside Google's Generative AI offerings.",
          "student_name": "Haibo Yang",
          "code_url": null,
          "proposal_id": "5KGw5oNI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lba2Eefe"
        },
        {
          "title": "Comprehensive Benchmark Suite for Evaluating Gemma Models",
          "short_description": "This project will develop a robust, extensible benchmarking suite designed for Google's Gemma models to address the lack of standardized evaluation...",
          "description": "This project will develop a robust, extensible benchmarking suite designed for Google's Gemma models to address the lack of standardized evaluation tools for these lightweight open models. While Gemma models represent a significant step toward democratizing access to high-quality LLMs, the community lacks standardized benchmarking tools that reliably measure model performance across diverse tasks, hindering effective research, comparison, and deployment.\n\nI will develop a Python-based benchmarking framework that enables systematic evaluation across standard academic benchmarks such as MMLU, GSM8K, and HumanEval. The framework will support comparing Gemma model sizes from 1B to 28B against other open models like Llama 2. It will include efficiency evaluation measuring latency and memory usage and responsible AI assessment for bias and toxicity. The suite will feature automated benchmarking with statistical validation and visual reporting through charts and detailed analysis.\n\nThe deliverables include a core modular benchmark framework supporting model loading, dataset processing, and evaluation; implementation of key academic benchmarks covering knowledge, reasoning, coding, and mathematics; efficiency benchmarking modules; visualization tools for generating performance charts and leaderboards; automation scripts for reproducible benchmark execution; comprehensive documentation; and an open-source GitHub repository with contribution guidelines. The initial focus will be on Gemma 1B, 2B, and 7B models, with the evaluation of larger models (12B+) as a stretch goal based on available computational resources.",
          "student_name": "Hailey Cheng (Cheng Hei Lam)",
          "code_url": null,
          "proposal_id": "ZNrwKR4X",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VcLLevh3"
        },
        {
          "title": "Gemma Model Fine-tuning UI",
          "short_description": "Gemma is a lightweight, open-source large language model by Google DeepMind. This project aims to build an intuitive web interface for fine-tuning...",
          "description": "Gemma is a lightweight, open-source large language model by Google DeepMind. This project aims to build an intuitive web interface for fine-tuning Gemma models. The interface will allow users to upload datasets, configure hyperparameters, monitor training progress, and export trained models — all without writing a single line of code. By lowering the entry barrier, the UI will empower a broader range of users to experiment with and adapt large language models to their specific tasks.",
          "student_name": "halcyon",
          "code_url": null,
          "proposal_id": "TRjmr4Jr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vBF5rvcZ"
        },
        {
          "title": "Multimodal Michelangelo - A New Multimodal Benchmark for Gemini 2.0",
          "short_description": "This is a proposal for Idea 7, \"Evaluate Gemini on an Open-Source Benchmark.\" I want to create a new multimodal benchmark that stress-tests Gemini...",
          "description": "This is a proposal for Idea 7, \"Evaluate Gemini on an Open-Source Benchmark.\"\n\nI want to create a new multimodal benchmark that stress-tests Gemini 2.0’s long-context capabilities, a la popular needle-in-a-haystack (NIAH) evals which have been developed primarily for natural language. The high-level vision is to move beyond existing multimodal NIAH evals, which are quite basic and only test a single dimension of performance, namely, retrieval.\n\nI aim to solve this gap by extending the framework presented in a recent DeepMind research paper - \"Michelangelo: Long Context Evaluations Beyond Haystacks via Latent Structure Queries\" - to the multimodal setting. This paper explains a new eval framework that addresses limitations of current NIAH evals, although it only focuses on the text and code modalities.\n\nFirst, I will design the specific benchmark in conformance with this new framework by DeepMind. This will require a lot of careful planning and experiment design, and we will make sure to ensure that our contributions are novel compared to other multimodal NIAH research.\n\nThen, I will implement the evaluation pipeline - data synthesis (possibly using Imagen 3 or a similar tool), task implementation/evaluation, and result collection/visualization.\n\nFinally I will document the entire process and methodology and share it with the open-source community.",
          "student_name": "Hrithik Ravi",
          "code_url": null,
          "proposal_id": "s1fXuH2V",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/h9tjDKh1"
        },
        {
          "title": "Implementing Web Interface For Fine-Tuning Gemma Models Using Gradio",
          "short_description": "This project is about building a user-friendly web interface using Gradio that makes fine-tuning Gemma models simple and accessible for everyone—even...",
          "description": "This project is about building a user-friendly web interface using Gradio that makes fine-tuning Gemma models simple and accessible for everyone—even those without deep technical knowledge. The app will allow users to upload datasets in various formats, select from different fine-tuning styles like Alpaca-style, conversational, or continuous pretraining, and choose between efficient LoRA or full fine-tuning based on their needs.\n\nOnce fine-tuned, users will be able to convert models into formats like PyTorch or GGUF, making them easy to use with tools like Ollama. The app will also support integration with platforms like Vertex AI, enabling users to fine-tune models without worrying about infrastructure setup.\n\nTo make the process even smoother, the project will include a set of easy-to-follow guides and documentation—covering everything from model selection to parameter tuning—so that users can make informed decisions at every step. The goal is to remove the complexity from LLM fine-tuning and empower more people to adapt powerful Gemma models for their own use cases.",
          "student_name": "inclinedadarsh",
          "code_url": null,
          "proposal_id": "t614wIoW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6ep1Zcf2"
        },
        {
          "title": "Optimizing Gemini API Usage for Long-Context Video Analysis",
          "short_description": "Current AI systems struggle to process long-form videos due to context fragmentation, computational redundancy, and conversational breakdowns when...",
          "description": "Current AI systems struggle to process long-form videos due to context fragmentation, computational redundancy, and conversational breakdowns when using foundation models like Gemini. This proposal tackles these challenges through a hybrid framework integrating dynamic semantic chunking (leveraging speaker diarization, topic modeling, and visual scene detection), reinforcement learning (Proximal Policy Optimization) for adaptive segmentation, and a three-tier caching system to minimize API calls. Deliverables include a production-ready Python package (MIT-licensed), comprehensive documentation, pre-trained models, and integration with platforms like HuggingFace. Preliminary results show 62% cost reduction and 98.7% context retention, enabling scalable, efficient analysis of educational, corporate, and technical video content.",
          "student_name": "Jeet Dekivadia",
          "code_url": null,
          "proposal_id": "pXqpYMT1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5ni7RZ48"
        },
        {
          "title": "Web Interface for Accessible, Configurable Gemma Open Models Fine-Tuning Workflows",
          "short_description": "Fine-tuning LLMs like Gemma requires deep technical understanding and complex configuration, hindering rapid prototyping and broader application....",
          "description": "Fine-tuning LLMs like Gemma requires deep technical understanding and complex configuration, hindering rapid prototyping and broader application. This project addresses this by creating a Streamlit web interface, streamlining dataset management, configurable fine-tuning pipelines (LoRA, SFT, RL), real-time visualization, and evaluation metrics, leveraging Google Cloud Platform for scalable performance. By making the fine-tuning process more accessible, it empowers users to focus on innovation in text and multimodal domains rather than navigating frustrating technical hurdles.",
          "student_name": "Jet Chiang",
          "code_url": null,
          "proposal_id": "3WtSL94T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/N2kjH8yi"
        },
        {
          "title": "Gemini API Developer  Workspace in Postman",
          "short_description": "This project proposes the creation of a comprehensive Postman Workspace tailored for Google’s Gemini API suite. It will offer developers a robust,...",
          "description": "This project proposes the creation of a comprehensive Postman Workspace tailored for Google’s Gemini API suite. It will offer developers a robust, user-friendly hub to explore, integrate, and test Gemini’s capabilities, significantly lowering the barrier to entry for new Gemini developers.",
          "student_name": "Jevon Mao",
          "code_url": null,
          "proposal_id": "3YIezZWd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ntJk8lSk"
        },
        {
          "title": "Creation of a Creative Thinking Benchmark",
          "short_description": "The goal of this project is to develop a multi-modal and open-source benchmark with which to evaluate Gemini 2.0. Open-source benchmarks are an...",
          "description": "The goal of this project is to develop a multi-modal and open-source benchmark with which to evaluate Gemini 2.0. Open-source benchmarks are an unbiased way to test the ability of LLMs in different modalities. Current LLM benchmarks are mostly based on reasoning tasks and maths. However, there does not exist a gold standard LLM benchmark to assess creative thinking. This is a critical gap since creative thinking is essential for progress toward artificial general intelligence (AGI). To solve this, the project aims to extend current creative thinking LLM benchmarks and create a gold standard benchmark across four different modalities (text, image, video, and audio).\n\nUpon the project’s completion, a thorough multi-modal open-source benchmark for creative thinking and creative divergence will be created. This will be accompanied by the evaluation metrics of different models (including Gemini 2.0), along with documentation and custom evaluation scripts. Finally, an educational video explanation of the benchmark will be shared on my YouTube channel (https://www.youtube.com/@Green-Code/), which will serve as an introduction to developers and newcomers to the LLM field.",
          "student_name": "Jon Conesa",
          "code_url": null,
          "proposal_id": "KjDhpvqo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TSDUDJNY"
        },
        {
          "title": "ATIA: A BENCHMARK FOR ADVERSARIAL TOOL INFILTRATION IN AGENTS",
          "short_description": "As multimodal agents become increasingly integrated into real-world applications, ensuring their safe and reliable tool-use behavior is paramount. We...",
          "description": "As multimodal agents become increasingly integrated into real-world applications, ensuring their safe and reliable tool-use behavior is paramount. We introduce ATIA, a novel evaluation suite designed to systematically assess the vulnerability of tool-calling agents to adversarial inputs. ATIA focuses on crafting malicious multimodal inputs—combinations of images, text, and other modalities—that covertly manipulate an agent's decision-making process regarding external tool invocations. By simulating a variety of attack vectors, including visual prompt injections, image–text conflicts, and spurious cross-modal cues, ATIA quantifies critical metrics such as tool call correctness, unsafe tool invocation rate, and adversarial success rate. This benchmark not only exposes potential weaknesses in current multimodal agent architectures but also provides actionable insights for developing robust, safe, and aligned systems. ATIA aims to serve as a reproducible and extensible framework, driving forward research in adversarial robustness and security for next-generation AI agents.",
          "student_name": "kizro",
          "code_url": null,
          "proposal_id": "BQXduE5D",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DcszoT5l"
        },
        {
          "title": "VS Code Extension to assist with coding powered by Gemini APIs",
          "short_description": "A VS Code (or JetBrains) extension to provide AI-powered coding assistance using Google’s Gemini API. This tool enhances the developer experience by...",
          "description": "A VS Code (or JetBrains) extension to provide AI-powered coding assistance using Google’s Gemini API. This tool enhances the developer experience by offering smart code completions, real-time debugging help, and natural language to code conversion. It can suggest optimized code, detect errors, explain complex logic, and help developers write better, more efficient programs. The extension will also improve response times with caching mechanisms and provide a seamless UI/UX for smooth interaction. By integrating AI-driven support directly into VS Code, this project aims to boost productivity, reduce debugging time, and make coding more intuitive and accessible for developers.\nHere is the source code of the extension created by me, in the GitHub repository here: https://github.com/krishnaagrawal7508/GeminiBot",
          "student_name": "krishnaagrawal",
          "code_url": null,
          "proposal_id": "HftEyDW2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/f9mtEUFy"
        },
        {
          "title": "Develop a Gemini Workspace in Postman",
          "short_description": "The goal of this project is to create a developer-friendly Postman Workspace for interacting with the Gemini API. This workspace will serve as a...",
          "description": "The goal of this project is to create a developer-friendly Postman Workspace for interacting with the Gemini API. This workspace will serve as a central hub for exploring, integrating, and troubleshooting the Gemini API, providing developers with pre-built collections, test scripts, and documentation to streamline their workflow and reduce the learning curve. The workspace will feature well-documented API requests for key Gemini functionalities like text generation, chat, image generation, and code generation. It will also include pre-configured environments for testing and production, secure management of API keys, and a GitHub Action for automated updates.\n\nThe key deliverables for this project include:\n1. A comprehensive Postman Workspace with collections for various Gemini API features.\n2. Pre-configured environments for testing and production.\n3. Integrated, self-contained documentation and tutorials.\n4. Test scripts to validate API responses and handle edge cases.\n5. Mock servers to simulate API responses during local development.\n6. A GitHub Action to automate workspace updates based on API changes.\n\nThis solution will simplify the process for developers, improve productivity, and ensure the Postman Workspace remains up-to-date and reliable.",
          "student_name": "Lorenzo Drudi",
          "code_url": null,
          "proposal_id": "ZXZlfTXF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/naa1qGoe"
        },
        {
          "title": "Gemma Garage:  Leveraging Gemma 3 to democratize LLM Fine-tuning",
          "short_description": "This proposal aims to develop the Gemma LLM Garage, a full-stack interface to manage datasets and fine-tune Gemma models. Its main goal is to...",
          "description": "This proposal aims to develop the Gemma LLM Garage, a full-stack interface to\nmanage datasets and fine-tune Gemma models. Its main goal is to abstract the technical complexity from the end user, empowering anyone with a computer to fine-tune their models.\n\nSo far, I have implemented basic features such as fine-tuning with LoRA, a mechanism for uploading datasets, simple data augmentation options, a live loss graph, and a simple inference platform to test the fine-tuned model. The main deliverables are implementing data cleaning strategies, improving the data augmentation options, implementing a testing workbench for the fine-tuned models, and supporting alternative fine-tuning methods (e.g. QLoRA).\n\nThe project prototype is currently deployed through Google Cloud and can be accessed here: \nhttps://gemma-garage.web.app/\n\nA quick video demo is available here: \nhttps://drive.google.com/file/d/1Knt9a16NfJTUX5rddte_SHcMDKCzA8NS/view",
          "student_name": "Lucas Martins",
          "code_url": null,
          "proposal_id": "YiB6Pv05",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yT16LTpy"
        },
        {
          "title": "Enhanced Benchmark for Evaluating Intuitive Physics Understanding in Gemma Multimodal Models",
          "short_description": "This project aims to develop a more rigorous and focused evaluation testbed than that used by Garrido et al. (2025), with the specific goal of...",
          "description": "This project aims to develop a more rigorous and focused evaluation testbed than that used by Garrido et al. (2025), with the specific goal of assessing the intuitive physics understanding of Gemma models. By addressing key shortcomings in existing evaluations—such as overreliance on textual outputs, limited control over task difficulty, and incomplete coverage of fundamental physical concepts—this new benchmark will enable more accurate and fair comparisons. Ultimately, it will offer deeper insights into what Gemma models actually grasp about the physical world and guide future improvements in their design and training.",
          "student_name": "lucas-maes",
          "code_url": null,
          "proposal_id": "XUlM1WdI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/g4DnP02P"
        },
        {
          "title": "Xarray-JAX Integration Library",
          "short_description": "This project aims to develop a Python library to support Xarray data (labeled multi-dimensional array library supported by Deepmind) with JAX...",
          "description": "This project aims to develop a Python library to support Xarray data (labeled multi-dimensional array library supported by Deepmind) with JAX (Google's differentiable programming framework). This will address the lack of support for labeled multi-dimensional data in machine learning frameworks, extending scientific computing capabilities for domains like weather forecasting and financial modeling.\n\nBuilding on Google Deepmind's Xarray-JAX implementation in Graphcast, I will create a standalone library that leverages JAX's recent Python Array API standard implementation to replace the current wrapper-based approach with native integration. The solution will include direct JAX array usage through the API, updated coordinate handling, adapted tree utility registrations, and preservation of existing functionality.\n\nDeliverables include a production-ready xarray-jax library on PyPI, comprehensive test suite, tutorial notebook demonstrating usage, and documentation covering core functionality. This integration will enable scientists and researchers to work with labeled multi-dimensional data in JAX.",
          "student_name": "Mikhail Sinitcyn",
          "code_url": null,
          "proposal_id": "BRdCMO9L",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PvgGDxQh"
        },
        {
          "title": "Enhance Gemini API Integrations in OSS Agents Tools (DeepMind)",
          "short_description": "This project aims to enhance Gemini API integrations in open-source software (OSS) agent tools, specifically LangChain and LlamaIndex, by addressing...",
          "description": "This project aims to enhance Gemini API integrations in open-source software (OSS) agent tools, specifically LangChain and LlamaIndex, by addressing critical gaps and implementing high-priority features to improve accessibility and functionality for developers. The Gemini API, with its multimodal capabilities and efficiency, has immense potential to empower AI agents, but current integrations in OSS tools lack key features like structured output streaming, context caching, and comprehensive documentation. I will tackle these challenges by implementing three features per tool: for LangChain, structured output streaming, tool calling with Union types, and batch prediction; for LlamaIndex, context caching, search grounding, and code execution. Additionally, I will update existing Gemini-focused documentation, create four example workflows (two per tool) to demonstrate practical use cases, and engage with the OSS community for feedback. As a stretch goal, I will contribute to Agno by addressing Gemini-specific issues like tool calling with structured output and memory leaks. Deliverables include six implemented features (three per tool) with documentation, updated existing Gemini-focused documentation for both tools, four example workflows, a community engagement report, and a final GSoC report/blog. If time permits, I will deliver fixes for two Agno issues with accompanying documentation. This project will increase Gemini API adoption in OSS ecosystems, lower adoption barriers for users, and support DeepMind’s mission of advancing AI accessibility.",
          "student_name": "msaadg",
          "code_url": null,
          "proposal_id": "5R8XjDfl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GZnZhIEh"
        },
        {
          "title": "Streamline experiment execution and improve report UI for OSS-Fuzz-Gen",
          "short_description": "OSS-Fuzz-Gen, a framework using LLMs for fuzz target generation and evaluation by Google, currently has a basic experiment report UI alongside a...",
          "description": "OSS-Fuzz-Gen, a framework using LLMs for fuzz target generation and evaluation by Google, currently has a basic experiment report UI alongside a manual CI workflow requiring significant oversight. This proposal introduces an improved report interface amongst other features to improve usability and data presentation. Concurrently, the project will streamline the experiment execution workflow for developers and security researchers by introducing more automation into the CI pipeline.",
          "student_name": "Myan Vu",
          "code_url": null,
          "proposal_id": "9WayaXVa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/USNSh5o9"
        },
        {
          "title": "Highly Cost-Efficient Fine-Tuning of Gemma 3 to Develop Test-Time Scaling for Visual/Spatial Tasks.",
          "short_description": "Fine-tuning MLLMs to achieve test-time scaling and strong reasoning performance for visual/spatial tasks can be very expensive because of the...",
          "description": "Fine-tuning MLLMs to achieve test-time scaling and strong reasoning performance for visual/spatial tasks can be very expensive because of the increased size of visual/spatial data compared to textual data. Stanford researchers have recently developed a simple yet highly effective fine-tuning methodology for an off-the-shelf pre-trained model that allowed the fine-tuned model to develop test-time scaling and achieve strong reasoning performances for language-based tasks. The resulting Stanford s1 model outperformed OpenAI’s o1-preview by up to 27% on competition math questions. The astonishing detail is that the fine-tuning that allowed for test-time scaling and strong reasoning performance required less than 30 minutes, less than $50, and a tiny dataset of size 1000 [1].\n\nNo budget-friendly visual/spatial equivalent of the aforementioned methodology has been developed yet. I propose a project to extend the fine-tuning methodology of Stanford s1 to test-time scaling and reasoning for visual-based/spatial-based tasks. I  aim to use this to fine-tune Gemma 3 MLLMs to develop test-time scaling and achieve strong reasoning performance for visual/spatial tasks. \n\nIf successful, this project will prove that Gemma 3 MLLMs can be fine-tuned to develop test-time scaling and to achieve strong reasoning performance on spatial/visual tasks cost-efficiently, thereby democratizing AI development and opening up possibilities for Gemma 3 models to be effectively fine-tuned for a greater number and variety of tasks. This project will also serve as a very important step towards building next-generation highly effective large vision models, which were previously hindered by training costs. The impressive context window of Gemma 3 models makes them a perfect candidate for context-heavy reasoning of visual/spatial reasoning tasks in this project.\n\nReferences\n[1]\tN. Muennighoff et al., “s1: Simple test-time scaling.” 2025. [Online]. Available: https://arxiv.org/abs/2501.19393",
          "student_name": "Nattaput Namchittai",
          "code_url": null,
          "proposal_id": "vJUEo6aY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1E6DMVwi"
        },
        {
          "title": "SciResearchBench: A Multimodal Benchmark for Scientific Reasoning and Discovery",
          "short_description": "Scientific discovery fundamentally relies on integrating and reasoning over multimodal information—text, diagrams, plots, spectra, microscopy images,...",
          "description": "Scientific discovery fundamentally relies on integrating and reasoning over multimodal information—text, diagrams, plots, spectra, microscopy images, and experimental observations. While multimodal Language Models like Gemini show promise as potential AI research assistants, their capabilities in nuanced scientific reasoning remain largely unevaluated, particularly across diverse scientific domains. Existing benchmarks often focus on general knowledge, single modalities, or lack the depth needed to probe scientific reasoning. This project proposes the creation of SciResearchBench, a novel,\nopen-source multimodal benchmark specifically designed to evaluate the scientific reasoning and discovery capabilities of multimodal across key research domains like Chemistry, Materials Science, Biology, and Physics. SciResearchBench will mirror real-world research workflows, encompassing tasks in multimodal data integration, experimental understanding, results interpretation, and hypothesis generation. A core focus will be extensive ablation studies to systematically analyze model sensitivities (prompting, cross-modal integration, grounding, reasoning complexity, context length),\nproviding crucial insights into model failure modes and avenues for improvement. The project deliverables include the curated/generated dataset, robust evaluation code, comprehensive evaluation results for Gemini models, detailed analysis, and the full open-source release of all components to the research community.",
          "student_name": "Nawaf Alampara",
          "code_url": null,
          "proposal_id": "IWqpnuHm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xshu9ha6"
        },
        {
          "title": "Batch Prediction with Long Context and Context Caching Code Sample",
          "short_description": "The aim of this project is to develop a code sample in Python that demonstrates some of the key capabilities of Google's Gemini APIs in regards to...",
          "description": "The aim of this project is to develop a code sample in Python that demonstrates some of the key capabilities of Google's Gemini APIs in regards to processing a large content source to answer a number of questions. In particular, it will explore how questions can be strategically grouped into batches, which can then be answered together using a single API call, vastly increasing efficiency. In addition, I will look at how Gemini's long context capabilities can be leveraged to process large amounts of content, such as the entire transcript of a video lecture, using techniques such as chunking to ensure context limits are not exceeded. Finally, I will explore how content caches can be used to allow for interconnected questions, whose answers build upon one another, whilst maintaining efficient API usage.\n\nThe project will result in a series of code samples and corresponding documentation covering a range of topics, from the basics of setting up an API key to how we can use Gemini in combination with applications such as Firebase to create a content cache. This documentation can then be used as a guide, referenced by developers when they are creating their own projects.",
          "student_name": "Phillip Daniel",
          "code_url": null,
          "proposal_id": "f0ToTu11",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QwrjzUxs"
        },
        {
          "title": "Reproducibility as Accuracy (RaA) Benchmark",
          "short_description": "Reproducibility as Accuracy (RaA) is a benchmark which aims to evaluate how effective multimodal AI systems are in preserving information fidelity...",
          "description": "Reproducibility as Accuracy (RaA) is a benchmark which aims to evaluate how effective multimodal AI systems are in preserving information fidelity during iterative transformations from image to text.  By implementing a recursive process—converting an image to text and back to an image over multiple iterations—the benchmark will apply quantitative metrics to assess semantic drift and information degradation. Deliverables include an open-source benchmarking framework, a suite of evaluation metrics, comprehensive documentation, and analytical reports, providing insights to enhance the reliability of multimodal AI systems.",
          "student_name": "Pranav Agrawal",
          "code_url": null,
          "proposal_id": "KbwjZeaR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hoyVl52a"
        },
        {
          "title": "Streamlining Gemini API Development: Building a Postman Workspace for Gemini API’s",
          "short_description": "When attempting to utilize Google's Gemini APIs, developers face a steep learning curve. The scattered documentation, complex parameter...",
          "description": "When attempting to utilize Google's Gemini APIs, developers face a steep learning curve. The scattered documentation, complex parameter configurations, and required manual setup all contribute to this problem. This project aims to improve the experience of developers when working with Google's Gemini APIs by creating a comprehensive and well-documented Postman Workspace.\n\nThis project will result in a ready-to-use Postman Workspace with:\n1. Pre-built API request collections for Gemini's major features (i.e. text, chat, image, code generation).\n2. Configurable environments for development and production with built-in authentication variable support.\n3. Mock servers and test scripts to simulate responses and aid local development.\nEmbedded documentation and tutorials for quick onboarding.\n4. A GitHub Action to automate updates based on changes to the Gemini API specs.\n\nThe end product will offer a centralized, up-to-date toolset, making it faster and simpler for developers to test, debug, and integrate Gemini into their applications. This workspace will serve as a valuable resource to the open-source community.",
          "student_name": "Preston Tjandra",
          "code_url": null,
          "proposal_id": "X37aY71k",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XG33BRy9"
        },
        {
          "title": "Enhancing Gemini Integrations in Open-Source Agent Frameworks",
          "short_description": "Google DeepMind’s Gemini is a powerful multimodal model that excels at language comprehension, visual processing, and tool interaction. However,...",
          "description": "Google DeepMind’s Gemini is a powerful multimodal model that excels at language comprehension, visual processing, and tool interaction. However, current integrations within key open-source agent frameworks such as LangChain, LlamaIndex, CrewAI, and Composio fall short in comprehensive multimodal input handling, robust function-calling capabilities, and versatile parameter configuration options. This project aims to address these gaps through targeted technical upgrades informed by Gemini’s official SDKs. For LangChain and Composio, improvements will focus on modifying the agent executor loop to handle function-calling for parallel execution. LlamaIndex upgrades will include integrating Gemini's Semantic Retriever API for vector storage, embedding generation and retrieval. Improvements for CrewAI will involve native multimodal input handling and Gemini tool orchestration. Alongside these technical advancements, the project will deliver extensive documentation, including a centralized Gemini integration guide and interactive example notebooks. These strategic refinements will empower developers to fully utilize Gemini, transforming it into a versatile \"brain\" for complex, multimodal applications.",
          "student_name": "Rex Liu",
          "code_url": null,
          "proposal_id": "Eyx2CB9z",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TB24Ncdi"
        },
        {
          "title": "Gemma Function-Calling Sandbox for Real-World Applications",
          "short_description": "AI models with function-calling capabilities can be powerful tools for solving real-world problems, but experimenting with them isn’t always...",
          "description": "AI models with function-calling capabilities can be powerful tools for solving real-world problems, but experimenting with them isn’t always straightforward. This project aims to build an AI sandbox web platform where developers and communities can easily explore how Gemma’s function-calling can be used in different sectors.\n\nTo make the platform practical, I’ll focus on crisis response (using the example of La DANA, the storm that impacted Valencia) and potentially healthcare (like optimizing hospital logistics in Venezuela). The project will include a user-friendly interface, a backend powered by FastAPI, and proof-of-concept demos showing how AI can automate real-world tasks like retrieving emergency weather data or coordinating hospital resources.\n\nThe deliverables will include the sandbox platform itself, technical documentation, and tutorials, making it easy for others to replicate or extend the project for their own use cases. The goal is to create something that’s not just useful during GSoC but can keep growing as an open-source tool for AI-powered decision-making.",
          "student_name": "rorosaga",
          "code_url": null,
          "proposal_id": "Jtmo9A1p",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/sfMAOShm"
        },
        {
          "title": "GemmaEval: A Comprehensive Automated Benchmark Suite for Gemma",
          "short_description": "GemmaEval is a comprehensive, automated benchmarking framework designed to evaluate, visualize, and compare Gemma language models against other open...",
          "description": "GemmaEval is a comprehensive, automated benchmarking framework designed to evaluate, visualize, and compare Gemma language models against other open source LLMs across a wide spectrum of NLP tasks. This project will introduce a standardized, reproducible testing environment that evaluates models on 1) classic benchmarks such as TriviaQA, GPQA, MGSM; 2) agentic benchmarks such as SWE-bench, TAU-bench; 3) multimodal benchmarks like MMMU; and 4) safety benchmarks like Weapons of Mass Destruction Proxy (WMDP) benchmark.",
          "student_name": "Ryan Rong",
          "code_url": null,
          "proposal_id": "p5fWV2O8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RSjjE3tM"
        },
        {
          "title": "Open-Source Multimodal Benchmarks and Adversarial Robustness Testing for Gemini 2.X models",
          "short_description": "This project aims to advance the evaluation framework for Google’s Gemini 2.0 and Gemma 3-27B multimodal models by integrating a diverse set of...",
          "description": "This project aims to advance the evaluation framework for Google’s Gemini 2.0 and Gemma 3-27B multimodal models by integrating a diverse set of open-source, domain-specific benchmarks spanning healthcare, robotics, and general-purpose multimodal reasoning.\nIn the healthcare domain, the evaluation will leverage datasets such as VQA-RAD and OmniMedVQA to assess the models' capabilities in interpreting and reasoning over complex clinical imaging and textual data. For the robotics domain, benchmarks like EmbodiedBench and EmbodiedQA will evaluate the models' proficiency in understanding spatial, visual, and language cues for grounded human-robot interaction tasks. Additionally, general multimodal benchmarks such as SME and BenchLMM will test the models’ ability to produce accurate, context-aware, and human-like explanations grounded in visual inputs.\nTo ensure robustness, the project will also incorporate adversarial attack benchmarks across modalities, evaluating how resilient Gemini 2.0 and Gemma 3-27B are against input perturbations—including visual occlusions, textual prompt manipulations, and conflicting cross-modal signals. Alongside task accuracy, we will analyze the relationship between inference time and adversarial attack success, quantifying how model latency and confidence shift under adversarial conditions.",
          "student_name": "Saravan_Kumar",
          "code_url": null,
          "proposal_id": "e3GYErmw",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8r8SJScX"
        },
        {
          "title": "Batch Prediction Framework: Long Context and Context Caching for Video Analysis",
          "short_description": "This project develops an efficient framework for analyzing educational video content using the Gemini API. The approach combines optimized batch...",
          "description": "This project develops an efficient framework for analyzing educational video content using the Gemini API. The approach combines optimized batch prediction, intelligent context caching, and conversational memory to reduce API usage significantly while improving coherence in multimodal interactions. The framework addresses common challenges when analyzing video content: redundant API calls, context fragmentation with long transcripts, and lack of conversational coherence across related questions. Key deliverables include a modular architecture implementing efficient batch processing with dependency analysis, adaptive context caching strategies for transcripts of varying lengths, conversation memory management for follow-up questions, and structured response formatting with timestamp references. The solution aims to achieve a 4-5× reduction in API calls while maintaining high-quality responses, serving as both a practical tool and a reference implementation demonstrating Gemini API best practices.",
          "student_name": "Sean Brar",
          "code_url": null,
          "proposal_id": "CBsNfZJM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dv9GeGEi"
        },
        {
          "title": "Improve Evals Documentation for the Gemini APIs",
          "short_description": "Current manual evaluation methods for LLM-based AI applications are unsustainable and resource-intensive. While using LLMs as judges offers a...",
          "description": "Current manual evaluation methods for LLM-based AI applications are unsustainable and resource-intensive. While using LLMs as judges offers a promising alternative, evaluation frameworks provide structured tools that harness LLMs for automated assessments, offering metrics, benchmarks, and scalable testing methodologies that overcome manual evaluation limitations. Gemini's integration with evaluation platforms lacks comprehensive documentation compared to providers like OpenAI and Anthropic. Analysis of ten major frameworks reveals scattered integration, decentralized documentation, and limited implementation guidance for Gemini, creating barriers for developers and researchers.\n\nI propose a three-pronged approach to improve Gemini support across evaluation frameworks. First, adding native Gemini support to select frameworks (DeepEval and TruLens) that already offer direct integrations for other providers. Second, enhancing both abstraction-layer and framework-specific documentation, covering API key management, model configuration, and multimodal capabilities. Third, creating framework-specific guides in Python and TypeScript that demonstrate effective combination of library features with Gemini APIs.\n\nFor code deliverables, I will develop native Gemini integration for DeepEval and TruLens frameworks, with pull requests submitted to respective GitHub repositories. Documentation deliverables include enhanced guidance for abstraction layers (LiteLLM, LangChain, LlamaIndex) focused on Gemini configuration, and framework-specific documentation covering API management, configuration options, multimodal integration, and evaluation best practices.\nTutorial deliverables will include comprehensive guides for all ten analyzed frameworks, with Python implementations for all frameworks and TypeScript for supported ones, step-by-step configuration instructions, advanced usage examples highlighting Gemini's multimodal capabilities, and error handling techniques.",
          "student_name": "Siddharth Sahu",
          "code_url": null,
          "proposal_id": "VCA4Xq5z",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IG6jL3Hj"
        },
        {
          "title": "Creating New Agent Architectures for Concordia",
          "short_description": "The goal of this project is to help strengthen the Concordia framework by developing and open-sourcing a collection of new language model agent...",
          "description": "The goal of this project is to help strengthen the Concordia framework by developing and open-sourcing a collection of new language model agent architectures. The project is meant to iterate on the work done by contestants during the Concordia Contest at NeurIPS 2024. \n\nWhile the Concordia Contest 2024 has concluded, the need for well-documented and diverse examples of cooperative agents in the Concordia ecosystem remains important for the ongoing research in cooperative AI. The main benefit being that the new agents created will help lower the barrier of entry for new researchers and engineers, with the hope of inspiring more people to contribute unique approaches to using the framework and speed up the research being done in cooperative AI by providing practical and reusable agent implementations.",
          "student_name": "tesims",
          "code_url": null,
          "proposal_id": "WUOmrmBe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j5h3cWWt"
        },
        {
          "title": "Enhance Gemini Support in Open-Source Extensions (Continue.dev/Aider-like)",
          "short_description": "This project aims to enhance the integration of Google's Gemini AI into open-source IDE extensions, focusing on developing and improving user...",
          "description": "This project aims to enhance the integration of Google's Gemini AI into open-source IDE extensions, focusing on developing and improving user interface, implementing long-context support for larger codebases, and utilizing context caching to improve efficiency and reduce cost.",
          "student_name": "Ton Hoang Nguyen (Bill)",
          "code_url": null,
          "proposal_id": "DnISSoZ9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XxTqA1r9"
        },
        {
          "title": "Open-source Gemini Example Apps",
          "short_description": "The Gemini Cookbook is a set of sample applications and tutorials illustrating different functionalities of the Gemini APIs. The intent of this...",
          "description": "The Gemini Cookbook is a set of sample applications and tutorials illustrating different functionalities of the Gemini APIs. The intent of this proposal is to modernize current tutorials and documentation to assist with the new unified Gemini SDKs for JavaScript/TypeScript and Python. This involves bringing examples from Python into JS/TS, creating new end-to-end tutorials, and modernizing examples for other open source libraries utilizing outdated versions of the Gemini APIs. By giving users new, current learning tools, this project hopes to facilitate adoption of the Gemini APIs.\n\n1. Migrate Existing Python Examples to TypeScript\nConvert the current Python-based examples in the Gemini Cookbook to idiomatic TypeScript using the latest Gemini SDK. This will ensure cross-language support and make sure the resources are accessible to a wider range of developers.\n2. Create End-to-End Tutorials for Real-World Use Cases\nDesign and implement comprehensive, practical tutorials that showcase the capabilities of the Gemini APIs. These tutorials will include projects such as intelligent chatbots, document summarization tools, and image generation from prompts, covering both basic and advanced use cases. New ideas for tutorials can be submitted by the community, and can be sourced from the existing cookbook issues.\n3. Modernize Open-Source Libraries Using Gemini APIs\nIdentify and contribute to popular open-source projects that use deprecated versions of the Gemini SDKs. Update the examples and documentation to leverage the features and improvements introduced in the latest unified Gemini SDKs.",
          "student_name": "Triyan Mukherjee",
          "code_url": null,
          "proposal_id": "my7TbDYU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VhcMTva8"
        },
        {
          "title": "Batch Prediction with Long Context and Context Caching Code Sample",
          "short_description": "This project aims to build a production-grade, open-source code sample that showcases batch question answering over long-context inputs using Google...",
          "description": "This project aims to build a production-grade, open-source code sample that showcases batch question answering over long-context inputs using Google Gemini APIs. The primary use case is multi-turn Q&A on long-form video content (e.g., lectures, documentaries), a critical need in educational and summarization tools.\n\nThe project will focus on:\n\nEfficient batch prediction pipelines using async processing,\nHandling long transcripts with smart chunking and fallback mechanisms,\nReusing input efficiently via context caching,\nSupporting interconnected questions within and across sessions, and\nGenerating clean, structured output in Markdown/JSON with timestamp references.\nDeliverables include:\n\nA modular pipeline for batch Q&A\nLong-context handling with semantic chunking\nA context caching mechanism\nInterconnected thread/question support\nMarkdown/JSON output formatters\nDocumentation, setup examples, and robust error handling\nStretch goals include: real-time streaming via Gemini, a basic frontend in Streamlit/CLI, thread persistence, and efficiency metrics reporting.\n\nThis project will provide a high-impact reference for developers building LLM-first educational apps, video assistants, and advanced retrieval-augmented generation (RAG) systems.",
          "student_name": "vanshksingh",
          "code_url": null,
          "proposal_id": "JBSmoMLD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NxQQgsTG"
        },
        {
          "title": "Exploring & Extending Function Calling in Gemma",
          "short_description": "This project aims to: (a) investigate to explore technical possibilities, enhance specifications, and find applications for specific use cases and...",
          "description": "This project aims to: (a) investigate to explore technical possibilities, enhance specifications, and find applications for specific use cases and domains, (b) create a collaborative open source site for Gemma prototypes and cookbooks for the previously identified use cases across domains, and (c) document learnings and create RFCs based on the investigations to provide a roadmap for future work.",
          "student_name": "Vedant Kulkarni",
          "code_url": null,
          "proposal_id": "f0qK5i6P",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rexKK7eu"
        },
        {
          "title": "Multimodal Intelligence: Supercharging Agents with Gemini",
          "short_description": "This project addresses critical gaps in Gemini API integration across leading agent frameworks (LangChain, LlamaIndex, CrewAI, Composio), where...",
          "description": "This project addresses critical gaps in Gemini API integration across leading agent frameworks (LangChain, LlamaIndex, CrewAI, Composio), where multimodal capabilities and function calling remain underdeveloped or inconsistent. By implementing standardized components for multimodal processing, function calling, and performance optimization, the project will democratize access to Gemini's advanced capabilities for developers building sophisticated AI agents.\n\nThe implementation will follow a systematic approach, beginning with a comprehensive framework audit and gap analysis, followed by development of core multimodal support, function calling capabilities, and performance optimization layers. The solution will include a unified adapter layer that standardizes Gemini API access while respecting each framework's architectural patterns.\n\nDeliverables include: (1) enhanced framework integrations with full multimodal support, (2) standardized function calling implementations, (3) performance optimization components including token management and caching systems, (4) comprehensive documentation and examples, and (5) a benchmarking suite for performance analysis. This project will establish a new standard for Gemini integration in the agent ecosystem, enabling entirely new classes of multimodal AI applications.",
          "student_name": "Wale",
          "code_url": null,
          "proposal_id": "d5pdfZ1E",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/C9emc20S"
        },
        {
          "title": "Evaluate Gemini (Gemma) on an Open-Source Benchmark",
          "short_description": "This project aims to design a robust, reproducible benchmark for evaluating the Gemini family of multimodal large language models (MLLMs), such as...",
          "description": "This project aims to design a robust, reproducible benchmark for evaluating the Gemini family of multimodal large language models (MLLMs), such as Gemini 2.0. While prior benchmarks focus on text-only LLMs, standardized evaluation for multimodal reasoning, grounding, and question answering remains limited. To address this, I propose building a new open-source multimodal benchmark using synthetic data, inspired by LLaVA.\n\nThe benchmark will be generated using Stable Diffusion for images and GPT-4o for text and QA pairs. It will cover diverse visual domains and tasks like visual reasoning, image captioning, and multimodal QA. Evaluation metrics such as BLEU, grounding accuracy, and alignment score will be included. Gemini’s performance will be compared with leading open models like LLaVA, Kosmos-2, and OpenFlamingo.\n\nThe deliverables include:\n\n1. A benchmark dataset (synthetic or hybrid)\n2. Gemini 2.0 evaluation pipeline, and baseline comparisons \n3. Visualization dashboards, and detailed performance reports\n4. Open-source release of code, data, and documentation.",
          "student_name": "Yang Ouyang",
          "code_url": null,
          "proposal_id": "Kb59ZEjE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2zNO3rjt"
        },
        {
          "title": "Self-Contained OSS-Fuzz Module for Researchers",
          "short_description": "This project aims to develop a standalone Python SDK that provides researchers with a streamlined and well-documented API for interacting with...",
          "description": "This project aims to develop a standalone Python SDK that provides researchers with a streamlined and well-documented API for interacting with OSS-Fuzz. The current access methods to OSS-Fuzz's features and data are fragmented and inconsistent, posing challenges in terms of code duplication, error handling, and usability for new researchers. By encapsulating OSS-Fuzz interactions within a cohesive module, this project will standardize data formats, simplify API usage, and improve accessibility for researchers.",
          "student_name": "Zewei Wang",
          "code_url": null,
          "proposal_id": "KY5A2UGu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/51tdKuLz"
        }
      ]
    },
    {
      "name": "GNU Image Manipulation Program",
      "image_url": "https://summerofcode.withgoogle.com/media/org/gnu-image-manipulation-program/n73ytwpnna15tra2-360.png",
      "image_background_color": "#ffffff",
      "description": "GIMP is a cross-platform image editor",
      "url": "https://www.gimp.org/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/gnu-image-manipulation-program",
      "ideas_url": "https://developer.gimp.org/core/internship/ideas/",
      "guide_url": "https://developer.gimp.org/core/internship/",
      "topics": ["graphics", "design", "photography", "illustration"],
      "technologies": ["c", "GEGL"],
      "irc_channel": "https://www.gimp.org/discuss.html#irc-matrix",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/GIMP_Official",
      "blog_url": "https://www.gimp.org/news/",
      "facebook_url": "https://www.facebook.com/gimpofficial/",
      "num_projects": 3,
      "projects": [
        {
          "title": "Desing and Implementation of a GEGL Filter Browser for GIMP",
          "short_description": "This project aims to create a GEGL filter browser for GIMP, improving the user experience by providing an easy-to-use interface to explore and apply...",
          "description": "This project aims to create a GEGL filter browser for GIMP, improving the user experience by providing an easy-to-use interface to explore and apply filters. The current system lacks an efficient way to browse and manage filters, especially for beginners. The new browser will feature List and Tree views, allowing users to search, filter, and view descriptions and properties of available filters.\n\nAdditionally, users will be able to apply selected filters directly from the browser, speeding up their workflow. The project will be developed in stages: design, implementation, testing, and documentation.\n\nThe final deliverables will include a fully functional filter browser, an interactive filter application feature, and user-friendly documentation, making it easier for users to discover and apply the right filters in GIMP.",
          "student_name": "Gabriele Barbero",
          "code_url": null,
          "proposal_id": "QtwLDkrm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bHqrCiaR"
        },
        {
          "title": "Enhance the plug-in/filter development experience",
          "short_description": "The new 3.0 release of GIMP introduced many API changes that require all third-party plugins to be updated. Notably, a new filter API for using GEGL...",
          "description": "The new 3.0 release of GIMP introduced many API changes that require all third-party plugins to be updated. Notably, a new filter API for using GEGL filters replaced an old compatibility API. This provides a new level of flexibility and convenience at the expense of discoverability. Plug-in and filter creators need an accessible and convenient way of discovering what GEGL filters they can make use of. Overall, the plug-in/filter development experience could be improved. Especially the discoverability of available APIs and where to find them.\n\nIn this project I want to implement a new browser for discovering which GEGL filters are available and how they can be used from a plug-in/filter. Then, I want to explore how to merge existing procedure and plug-in browsers with the newly implemented one. Lastly, I want to explore how to further enhance the development experience. Some options are (a) making additional API documentation available in the GIMP UI, (b) doing research with plug-in/filter developers to learn about their problems and experiences.",
          "student_name": "Ondřej Míchal",
          "code_url": null,
          "proposal_id": "w5EXEZJQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VQ0jE58o"
        },
        {
          "title": "Extension website",
          "short_description": "This proposal outlines a comprehensive plan to develop a new website for GIMP's extension platform. The project will focus on creating a primarily...",
          "description": "This proposal outlines a comprehensive plan to develop a new website for GIMP's extension platform. The project will focus on creating a primarily static website with minimal yet essential dynamic components, ensuring security and ease of maintenance.",
          "student_name": "SamIsTheFBI",
          "code_url": null,
          "proposal_id": "5H82Ouyy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4I53AOAO"
        }
      ]
    },
    {
      "name": "MetaBrainz Foundation Inc",
      "image_url": "https://summerofcode.withgoogle.com/media/org/metabrainz-foundation-inc/m7lax42edddowwnl-360.png",
      "image_background_color": "#ffffff",
      "description": "Open music / book metadata, music recommendations",
      "url": "https://metabrainz.org",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/metabrainz-foundation-inc",
      "ideas_url": "https://wiki.musicbrainz.org/Development/Summer_of_Code/2025",
      "guide_url": "https://wiki.musicbrainz.org/Development/Summer_of_Code/2025",
      "topics": [
        "machine learning",
        "open data",
        "music",
        "books",
        "music social network"
      ],
      "technologies": [
        "python",
        "machine learning",
        "perl",
        "postgres",
        "spark"
      ],
      "irc_channel": "https://metabrainz.org/contact",
      "contact_email": "mailto:suppport@metabrainz.org",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://blog.metabrainz.org",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "Centralized Notification System for MetaBrainz",
          "short_description": "MetaBrainz contains multiple sub-projects which sends out standalone notifications. This project aims to centralize those by developing a shared...",
          "description": "MetaBrainz contains multiple sub-projects which sends out standalone notifications.\nThis project aims to centralize those by developing a shared notification system within metabrainz-org, enabling all sub-projects to deliver user notifications through this notification system.\nExpected Outcome:  A functional notifications system with relevant API endpoint.",
          "student_name": "_Junaid_",
          "code_url": null,
          "proposal_id": "N6fb8LJM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nuN9P7s7"
        },
        {
          "title": "Integrate music streaming from Funkwhale & Navidrome (Subsonic)",
          "short_description": "Allow users to play music from their Funkwhale servers as well as Navidrome directly in BrainzPlayer, both are self hoisted music streaming platform....",
          "description": "Allow users to play music from their Funkwhale servers as well as Navidrome directly in\nBrainzPlayer, both are self hoisted music streaming platform. Funkwhale used a OAuth2\nfor secure and safe authentication, but currently Navifrome used basic subsonic\nauthentication (username/password + salt), but soon OAuth2 authentication also will be\navailable for Navidrome.\n\nFunkwhale:\n\n Backend: FunkwhaleService class that will handle Funkwhale API calls and\nfunkwhale _servers table which will save server details as well as OAuth2\ntokens.\n Frontend: Will create a React form in the Connect Services section for users to\ninput their Funkwhale server url.\nBrainzPlayer Integration: For this I need to create a FunkwhalePlayer\nclass to BrainzPlayer so users can search and stream tracks, and we also need\nto take care of proper state management.\n\nNavidrome:\n\nBackend: NavidromeService class that will handle Navidrome API calls and a\nnavidrome_servers table which will save user credentials.\nFrontend: Will create a React form in the Connect Services section for users to\ninput their Navidrome server details.\nBrainzPlayer Integration: For this I need to create a NavidromePlayer class\nto BrainzPlayer so users can search and stream tracks, and we also need to\ntake care of proper state management.",
          "student_name": "amaxllah7",
          "code_url": null,
          "proposal_id": "8OXLH7MC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OYGdH3a8"
        },
        {
          "title": "Onboarding Revamp in Listenbrainz-Android",
          "short_description": "A smooth and intuitive onboarding experience is essential for any app, ensuring that users understand its features while maintaining trust and...",
          "description": "A smooth and intuitive onboarding experience is essential for any app, ensuring that users understand its features while maintaining trust and engagement. This project focuses on enhancing the ListenBrainz Android onboarding flow by making it more informative, user-friendly, and privacy-conscious. Key improvements include a dedicated Listen Submission screen to give users full control over which apps contribute listens, clear permission rationales, and fallback mechanisms for denied permissions. Additionally, a revamped sign-in screen will provide better navigation, including a bug report option for easy issue submission.  \n\nThese improvements are crucial for user transparency and trust. By introducing a Listen Submission screen, users can choose how and when their listening data is collected, ensuring privacy and control. Clear permission rationales and fallback handling prevent confusion and provide users with alternative ways to grant necessary permissions. The addition of update prompts and options like disabling battery optimization in settings ensures users stay updated with the latest features and optimizations effortlessly.  \n\nSeamless updates and proactive issue resolution enhance the overall experience. Integrating an update prompt for Play Store and F-Droid users keeps them informed about new releases, while a \"Report Bug\" button on the sign-in screen streamlines feedback collection. These refinements will significantly improve user retention, ensuring ListenBrainz remains a top choice for tracking listening habits while prioritizing privacy and usability.",
          "student_name": "Hemang Mishra",
          "code_url": null,
          "proposal_id": "euMEJ5JY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CIUdbKbi"
        },
        {
          "title": "Development of Advanced User Statistics Visualizations",
          "short_description": "The project aims to design and implement advanced interactive visualizations for ListenBrainz using Nivo for data visualization and integrating with...",
          "description": "The project aims to design and implement advanced interactive visualizations for ListenBrainz using Nivo for data visualization and integrating with the existing Flask API. Apache Spark will handle efficient data processing and aggregation. These visualizations will offer granular insights into genre trends, artist diversity, and temporal listening patterns, enhancing user experience and engagement.\n\nThe project will result in the development and integration of the following four interactive charts into ListenBrainz:  \n\n1. Generate Artist Listening Activity Statistics: A function to calculate the number of listens for each artist over a specified time range, mapping the data into an interactive visualization that shows the evolution of artists a user listens to over time.  \n\n2. Generate Listens by Era Statistics: A function to calculate the number of listens grouped by the year of release of each track, producing a chart that displays listens by era, enabling users to explore the distribution of their music preferences across different periods.  \n\n3. Genre-Based Listening Patterns: A dynamic visualization that tracks a user’s engagement with different genres over time, highlighting how their music preferences evolve. It will also analyze trends in genres listened to at different times of day, revealing how mood or activity influences music choices.  \n\n4. Top Listeners: A leaderboard-style visualization that tracks and highlights the top listeners sitewide. This chart will showcase the most active users and display who listens the most within their social circles, encouraging community engagement and fostering a sense of connection among users.  \n\nThese interactive charts will enhance the ListenBrainz user experience by providing deeper insights into listening habits and fostering a stronger sense of community.",
          "student_name": "holycow23",
          "code_url": null,
          "proposal_id": "Ok0VTsjl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/npmpsC1i"
        },
        {
          "title": "Matrix Archiver (libretto)",
          "short_description": "The current logging system for Matrix communications at MeB relies on an unmaintained IRC-based bot (BrainzBot) that logs messages to a PostgreSQL...",
          "description": "The current logging system for Matrix communications at MeB relies on an unmaintained IRC-based bot (BrainzBot) that logs messages to a PostgreSQL database and displays them on chatlogs.metabrainz.org. While this system works, it uses outdated technology with known vulnerabilities, doesn't support many of Matrix's features and is no longer suitable as Metabrainz' primary communication platform.\n\nThis project proposal replaces BrainzBot with a new archival service that archives messages directly from Matrix to HTML files on disk and a PostgreSQL database. It will support Matrix features like message editing, reactions and media, and provide full text search over all messages. Both historical and new messages as they come in will be archived.",
          "student_name": "Jade Ellis",
          "code_url": null,
          "proposal_id": "ywLvBV3l",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7fQl4p8c"
        },
        {
          "title": "Importing Listening History Files in Listenbrainz",
          "short_description": "This project aims to develop a feature that enables users to import their listening history from various services, including ListenBrainz exports,...",
          "description": "This project aims to develop a feature that enables users to import their listening history from various services, including ListenBrainz exports, Spotify, Apple Music, and other CSV file formats. The proposed solution involves creating a backend API endpoint to handle file uploads, building normalizers to parse and validate data from different services, and converting the data to the JSONL format required by ListenBrainz. The solution also includes a frontend to handle file uploads and show the progress to the user. This project will help contribute to the completeness and accuracy of ListenBrainz data.",
          "student_name": "Suvid Singhal",
          "code_url": null,
          "proposal_id": "tYjIowUa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dawBqvjY"
        }
      ]
    },
    {
      "name": "The Mifos Initiative",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-mifos-initiative/etmiqn0lkvfxvm5p-360.png",
      "image_background_color": "#ffffff",
      "description": "End Poverty One Line of Code at a Time",
      "url": "https://mifos.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-mifos-initiative",
      "ideas_url": "https://mifosforge.jira.com/wiki/spaces/RES/pages/4271669249/Google+Summer+of+Code+2025+Ideas",
      "guide_url": "https://mifosforge.jira.com/wiki/spaces/RES/pages/4456638/Application+Template",
      "topics": [
        "artificial intelligence",
        "cloud",
        "fintech",
        "financial inclusion",
        "mobile banking"
      ],
      "technologies": ["android", "java", "kotlin", "spring", "angular"],
      "irc_channel": "https://bit.ly/mifos-slack",
      "contact_email": "mailto:info@mifos.org",
      "mailing_list": "https://mifos.org/resources/community/communications/",
      "twitter_url": "https://twitter.com/mifos",
      "blog_url": "https://linkedin.com/company/mifos",
      "facebook_url": "https://facebook.com/mifos",
      "num_projects": 13,
      "projects": [
        {
          "title": "Reactive Loan Risk Assessment Engine for Mifos",
          "short_description": "Provide financial institutions with real-time insights into loan risk, helping them make better lending decisions. A reactive backend ensures the...",
          "description": "Provide financial institutions with real-time insights into loan risk, helping them make better lending decisions.\nA reactive backend ensures the system can handle a growing number of requests as Mifos deployments expand.\nImproved risk assessment can lead to more responsible lending practices, ultimately benefiting underserved communities.\nCreate a dedicated microservice in Java that handles loan risk assessment asynchronously.\nUtilize reactive programming paradigms to ensure scalability and high throughput.\n\nDesign and implement a configurable risk scoring model that can incorporate multiple factors such as client financial history, repayment behavior, and external credit ratings.\nAllow for model tuning via configuration, so institutions can adapt the scoring criteria to local requirements.",
          "student_name": "Abhinav R Cillanki",
          "code_url": null,
          "proposal_id": "dTGax7Ha",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/v2MnBbus"
        },
        {
          "title": "AI bot for community support",
          "short_description": "The Mifos community has grown significantly over the years, along with the increasing number of projects and discussions happening across its...",
          "description": "The Mifos community has grown significantly over the years, along with the increasing \nnumber of projects and discussions happening across its platforms. Newcomers, as well \nas contributors unfamiliar with specific parts of the ecosystem, often struggle to \nnavigate and understand the breadth of information shared. While the general Slack \nchannels host a wealth of discussions, support is inconsistent and depends on the \navailability and responsiveness of community members. Similarly, valuable insights are \noften scattered across community blogs, mailing lists, and Jira tickets, making it \nchallenging to locate relevant information quickly. \nTo address these challenges, this project proposes the development of an AI-powered \nchatbot that leverages messages from Slack channels, posts from community blogs, \nupdates from Jira, and other conversational and announcement platforms used by the \nMifos Initiative. The chatbot will be capable of answering queries related to project \nupdates, community decisions, usage guidance, and more—based on real-time \ninformation and past conversations. The core system will utilize a Retrieval-Augmented \nGeneration (RAG) pipeline to dynamically pull relevant data from these sources and \nserve accurate responses to user questions. The system will also evaluate different vector \nstores and embedding strategies to optimize retrieval from unstructured conversational \ndata. \nBy the end of the project, the Mifos Initiative will have an intelligent AI assistant that \nsignificantly improves community support, provides instant clarity on ongoing \ndiscussions, and makes the ecosystem more approachable for contributors at all levels.",
          "student_name": "Aru Sharma",
          "code_url": null,
          "proposal_id": "xRV5rENJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ffITbKjg"
        },
        {
          "title": "AI-Driven Architectural Test for MIFOS Payment Hub EE",
          "short_description": "The MIFOS Payment Hub EE (PH-EE) is a microservice-based financial infrastructure requiring high availability, security, and resilience. However,...",
          "description": "The MIFOS Payment Hub EE (PH-EE) is a microservice-based financial infrastructure requiring high availability, security, and resilience. However, systematic architectural testing—especially under failure and stress conditions—is currently limited.\n\nThis project introduces an AI-driven testing framework designed to assess and improve PH-EE’s robustness by simulating faults, generating and analyzing synthetic logs, and applying machine learning models to detect anomalies and predict failures.\n\nUsing tools like OpenTelemetry, Prometheus, Elasticsearch/Kibana, and Isolation Forest/Time-Series models, the framework will monitor service behavior, generate failure scenarios, and highlight weak points in system architecture. It will provide visual dashboards, anomaly tagging, and metrics to guide debugging and resilience improvements.\n\nDeliverables include:\nArchitecture mapping and categorization of critical PH-EE components\nSynthetic log generation simulating realistic failure patterns\nIntegration of AI-based anomaly detection models\nDashboards and visualization for observability (Grafana, Kibana)\nA reproducible proof-of-concept and documentation\n\nThis project will empower MIFOS developers and adopters with actionable insights to improve system health, scalability, and fault tolerance through intelligent architectural testing",
          "student_name": "Azah Norbline",
          "code_url": null,
          "proposal_id": "cvm3k0hc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SHr7TT0a"
        },
        {
          "title": "Build new Modern Web UI for Mifos X using ShadCN Reusable Components",
          "short_description": "This project proposes building a new, modern web UI for Mifos X using React, Tailwind CSS, TypeScript, and ShadCN components. The new Mifos X will be...",
          "description": "This project proposes building a new, modern web UI for Mifos X using React, Tailwind CSS, TypeScript, and ShadCN components. The new Mifos X will be integrated with the Apache Fineract backend using the official TypeScript API client to ensure seamless data flow and backend connectivity. Deliverables include a fully responsive, modular UI for Mifos X modules and complete integration with Fineract APIs. The new Mifos X will enhance user experience and provide a solid foundation for future improvements.",
          "student_name": "Craig Rosario",
          "code_url": null,
          "proposal_id": "PQsVVIjf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/A2cgOvZ1"
        },
        {
          "title": "Mifos Gazelle: Support for ARM",
          "short_description": "The problem I am trying to solve is to add ARM support. Right now, when the CircleCI pipeline is triggered, it pushes a Docker image that only...",
          "description": "The problem I am trying to solve is to add ARM support. Right now, when the CircleCI pipeline is triggered, it pushes a Docker image that only supports the AMD64 architecture and does not support ARM architecture. I plan to solve this issue by using Docker's buildx functionality to build multi-architecture images. As a deliverable by the end of the tenure, we will have a shell script which, when run, will execute the circleci/config.yml associated with the repository. This will result in the creation of maintainable and portable code.",
          "student_name": "Devarsh D Shah",
          "code_url": null,
          "proposal_id": "KphnwOht",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6mc2LbTU"
        },
        {
          "title": "Usability Improvements for Mifos X Web App",
          "short_description": "The Mifos X Web App is an important tool that helps provide financial services to people around the world. This project aims to make the app easier...",
          "description": "The Mifos X Web App is an important tool that helps provide financial services to people around the world. This project aims to make the app easier to use and more modern. We’ll finish switching it over to use a TypeScript client generated from OpenAPI, update it to the latest version of Angular, and improve the design so it’s more user-friendly. We’ll also work on better translations, accessibility for all users, and add clearer data visualizations using Apache Superset. These changes will make the app faster, more efficient, and easier for everyone to use.",
          "student_name": "Gopi Kishan",
          "code_url": null,
          "proposal_id": "WKvoD8zG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SbIHv90C"
        },
        {
          "title": "Making Mobile Wallet Deployment-Ready for G2P and Merchant Use Cases",
          "short_description": "The Mifos Mobile Wallet is a powerful reference application aimed at accelerating financial inclusion. However, to be effectively used in real-world...",
          "description": "The Mifos Mobile Wallet is a powerful reference application aimed at accelerating financial inclusion. However, to be effectively used in real-world deployments especially for Government-to-Person (G2P) disbursements and merchant transactions it requires further enhancements.\n\nThis project will make the mobile wallet production-ready by addressing technical gaps and extending its capabilities. Key goals include integrating the latest version of the Mifos Payment Hub EE for seamless payments, implementing support for Request-to-Pay (R2P) using the Mifos notification framework, strengthening security, and updating the wallet to use the latest fineract-client-kmp-sdk.\n\nTo support scale and usability, CI/CD pipelines will be added for automating iOS and desktop app deployments using GitHub Actions and Fastlane. The final deliverable will be a robust, secure, and cross-platform wallet ready for real-life G2P and merchant use cases, aligned with open digital finance standards like those championed by the Open Wallet Foundation.",
          "student_name": "Hekmatullah Amin",
          "code_url": null,
          "proposal_id": "abZfC7Rc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/isymcaV0"
        },
        {
          "title": "Integrate Mifos X with Workflow Engine/Process  Automation Tool",
          "short_description": "As stated in the Mifos Forge, Users of Mifos have long had a need to have greater control and flexibility over creating loan and customer onboarding...",
          "description": "As stated in the Mifos Forge, Users of Mifos have long had a need to have greater control and flexibility over creating loan and customer onboarding workflows that incorporate internal processes/steps as well as processes involving external systems. This project would center around creating an external integration with a workflow engine such as Flowable or jBPM using the Mifos X REST API as the glue. The auto-generated client library from the back-end enforces the contract between the workflow engine and the core banking system. The core banking and its REST API act as the glue. The result would be a UI-driven workflow engine to allow non-technical users to define these new custom workflows, where they could drag and drop the different steps of the process.",
          "student_name": "Hossam Hatem Ragab",
          "code_url": null,
          "proposal_id": "Q9a6NGc9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/eyVE2lTg"
        },
        {
          "title": "Generative AI to Improve Mifos Documentation",
          "short_description": "The Mifos and Apache Fineract platforms, while offering comprehensive core banking solutions, present challenges in documentation due to their...",
          "description": "The Mifos and Apache Fineract platforms, while offering comprehensive core banking solutions, present challenges in documentation due to their technical complexity and extensive domain-specific knowledge. To address this, the proposed project aims to leverage a class of large language models (LLMs) based on transformer architectures(especially reasoning based), to enhance documentation accessibility and user support. Building upon a preliminary LLM developed in 2024, the 2025 initiative will focus on scaling this system across the full documentation set, which involves scraping all the necessary sites,sublinks,slack channels and even youtube videos via their transcripts. This new project aims to completely revamp the way a normal Q&A chatbot does by leveraging state of the art models and latest techniques.",
          "student_name": "Keshav Arora",
          "code_url": null,
          "proposal_id": "UbuerORo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RaFQCvIE"
        },
        {
          "title": "Extend and Evolve UI Library of common components across all Mobile Apps",
          "short_description": "This project aims to address the inconsistency and redundancy found across customer-facing mobile applications built on the Mifos and Fineract...",
          "description": "This project aims to address the inconsistency and redundancy found across customer-facing mobile applications built on the Mifos and Fineract platforms. Many of these apps share common screens and workflows, but their UI components are often rebuilt from scratch, leading to fragmented design, longer development times, and poor maintainability.\n\nTo solve this, I propose to develop a unified, reusable UI component library using Jetpack Compose Multiplatform, ensuring compatibility across mobile, web, and desktop platforms. These components will be derived from shared workflows and designed according to updated design standards and guidelines developed in collaboration with our design lead. We will break down existing flows into base-level elements and reconstruct them into modular, scalable UI components.\n\nThe deliverables will include: A set of core, reusable UI components built with Compose Multiplatform, shared design system with updated design principles and standards, Git-based repository to house the UI components and associated documentation, Sample screens and workflows implemented in a reference fintech app and documentation outlining how to integrate and update apps using the shared UI library.",
          "student_name": "Saksham_Gupta",
          "code_url": null,
          "proposal_id": "icGD4gCz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/94oYzKFZ"
        },
        {
          "title": "Kotlin Multiplatform App Template Framework",
          "short_description": "I propose to enhance the Mifos Initiative's Kotlin Multiplatform (KMP) Multi-Module Project Generator to streamline cross-platform application...",
          "description": "I propose to enhance the Mifos Initiative's Kotlin Multiplatform (KMP) Multi-Module Project Generator to streamline cross-platform application development and make it more valuable for developers.\n\nMy plan is to create a customizable Material Design 3 component layer for a consistent UI across platforms, implement a unified configuration system, and enhance GitHub Actions workflows for comprehensive CI/CD. I'll develop pre-built infrastructure components (networking, database, storage), streamline dependency management with Gradle plugins, improve the sync directories system, add a type-safe API client with Ktorfit, and automate library publishing to Maven Central.\n\nWith my experience in Kotlin (3+ years) and Kotlin Multiplatform (2+ years), plus my extensive contributions to Mifos projects, I have the technical foundation to implement these enhancements successfully. I've created a detailed 15-week implementation plan with clear deliverables for each stage.\n\nThese improvements will transform the KMP Project Generator into a more powerful and user-friendly tool, benefiting both the Mifos ecosystem and the broader KMP community by reducing development time and ensuring best practices across platforms.",
          "student_name": "Sk Niyaj Ali",
          "code_url": null,
          "proposal_id": "GIKah1xN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hJVB1kT5"
        },
        {
          "title": "Mifos Gazelle: Profile/Demo Creator",
          "short_description": "This project focuses on enhancing the deployment experience of Mifos Gazelle by introducing a flexible, profile-based approach. It aims to simplify...",
          "description": "This project focuses on enhancing the deployment experience of Mifos Gazelle by introducing a flexible, profile-based approach. It aims to simplify environment setup, support selective component deployment, and enable preloading of demo data. The solution will improve usability and reproducibility, laying the foundation for future enhancements.",
          "student_name": "yashsharma127",
          "code_url": null,
          "proposal_id": "hmQtZFY1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pzO8onoq"
        },
        {
          "title": "Credit Bureau Integration Phase 5: Plugin-Based Credit Bureau Integration and FICO Scoring",
          "short_description": "This project proposes to improve Mifos X's loan origination capabilities by introducing a flexible, plugin-based architecture for integrating credit...",
          "description": "This project proposes to improve Mifos X's loan origination capabilities by introducing a flexible, plugin-based architecture for integrating credit bureaus. At present, the system supports only a single provider and is tightly coupled, which makes it difficult to extend. The proposed work aims to address this by building a generalized plugin interface, enabling integration with multiple providers, and incorporating a FICO-based credit scoring mechanism. Additionally, I hope to enhance the user experience through new interfaces that support better credit insights during loan processing. The intention is to contribute a reusable and maintainable solution that aligns with Mifos X’s mission of accessible and responsible financial services.",
          "student_name": "Yu Wati Nyi",
          "code_url": null,
          "proposal_id": "3WrM2IvT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GhKSEn86"
        }
      ]
    },
    {
      "name": "CRIU",
      "image_url": "https://summerofcode.withgoogle.com/media/org/criu/ypjxpancpwtdf698-360.png",
      "image_background_color": "#ffffff",
      "description": "Chekpoint/Restore for Linux tasks and containers",
      "url": "https://criu.org",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/criu",
      "ideas_url": "https://criu.org/Google_Summer_of_Code_Ideas",
      "guide_url": "https://github.com/checkpoint-restore/criu/blob/criu-dev/CONTRIBUTING.md",
      "topics": ["cloud", "containers", "Checkpoint/Restore"],
      "technologies": ["c", "python", "linux", "go"],
      "irc_channel": "https://gitter.im/save-restore/CRIU",
      "contact_email": "",
      "mailing_list": "criu@lists.linux.dev",
      "twitter_url": "",
      "blog_url": "https://criu.org",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Coordinated checkpointing of distributed applications",
          "short_description": "The goal of this project is to address the challenge of checkpointing distributed applications, which generally run across multiple nodes with active...",
          "description": "The goal of this project is to address the challenge of checkpointing distributed applications, which generally run across multiple nodes with active TCP connections. While Kubernetes has recently introduced checkpointing support, it lacks a proper synchronization mechanism for distributed workloads, especially in managing network state during checkpoint and restore.\n\nTo solve this, the project proposes to extend the existing criu-coordinator tool with support for network connection management via CRIU’s hook mechanisms. The work will involve implementing network-lock and network-unlock hooks, developing a pod-level network locking mechanism, and differentiating between internal and external TCP connections during checkpointing.",
          "student_name": "Behouba Manassé",
          "code_url": null,
          "proposal_id": "wLDfSYW8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0zNfEhdN"
        },
        {
          "title": "Files on Detached Mounts",
          "short_description": "If a mount is unmounted using the MNT_DETACH flag, its information disappears from /proc/$pid/mntinfo. If CRIU tries to C/R an fd on such a mount...",
          "description": "If a mount is unmounted using the MNT_DETACH flag, its information disappears from /proc/$pid/mntinfo. If CRIU tries to C/R an fd on such a mount point, it fails because it can't find the mount point in /proc/$pid/mntinfo.\nThis proposal aims to fix this problem using the statmount syscall introduced in Linux 6.8",
          "student_name": "Bhavik Sachdev",
          "code_url": null,
          "proposal_id": "363FKgYG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iQR71FTV"
        },
        {
          "title": "Support arm64 Guarded Control Stack (GCS)",
          "short_description": "This project aims to enable testing of Guarded Control Stack (GCS) functionality within CRIU (Checkpoint/Restore In Userspace) on AArch64 by...",
          "description": "This project aims to enable testing of Guarded Control Stack (GCS) functionality within CRIU (Checkpoint/Restore In Userspace) on AArch64 by integrating the Armv9.4-A GCS feature into CRIU’s ZDTM test suite through a dedicated test case\nthat confirms whether TPIDR2_EL0 is preserved and still readable in user space after restore. The project leverages recent upstream additions to glibc and Linux kernel that enable GCS support in user space, using Yocto and Arm's Fixed Virtual Platform (FVP) to emulate and test the architecture-specific functionality. This is a first step in exploring how CRIU might need to change to handle GCS systems, starting with test coverage\n\nProject Deliverables \nJune 2 (coding begins) - GCS-enabled Environment Verified. Yocto + FVP setup is confirmed working. Compiling and running GCS-marked binaries with glibc tunables active.\nJuly 12-16 (Midterm Evaluation) - First GCS ZDTM test added. A basic test that reads verifies TPIDR2_EL0, and explores stack/register consistency across the restore boundary. Integration with --nocr working. Investigation of parasite.c and restorer.c to identify the point at which TLS or control state (e.g., TPIDR2_EL0) could be saved or restored.\nAugust 16-August 23 (Final Evaluation) - Full round-trip test of checkpointing and restoring a GCS-using process. All tunables, toolchain flags, and kernel glibc dependencies documented.\nAugust 31 (Final Results Announced) - Final cleanup and documentation. Tutorial-style instructions provided on how to replicate setup, test flow, and next steps.\nPost GSOC - I will remain available to  support further maintenance, and help  any future contributors pick up.",
          "student_name": "Igor Svilenkov Bozic",
          "code_url": null,
          "proposal_id": "wm53Bsjd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/thwk5B7s"
        }
      ]
    },
    {
      "name": "Open Climate Fix",
      "image_url": "https://summerofcode.withgoogle.com/media/org/open-climate-fix/k4retnlmzqbkc6bn-360.png",
      "image_background_color": "#ffffff",
      "description": "Using Computers to Fix Climate Change",
      "url": "https://www.openclimatefix.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/open-climate-fix",
      "ideas_url": "https://docs.google.com/document/d/1nh6pdIjCTSLWwgFhgIV1gpG8CbIqGyoCFDHOfWmKdwA/edit?usp=sharing",
      "guide_url": "https://docs.google.com/document/d/19vU8JAhr2ekvtKrZNC067seerZxMHNGrvS9nBrXBP24/edit?usp=sharing",
      "topics": ["Forecasting", "Climate", "renewables"],
      "technologies": ["python", "pytorch"],
      "irc_channel": "",
      "contact_email": "mailto:emily@openclimatfix.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/OpenClimateFix",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "Efficient Cloud-Based Data Streaming for ML: Implementing Ice Chunk + Zarr 3 for PVNet Training",
          "short_description": "This proposal describes a thorough implementation strategy for streamlining Zarr data straight from cloud storage using Ice Chunk and Zarr 3...",
          "description": "This proposal describes a thorough implementation strategy for streamlining Zarr data straight from cloud storage using Ice Chunk and Zarr 3 technologies, thereby optimizing machine learning training workflows. The project's main goal is to incorporate these technologies into PVNet's training pipeline for processing NWP and satellite data. Creating a strong data access layer, intelligent prefetching techniques, flexible caching plans, and a smooth integration with PyTorch's data loading pipeline are all part of the implementation. A thorough benchmarking framework is also included in the project to gauge cost effectiveness and performance gains. \n\nFour stages make up the 175-hour schedule: preliminary setup and research, core cloud access mechanism implementation, performance benchmarking and optimization, and thorough documentation. The implementation of a cloud-aware PyTorch dataset, an adaptive prefetcher, and optimized chunk configuration based on access patterns are important technical advancements. By removing the requirement to locally download sizable datasets prior to training, the project seeks to revolutionize OpenClimatefix's use of cloud resources for machine learning training.",
          "student_name": "Dakshbir",
          "code_url": null,
          "proposal_id": "qi2sQGbf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Q8cKVlvw"
        },
        {
          "title": "Adjuster This! TabPFN for Solar Forecast Error Adjustment",
          "short_description": "Open Climate Fix’s Quartz Solar forecasting model uses a simple rule-based \"adjuster\" that averages recent forecast errors to correct incoming solar...",
          "description": "Open Climate Fix’s Quartz Solar forecasting model uses a simple rule-based \"adjuster\" that averages recent forecast errors to correct incoming solar forecasts. While effective in stable conditions, this method is rigid and might be suboptimal under rapid weather transitions or atypical error patterns. This project aims to compare this rule-based logic with TabPFN, a transformer model for tabular data. It seeks to evaluate whether TabPFN or its time-series variant, TabPFN-TS, can predict adjustments based on features such as time, forecast horizon, recent errors, and more. Through experiments, one key goal is also to determine whether TabPFN improves forecast skill—specifically the P50 quantile forecast—over the current approach, and whether it is efficient enough for deployment.",
          "student_name": "Gupta, Anshul",
          "code_url": null,
          "proposal_id": "4vR3Ne1K",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/T6DDfINT"
        },
        {
          "title": "Open Data PVNet",
          "short_description": "Open Data PVNet aims to democratize solar energy forecasting by extending the PVNet framework to work entirely with publicly available weather...",
          "description": "Open Data PVNet aims to democratize solar energy forecasting by extending the PVNet framework to work entirely with publicly available weather datasets like GFS, DWD ICON, and ERA5. Current solar forecasting models often rely on proprietary data, creating barriers for researchers and developers in low-resource settings. This project will build a training pipeline based on open NWP data, enhance data preprocessing tools, and benchmark PVNet’s performance using these sources. Key deliverables include zarr-formatted datasets, an open-source training pipeline, performance evaluation scripts, and comprehensive documentation. The end goal is to make high-quality solar forecasting more accessible, scalable, and globally impactful.",
          "student_name": "Siddharth899",
          "code_url": null,
          "proposal_id": "jLlmazUE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5GJMolBG"
        },
        {
          "title": "Cloudcasting UI",
          "short_description": "Open Climate Fix recent Cloudcasting model is able to predict clouds movements very accurately but for end user it’s hard to see or visualize the...",
          "description": "Open Climate Fix recent Cloudcasting model is able to predict clouds movements very accurately but for end user it’s hard to see or visualize the results, this project aims to create a new dashboard similar to quartz-frontend that is already up and running, to visualize results from the cloudcasting model the dashboard will be build using Next.js and MapBox as base map layer, Sentry to log errors, and a minimal fastapi server written in python to preprocess zaar data and serve it to the frontend, this solution will be a proof of concept for the new MVP",
          "student_name": "Suvan Banerjee",
          "code_url": null,
          "proposal_id": "ACzf9zDm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GXFLZMmW"
        },
        {
          "title": "Improving Probabilistic Solar Forecasts",
          "short_description": "This project aims to improve probabilistic solar forecasting by replacing traditional quantile regression with a more expressive Gaussian Mixture...",
          "description": "This project aims to improve probabilistic solar forecasting by replacing traditional quantile regression with a more expressive Gaussian Mixture Model (GMM) approach. Instead of predicting fixed quantiles, the model will learn the parameters of a GMM to represent the full predictive distribution, capturing complex and multimodal uncertainties common in solar irradiance data. Deliverables include a GMM-based forecasting model, performance comparisons with quantile baselines, robust uncertainty evaluation, and well-documented code for reproducibility and future extension.",
          "student_name": "Tara Murphy",
          "code_url": null,
          "proposal_id": "DN2ynSGd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tH7yq93f"
        },
        {
          "title": "Quartz Solar - New data source in ML model",
          "short_description": "This project aims to enhance PVNet, a multi-modal deep learning model for solar energy forecasting, by integrating aerosol data as an additional...",
          "description": "This project aims to enhance PVNet, a multi-modal deep learning model for solar energy \nforecasting, by integrating aerosol data as an additional input feature. Aerosols like dust, \nsmoke, and haze significantly affect solar irradiance but are not currently accounted for in \nPVNet’s forecasting pipeline. The work involves identifying suitable open aerosol datasets, \npreprocessing and aligning them with existing NWP inputs, and incorporating them into the \nmodel architecture through a dedicated encoder. By comparing baseline and aerosol-aware \nmodels, we aim to assess the impact of aerosols on forecast accuracy. The final deliverables \nwill include updated data pipelines, modified model components, and performance \nevaluation. This project contributes toward more accurate, climate-aware solar forecasting \nusing open-source tools and public datasets.",
          "student_name": "zaryab ali",
          "code_url": null,
          "proposal_id": "knflRCYu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NrZHhgA3"
        }
      ]
    },
    {
      "name": "KubeVirt",
      "image_url": "https://summerofcode.withgoogle.com/media/org/kubevirt/pqdi8ojm0atxoo1s-360.png",
      "image_background_color": "#ffffff",
      "description": "Building a virtualization API for Kubernetes",
      "url": "https://kubevirt.io",
      "category": "Infrastructure and cloud",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/kubevirt",
      "ideas_url": "https://github.com/kubevirt/community/wiki/Google-Summer-of-Code-2025",
      "guide_url": "https://github.com/kubevirt/community/wiki/Google-Summer-of-Code-2025#how-and-where-to-find-help",
      "topics": ["virtualization", "containers", "kubernetes"],
      "technologies": ["golang", "grpc"],
      "irc_channel": "https://kubernetes.slack.com/archives/C0163DT0R8X",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/forum/#!forum/kubevirt-dev",
      "twitter_url": "https://twitter.com/kubevirt",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 1,
      "projects": [
        {
          "title": "Adding Emulated BMC Support to KubeVirt (KubeVirtBMC)",
          "short_description": "This project introduces Kubernetes-native emulated BMC support to KubeVirt using IPMI/Redfish, enabling out-of-band VM control and provisioning...",
          "description": "This project introduces Kubernetes-native emulated BMC support to KubeVirt using IPMI/Redfish, enabling out-of-band VM control and provisioning workflows for tools like Metal³ and Ironic.",
          "student_name": "Salauat",
          "code_url": null,
          "proposal_id": "7LR6pMIH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kRRf6VYE"
        }
      ]
    },
    {
      "name": "Wagtail",
      "image_url": "https://summerofcode.withgoogle.com/media/org/wagtail/so6hnqeqh2cp4jbx-360.png",
      "image_background_color": "#ffffff",
      "description": "The powerful Python CMS for modern websites",
      "url": "https://wagtail.org/",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/wagtail",
      "ideas_url": "https://github.com/wagtail/gsoc/blob/main/project-ideas.md",
      "guide_url": "https://wagtail.org/gsoc/",
      "topics": ["web", "accessibility", "cms"],
      "technologies": ["python", "javascript", "django"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://github.com/wagtail/gsoc/discussions",
      "twitter_url": "https://x.com/wagtailcms",
      "blog_url": "https://wagtail.org/blog/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Content Security Policy compatibility",
          "short_description": "This proposal aims to improve Wagtail's Content Security Policy (CSP) compliance by organizing existing efforts, refactoring code, and...",
          "description": "This proposal aims to improve Wagtail's Content Security Policy (CSP) compliance by organizing existing efforts, refactoring code, and creating/enhancing developer tools. It addresses scattered issues and a lack of clear guidance by consolidating discussions, completing pending code changes for style-src, script-src, and img-src compliance, and providing documentation and possibly automated testing. The project also includes collaboration with Django-CSP to improve its core functionality, which would result in a more secure and developer-friendly Wagtail release.",
          "student_name": "Chiemezuo",
          "code_url": null,
          "proposal_id": "IToD6EgQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BbmYrprl"
        },
        {
          "title": "Enhancing the keyboard shortcut system within Wagtail",
          "short_description": "This project proposes the implementation of new Wagtail-specific keyboard shortcuts to enhance accessibility, navigation speed, and overall user...",
          "description": "This project proposes the implementation of new Wagtail-specific keyboard shortcuts to enhance accessibility, navigation speed, and overall user experience, in alignment with ATGT Guidelines. The aim is to introduce keyboard shortcuts for key UI components such as the sidebar, Minimap, global search, and opening/closing the shortcut modal.\nIn addition to adding these shortcuts, the project includes revising the user guide and keyboard shortcut modal to reflect both new and existing shortcuts accurately. These enhancements will make Wagtail more efficient and user-friendly, particularly for keyboard-driven users and those relying on assistive technologies.",
          "student_name": "Dhruvi",
          "code_url": null,
          "proposal_id": "fKG3pjCe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/W7M5PQD9"
        },
        {
          "title": "Enhancing Image and Document Listing for Usage Count",
          "short_description": "This project aims to enhance the Image and Document listings in Wagtail’s admin interface by introducing features such as a Grid-to-List view toggle...",
          "description": "This project aims to enhance the Image and Document listings in Wagtail’s admin interface by introducing features such as a Grid-to-List view toggle for Image Listing and a Usage Count column for both Image and Document Listing, with sorting and filtering support. These improvements will make the listing experience more user-friendly. Users will be able to access usage counts and key information without leaving the listing view. Fewer clicks, page reloads, and server requests will make Wagtail more efficient and sustainable.",
          "student_name": "Joel William",
          "code_url": null,
          "proposal_id": "bZdPLbT0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DTv1AKj4"
        },
        {
          "title": "Grid Aware Websites",
          "short_description": "This project focuses on making Wagtail.org more energy-efficient by adapting its content based on the environmental impact of the user's location....",
          "description": "This project focuses on making Wagtail.org more energy-efficient by adapting its content based on the environmental impact of the user's location. When electricity is being generated from more carbon-intensive sources, the website will automatically adjust its behavior, such as serving lighter images or reducing animations to lower its energy usage. The goal is to create a more sustainable browsing experience while maintaining performance and accessibility. Along the way, insights will be gathered to help guide other developers in building low-carbon websites using Wagtail.",
          "student_name": "Rohit.Sharma",
          "code_url": null,
          "proposal_id": "jNElk3rC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XPkwvTxj"
        }
      ]
    },
    {
      "name": "SQLancer",
      "image_url": "https://summerofcode.withgoogle.com/media/org/sqlancer/hzunjobwazuptdb6.png",
      "image_background_color": "#ffffff",
      "description": "Automatically testing database systems",
      "url": "https://www.sqlancer.com",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/sqlancer",
      "ideas_url": "https://github.com/sqlancer/sqlancer/wiki/GSoC-2025-Ideas",
      "guide_url": "https://github.com/sqlancer/sqlancer/wiki/GSoC-2025-Ideas#contributor-guidance",
      "topics": [
        "fuzzing",
        "Automated Testing",
        "Logic bugs",
        "Database systems"
      ],
      "technologies": ["java", "sql"],
      "irc_channel": "https://join.slack.com/t/sqlancer/shared_invite/zt-eozrcao4-ieG29w1LNaBDMF7OB_~ACg",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/sqlancer_dbms",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Integrating Published Testing Approaches into SQLancer",
          "short_description": "DQE is a method for systematically detecting logical errors in UPDATE and DELETE queries. Integrating Published Testing Approaches into SQLancer...",
          "description": "DQE is a method for systematically detecting logical errors in UPDATE and DELETE queries. Integrating Published Testing Approaches into SQLancer makes up for the limitation of existing tools (such as PQS, NoREC, TLP) that only target SELECT queries, and significantly improves SQLancer's vulnerability detection capabilities.",
          "student_name": "Dongqiao Huang",
          "code_url": null,
          "proposal_id": "4g8eut2m",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dXStZ2I1"
        },
        {
          "title": "Enhancing SQLancer with External Reducer Support and Hierarchical Delta Debugging",
          "short_description": "SQLancer’s current test case reduction framework faces three key limitations: (1) tight coupling between internal reducers (Delta Debugging and...",
          "description": "SQLancer’s current test case reduction framework faces three key limitations: (1) tight coupling between internal reducers (Delta Debugging and AST-based), limiting extensibility; (2) structural unawareness in Delta Debugging, which treats SQL inputs linearly despite their hierarchical relationships; (3) narrow applicability due to engine-specific Reproducer dependencies (only SQLite3 supported). This project addresses these issues by introducing a modular Reducer<G> interface to decouple reduction strategies (supporting tools like C-Reduce/Perses), implementing Hierarchical Delta Debugging (HDD) to group SQL statements by logical dependencies (improving efficiency from O(n²) to O(n log n)), and automating external reducer integration through dynamic script generation. Deliverables include the modular interface, HDD-preprocessed reducers, C-Reduce/Perses adapters, and comprehensive tests/documentation.",
          "student_name": "Jinhui Xu",
          "code_url": null,
          "proposal_id": "c82R8Guq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LNNO9Bcf"
        },
        {
          "title": "Supporting Automated Scripts for DBMS Deployment",
          "short_description": "This proposal addresses the complexity of deploying DBMS instances for testing with SQLancer—an issue that makes it challenging for beginners and...",
          "description": "This proposal addresses the complexity of deploying DBMS instances for testing with SQLancer—an issue that makes it challenging for beginners and hinders efficient bug reproduction. \nThe project will deliver a suite of automated scripts  that streamlines the entire process: from dynamically generating configuration files and Dockerfiles to building and running Docker containers, initializing databases, and executing SQLancer tests. By leveraging Python, Docker and other relevant automating technologies, the solution will enable a reproducible, user-friendly, and reliable testing workflow. \nDeliverables include an initial working prototype for automated DBMS deployment, enhanced modular scripts with configuration management and logging, comprehensive documentation, and optional CI/CD integration for continuous testing.",
          "student_name": "Leyao Liu",
          "code_url": null,
          "proposal_id": "gi5NMKR3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/u7MUhGUF"
        },
        {
          "title": "Adding Support for the Latest Postgres Version",
          "short_description": "SQLancer is a tool that automatically tests DBMS in order to find bugs in their implementations. As of right now, SQLancer supports many great...",
          "description": "SQLancer is a tool that automatically tests DBMS in order to find bugs in their implementations. As of right now, SQLancer\nsupports many great database systems, however, some of the systems are outdated including one of the most frequently used\ndatabases: PostgreSQL. SQLancer supports Postgre version 12 which became end-of-life in Nov 2024 and many versions along\nwith critical changes have been made since then. This project aims to advance SQLancer to support the latest version of\nPostgres (version 17) by removing necessary deprecations as well as adding new features, by the end of this project, SQLancer\nwill support additional features such as JSON data types/functions, procedural extensions, advance error handling, and hopefully\nreiterate the upgrade to other databases",
          "student_name": "Yaojie Jia",
          "code_url": null,
          "proposal_id": "jgsQvisO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tvKWpQx8"
        }
      ]
    },
    {
      "name": "AFLplusplus",
      "image_url": "https://summerofcode.withgoogle.com/media/org/aflplusplus/dw8yelaswljerorz-360.png",
      "image_background_color": "#ffffff",
      "description": "State of the art fuzzing for better security",
      "url": "https://aflplus.plus",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/aflplusplus",
      "ideas_url": "https://github.com/AFLplusplus/LibAFL/issues/2992",
      "guide_url": "https://github.com/AFLplusplus/LibAFL/blob/main/CONTRIBUTING.md",
      "topics": ["fuzzing", "ci"],
      "technologies": ["llvm", "rust", "fuzzing", "qemu"],
      "irc_channel": "",
      "contact_email": "mailto:afl@aflplus.plus",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 1,
      "projects": [
        {
          "title": "Less is More: Simplifying Rust Generics and Bounds in LibAFL",
          "short_description": "This project aims to simplify overly complex generic parameters and trait bounds in LibAFL's Rust codebase. By analyzing actual trait usage through...",
          "description": "This project aims to simplify overly complex generic parameters and trait bounds in LibAFL's Rust codebase. By analyzing actual trait usage through compiler internals and static analysis techniques, it will identify and safely remove unnecessary bounds while preserving correctness and API stability. The work includes building a simplification pipeline, integrating it into the LibAFL workflow, and delivering extensive tests, documentation, and performance evaluations. This will enhance maintainability, improve compilation times, and promote best practices in Rust generic design.",
          "student_name": "Khagan Karimov",
          "code_url": null,
          "proposal_id": "6bCGM6ZI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/37faqHUT"
        }
      ]
    },
    {
      "name": "gprMax",
      "image_url": "https://summerofcode.withgoogle.com/media/org/gprmax/vm8kavyxz3csja8f-360.png",
      "image_background_color": "#ffffff",
      "description": "Simulating electromagnetic wave propagation",
      "url": "https://www.gprmax.com",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/gprmax",
      "ideas_url": "https://github.com/gprMax/GSoC/blob/main/project-ideas-2025.md",
      "guide_url": "https://github.com/gprMax/GSoC/blob/main/project-template.md",
      "topics": [
        "science",
        "engineering",
        "geophysics",
        "electromagnetics",
        "ground penetrating radar"
      ],
      "technologies": ["python", "cuda", "openmp", "mpi", "opencl"],
      "irc_channel": "https://gprmax.zulipchat.com/join/rdr3ibeupg6nz5c4eu7oo2z4/",
      "contact_email": "mailto:info@gprmax.com",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/gprmax_fdtd",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/gprmax/",
      "num_projects": 4,
      "projects": [
        {
          "title": "AMD ROCm HIP Port Proposal",
          "short_description": "This project focuses on porting the PyCUDA-based FDTD method solver of gprMax to HIP API. The final target is to run gprMax on AMD ROCm GPUs. HIP...",
          "description": "This project focuses on porting the PyCUDA-based FDTD method solver of gprMax to HIP API. The final target is to run gprMax on AMD ROCm GPUs.  HIP Python and HIPIFY+Pybind are considered to be used to do the porting work. The final deliverables consist of the ported kernels and the adaption to the original gprMax code, the setup script, benchmarks, and documents.",
          "student_name": "Anjie",
          "code_url": null,
          "proposal_id": "7YQMK1eo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oM0R3IbA"
        },
        {
          "title": "Building Comprehensive AI support system for gprMax",
          "short_description": "This project aims to enhance gprMax's user support capabilities by integrating advanced Language Model (LLM) technologies. The core goal is...",
          "description": "This project aims to enhance gprMax's user support capabilities by integrating advanced Language Model (LLM) technologies. The core goal is developing an AI-driven chatbot capable of interpreting natural language user instructions and generating accurate, ready-to-run gprMax input files. The project is scheduled for completion within a 12-week timeframe, divided into clear milestones ensuring systematic progression and iterative refinements. The final deliverables will great improve the user experience of gprMax and laying foundation for future AI integration.",
          "student_name": "Jichao Fang",
          "code_url": null,
          "proposal_id": "NK2a3aQS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AYkOXMci"
        },
        {
          "title": "Implementation of a Near to Far Field Transformation (NFFT) Calculation  and Output of Relevant Info",
          "short_description": "This project aims to implement a Near-to-Far Field Transformation (NFFT) feature in gprMax. This will enable users to compute the far-field radiation...",
          "description": "This project aims to implement a Near-to-Far Field Transformation (NFFT) feature in gprMax. This will enable users to compute the far-field radiation patterns and radar crosssections(RCS) from the near-field data. It will expand gprMax’s capabilities for antenna design, scattering analysis, etc.\nI propose to implement the Near-to-Far Field Transformation (NFFT) module\nand its integration at several key points in the existing workflow:\n- Adding the NFFT command\n- Module for Field Sampling during FDTD\n- Post-Processing & Far-Field Calculation\n- Integration with the API\n- Validation and Testing\n- Documentation and Review",
          "student_name": "Karan035",
          "code_url": null,
          "proposal_id": "vftLZS4t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fc4B9yzr"
        },
        {
          "title": "Apple Metal Port",
          "short_description": "This project aims to complete the development of an Apple Metal port for gprMax, building upon the initial work in PR #457. gprMax is an open-source...",
          "description": "This project aims to complete the development of an Apple Metal port for gprMax, building upon the initial work in PR #457. gprMax is an open-source electromagnetic wave propagation simulator using the Finite-Difference Time-Domain (FDTD) method, and this port will enable efficient execution on Apple Silicon hardware.\nThe implementation involves translating CUDA/OpenCL FDTD kernels to Metal Shading Language (MSL), creating Python bindings to manage Metal devices and memory, and integrating Metal as a first-class backend option alongside CPU and CUDA/OpenCL.\nKey components include:\nFinalizing Metal device detection and selection\nCompleting MSL kernels for field updates, PML boundaries, sources, and outputs\nImplementing Python interfaces for Metal device management and memory operations\nIntegrating Metal execution into the main solver loop\nCreating a comprehensive testing framework to validate numerical accuracy\nOptimizing performance through profiling and tuning\nDocumenting the Metal backend for users and developers\nThe project will follow a structured development approach, starting with reviewing existing code in PR #457, implementing remaining kernels, building integration tests, and finally optimizing performance. This systematic progression ensures a stable, validated, and efficient Metal implementation.\nThe primary challenge lies in achieving competitive performance compared to existing implementations, requiring a deep understanding of Apple's GPU architecture and careful optimization.\nUpon completion, the Metal port will enhance gprMax's capabilities on Apple hardware, potentially offering superior performance to CPU implementations. This will benefit researchers, students, and professionals in electromagnetics, particularly those using Apple devices, and demonstrate Metal's viability for scientific computing applications.",
          "student_name": "Manobhav Sachan",
          "code_url": null,
          "proposal_id": "zlUSTGD9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lKjuDV7t"
        }
      ]
    },
    {
      "name": "Fortran-lang",
      "image_url": "https://summerofcode.withgoogle.com/media/org/fortran-lang/ay9se7mc6vgdwgbn-360.png",
      "image_background_color": "#ffffff",
      "description": "High-performance parallel programming language",
      "url": "https://fortran-lang.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/fortran-lang",
      "ideas_url": "https://github.com/fortran-lang/webpage/wiki/GSoC-2025-Project-ideas",
      "guide_url": "https://github.com/fortran-lang/webpage/wiki/GSoC-2025-Contributor-Instructions",
      "topics": [
        "compilers",
        "programming languages",
        "build systems",
        "libraries",
        "Fortran"
      ],
      "technologies": ["python", "c++", "fortran"],
      "irc_channel": "https://fortran-lang.discourse.group/",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/fortranlang",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Enhancing OpenMP Support in LFortran",
          "short_description": "This project aims to enhance OpenMP support in LFortran by developing a unified ASR node, that encapsulates all core and advanced OpenMP directives...",
          "description": "This project aims to enhance OpenMP support in LFortran by developing a unified ASR node, that encapsulates all core and advanced OpenMP directives and clauses. The new design will enable robust handling of constructs like Parallel, Do, Teams, Tasks, SIMD, and Target offloading, ensuring systematic lowering to runtime calls. Key deliverables includes implementing various OpenMP features, enhancing Fortran Backend and explore Target Offloading design and it's implementation. This will make LFortran a more powerful and extensible tool for HPC applications.",
          "student_name": "adit4443ya",
          "code_url": null,
          "proposal_id": "ldqUubIm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cu5wDfGZ"
        },
        {
          "title": "Compiling AoC-2024 and Stdlib using LFortran",
          "short_description": "In the upcoming GSoC project, I will be compiling two code bases—AoC-2024 and Stdlib—using LFortran. These code bases can be compiled by any modern...",
          "description": "In the upcoming GSoC project, I will be compiling two code bases—AoC-2024 and Stdlib—using LFortran. These code bases can be compiled by any modern Fortran compiler, such as GFortran. For both code bases, my plan is to discover bugs and failures in various phases of LFortran (Frontend, ASR passes, and Backend) and report minimal reproducible examples for these bugs. My next step will be to fix all the reported bugs to ensure the successful generation of executables. Finally, I will be working to align the outputs from LFortran with those of GFortran. Additionally, I will work on enhancing compilation speeds when compiling these code bases using LFortran",
          "student_name": "AnshMehta",
          "code_url": null,
          "proposal_id": "zlGdmlt2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uhd1Mpkb"
        },
        {
          "title": "Compile FPM with LFortran",
          "short_description": "In order to make LFortran reach beta quality, it is essential to compile more benchmarked fortran codes. FPM(Fortran Package Manager) is one of the...",
          "description": "In order to make LFortran reach beta quality, it is essential to compile more benchmarked fortran codes. FPM(Fortran Package Manager) is one of the best example of such codebase. Successfully compiling FPM will make LFortran a more robust compiler and it will be a huge boost for LFortran to reach at beta quality. \nFor this year's GSOC project, I am planing to compile FPM with LFortran. Since FPM depends on other 5 open source fortran codebases (toml-f, fortran-regex, fortran-shlex, M_CLI2, jonquil) , my plan is to compile those 5 small codebases till 1st month of coding period. \nTo compile any code, my idea is to create workarounds that compile with LFortran till code compiles fully with LFortran, then create MREs for each workarounds and finally fix them and remove workarounds from original code. This way I will compile in order: toml-f, fortran-regex, fortran-shlex, M_CLI2, jonquil so that all dependencies are solved well. After completing these 5 codes, I will follow same process to compile FPM. Detailed weekly plan is discussed in my proposal.\nDeliverables: Compile toml-f, fortran-regex, fortran-shlex, M_CLI2, jonquil, FPM completely with LFortran.",
          "student_name": "Jinang Shah",
          "code_url": null,
          "proposal_id": "pUqVGRxh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gQy7gPby"
        },
        {
          "title": "File System and Process Management Library (stdlib)",
          "short_description": "This project aims to extend the community maintained Fortran standard library's system module to include more cross platform functionality related to...",
          "description": "This project aims to extend the community maintained Fortran standard library's system module to include more cross platform functionality related to File system operations (such as listing directories, checking permissions etc) and creation, modification of sub-processes.",
          "student_name": "Suprit S Jahagirdar",
          "code_url": null,
          "proposal_id": "CSwyHC8D",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xTdyYrMf"
        },
        {
          "title": "Improved Fortran Interface Generation for PETSc",
          "short_description": "PETSc, the Portable, Extensible Toolkit for Scientific Computation, is for the scalable (parallel) solution of scientific applications modeled by...",
          "description": "PETSc, the Portable, Extensible Toolkit for Scientific Computation, is for the scalable (parallel) solution of scientific applications modeled by partial differential equations (PDEs). Besides its native API in C it has bindings for Fortran and Python. PETSc also contains TAO, the Toolkit for Advanced Optimization, a software library supporting MPI and GPUs through CUDA, HIP, Kokkos, or OpenCL. \n\nWhile most of the Fortran interfaces can be generated automatically from the C-API, functions with \"complex\" arguments such as procedure pointers, pointers to arrays, and strings require the manual creation of interface code on both the C and the Fortran side. Moreover, due to the discrepancy of features between C and Fortran, a one-to-one translation of APIs leads to Fortran interfaces that don't leverage the capabilities of modern Fortran. Examples include overloaded functions for different types in Fortran, for which a C-API requires VOID and an explicit type argument and arrays, for which the length is part of the type definition in Fortran but requires a second argument in the C-API.\n\nThis project aims to improve the automation of generating Fortran interfaces by leveraging modern Fortran features such as BIND(C) and ISO_C_BINDING along with annotation strategies to reduce the need of manual generation of interfaces. The improved system will enhance both usability for end-users and maintainability for developers.",
          "student_name": "Tapashree Pradhan",
          "code_url": null,
          "proposal_id": "xwEPXinc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jm7DF82F"
        }
      ]
    },
    {
      "name": "INCF",
      "image_url": "https://summerofcode.withgoogle.com/media/org/incf/gnryoa8kunjogh9a-360.png",
      "image_background_color": "#ffffff",
      "description": "An open & FAIR neuroscience standards organization",
      "url": "https://www.incf.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/incf",
      "ideas_url": "https://docs.google.com/document/d/1T7U4nYFbVbZuIUw_2bB89YASj-ra26hRNtG2a20Gjlw/edit?tab=t.0",
      "guide_url": "https://docs.google.com/document/d/16H8MlUl_0EbhL1IC4ddRZKYeMAd9JtAHCuxY5piZOGc/",
      "topics": [
        "machine learning",
        "data visualization",
        "neuroscience",
        "brain modelling",
        "neuroimage processing"
      ],
      "technologies": ["python", "javascript", "java", "c++", "gpu"],
      "irc_channel": "",
      "contact_email": "mailto:mathew@incf.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/INCForg",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 27,
      "projects": [
        {
          "title": "Conda packaging for GeNN",
          "short_description": "GeNN is a C++ library that generates code for efficiently simulating Spiking Neural Networks (SNNs) using GPUs. In order to compile this generated...",
          "description": "GeNN is a C++ library that\ngenerates code for efficiently simulating Spiking Neural Networks (SNNs)\nusing GPUs. In order to compile this generated code, it requires a\ncompiler and development versions of backend requirements such as CUDA.\nBecause of this, GeNN must currently be installed from source which puts\noff some users.\n\nSo for this project, I will develop a conda (forge)\npackage for GeNN which will handle the installation of the required\ndependencies and ease installation for end users.\nDeliverables:\n-Conda Forge Recipe\n-User Documentation",
          "student_name": "Agrim Patil",
          "code_url": null,
          "proposal_id": "1iPpZRow",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SfBDu4n2"
        },
        {
          "title": "Studying Peripheral Physiological Modulation of Brain Activity (INCF #27)",
          "short_description": "Traditionally, brain activity has been analyzed independently from peripheral physiological measurements like the electrocardiogram (ECG), but our...",
          "description": "Traditionally, brain activity has been analyzed independently from peripheral physiological measurements like the electrocardiogram (ECG), but our understanding of brain-heart interactions (BHI) has significantly evolved since then: we now know that not only does the brain modulate the heart but surprisingly the heart exerts a powerful influence on the brain. For example, the timing of a learning task relative to the cycle of the heartbeat modulates its event-related potential (ERP), and heart-beats interact with activity in the insula, an area critically involved in internal monitoring. However, despite this increased interest in BHI in the neuroscientific community, there is a lack of well-documented tool, that incorporates much of the modern BHI identification techniques, treats sensitively ECG artifacts, and furthermore complements modern brain connectivity analysis. BHI studies point to a much greater complexity in neural signals that current connectivity packages fail to account for, such as recent work pointing to the modulating of brain oscillations by respiration. As such, this project has two main purposes: extract BHI and direct respiratory modulation of the brain and build a brain connectivity tool that accounts for these confounding measures, built in the Python MNE environment to complement traditional data analysis pipelines. Our analysis functions will furthermore be validated through tutorial-like experiments, written as Jupyter notebooks on open datasets, and we hope that the results I show will convince the scientific audience of the importance of confounding peripheral measures in neural data.  \n\nThe minimal set of deliverables include: individual analysis functions for peripheral physiological signals, connectivity measures between peripheral and neural signals, and brain connectivity measures, both regular, and conditioned on peripheral physiological signals to remove their effect, and experiments demonstrating these tools on open datasets.",
          "student_name": "Alex Zhao",
          "code_url": null,
          "proposal_id": "kv253PMr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZiQox6Iu"
        },
        {
          "title": "Python API for new cell types",
          "short_description": "This project will involve refactoring the Human Neocortical Neurosolver (HNN-core) codebase to enable flexible development of neural circuits with...",
          "description": "This project will involve refactoring the Human Neocortical Neurosolver (HNN-core) codebase to enable flexible development of neural circuits with customizable cell types. Currently, HNN-core contains hard-coded assumptions about cell types, locations, and connectivity that limit researchers' ability to implement networks with different architectures.\n\nI will restructure key modules to replace these hard-coded constraints with dynamic definitions, allowing users to flexibly select and connect cell types with different morphologies and electrophysiological properties. The solution involves refactoring cells_default.py for dynamic cell creation, modifying network.py to handle arbitrary cell types, and updating related components to support custom cell types.\n\nThe proposed plan includes dynamic cell type implementation, updated network connectivity handling, a demonstration model with custom cell types, comprehensive documentation, and unit tests ensuring backward compatibility. This work will significantly enhance HNN's capabilities for hypothesis testing in EEG/MEG research while maintaining its user-friendly approach for neuroscientists.",
          "student_name": "Chetan Kandpal",
          "code_url": null,
          "proposal_id": "3l9QywDJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EpVSFMhb"
        },
        {
          "title": "GestureCap: Using markerless motion capture and gesture recognition for music generation",
          "short_description": "Last year, work on GestureCap focused on developing an Arduino-based latency measurement system and optimizing the pipeline for low-latency...",
          "description": "Last year, work on GestureCap focused on developing an Arduino-based latency measurement system and optimizing the pipeline for low-latency performance. Additionally, OSC-based communication between Python and PureData was implemented to enable real-time audio processing. Building on this foundation, this project will introduce AI-driven gesture recognition using lightweight, GPU-accelerated models to improve accuracy and responsiveness. The gesture-music mapping will be expanded to support both trigger-based events (e.g., drum beats) and continuous controls (e.g., pitch, reverb, and panning), allowing for more expressive musical interactions. The project will also integrate GestureCap with MaxMSP and Ableton Live, making it more accessible to musicians and producers. Further improvements will focus on latency reduction, real-time inference optimizations, and testing OpenPose-based feature extraction as a potential enhancement. If time permits, a visualizer for live gesture-music interaction will also be developed. These advancements will refine GestureCap’s capabilities, ensuring a more responsive and expressive experience for users.",
          "student_name": "Deepansh Goel",
          "code_url": null,
          "proposal_id": "OHmJ6d3T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lxOVr6GO"
        },
        {
          "title": "Developing standardised biophysically detailed neuronal circuit models using NeuroML",
          "short_description": "This project will convert somatosensory thalamocortical circuits model based on NetPyNE implementation into NeuroML standard formats and testing it...",
          "description": "This project will convert somatosensory thalamocortical circuits model based on NetPyNE implementation into NeuroML standard formats and testing it across multiple simulation engines to ensure that it produce the same results. I'll convert at least 207 cells, including all ion channels, simulate the subnet (e.g., all L5 neurons) and add OMV tests.",
          "student_name": "Hengye Zhu",
          "code_url": null,
          "proposal_id": "QFzv7DVd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3MM7t8J3"
        },
        {
          "title": "Developing an ISPC Backend for GeNN to Enable CPU-Based SNN Simulations",
          "short_description": "GeNN is a C++ library used for simulating Spiking Neural Networks through GPU-based code generation (CUDA/HIP). Currently, its accessibility is...",
          "description": "GeNN is a C++ library used for simulating Spiking Neural Networks through GPU-based code generation (CUDA/HIP). Currently, its accessibility is limited to users with a dedicated GPU system. This project aims to address this limitation by adding an ISPC (Intel’s Implicit SPMD Program Compiler) code generation backend model to the GeNN library to enable efficient SNN simulations on SIMD (Single Instruction, Multiple Data) capable CPUs .\nMy project will expand GeNN’s accessibility to those users who do not have a dedicated GPU system while delivering high performance through CPU SIMD parallelism. I will work on backend architecture design, SIMD optimization, build system integration, and benchmarking against existing GPU implementations .",
          "student_name": "Jash Vora",
          "code_url": null,
          "proposal_id": "E32R7Vyl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ilNUQGQl"
        },
        {
          "title": "DevoTG: Dynamic Graph Neural Networks for Modeling C. elegans Development",
          "short_description": "The nematode Caenorhabditis elegans serves as a pivotal model organism in developmental biology due to its well-defined cell lineage, compact genome,...",
          "description": "The nematode Caenorhabditis elegans serves as a pivotal model organism in developmental biology due to its well-defined cell lineage, compact genome, and the availability of comprehensive datasets detailing its development from a single cell to a complex multicellular organism. This project aims to leverage the existing DevoGraph framework to model the intricate developmental processes of C. elegans, specifically focusing on embryogenesis and the formation of its connectome, using advanced temporal graph techniques. The core methodology will involve employing Discrete-Time Dynamic Graph (DTDG) models, with an initial emphasis on the EvolveGCN architecture. The project will begin by constructing temporal graph representations from available C. elegans developmental datasets, including cell lineage and connectome data. Subsequently, EvolveGCN, a model known for its ability to handle evolving graph structures, will be applied and potentially adapted to capture the dynamic nature of these developmental processes. The expected outcomes include a functional implementation within the DevoGraph repository, a model capable of explaining key aspects of C. elegans development, and valuable insights into the efficacy of temporal graph techniques for addressing this complex biological problem. Furthermore, the project will explore potential future directions such as the visualization of the developmental graphs and the investigation of continuous-time models to capture finer developmental dynamics.",
          "student_name": "JayaG",
          "code_url": null,
          "proposal_id": "K2WlAxao",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gP6abSHH"
        },
        {
          "title": "3. HarmonyHub: Front-end interface refactoring and expansion  for multi-instrument support",
          "short_description": "HarmonyHub is an open-source, modular web application designed to revolutionize music education by integrating modern technologies and pedagogical...",
          "description": "HarmonyHub is an open-source, modular web application designed to\nrevolutionize music education by integrating modern technologies and\npedagogical principles. Built using Ionic and Angular, it provides educators with\nreusable components and services to create adaptive and personalized\nlearning experiences. Initially focused on trumpet players, the platform is now\nbeing expanded to support other variable-pitch instruments like wind (e.g.,\nFlute, Clarinet) and bowed string instruments (e.g., Violin, Viola). By blending\ntraditional music instruction with cutting-edge digital tools, HarmonyHub\nenhances practice strategies, making learning more engaging and effective.\nMastering wind and bowed string instruments is challenging, requiring\nstructured practice and targeted support. HarmonyHub addresses this need by\nbridging the gap between conventional teaching methods and modern\ntechnological advancements, ensuring students receive interactive and\npersonalized guidance. In an era where digital transformation is redefining\neducation, integrating Information and Communication Technology (ICT) into\nmusic learning enhances skill development, creativity, and motivation. By\nrefining its interface and expanding its instrument coverage, HarmonyHub\npaves the way for a more inclusive, accessible, and innovative approach to\nmusic education.",
          "student_name": "Komal Bhalotia",
          "code_url": null,
          "proposal_id": "iKRPZGJz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KIO5vKBn"
        },
        {
          "title": "MODELING NEURAL DEVELOPMENTAL PROGRAMS OF C. elegans USING GROWING HYPERGRAPH NEURAL NETWORKS",
          "short_description": "This proposal outlines a novel computational framework for modeling neural developmental programs using Growing Hypergraph Neural Networks (Growing...",
          "description": "This proposal outlines a novel computational framework for modeling neural developmental programs using Growing Hypergraph Neural Networks (Growing HNNs). These models serve as unified representations by integrating both spatial and lineage dynamics during the embryo-genetic development. This is achieved by encoding cells, spatial structures, lineage relationships, and developmental cues into a dynamic hypergraph, this approach enables end-to-end simulation and prediction of neural growth, differentiation, and functional emergence. The framework is biologically inspired, scalable, and aligned with recent advances in graph neural networks and developmental biology. The goal is to model the cross-connections between diverging networks (anastomoses) using Hypergraphs during the embryo-genetic development.",
          "student_name": "Lalith Bharadwaj",
          "code_url": null,
          "proposal_id": "DbczNIHo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YRLq7bQE"
        },
        {
          "title": "ActiveVision: a data and model portal for the study of goal-directed vision",
          "short_description": "This project develops an open portal for goal-directed vision research, integrating eye-tracking datasets and machine learning models with tools for...",
          "description": "This project develops an open portal for goal-directed vision research, integrating eye-tracking datasets and machine learning models with tools for benchmarking and validation. A key focus is vision-language integration, enabling better task-driven attention modeling. This platform will also serve as a prototype for similar data+model initiatives on public hardware platforms, improving reproducibility and accessibility in multimodal AI research.",
          "student_name": "Lihong Chen",
          "code_url": null,
          "proposal_id": "pEGH718t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZopxGpMS"
        },
        {
          "title": "Develop Python API for Multi-Network Simulations in Human Neocortical Neurosolver (HNN)",
          "short_description": "​The Human Neocortical Neurosolver (HNN) is an open-source neural modeling tool designed to help researchers and clinicians interpret human brain...",
          "description": "​The Human Neocortical Neurosolver (HNN) is an open-source neural modeling tool designed to help researchers and clinicians interpret human brain imaging data. Currently, HNN primarily focuses on simulating neural activity within single neocortical columns. This project aims to extend HNN's capabilities by developing a Python API that facilitates multi-network simulations, enabling the modeling of interactions between multiple neocortical networks. This enhancement will provide neuroscientists with a more comprehensive tool to study complex brain interactions and better understand the neural mechanisms underlying MEG/EEG data. The project will involve designing and implementing the API, developing comprehensive documentation and tutorials, ensuring compatibility with existing HNN functionalities, and conducting validation tests to verify the accuracy and reliability of multi-network simulations. By expanding HNN's capabilities, this project will support a broader range of research applications, fostering innovation and collaboration within the neuroscience community",
          "student_name": "Maira usman",
          "code_url": null,
          "proposal_id": "prf2xAlE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tOqXGb6K"
        },
        {
          "title": "A Python Command Line Interface (CLI) for the CBRAIN Distributed Computing Platform",
          "short_description": "The project will develop a Python-based CLI for CBRAIN using its Python API Client Swagger API, allowing advanced users to manage research data and...",
          "description": "The project will develop a Python-based CLI for CBRAIN using its Python API Client Swagger API, allowing advanced users to manage research data and computational workflows directly via the API. This CLI will support data upload/download, file querying, task creation, execution, and monitoring, enabling remote access to complex research operations without relying on the web interface. The goal is to improve CBRAIN's usability by providing a flexible, programmatic tool for advanced research workflows.",
          "student_name": "Md Asiful Alam",
          "code_url": null,
          "proposal_id": "F2VOxrUj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1An4Dp8N"
        },
        {
          "title": "BreathState: an open-source Android/iOS and PC app for breathing and heart-rate synchronization",
          "short_description": "The project will develop the first version of an app that uses Bluetooth to connect with heart-rate and respiration sensors, calculate metrics of...",
          "description": "The project will develop the first version of an app that uses Bluetooth to connect with heart-rate and respiration sensors, calculate metrics of synchronization and variability based on these measurements and implement a biofeedback protocol to control this variability. This will allow the study of autonomic nervous function, and will allow biofeedback protocols for mood and health intervention to be implemented via live tracking of breathing and heart-rate. I plan to use the available open source code which is in python and re-write the modules in dart using the pub dev packages.",
          "student_name": "Michael Lewis",
          "code_url": null,
          "proposal_id": "hJWUlTAX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/P9nXg703"
        },
        {
          "title": "#23 SciCommons : A Social-Web Tool For Scientific Discussion, Interaction, Rating and Peer Review",
          "short_description": "SciCommons is an open-source platform aimed at improving the scientific peer review process through better user experience and web application...",
          "description": "SciCommons is an open-source platform aimed at improving the scientific peer review process through better user experience and web application optimization. It focuses on refining the frontend UI, following best practices, and enhancing performance. Contributors will work on UI improvements, optimizing API performance, and ensuring cross-platform compatibility.",
          "student_name": "Mohd Faisal Ansari",
          "code_url": null,
          "proposal_id": "7bBLFG3Y",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qGyE3iBz"
        },
        {
          "title": "Transitioning from Simulation-Based Inference to Automatic MCMC for Virtual Brain Inference",
          "short_description": "This project aims to replace Simulation-Based Inference (SBI) methods with Markov Chain Monte Carlo (MCMC) techniques for inference problems...",
          "description": "This project aims to replace Simulation-Based Inference (SBI) methods with Markov Chain Monte Carlo (MCMC) techniques for inference problems involving complex or intractable likelihood functions, such as those in Virtual Brain Inference (VBI). While SBI uses deep networks to approximate posterior distributions, it can introduce hard-to-control biases and limit interpretability. In contrast, MCMC provides a more principled Bayesian approach by directly sampling from the posterior. A key challenge in using MCMC methods like Hamiltonian Monte Carlo (HMC) and the No-U-Turn Sampler (NUTS) is their need for differentiable likelihoods, which are often unavailable in high-dimensional models like those for fMRI, EEG, or MEG data. This project addresses that issue by leveraging Automatic Differentiation (AD), which allows efficient gradient computation. Implemented in libraries like JAX, which enables fast, parallel computation on GPUs. The first goal is to translate existing Virtual Brain models - specifically the Montbrió model - into JAX. This model simulates brain dynamics and links simulated EEG BOLD dynamics to fMRI observations. Its parameters, currently estimated via SBI, will instead be inferred using MCMC for improved accuracy and scalability. Reparameterization strategies and hierarchical structures will be used to enhance MCMC performance and convergence. Deliverables include a JAX-based translation of the Montbrió model, implementation of MCMC-based inference, reparameterization strategies, benchmarking against SBI methods, and application to real neuroimaging data. The outcome will offer more robust tools for understanding neural dynamics and disorders, improving the accuracy and interpretability of brain models.",
          "student_name": "Monica Paoletti",
          "code_url": null,
          "proposal_id": "KUn7IhBx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zCDQQX7p"
        },
        {
          "title": "PROJECT #8: Brian Simulator ::  Replace Brian’s just-in-time compilation mechanism",
          "short_description": "This project aims to replace Brian’s current just-in-time (JIT) compilation system, which relies on Cython. While functional, Cython introduces slow...",
          "description": "This project aims to replace Brian’s current just-in-time (JIT) compilation system, which relies on Cython. While functional, Cython introduces slow compile times and adds complexity by requiring separate code generation paths for Python and C++.  \r\n\r\nThe goal is to simplify and speed up Brian's runtime by:  \r\n- Replacing Python-based structures (e.g. dynamic arrays, spike queues) with C++ equivalents  \r\n- Enabling direct, efficient C++ calls from Python with shared memory  \r\n- Exploring JIT alternatives like Numba or SciPy Weave  \r\n- Refactoring the runtime to support this new architecture",
          "student_name": "Mrigesh_Thakur",
          "code_url": null,
          "proposal_id": "8c5r4d0K",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pHhJpEKr"
        },
        {
          "title": "Brian2Wasm: simulations in the browser",
          "short_description": "This project focuses on enhancing the overall workflow by improving the detection and configuration of the Emscripten toolchain. It aims to optimize...",
          "description": "This project focuses on enhancing the overall workflow by improving the detection and configuration of the Emscripten toolchain. It aims to optimize data transfer between the WebAssembly simulation and JavaScript for efficient result visualization. Additionally, it provides user-friendly tools for website customization and plot display. Comprehensive documentation will be included to ensure ease of use and integration.",
          "student_name": "Palash Chitnavis",
          "code_url": null,
          "proposal_id": "WFBqt0tG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bzxZlEfN"
        },
        {
          "title": "Harmony Hub: Using Generative AI for Adaptive Learning in Music",
          "short_description": "While music educators strive to provide personalized learning paths, existing educational tools often lack the flexibility to adapt to diverse...",
          "description": "While music educators strive to provide personalized learning paths, existing educational tools often lack the flexibility to adapt to diverse student needs. HarmonyHub bridges this gap by integrating Generative AI into a modular, web-based platform, empowering teachers to design customized exercises and dynamically adjust lessons based on individual progress.By leveraging AI-assisted personalization, HarmonyHub enhances the teacher’s ability to cater to different learning styles, ensuring a more engaging and effective music education experience for all students.\n\n2. Key Features\nThis project contributes to the open-source music education ecosystem by:\nEmpowering teachers with AI-driven tools for personalized lesson planning.\nProviding a no-code interface to enable educators to create and modify exercises.\nEnhancing inclusivity by tailoring lessons based on students’ technical proficiency, learning speed, and backgrounds.\nExpanding the Harmony Hub ecosystem by integrating Generative AI for real-time content creation and assessment.\nDemonstrating how LLMs can be effectively applied to domains involving non-textual data, such as music.",
          "student_name": "PRIYANSHU2026",
          "code_url": null,
          "proposal_id": "Wup4UTtT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/e2mngo2U"
        },
        {
          "title": "Automating BIDS Dataset Registration into the EBRAINS Knowledge Graph",
          "short_description": "This project aims to build an automated workflow to register BIDS-compliant neuroimaging datasets from external repositories (e.g. Public nEUro) into...",
          "description": "This project aims to build an automated workflow to register BIDS-compliant neuroimaging datasets from external repositories (e.g. Public nEUro) into the EBRAINS Knowledge Graph. Using the bids2openMINDS converter and EBRAINS APIs, the pipeline will convert BIDS metadata into openMINDS JSON-LD format and programmatically submit it to EBRAINS. The solution will eliminate manual submission, improving scalability, metadata consistency, and dataset discoverability. Deliverables include a secure authentication module, an end-to-end ingestion pipeline, documentation, and a user tutorial. Optional features include batch submission support and broader modality coverage.",
          "student_name": "Renqing Cuomao",
          "code_url": null,
          "proposal_id": "qvH7ukMd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/n3fNbjpO"
        },
        {
          "title": "Parallel Filter Implementation for ASP/IJ",
          "short_description": "The Active Segmentation Platform for ImageJ (ASP/IJ) aims to provide a general-purpose workbench that allows biologists and other domain experts to...",
          "description": "The Active Segmentation Platform for ImageJ (ASP/IJ) aims to provide a general-purpose workbench that allows biologists and other domain experts to access state-of-the-art techniques in machine learning to achieve excellent image segmentation and classification. This project aims to speed up the convolution engine  in ASP/IJ by implementing GPU parallelization using JCuda, a Java-based framework for CUDA. Currently, the convolution engine runs only on the CPU.",
          "student_name": "Rikas Ilamdeen",
          "code_url": null,
          "proposal_id": "9jaqwFOr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Dbuw5Bsp"
        },
        {
          "title": "[Project 20] Build an AI Agent for KnowledgeSpace using Retrieval-Augmented Generation (RAG)",
          "short_description": "This project aims to develop an AI-powered agent for KnowledgeSpace—a community-driven neuroscience resource—using Retrieval-Augmented Generation...",
          "description": "This project aims to develop an AI-powered agent for KnowledgeSpace—a community-driven neuroscience resource—using Retrieval-Augmented Generation (RAG) techniques to provide precise, context-aware, and scientifically accurate responses to user queries. The solution will integrate KnowledgeSpace’s extensive metadata (managed via Neo4j and ElasticSearch) with a fine-tuned RAG model (using Python and PyTorch) to enhance data retrieval and answer generation. The backend will be deployed on Google Cloud Platform using Vertex AI, complemented by a responsive React/Node.js front-end. Deliverables include an integrated data pipeline, a robust domain-adapted RAG model, a fully functional web interface, automated CI/CD deployment pipelines via GitLab, and comprehensive documentation. This solution will transform how neuroscientists, educators, and practitioners access and interact with complex neuroscience data, driving new insights and efficient research.",
          "student_name": "Swastik R",
          "code_url": null,
          "proposal_id": "9f3zlXLG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6fMVQPH7"
        },
        {
          "title": "19. Contribute to LORIS",
          "short_description": "LORIS is a comprehensive data management platform that supports diverse datasets in neuroscience research, including imaging, behavioural, clinical,...",
          "description": "LORIS is a comprehensive data management platform that supports diverse datasets in neuroscience research, including imaging, behavioural, clinical, and genetic data. As part of my contributions, I will focus on implementing new modules to extend the platform’s capabilities. These modules may include advanced data processing pipelines, automated anomaly detection for quality control, and enhanced user authentication mechanisms to ensure secure access to sensitive medical data. Additionally, I aim to develop tools for improved data annotation, visualisation, and integration with external analytics frameworks. By enhancing the modular architecture of LORIS, my work will help streamline research workflows, improve data integrity, and facilitate broader adoption of the platform within the scientific community.",
          "student_name": "T Saket Hatwar",
          "code_url": null,
          "proposal_id": "930pnRdG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CEifUSW2"
        },
        {
          "title": "Fullstack cloud deployment for NiiVue",
          "short_description": "NiiVue is a versatile tool for visualizing and handling neuroimaging data, but insufficient documentation creates friction in using it in deploying...",
          "description": "NiiVue is a versatile tool for visualizing and handling neuroimaging data, but insufficient documentation creates friction in using it in deploying workflows. This makes it challenging for developers to integrate, reducing the usability of NiiVue.\n\nAs demand grows for secure and efficient web-based processing, this project aims to provide a demo that helps developers implement and customize cloud providers and analysis tools for scalable, secure neuroimaging workflows. \n\nThis project will develop a full-stack solution for scalable neuroimaging analysis, integrating client-side preprocessing with Niimath and visualization using NiiVue. A PostgreSQL database will be designed to manage neuroimaging tasks and results. Two backend approaches will be tested: one using Flask with Nipype to interface with neuroimaging tools like FSL and FreeSurfer, supporting parallel processing, and another using Flask with containerized neuroimaging tools managed via Docker orchestration (Kubernetes/ECS) for greater flexibility. The system will be deployed on AWS with secure infrastructure, including EC2 and S3, ensuring data security through encryption and access control. A minimal demo will showcase the workflow using FSL BET or FreeSurfer, accompanied by clear documentation for easy replication and deployment by developers with their own cloud provider.",
          "student_name": "Thuy T. Dao",
          "code_url": null,
          "proposal_id": "xaEIJCnY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/h9cDmi0E"
        },
        {
          "title": "Project 28 Analysim , Preparing for beta release by adding admin section, forking datasets etc.",
          "short_description": "Project Deliverables • Admin Section : Implement an admin dashboard to manage users, projects, and datasets. Add moderation tools for handling...",
          "description": "Project Deliverables\n• Admin Section : Implement an admin dashboard to manage users, projects, and datasets. Add moderation tools for handling flagged content and project approvals. Implement role-based access control (RBAC) for better user management. \n• Forking Datasets/Projects : Enable users to fork existing projects and datasets, creating editable copies. Implement versioning & attribution tracking for forked projects. Ensure that forked projects maintain links to original versions. Provide users with a UI to track changes between original and forked projects. \n• Following/Joining Projects : Allow users to follow projects for updates and notifications. Implement a Join Project feature requiring owner approval for collaborations. \n• Project Dashboard Improvements : Improve UI/UX for easier navigation and better data organization. Add interactive components for better visualization of project statistics. Enable filtering and sorting options for users to manage multiple projects efficiently. \n• Notebook Management Enhancements : Enhance notebook versioning, metadata, and organization. Improve JupyterLite integration for a smoother editing experience. Implement a notebook history tracker, allowing users to revert to previous versions. \n• Publication List Enhancements : Improve publication listing, filtering, and categorization. Enable direct linking to project-related publications. \n• Versioning & Querying Enhancements : Implement dataset version control for reproducibility. Improve querying components to facilitate advanced data filtering. Enable users to compare different versions of datasets using a visual diff tool.",
          "student_name": "Uday Biswas",
          "code_url": null,
          "proposal_id": "UvDWxjtD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RofHkXYa"
        },
        {
          "title": "Vidhi_Rohira_Proposal- Open_Source_Community_Stability",
          "short_description": "This project aims to support the stability of open source communities by building AI agents that understand conversations, make decisions, and...",
          "description": "This project aims to support the stability of open source communities by building AI agents that understand conversations, make decisions, and suggest useful actions. These agents will assist in real-time chat platforms by handling tasks like summarization, moderation, and improving collaboration. The final deliverables will include AI-powered tools designed to help open source communities stay active, healthy, and sustainable.",
          "student_name": "Vidhi Rohira",
          "code_url": null,
          "proposal_id": "mcZkFBPa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5ar0UXAF"
        },
        {
          "title": "Project27: An open-source toolkit for analyzing multimodal temporal dynamics of the heart-brain axis",
          "short_description": "This project aims to develop an open-source toolkit for analyzing multimodal temporal dynamics of the heart-brain axis. The accessible software will...",
          "description": "This project aims to develop an open-source toolkit for analyzing multimodal temporal dynamics of the heart-brain axis. The accessible software will provide a robust suite of standard analysis and visualization methods to examine relationships between neural and hemodynamic data, accommodating diverse data acquisition modalities.",
          "student_name": "Yunmiao Wang",
          "code_url": null,
          "proposal_id": "pEDt3kh5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dHGOLftI"
        },
        {
          "title": "EBrains :: Generating Realistic Cell Models from Experimental Data with Arbor and L2L (350h)",
          "short_description": "This project aims to build a Python-based framework that automatically generates realistic, biophysically detailed neuron models from experimental...",
          "description": "This project aims to build a Python-based framework that automatically generates realistic, biophysically detailed neuron models from experimental data using the Arbor simulator and the L2L optimization framework. By optimizing ion channel and passive membrane parameters to match experimental membrane potential recordings (e.g., from patch-clamp data), the tool enables neuroscientists to derive accurate cell models without writing simulation code. The pipeline will support both raw waveform fitting and feature-based matching (e.g., spike count, resting potential), and offer a high-level API tailored for non-programmers in neuroscience.",
          "student_name": "Zequan Liu",
          "code_url": null,
          "proposal_id": "b4gIipse",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gtYOWMMb"
        }
      ]
    },
    {
      "name": "FFmpeg",
      "image_url": "https://summerofcode.withgoogle.com/media/org/ffmpeg/9nltyc13lvn7dqn0-360.png",
      "image_background_color": "#ffffff",
      "description": "Record, convert and stream audio & video",
      "url": "https://ffmpeg.org/",
      "category": "Media",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/ffmpeg",
      "ideas_url": "https://trac.ffmpeg.org/wiki/SponsoringPrograms/GSoC/2025",
      "guide_url": "https://trac.ffmpeg.org/wiki/SponsoringPrograms/GSoC/2025",
      "topics": ["audio", "video", "subtitles", "multimedia"],
      "technologies": ["c", "git", "asm"],
      "irc_channel": "http://ffmpeg.org/contact.html#IRCChannels",
      "contact_email": "",
      "mailing_list": "http://ffmpeg.org/contact.html#MailingLists",
      "twitter_url": "",
      "blog_url": "https://ffmpeg.org/contact.html",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "ProRes Vulkan decoder",
          "short_description": "ProRes is a video codec developed by Apple, and is frequently used as an intermediate in video editing, sitting in-between raw formats and consumer...",
          "description": "ProRes is a video codec developed by Apple, and is frequently used as an intermediate in video editing, sitting in-between raw formats and consumer codecs such as H.264.\nDue to the increasing bandwidth and compute power required to edit high-resolution content (4K and up), a shader-based decoder is desirable to accelerate ProRes processing in video editing pipelines and other situations.\nThis projects aims at delivering a high-performance, Vulkan-based decoder for Apple ProRes, supporting its 4444 and 4444 XQ profiles, and integrated within the ubiquitous FFmpeg framework.",
          "student_name": "averne",
          "code_url": null,
          "proposal_id": "eQeK0mru",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uVO1901a"
        },
        {
          "title": "ProRes Vulkan Encoder",
          "short_description": "ProRes is a popular codec for video editors and professional due to its high quality. FFmpeg has supported it for a while, but lacks hardware...",
          "description": "ProRes is a popular codec for video editors and professional due to its high quality. FFmpeg has supported it for a while, but lacks hardware acceleration outside of MacOS. Using vulkan compute shaders, encoding performance can be increased in a cross platform way, using modern GPUs",
          "student_name": "Geo Ster",
          "code_url": null,
          "proposal_id": "FM8AicPk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PHTgRqGg"
        },
        {
          "title": "Implementation of WHIP (WebRTC-HTTP Ingestion Protocol) in FFmpeg",
          "short_description": "Synopsis: Support WebRTC-HTTP ingestion protocol for FFmpeg but do minimal changes to current code. Support basic ICE candidate exchange and basic...",
          "description": "Synopsis:\nSupport WebRTC-HTTP ingestion protocol for FFmpeg but do minimal changes to current code. Support basic ICE candidate exchange and basic DTLS handshake.\n\nDeliverables:\n1. Research and understand RFC9429 and related WebRTC/WHIP specifications.\n\n2. Add new file named whip.c in libavformat as muxer\n\n2. Implement basic ICE interaction in FFmpeg.\n\n3. Add minimal DTLS support for WHIP.\n\n4. Modify RTP/RTCP workflow to support WHIP.\n\n5. Develop tests and documentation.",
          "student_name": "Jack Lau",
          "code_url": null,
          "proposal_id": "Q9snsHdL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CjXkqCQX"
        }
      ]
    },
    {
      "name": "Electron",
      "image_url": "https://summerofcode.withgoogle.com/media/org/electron/vchyhnp6rhabucgj-360.png",
      "image_background_color": "#ffffff",
      "description": "Cross-platform desktop apps with web technologies",
      "url": "https://electronjs.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/electron",
      "ideas_url": "https://electronhq.notion.site/Electron-Google-Summer-of-Code-2025-Ideas-List-1851459d1bd1811894dad8b48a68596d",
      "guide_url": "https://electronhq.notion.site/Electron-Google-Summer-of-Code-2025-Contributor-Guidance-1851459d1bd181ac8004ecb9e031b368",
      "topics": ["desktop", "framework", "javascript"],
      "technologies": [
        "javascript",
        "node.js",
        "c++",
        "typescript",
        "Chromium"
      ],
      "irc_channel": "",
      "contact_email": "mailto:summer-of-code@electronjs.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/electronjs",
      "blog_url": "https://electronjs.org/blog",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Electron - Restore Electron Devtron Extension",
          "short_description": "Currently, the Devtron Extension is not in a functional state, primarily because, over the past 10 years, significant changes have occurred. Newer...",
          "description": "Currently, the Devtron Extension is not in a functional state, primarily because, over the past 10 years, significant changes have occurred. Newer manifest versions have been released, and several APIs in both Chrome and Electron have evolved, leading to its current non-functional state.\nApp developers who are new to Electron often find it challenging to understand IPC concepts and how to work with them.\nBuilding a completely new extension from scratch that tracks IPC events would be an effective approach to developing an IPC tracker that aligns with the requirements of the latest Manifest Version 3 and is fully compatible with the latest Chrome and Electron APIs.\nAdditionally, trackers for Event Listeners and Require Graph can also be added.\n\nA working prototype for the extension can be found on my GitHub : https://github.com/hitarth-gg/electron-tracker-prototype",
          "student_name": "Hitarth",
          "code_url": null,
          "proposal_id": "pJ4dmdTU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ppdEAKGU"
        },
        {
          "title": "Save/Restore Window State API",
          "short_description": "Currently, Electron does not have any built-in mechanism for saving and restoring the state of BrowserWindows, but this is a very common need for...",
          "description": "Currently, Electron does not have any built-in mechanism for saving and restoring the state of BrowserWindows, but this is a very common need for apps that want to feel more native. This project aims to implement a save/restore window state API for Electron by providing a powerful configuration object called windowStateSavePolicy. This API will offer a declarative way to configure window persistence behavior while accommodating complex edge cases automatically. The configuration object will be optional within the BrowserWindowConstructorOptions. The primary approach involves leveraging Chromium’s PrefService to store the window state as a JSON object.",
          "student_name": "Nilay Arya",
          "code_url": null,
          "proposal_id": "Qf8t7l06",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7k1LLfEg"
        }
      ]
    },
    {
      "name": "Oppia Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/oppia-foundation/nqvgy9fm3aqshwtv-360.png",
      "image_background_color": "#ffffff",
      "description": "Free platform for interactive, tutor-like lessons",
      "url": "https://www.oppia.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/oppia-foundation",
      "ideas_url": "https://github.com/oppia/oppia/wiki/Google-Summer-of-Code-2025#oppias-project-ideas-list",
      "guide_url": "https://github.com/oppia/oppia/wiki/Google-Summer-of-Code-2025#getting-started",
      "topics": ["education", "web", "ai", "nonprofit", "social impact"],
      "technologies": [
        "python",
        "google app engine",
        "angular",
        "typescript",
        "Apache Beam"
      ],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://github.com/oppia/oppia/discussions",
      "twitter_url": "https://x.com/oppiaorg",
      "blog_url": "https://www.oppia.org/blog",
      "facebook_url": "https://www.facebook.com/oppiaorg",
      "num_projects": 6,
      "projects": [
        {
          "title": "Lesson player redesign",
          "short_description": "Oppia's Exploration Player has several issues affecting the learning experience. Learners struggle to distinguish between hints and solutions, and...",
          "description": "Oppia's Exploration Player has several issues affecting the learning experience. Learners struggle to distinguish between hints and solutions, and the audio player is hard to find on desktop and takes up too much space on mobile, reducing content visibility. Progress tracking is unclear, and navigation between lessons is difficult. On mobile, limited space and a cluttered UI make it challenging to focus on the content. This proposal aims to redesign the player for better clarity, usability, and efficiency, ensuring a smoother experience across all platforms.",
          "student_name": "HARDIK GOYAL",
          "code_url": null,
          "proposal_id": "U6Hwajnf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZkQDPP94"
        },
        {
          "title": "Acceptance Tests",
          "short_description": "In order to streamline releases, we are planning to ensure that all critical user journeys (CUJs) on the Oppia web application are covered by...",
          "description": "In order to streamline releases, we are planning to ensure that all critical user journeys (CUJs) on the Oppia web application are covered by acceptance tests. This is important because it will provide assurance that, on the merge of every PR, these critical user journeys still function correctly, which means that no major breakages will result if the develop branch gets deployed to production. Additionally, having a complete set of acceptance tests that are organized by CUJ makes it easier to audit whether or not a particular CUJ has been included, and it also helps developers add tests for new CUJs while still keeping the tests well-organized.\n\nThis project includes:\n\nWriting acceptance tests for the as-yet-uncovered CUJs in a way that keeps the tests organized and maintainable. This might also include small updates to the acceptance test framework, e.g. extracting utility functions to enable code reuse or providing relevant functionality for a group of tests.\nTightening all page utility functions to have pre/post checks (in the form of \"wait\" statements) and proper error messaging, so that it is easier to debug flakes. The pre-check wait ensures that the conditions are good for performing the action, and the post-check wait ensures that the action has fully completed.\nDeleting e2e tests whose functionality has been fully replaced by the acceptance tests.",
          "student_name": "Jayam",
          "code_url": null,
          "proposal_id": "1iJ6GjQq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WyCNXoH0"
        },
        {
          "title": "Android lint infrastructure and fixes",
          "short_description": "The Android build ecosystem includes a robust linting tool designed to detect Android-specific issues that general-purpose linters may overlook....",
          "description": "The Android build ecosystem includes a robust linting tool designed to detect Android-specific issues that general-purpose linters may overlook. Currently, Android Lint is not integrated into Oppia's Bazel-based build system. This project aims to bridge that gap by introducing a custom linting script that runs Android Lint independently of Gradle, with support for configurable exemptions via textproto files—ensuring alignment with Oppia’s existing scripting infrastructure.\n\nThe project will proceed in two phases. The first will establish a foundational script that interfaces with Android Lint, handles exemption logic, and integrates with continuous integration workflows. The second will focus on resolving high-priority lint issues to improve overall code quality.\n\nThe completed project will deliver a scalable and maintainable Android linting workflow tailored to the Bazel environment, enhancing code quality and developer productivity across the Oppia Android codebase.",
          "student_name": "manas-yu",
          "code_url": null,
          "proposal_id": "lQfkNKSn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ijQbIqAi"
        },
        {
          "title": "Clean up the structure for study guides and worked examples",
          "short_description": "Currently, the study guides are made of a single long monolithic content field which makes it hard for the learners to focus and difficult for the...",
          "description": "Currently, the study guides are made of a single long monolithic content field which makes it hard for the learners to focus and difficult for the translators to translate. Also, worked examples can only be added to skills. This project aims to restructure the study guides to have multiple short sections and make their translations follow the pattern of other entities in the codebase. It also aims to create a WorkedExample Rich Text Editor component for the Skill and Subtopic Editor Pages.",
          "student_name": "mon4our",
          "code_url": null,
          "proposal_id": "n0vopejF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BIAviwcL"
        },
        {
          "title": "Flashbacks",
          "short_description": "The current app experience can be frustrating for learners who are redirected to earlier concepts for revision after making a mistake, as they must...",
          "description": "The current app experience can be frustrating for learners who are redirected to earlier concepts for revision after making a mistake, as they must re-answer all intermediate questions to return to their original point. This proposal introduces a new Flashback feature that allows learners to view the correct answer or revisit previously solved question answer tied to their misconception and then return directly to the point where they became stuck—eliminating the need to reattempt intermediate steps. This reinforces foundational understanding while enabling a smoother, frustration-free learning journey.\n\nAdditionally, this project improves the visual presentation of submitted answers for multiple choice and item selection interactions by replacing the current HTML-based approach with a cleaner, natively rendered experience.",
          "student_name": "Subhajit Mallick",
          "code_url": null,
          "proposal_id": "svxqaczM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7Hv4NPOU"
        },
        {
          "title": "Platform Parameters Dashboard",
          "short_description": "The Platform Parameters Dashboard project aims to enhance Oppia Android's developer options by introducing a user interface for managing platform...",
          "description": "The Platform Parameters Dashboard project aims to enhance Oppia Android's developer options by introducing a user interface for managing platform parameters and feature flags. This dashboard will enable developers to dynamically view, override, and reset parameter values, facilitating real-time feature flag toggling without modifying source code. The implementation includes persistent storage of overrides, force synchronization with the Oppia Web backend, and comprehensive unit testing to ensure reliability. This feature will significantly improve debugging capabilities and streamline testing of various app configurations.",
          "student_name": "theayushyadav11",
          "code_url": null,
          "proposal_id": "OPzf5Yne",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Faw0gBBe"
        }
      ]
    },
    {
      "name": "PAL Robotics",
      "image_url": "https://summerofcode.withgoogle.com/media/org/pal-robotics/f3yidefsydweipcc-360.png",
      "image_background_color": "#ffffff",
      "description": "Enhance people’s quality of life through Robotics",
      "url": "https://pal-robotics.com/",
      "category": "Other",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/pal-robotics",
      "ideas_url": "https://pal-robotics.com/2025-google-summer-code-proposals/#tips-successful-gsoc",
      "guide_url": "https://pal-robotics.com/2025-google-summer-code-proposals/#tips-successful-gsoc",
      "topics": ["robotics", "reinforcement learning", "web tools"],
      "technologies": ["python", "javascript", "c++"],
      "irc_channel": "",
      "contact_email": "mailto:gsoc@pal-robotics.com",
      "mailing_list": "",
      "twitter_url": "https://x.com/PALRobotics",
      "blog_url": "https://pal-robotics.com/blog/",
      "facebook_url": "https://www.facebook.com/palrobotics",
      "num_projects": 2,
      "projects": [
        {
          "title": "Brax Training Viewer for Real-Time Policy Visualization",
          "short_description": "The project provides two interfaces for Brax PPO training: a local window with MuJoCo for real-time visualization, and a web-based interface for...",
          "description": "The project provides two interfaces for Brax PPO training: a local window with MuJoCo for real-time visualization, and a web-based interface for accessing a headless training machine via a browser. Both allow for easy implementation without changing existing RL workflows, making it an excellent choice for researchers and practitioners needing to visualize, debug, and analyze RL policies in Brax with minimal configuration.",
          "student_name": "Bruce Hu",
          "code_url": null,
          "proposal_id": "zatqr8cV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Xm0toJHl"
        },
        {
          "title": "Enrico Moro | Payload visualization metrics PAL Robotics",
          "short_description": "Payload visualization metrics is a project to enhance decision-making during the prototyping process. Together with my team, we have to create a main...",
          "description": "Payload visualization metrics is a project to enhance decision-making during the prototyping process. Together with my team, we have to create a main module to calculate the maximum payload for a given configuration and estimate the torque to improve awareness during motor selection. Furthermore, for optimal visualization of the payload and torques, we have to build an Rviz plugin to display all the useful information. In a nutshell, we are going to create the module that generates the robot model from the robot description topic, then develop the processing unit, and finally publish the results to ROS topics and Rviz.",
          "student_name": "Enrico Moro",
          "code_url": null,
          "proposal_id": "bcalVuos",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mPxgXKpc"
        }
      ]
    },
    {
      "name": "API Dash",
      "image_url": "https://summerofcode.withgoogle.com/media/org/api-dash/wgtarubdkvdp5qih-360.png",
      "image_background_color": "#ffffff",
      "description": "Next-gen Open Source AI powered API DevTool",
      "url": "https://apidash.dev",
      "category": "Development tools",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/api-dash",
      "ideas_url": "https://github.com/foss42/apidash/discussions/565",
      "guide_url": "https://github.com/foss42/apidash/discussions/564",
      "topics": ["testing", "api", "developer tools", "automation", "GenAI"],
      "technologies": ["flutter", "api", "ai", "dart", "ui/ux"],
      "irc_channel": "https://discord.com/invite/bBeSdtJ6Ue",
      "contact_email": "mailto:ankit@apidash.dev",
      "mailing_list": "",
      "twitter_url": "https://x.com/apidashdev",
      "blog_url": "https://www.linkedin.com/company/apidash/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "AI-Based API Response to Dynamic UI and Tool Generator",
          "short_description": "This project introduces an AI-powered agent that automates the transformation of API responses into structured UI schemas and functional UI...",
          "description": "This project introduces an AI-powered agent that automates the transformation of API responses into structured UI schemas and functional UI components across various frontend frameworks. Using Multiple LLM-Based Agents, the system eliminates the need for manual UI creation by intelligently analysing API responses and generating corresponding UI structures. Additionally, it enables dynamic modification of UI components based on user prompts, allowing for customisation in design, layout, and behavior. By seamlessly integrating these capabilities into a unified workflow, the project streamlines frontend development, reducing manual effort and accelerating the UI generation process with a single-click solution.\nThe project also aims to create a simple one-click API Request to Tool Generation pipeline that can enable external AI agents to interact with APIs without any manual coding\n\nDeliverables:\n• A Modular AI Agent Creation & calling mechanism for apidash's future AI-based tasks\n\n• One-Click solution to generate UI components from an API Response\n\n• One-Click solution to automatically generate API Tools to be used in various Agentic Frameworks like Langchain, Autogen and so on.",
          "student_name": "Manas Hejmadi",
          "code_url": null,
          "proposal_id": "pNJ1dRGp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hhUUM8wl"
        },
        {
          "title": "DashBot and API Authentication",
          "short_description": "I will be developing DashBot - the AI assistant for API Dash which supercharges developer productivity by helping developers automate tedious tasks,...",
          "description": "I will be developing DashBot - the AI assistant for API Dash which supercharges developer productivity by helping developers automate tedious tasks, follow best practices, interact & obtain contextual suggestions, all via natural-language input. DashBot will be designed in a modular and extensible manner and provide the following list of features:\n\n1. Explain responses & identify any discrepancy\n2. Debug requests based on Status codes & Error messages\n3. Generate API documentation\n4. Understand API and generate tests\n5. Generate plots & visualizations for API responses along with ability to customize\n6. Generate API integration frontend code for frontend frameworks like React, Flutter, etc.\n\nFor each of the tasks benchmark evaluations will also be done so that it is easier for end users to choose the right backend LLM.\n\nAdd support for various API Authentication Methods such as, Basic authentication, API Auth, API key, Bearer token, JWT Bearer, Digest Auth, OAuth 1.0, OAuth 2.0.",
          "student_name": "Udhay Adithya J",
          "code_url": null,
          "proposal_id": "OYPJKcur",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1Yf6TmCm"
        }
      ]
    },
    {
      "name": "Waycrate",
      "image_url": "https://summerofcode.withgoogle.com/media/org/waycrate/u6pnvceiilur7iqy-360.png",
      "image_background_color": "#ffffff",
      "description": "Writing robust tools for the Wayland protocol",
      "url": "https://waycrate.github.io/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/waycrate",
      "ideas_url": "https://waycrate.github.io/outreach/gsoc/2025/idea-list/",
      "guide_url": "https://waycrate.github.io/outreach/gsoc/2024/contributor-proposal-guidance/",
      "topics": [
        "security",
        "graphics",
        "Wayland",
        "ScreenCapture",
        "Desktop Portals"
      ],
      "technologies": ["c", "c++", "rust", "wayland", "Zig"],
      "irc_channel": "https://discord.gg/KKZRDYrRYW",
      "contact_email": "mailto:waycrate@gmail.com",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/waycrate",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "swhkd: Provide Libinput as an Alternative Input Backend",
          "short_description": "This project aims to replace the current backend of swhkd, which uses evdev, to replace it with libinput. Libinput provides better support for common...",
          "description": "This project aims to replace the current backend of swhkd, which uses evdev, to replace it with libinput.\nLibinput provides better support for common devices that interact with a desktop interface, this can with getting better input handling support and fix issues like debouncing, mouse acceleration, etc which cannot be handled directly by evdev.\nThe final deliverable would be a version of swhkd with an alternative libinput backend, whichs supports all the features of swhkd.",
          "student_name": "Aadil",
          "code_url": null,
          "proposal_id": "UkEZWJWt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CGVE5TAy"
        },
        {
          "title": "Introduce RDP support into xdg-desktop-portal-luminous",
          "short_description": "Xdg-desktop-portal-luminous is a high performance capture portal for wayland compositors that supports frame capture and gpu-copy based frame...",
          "description": "Xdg-desktop-portal-luminous is a high performance capture portal for wayland compositors that supports frame capture and gpu-copy based frame streaming. The goal of this idea is to introduce support for remote-desktop protocol to enable applications like teamviewer and anydesk to work seamlessly on wayland compositors using our custom portal backends.\n\nThis will improve adoption and UX, users will no longer need to depend on other portals for this particular usecase and all usecases can be consolidated into 1 portal.",
          "student_name": "nicolo-mn",
          "code_url": null,
          "proposal_id": "7M9WRVF9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CKArO252"
        },
        {
          "title": "Introduce ext_image_capture_source_v1 protocol support in Wayshot and improve security features",
          "short_description": "This project aims to enhance Wayshot by implementing the newly standardized ext_image_capture_source_v1 Wayland protocol, which provides a...",
          "description": "This project aims to enhance Wayshot by implementing the newly standardized ext_image_capture_source_v1 Wayland protocol, which provides a standardized method for display and window capture, replacing the current dependency on the non-standard wlr-screencopy protocol. I will develop a new backend that fully utilizes this official protocol while maintaining the existing wlr backend for backwards compatibility, enabling native top-level window capture capabilities and improving user experience. The implementation will include a security notification system utilizing D-Bus to alert users which applications were captured by Wayshot clients, enhancing transparency and user privacy. Additionally, I will integrate the standardized protocol with xdg-desktop-portal-luminous to enable WebRTC streaming capabilities, \nThe deliverables of this project are: a complete solution that includes the new backend, backwards compatibility, security notifications, WebRTC streaming support, and comprehensive documentation.",
          "student_name": "Rishik Y",
          "code_url": null,
          "proposal_id": "u7xYRJTv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Rh2pW6uW"
        },
        {
          "title": "A functional GUI tool for configuring hotkeys visually",
          "short_description": "My proposal is for building a fully functional GUI tool for Waycrate using iced-rs for configuring hotkeys visually , rather than editing the...",
          "description": "My proposal is for building a fully functional GUI tool for Waycrate using iced-rs for configuring hotkeys visually , rather than editing the configuration files , which can be cumbersome for first-time users. The tool's purpose will be to simplify setting up and managing hotkeys in SWHKD .\nI plan to solve this problem by developing a Graphical User Interface (GUI) where users can view the applications in a list format, and on selecting an application , the hotkeys for that application will be displayed in a table-like format with editable rows. Users will also be able to edit the hotkeys through this GUI tool. \nDeliverables:\nCreate a GUI prototype using the iced-rs framework to display hotkey configurations in an easy-to-use interface, where users can modify pre-existing hotkeys , delete them and build hotkeys from scratch.",
          "student_name": "Shreya Santra",
          "code_url": null,
          "proposal_id": "zbcFHMHC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RO6lw1Lc"
        }
      ]
    },
    {
      "name": "kro | Kube Resource Orchestrator",
      "image_url": "https://summerofcode.withgoogle.com/media/org/kro-kube-resource-orchestrator/qf9flxp0iswvhnli-360.png",
      "image_background_color": "#ffffff",
      "description": "Simplify Kubernetes API and resource management.",
      "url": "https://kro.run/",
      "category": "Infrastructure and cloud",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/kro-kube-resource-orchestrator",
      "ideas_url": "https://github.com/kro-run/kro/issues/288",
      "guide_url": "https://github.com/kro-run/kro/blob/main/CONTRIBUTING.md",
      "topics": [
        "automation",
        "kubernetes",
        "configuration management",
        "cloud native"
      ],
      "technologies": [
        "prometheus",
        "golang",
        "kubernetes",
        "controller-runtime",
        "CEL"
      ],
      "irc_channel": "https://communityinviter.com/apps/kubernetes/community",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://kro.run/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "CLI for kro Resource Management",
          "short_description": "Building a cli tool for kro resource management. using golang's cobra library. mentioned are the proposed tasks which are about to be completed under...",
          "description": "Building a cli tool for kro resource management. using golang's cobra library. mentioned are the proposed tasks which are about to be completed under the project scope. \n\nProject goals:\n1) Build a CLI tool to help developers and admins manage kro.\n2) Create commands for common RGD operations [validate/generate/install/publish/package]. 3) Create commands to for RGD and instance viewing and dry-runs. 4) Create commands for monitoring and troubleshooting RGDs, instances and CRDs.",
          "student_name": "Dhairya Amrish Majmudar",
          "code_url": null,
          "proposal_id": "v5jq3msB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/usQIHr4B"
        },
        {
          "title": "Enhanced Developer Tools and IDE Integration",
          "short_description": "I’m building a tool to make working with Kro YAML files easier and more efficient. This tool, called a Language Server Protocol (LSP), will help...",
          "description": "I’m building a tool to make working with Kro YAML files easier and more efficient. This tool, called a Language Server Protocol (LSP), will help developers by giving real-time feedback, catching errors early, and suggesting code completions. It will also make code more readable with better syntax highlighting and helpful pop-ups.\n\nThe LSP will support popular code editors, starting with VS Code. I’ll also include clear instructions and examples to help users get started. My goal is to make writing and managing Kro YAML files faster and less error-prone, so developers can focus on their work without getting stuck on small issues.",
          "student_name": "Himanshu Kumar Sharma",
          "code_url": null,
          "proposal_id": "PRR6ABKV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Io5wpFgU"
        }
      ]
    },
    {
      "name": "D Language Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/d-language-foundation/u25qvh5ljfkkhkjj.png",
      "image_background_color": "#ffffff",
      "description": "Write fast, read fast, and run fast.",
      "url": "https://dlang.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/d-language-foundation",
      "ideas_url": "https://dlang.github.io/GSoC/",
      "guide_url": "https://dlang.github.io/GSoC/#become-a-dlang-gsocc-contributor",
      "topics": [
        "operating systems",
        "programming languages",
        "algorithms",
        "data structures",
        "optimizations"
      ],
      "technologies": ["linux", "make", "d", "windows", "C\\C++"],
      "irc_channel": "https://discord.gg/tw2c6mcKAp",
      "contact_email": "mailto:razvan.nitu@dlang.org",
      "mailing_list": "https://forum.dlang.org/",
      "twitter_url": "https://twitter.com/D_Programming",
      "blog_url": "https://dlang.org/blog/",
      "facebook_url": "https://www.facebook.com/dlang.org/",
      "num_projects": 2,
      "projects": [
        {
          "title": "Translate DRuntime Hooks to Templates",
          "short_description": "This project proposes to modernize DRuntime by converting legacy runtime hooks (functions that implement high-level language constructs like array...",
          "description": "This project proposes to modernize DRuntime by converting legacy runtime hooks (functions that implement high-level language constructs like array operations and associative arrays) into compile-time templates. These hooks currently rely on dynamic type resolution via TypeInfo, introducing overhead that limits optimization opportunities. By leveraging D’s template metaprogramming, this work will enable compile-time specialization of these operations, improving runtime performance, potentially reducing binary sizes, and simplifying DRuntime maintenance. To achieve all this, my proposed solution comprises of three systematic steps for each hook: \n1. Template implementation: Rewriting the hook as a template function in DRuntime, replacing the runtime TypeInfo queries with compile-time type parameters.\n2. Compiler Integration: Modifying the DMD frontend to generate calls to the new templated hooks during the lowering phase.\n3. Validation and Benchmarking: Verifying correctness through unit tests and quantifying performance improvements using benchmarks.",
          "student_name": "Albert Guiman",
          "code_url": null,
          "proposal_id": "urpzQAtG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/O7gYiZ5b"
        },
        {
          "title": "Json Library for D",
          "short_description": "D’s current JSON libraries (e.g., Phobos’s std.json) rely heavily on dynamic typing, which sacrifices type safety and performance—critical drawbacks...",
          "description": "D’s current JSON libraries (e.g., Phobos’s std.json) rely heavily on dynamic typing, which sacrifices type safety and performance—critical drawbacks for systems programming. For example, parsing JSON data into a generic JSONValue container forces developers to manually validate field types and existence at runtime, introducing overhead and error-prone code.\n\nThis project addresses these limitations and enables type-safe JSON processing with constant memory by building higher-level functionalities on top of jsoniopipe, which exemplifies the language’s strengths in compile-time function evaluation(CTFE) and introspection.",
          "student_name": "Fei",
          "code_url": null,
          "proposal_id": "JsmhrXLh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KJKaBv0n"
        }
      ]
    },
    {
      "name": "Scala Center",
      "image_url": "https://summerofcode.withgoogle.com/media/org/scala-center/0umytpqshifjeevx-360.png",
      "image_background_color": "#ffffff",
      "description": "Guide and support the Scala community",
      "url": "https://scala-lang.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/scala-center",
      "ideas_url": "https://github.com/scalacenter/GoogleSummerOfCode",
      "guide_url": "https://google.github.io/gsocguides/student/writing-a-proposal",
      "topics": ["education", "compilers", "web", "tooling", "gpu"],
      "technologies": [
        "jvm",
        "functional programming",
        "scala",
        "scala.js",
        "scala native"
      ],
      "irc_channel": "",
      "contact_email": "mailto:scala-gsoc@epfl.ch",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/scala_lang/",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 14,
      "projects": [
        {
          "title": "Enhancing Metals with Play Framework Support",
          "short_description": "In Metals, the LSP implementation for Scala, there is currently no built-in support for Play Framework-specific files such as .scala.html templates...",
          "description": "In Metals, the LSP implementation for Scala, there is currently no built-in support for Play Framework-specific files such as .scala.html templates and routes files. This limitation affects essential features like syntax highlighting, linting, and navigation, making it difficult for developers to work efficiently with Play Framework projects in editors that rely on metals. eg. VSCode. This is exacerbated by people who wish to migrate from proprietary editors like IntelliJ which provides such facilities.",
          "student_name": "Abdullah Arif Jafri",
          "code_url": null,
          "proposal_id": "XEbkqEBt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zty5gv0n"
        },
        {
          "title": "LLM4S - Support image, voice and other LLM modalites : A Proposal",
          "short_description": "LLM4S aims to establish Scala as a premier language for building multimodal Large Language Model applications. This project extends the toolkit's...",
          "description": "LLM4S aims to establish Scala as a premier language for building multimodal Large\r\nLanguage Model applications. This project extends the toolkit's capabilities beyond text\r\nprocessing to support image generation, speech-to-text, text-to-speech, and\r\nmultimodal embeddings. By leveraging Scala's type safety and functional programming\r\nparadigms, we will create APIs that enable seamless integration of visual, auditory, and\r\ntextual modalities while maintaining enterprise-grade reliability. The implementation\r\nwill bridge Python-centric AI ecosystems with Scala's performance advantages, offering\r\ndevelopers a robust alternative for building complex multimodal AI systems.",
          "student_name": "AnshumanAI",
          "code_url": null,
          "proposal_id": "lKj7aZN9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/eK6iAuUM"
        },
        {
          "title": "Workflows4s : Web UI for Tracking & Debugging",
          "short_description": "This project aims to create a dedicated web-based user interface for the workflows4s library to address the current lack of visual debugging tools....",
          "description": "This project aims to create a dedicated web-based user interface for the workflows4s library to address the current lack of visual debugging tools. By building a full-stack solution with a ScalaJS frontend, the UI will enhance workflow development by allowing developers to visually inspect detailed workflow state at any point in history, clearly see the execution paths taken within a workflow diagram, and easily navigate the workflow's history using a timeline. Ultimately, this visual feedback will make understanding, developing, and debugging complex workflows significantly more accessible and intuitive compared to relying solely on logs.",
          "student_name": "Atharva-Kanherkar",
          "code_url": null,
          "proposal_id": "xJtiZBv8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BPm3F7G8"
        },
        {
          "title": "Cyfra: Support for basic GPU computations on data streams with fs2 integration",
          "short_description": "Cyfra is a GPU runtime and a DSL that makes Scala a viable choice for GPU programming. Currently, the Scala ecosystem does not have an easy-to-use...",
          "description": "Cyfra is a GPU runtime and a DSL that makes Scala a viable choice for GPU programming.\n\nCurrently, the Scala ecosystem does not have an easy-to-use library for doing general computations on the GPU. Cyfra aims to fill this gap.\n\nGoal of the project is to implement support for GPU computations on data streams, with focus on usability, and integration with the popular fs2 (Functional Streams for Scala) library, which is used widely in the Scala ecosystem.\n\nCyfra should enable developers that do not have background in GPU programming to write a\nsimple data processing pipeline in Cyfra that performs compute on GPU and efficiently\nmanages memory. The pipeline should be interoperable with fs2.\n\nIntegrating Cyfra's pipeline with fs2 will also make it compatible with major Scala open source libraries, opening them up to execution on the GPU.",
          "student_name": "Bora Bosna",
          "code_url": null,
          "proposal_id": "CVCK2AUK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lvFyMPh1"
        },
        {
          "title": "LLM4S - Implement an agentic toolkit for Large Language Models",
          "short_description": "LLM4S is building a Scala-native AI toolkit that leverages functional programming principles and strict compile-time checks to ensure the reliability...",
          "description": "LLM4S is building a Scala-native AI toolkit that leverages functional programming principles and strict compile-time checks to ensure the reliability and maintainability of LLM-powered applications. This project aims to extend the initial agentic loop and implement essential tools, empowering Scala developers to build robust, reliable, and explainable AI solutions. \nKey objectives include implementing a robust agentic loop, designing a type-safe tool interface, integrating MCP for dynamic tool interaction, developing core tools for file systems, web browsing, and API interactions, and ensuring context management, testing frameworks, and comprehensive documentation to support reliable LLM-powered applications.",
          "student_name": "Elvan Konukseven",
          "code_url": null,
          "proposal_id": "tzaM7am8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DT8i5a1y"
        },
        {
          "title": "Krop Template Engine",
          "short_description": "Krop is a modern Scala web framework focused on providing a seamless and enjoyable developer experience. Currently, it uses Twirl as its template...",
          "description": "Krop is a modern Scala web framework focused on providing a seamless and enjoyable developer experience. Currently, it uses Twirl as its template engine, which lacks type safety and only supports server-side rendering. This project aims to replace Twirl with a new template engine that supports both server- and client-side rendering, ensures better type safety, and allows developers to embed HTML directly into Scala code using standard HTML syntax.\n\nThe solution involves extending the Parsley parser combinator library to support interpolated strings, enabling dynamic splicing of Scala values into HTML templates. Building on this foundation, a context-free HTML parser will be implemented using Parsley, with output rendered as ScalaTags to support both client and server environments. To support larger applications, the project will also introduce standalone template files processed through an sbt source generator. If time permits, further enhancements such as compile-time parsing, efficient string rendering, and DOM diffing strategies will be explored.\n\nThe final result will consist of an integration of interpolated parsing into Parsley, Krop support for interpolated HTML snippets embedded into Scala, and Twirl-like standalone HTML templates.",
          "student_name": "Illia Derevianko",
          "code_url": null,
          "proposal_id": "0g9tkSnn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EyM2gZRY"
        },
        {
          "title": "ChatOps4s Prototype - MS Teams Backend",
          "short_description": "This project focuses on building a seamless API integration between MS Teams and the ChatOps4s prototype through a clean, efficient interface. The...",
          "description": "This project focuses on building a seamless API integration between MS Teams and the ChatOps4s prototype through a clean, efficient interface. The key goals are to ensure high performance, minimize dependencies, and maintain feature parity with other integrations, such as Discord. The MS Teams API interface will be well-documented, rigorously tested, and designed for interoperability, allowing developers to switch to another platform, like Discord, with minimal code modifications.",
          "student_name": "Liam Grossman",
          "code_url": null,
          "proposal_id": "09NFHhYd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iife3HTc"
        },
        {
          "title": "A Pandas Experience",
          "short_description": "This project aims to improve the way Scautable handles CSV files by making structured data parsing in Scala more robust, flexible, and user-friendly...",
          "description": "This project aims to improve the way Scautable handles CSV files by making structured data parsing in Scala more robust, flexible, and user-friendly — especially for data exploration and quick scripting tasks.\n\nKey problems being addressed include poor handling of row/column mismatches, limited support for malformed or missing headers and lack of custom delimiter options. Inspired by the usability of Pandas, this proposal introduces enhancements such as configurable error-handling modes (e.g., skip or autofill bad lines), support for automatic or custom headers, smarter handling of duplicate or malformed columns, and flexible delimiter parsing.\n\nFor large files, methods to access specific columns will be distributed across implicit classes to avoid JVM method count limitations, improving scalability. Additionally, clear error messages and diagnostics will guide users through common issues and edge cases.\n\nBy addressing these aspects, the project will significantly improve Scautable’s reliability and make it a more powerful tool for developers working with structured data in Scala.",
          "student_name": "Lidiia Zaparenko",
          "code_url": null,
          "proposal_id": "idYUsWzI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TRq5tgr9"
        },
        {
          "title": "ChatOps4s Prototype",
          "short_description": "Workflow4s Chat Toolkit: Unified Messaging for Scala Workflows This project addresses the growing need for seamless integration between business...",
          "description": "Workflow4s Chat Toolkit: Unified Messaging for Scala Workflows\n\nThis project addresses the growing need for seamless integration between business workflows and modern chat platforms like Slack, Discord, and Microsoft Teams. Developers currently face significant challenges working with platform-specific APIs, authentication protocols, and rate limiting when building chat-enabled applications. The Workflow4s Chat Toolkit solves this by providing a lightweight Scala library that abstracts these complexities behind a simple, unified interface.\n\nThe solution delivers:\n\nPlatform adapters with core messaging capabilities (send/receive)\n\nWorkflow4s integration points for chat-triggered automations\n\nType-safe Scala design using Futures and case classes\n\nMock testing environment for reliable development\n\nKey deliverables include:\n\nPhase 1: Slack MVP with basic messaging and workflow triggers\n\nPhase 2: Production-ready error handling and workflow actions\n\nPhase 3: Extensible architecture documentation and multi-platform support\n\nThe toolkit significantly reduces integration overhead, allowing developers to focus on business logic rather than API specifics. By implementing this as a prototype first, we validate the approach while laying foundation for future expansion to richer interactions like file sharing and threaded conversations. This solution will be particularly valuable for teams using Workflow4s who need to incorporate chat-based approvals, alerts, or human-in-the-loop steps into their automated processes.",
          "student_name": "master-hj",
          "code_url": null,
          "proposal_id": "mJlA33ys",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5zCBqWkE"
        },
        {
          "title": "Creation of blueprints in Scalus",
          "short_description": "Currently Scalus doesn't have a lot of non-trivial examples. In this project we will develop application examples (blueprints) for Scalus, which can...",
          "description": "Currently Scalus doesn't have a lot of non-trivial examples. In this project we will develop application examples (blueprints) for Scalus, which can be used as a starting point for new users. These examples will include tests and documentation.",
          "student_name": "Nikita Zakharchuk",
          "code_url": null,
          "proposal_id": "0XJVWJWy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JJiv7gSd"
        },
        {
          "title": "Cyfra: Real-time Rendering Pipeline",
          "short_description": "Cyfra is a GPU runtime and domain-specific language that makes Scala a viable choice for GPU programming by abstracting the complexities of Vulkan....",
          "description": "Cyfra is a GPU runtime and domain-specific language that makes Scala a viable choice for GPU programming by abstracting the complexities of Vulkan. This project aims to implement a real-time Vulkan rendering pipeline that enables developers to render scenes interactively. The pipeline will support output to a window, a data stream, and a file. Key deliverables include high-level API abstractions for managing GPU resources, a robust integration with GLFW for window handling, efficient swap chain and synchronization mechanisms, and comprehensive documentation and examples to simplify adoption. This approach will make high-performance graphics programming more accessible to Scala developers and open up new possibilities for future improvements.",
          "student_name": "Rudra Beniwal",
          "code_url": null,
          "proposal_id": "tAcBNxS9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9Ul3o0jK"
        },
        {
          "title": "Implementing Bitmap Convolutions for Doodle",
          "short_description": "This project will add bitmap convolution support to Doodle, enabling powerful image processing effects like blurring, sharpening, edge detection, and...",
          "description": "This project will add bitmap convolution support to Doodle, enabling powerful image processing effects like blurring, sharpening, edge detection, and embossing. The implementation will design a clean functional API for convolutions that works across Doodle's backends (Java2D and SVG), despite their different underlying implementations. For Java2D, the solution will render elements to bitmap buffers before applying convolutions, while for SVG, it will leverage native filter capabilities. The project will include standard convolution kernels, composition operations, comprehensive documentation, and examples. This enhancement will significantly expand Doodle's capabilities beyond vector graphics while maintaining its functional programming model.",
          "student_name": "untainsYD",
          "code_url": null,
          "proposal_id": "4DKlIDro",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LuH487qS"
        },
        {
          "title": "Scaladex: Support for Compiler Plugins",
          "short_description": "Scaladex, the central index for open-source Scala libraries, currently does not have dedicated support for Scala compiler plugins—special artifacts...",
          "description": "Scaladex, the central index for open-source Scala libraries, currently does not have dedicated support for Scala compiler plugins—special artifacts used to extend or modify compiler behavior. These plugins are vital tools in the Scala ecosystem but are difficult to discover due to lack of indexing and classification.\n\nThis project proposes adding full support for Scala compiler plugins in Scaladex. The implementation includes extending the binary version parser to recognize plugin naming conventions, adding a new platform type (CompilerPlugin), and integrating plugin-specific metadata into the indexing pipeline. The user interface will be updated to allow filtering and discovery of compiler plugins, and best practices for plugin authors will be documented.\n\nThe key deliverables of this project include:\n\nParsing and indexing improvements to recognize compiler plugin artifacts.\n\nUI enhancements for discoverability, including tags and platform filters.\n\nUpdated documentation and contribution guidelines for plugin maintainers.\n\nA technical blog post summarizing design decisions, edge cases handled, and outcomes.\n\nBy implementing these features, this project will significantly improve the visibility, discoverability, and usability of compiler plugins in the Scala community.",
          "student_name": "Vidisha Gawas",
          "code_url": null,
          "proposal_id": "x5RUY9lW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/D71ZWImy"
        },
        {
          "title": "LLM4S - Tracing Support",
          "short_description": "The proposed solution introduces comprehensive tracing capabilities to the LLM4S toolkit by integrating OpenTelemetry (otel4s) for capturing detailed...",
          "description": "The proposed solution introduces comprehensive tracing capabilities to the LLM4S toolkit by integrating OpenTelemetry (otel4s) for capturing detailed spans and metrics during LLM operations such as prompt construction, model invocation, and response parsing. These telemetry signals are exported in Prometheus and Jaeger-compatible formats and processed through the OpenTelemetry Collector. The data is then visualized on a unified Grafana dashboard, allowing developers to monitor performance, debug errors, and analyze execution flows across different LLM providers in real-time.",
          "student_name": "Vishub",
          "code_url": null,
          "proposal_id": "BOPkaUZM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/K7yAKwnV"
        }
      ]
    },
    {
      "name": "Open Food Facts",
      "image_url": "https://summerofcode.withgoogle.com/media/org/open-food-facts/ypo4wfmbo5ueujuf-360.png",
      "image_background_color": "#ffffff",
      "description": "Better food choices for your health & the planet",
      "url": "https://world.openfoodfacts.org/discover",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/open-food-facts",
      "ideas_url": "https://wiki.openfoodfacts.org/GSOC/2025_ideas_list",
      "guide_url": "https://world.openfoodfacts.org/google-summer-of-code",
      "topics": ["open data", "health", "environment", "mobile", "food"],
      "technologies": [
        "python",
        "javascript",
        "machine learning",
        "perl",
        "flutter"
      ],
      "irc_channel": "https://slack.openfoodfacts.org",
      "contact_email": "mailto:contact@openfoodfacts.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/OpenFoodFacts",
      "blog_url": "https://blog.openfoodfacts.org/en/news/tis-the-season",
      "facebook_url": "https://facebook.com/OpenFoodFacts",
      "num_projects": 4,
      "projects": [
        {
          "title": "Completion of products data with USDA's FDC database, new exports and database documentation",
          "short_description": "This project is in 3 sections. Section 1 : Continuation of the FDC import project. The Open Food Facts database is missing some data on a lot of...",
          "description": "This project is in 3 sections.\n\nSection 1 : Continuation of the FDC import project. \nThe Open Food Facts database is missing some data on a lot of American and Canadian products, which prevents the calculation of some of their scores (Nutri Score, Eco-Score and/or NOVA group). A project in which I participated was started to address this by importing the USDA's FDC branded database but was not completed (https://github.com/Mieux-choisir/OpenFoodFactsCanada). This section aims to finish this process by completing the comparison tool between OFF and FDC products to complete the OFF products, automating the script so it can be run easily and create a report file, and adding documentation to this project to make it more accessible and understandable.\n\nSection 2 : Documentation.\nThis section aims to make the Open Food Facts database more comprehensible by adding documentation where needed (what type of data each field contains, if the fields are to be manually completed or if they are automatically completed, what the export files contain, etc.).\n\nSection 3 : Continuation of AI projects.\nFinally, several AI projects have been developed using Open Food Facts in Canada in Laval University (for more information: https://off.mieuxchoisir.org/ift6005). Some use LLMs to enable user who have little or no knowledge on databases to make queries and to retrieve information. This process requires to translate natural language to SQL queries, but it was hypothesized that using a type of export or data that is currently unavailable such as knowledge graphs and products sheets could improve the results. This section also aims to create the needed export formats for these AI projects that will be carried on as well as future ones.\n\nI am also open to do only one or two sections of this project.",
          "student_name": "Estrella Paoli",
          "code_url": null,
          "proposal_id": "jDuNeTzW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mzpDaWXd"
        },
        {
          "title": "Enhancing Developer Experience Through Automation and Workflow Optimization",
          "short_description": "Open Food Facts (OFF) relies on contributions from a global community of developers and volunteers. However, setting up development environments,...",
          "description": "Open Food Facts (OFF) relies on contributions from a global community of developers and volunteers. However, setting up development environments, navigating complex CI/CD pipelines, and contributing to multiple repositories like off-server, robotoff, and smooth-app can be time-consuming and frustrating—especially for newcomers. This project aims to streamline the entire contributor journey by creating a unified, cloud-powered Developer Experience (DevX) platform for OFF.\\n \\n\n\nWe will implement pre-configured Google IDX, Gitpod and Codespaces environments, enabling contributors to start coding within minutes. The CI/CD pipelines will be optimized to run only affected modules, significantly cutting build and test times. We'll also create a live, versioned documentation pipeline, integrate AI-powered tools for issue triage and PR review, and develop a metrics dashboard for maintainers to track workflow efficiency.\\n \\n\n\nDeliverables include: \\n\n- Auto-launch Google IDX/ Codespace environments. \\n\n- Optimized CI/CD workflows with modular test execution. \\n\n- Automated documentation site using OpenAPI Spec + MDX + Fumadocs. \\n\n- AI bot integration for issue triage. \\n\n- A real-time DevX dashboard. \\n\n\\n\nThis project will empower contributors to go from zero to green PRs faster, making OFF development more accessible, efficient, and scalable.",
          "student_name": "JagjeevanAK",
          "code_url": null,
          "proposal_id": "cOxGxJ8K",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bCxnCqZt"
        },
        {
          "title": "Folksonomy Engine: a one size fit all for any product data",
          "short_description": "The Folksonomy Engine does not support intuitive property suggestions and reusable web components. In order to enhance usability and scalability, the...",
          "description": "The Folksonomy Engine does not support intuitive property suggestions and reusable web components. In order to enhance usability and scalability, the system requires improved property suggestion mechanisms, more effective handling of nested values, and an easier-to-use interface for data contribution and analysis.\n\nTo address the challenges in data contribution, consistency, and exploration, the project will develop new API features and create a reusable web interface. The proposed solution includes developing new API features and a reusable web interface. The main goal is to get as many contributors as possible to use this, making it easy and accessible for everyone to contribute.\n\n- New API Features:\n  - Suggestions based on popularity and categories.\n  - Improved handling of nested property values.\n  - Tools for exploring and merging values.\n\n- Improved Reusable JavaScript-based Web Interface:\n  - For display and editing of data.\n  - Potential formalization of property definitions.",
          "student_name": "Kirtan Chandak",
          "code_url": null,
          "proposal_id": "n93venhh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AoicMwVR"
        },
        {
          "title": "Open Food Facts Explorer - A New Generation Frontend",
          "short_description": "This Google Summer of Code (GSoC) project aims to enhance the Open Food Facts Explorer by implementing new features, ensuring design consistency,...",
          "description": "This Google Summer of Code (GSoC) project aims to enhance the Open Food Facts Explorer by implementing new features, ensuring design consistency, improving backend API support, and elevating the overall user experience. The Explorer acts as a user-friendly portal where contributors can explore food data, contribute new information, and visualize relationships among food products.\n\nThroughout the summer, I will work on bringing feature parity with the main website by adding login flow, advanced search capability, image editing features, and more. Additionally, I will extend functionalities through the Open Prices integration, contribute to reusable web components, and enhance automation using GitHub Actions and Storybook. The project is divided into focused milestones to ensure consistent progress, including buffer periods for testing and documentation.",
          "student_name": "Mitali Singh",
          "code_url": null,
          "proposal_id": "CeAklX09",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3AaDmj04"
        }
      ]
    },
    {
      "name": "GNSS-SDR",
      "image_url": "https://summerofcode.withgoogle.com/media/org/gnss-sdr/vaciksjfho8cec2g-360.png",
      "image_background_color": "#ffffff",
      "description": "An open source GNSS software-defined receiver",
      "url": "https://gnss-sdr.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/gnss-sdr",
      "ideas_url": "https://gnss-sdr.org/google-summer-code-2025-ideas-list/",
      "guide_url": "https://gnss-sdr.org/contribute/",
      "topics": [
        "gnss",
        "geolocation",
        "navigation",
        "software defined radio",
        "communications"
      ],
      "technologies": ["c", "c++", "sdr"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://sourceforge.net/projects/gnss-sdr/lists/gnss-sdr-developers",
      "twitter_url": "",
      "blog_url": "https://github.com/gnss-sdr/gnss-sdr/issues",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Characterizing and implementing missing vector operations in the volk-gnsssdr library",
          "short_description": "Currently, certain essential signal-processing functions, called kernels here, in volk-gnssdr, the Vector-Optimized Library of Kernels for GNSS-SDR,...",
          "description": "Currently, certain essential signal-processing functions, called kernels here, in volk-gnssdr, the Vector-Optimized Library of Kernels for GNSS-SDR, are not completely optimized. This project hopes to diagnose performance-limiting kernels, implement missing SIMD/vector optimizations for both ARM (NEON) and RISC-V architectures (vector, or V, extension), then benchmark and validate the kernels’ continued functionalities.",
          "student_name": "Marcus Alagar",
          "code_url": null,
          "proposal_id": "HJJUwFMp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/g60T12bi"
        },
        {
          "title": "GNSS-SDR Vector Tracking Loop",
          "short_description": "This project aims to implement a Vector Tracking Loop (VTL) architecture in GNSS-SDR, a widely used open-source software-defined GNSS receiver....",
          "description": "This project aims to implement a Vector Tracking Loop (VTL) architecture in GNSS-SDR, a widely used open-source software-defined GNSS receiver. Traditional scalar tracking architecture tracks satellite signals independently, limiting robustness in dynamic or degraded signal environments. In contrast, VTL integrates tracking and navigation tasks into a single algorithm, where all channels collaborate to enhance signal tracking performance, particularly under challenging conditions such as interference or temporary outages.\nThe proposed work will design and integrate a modular, configurable VTL architecture supporting multi-constellation and multi-frequency operation, aligning with the existing capabilities of GNSS-SDR. \nDeliverables include: VTL algorithm implementation, real-time feedback to tracking channels, multi-constellation and multi-frequency support, benchmarking, and documentation. \nThis contribution will enable researchers and developers to explore advanced GNSS techniques related to the VTL architecture within a real-time, open-source SDR.",
          "student_name": "PedroPereira",
          "code_url": null,
          "proposal_id": "sxxJtUmk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pyRTzjuZ"
        },
        {
          "title": "GNSS + INS Sensor Fusion",
          "short_description": "The goal is to implement a functional GNSS receiver that uses INS measurements to improve the position, velocity and time solutions. This will...",
          "description": "The goal is to implement a functional GNSS receiver that uses INS measurements to improve the position, velocity and time solutions. This will advance research on sensor fusion, enabling reliable high-accuracy navigation solutions in challenging environments such as the urban cannon. I will leverage state-of-the-art AI techniques, such as Bayesian filters (e.g., Kalman filters and particle filters), graph neural networks (GNNs), and transformers for spatiotemporal data modeling. The end product will consist of a functional prototype receiver which will implement the necessary algorithms.",
          "student_name": "Víctor Castillo",
          "code_url": null,
          "proposal_id": "Qhf0Xufa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ItPRA36a"
        }
      ]
    },
    {
      "name": "Dart",
      "image_url": "https://summerofcode.withgoogle.com/media/org/dart/hsghljw4m6popf0x-360.png",
      "image_background_color": "#ffffff",
      "description": "Dart is a client language for apps on any platform",
      "url": "https://dart.dev",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/dart",
      "ideas_url": "https://github.com/dart-lang/sdk/blob/main/docs/gsoc/Dart-GSoC-2025-Project-Ideas.md",
      "guide_url": "https://github.com/dart-lang/sdk/blob/main/docs/gsoc/Dart-GSoC-2025-Project-Ideas.md",
      "topics": ["programming languages", "mobile apps"],
      "technologies": ["flutter", "dart"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/g/dart-gsoc",
      "twitter_url": "",
      "blog_url": "https://medium.com/dartlang",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Test Generation using LLM",
          "short_description": "This project aims to automate test generation for Dart code using Large Language Models (LLMs). It will integrate package:coverage, static code...",
          "description": "This project aims to automate test generation for Dart code using Large Language Models (LLMs). It will integrate package:coverage, static code analysis, and Gemini-based test generation into a CLI-driven workflow. The tool will identify uncovered code, analyze dependencies, generate relevant tests, and validate improved coverage, with an expected outcome: A package on pub.dev for increasing test coverage.",
          "student_name": "Amr Ahmed",
          "code_url": null,
          "proposal_id": "Cqu8usMo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Qt2Y3P9X"
        },
        {
          "title": "Dart TUI framework",
          "short_description": "This project aims to develop a Text-based User Interface (TUI) framework for Dart, addressing the lack of a structured way to build interactive...",
          "description": "This project aims to develop a Text-based User Interface (TUI) framework for Dart, addressing the lack of a structured way to build interactive terminal applications in the language. While Dart excels in GUI development with Flutter, it lacks a robust solution for TUI-based applications. This framework will provide essential UI components, efficient rendering, and event-driven input handling, enabling developers to create modern, cross-platform terminal applications. Key deliverables include a modular TUI library with core UI components, theming support, optimized rendering, comprehensive documentation, and real-world examples. This project will expand Dart’s capabilities beyond mobile and web, making it a viable choice for terminal-based development.",
          "student_name": "Gedion Ezra",
          "code_url": null,
          "proposal_id": "3On2mFUT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QBEII4E2"
        },
        {
          "title": "Secure Paste Custom Actions on iOS",
          "short_description": "Secure Paste Custom Actions on iOS aims to resolve a major limitation in Flutter apps on iOS by enabling developers to add custom actions to the...",
          "description": "Secure Paste Custom Actions on iOS aims to resolve a major limitation in Flutter apps on iOS by enabling developers to add custom actions to the native edit menu. Since iOS 15 introduced the \"Secure Paste\" privacy notification, Flutter apps have suffered from usability disruptions. This project proposes to build a comprehensive Dart API and a native iOS (Objective-C) implementation that bridges Flutter's widget system with iOS’s UIEditMenuInteraction. It will provide seamless clipboard interaction while respecting privacy constraints.\n\nThe solution will include: a customizable Dart API, platform channel communication between Flutter and iOS, native menu logic in Objective-C, full test coverage, and detailed developer documentation. If accepted, this project will significantly improve Flutter’s iOS platform maturity and empower developers to enhance user experiences with context-aware edit menus.",
          "student_name": "Jing Shao",
          "code_url": null,
          "proposal_id": "JvI21hQE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lYoMRl7z"
        },
        {
          "title": "Translate Java/Kotlin tutorial snippets into JNIgen-compatible Dart code using a LLM",
          "short_description": "JNIgen enables the generation of Dart bindings for Java/Kotlin libraries, but writing equivalent Dart code to interact with these bindings remains...",
          "description": "JNIgen enables the generation of Dart bindings for Java/Kotlin libraries, but writing equivalent Dart code to interact with these bindings remains challenging due to language differences. This project focuses on automating the translation of Java/Kotlin tutorial snippets into JNIgen-compatible Dart code using a Large Language Model (LLM).\n\n\nThis project enhances JNIgen’s usability and streamlines Java/Kotlin-to-Dart interoperability, making it easier for developers to work across both ecosystems.",
          "student_name": "Marshelino_Maged",
          "code_url": null,
          "proposal_id": "zY9rxT3t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8F8TuxpG"
        },
        {
          "title": "Generate JS Interop Bindings for TypeScript Declaration Files",
          "short_description": "This project proposal is for the web_generator tool to parse TypeScript Type Declaration Files and generate valid Dart JS Interop code to call the...",
          "description": "This project proposal is for the web_generator tool to parse TypeScript Type Declaration Files and generate valid Dart JS Interop code to call the library's JavaScript code from Dart, which can be used to call and use such libraries in Dart easily and conveniently through maintainable and efficient APIs, with the power of Dart's interoperability. \nThis is to be done using tsc to parse Type Declaration Files and provide information about such declarations passed. Then, they are transformed into valid Dart JS Interop code, which is then emitted via the code_builder package.",
          "student_name": "nikechukwu",
          "code_url": null,
          "proposal_id": "Xc0od2DR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UQTIqgC9"
        }
      ]
    },
    {
      "name": "Jitsi",
      "image_url": "https://summerofcode.withgoogle.com/media/org/jitsi/p3456ygkk7vdq0or-360.png",
      "image_background_color": "#ffffff",
      "description": "State-of-the-art video conferencing",
      "url": "https://jitsi.org",
      "category": "Media",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/jitsi",
      "ideas_url": "https://github.com/jitsi/gsoc-ideas/blob/master/2025/README.md",
      "guide_url": "https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-contributing",
      "topics": ["video", "multimedia", "video conferencing", "WebRTC"],
      "technologies": ["javascript", "java", "react", "kotlin", "webrtc"],
      "irc_channel": "",
      "contact_email": "mailto:gsoc@jitsi.org",
      "mailing_list": "https://community.jitsi.org/",
      "twitter_url": "https://x.com/jitsinews",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Advanced Audio Settings",
          "short_description": "This project aims to provide in-meeting settings for advanced audio controls in Jitsi Meet such as Acoustic Echo Cancellation (AEC), Noise...",
          "description": "This project aims to provide in-meeting settings for advanced audio controls in Jitsi Meet such as Acoustic Echo Cancellation (AEC), Noise Suppression (NS), Gain Control (AGC) and Stereo. Modifying the jitsi/lib-jitsi-meet library will enable the configuration of media tracks, allowing advanced user audio settings to be toggled during a conference. The expected deliverables are:\n• New section in Jitsi Meet audio settings, allowing users participating in a\nconference to toggle echo cancellation, auto gain control, noise suppression and\nstereo.",
          "student_name": "Hugo Lavernhe",
          "code_url": null,
          "proposal_id": "dljIHkdU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UWepEOaO"
        },
        {
          "title": "Audio Switchboard API",
          "short_description": "This document proposes a detailed architecture on how to implement the Audio Switchboard API. This idea enables numerous features, including...",
          "description": "This document proposes a detailed architecture on how to implement the Audio Switchboard API. This idea enables numerous features, including translation layers and lightweight breakout rooms, as described in the idea page.\nThis proposal introduces a metadata-based mechanism to manage audio streams. The implementation involves extending jitsi-meet to handle metadata, and Jitsi Videobridge (JVB) to handle signaling from senders and filtering requests from receivers. Senders attach metadata to their streams, such as spoken language or breakout room identifiers, while receivers specify criteria for the streams they wish to receive. JVB processes these inputs, filtering and forwarding only the matching streams.",
          "student_name": "Kota",
          "code_url": null,
          "proposal_id": "ZmMACkGK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aBy319rB"
        },
        {
          "title": "Meeting stats with rtcstats",
          "short_description": "With rtcstats, it is possible to gather a lot of information about meeting quality and logs. However, it is difficult for self-hosting users to...",
          "description": "With rtcstats, it is possible to gather a lot of information about meeting quality and logs. However, it is difficult for self-hosting users to analyze and monitor meetings using rtcstats in Jitsi Meet. The goal of this project is to make it easier for self-hosting users to deploy and use rtcstats with Jitsi Meet. To achieve this, I propose to add rtcstats Docker containers to docker-jitsi-meet, with support for both AWS and MongoDB integration options.",
          "student_name": "Kota Nakagawa",
          "code_url": null,
          "proposal_id": "l9smbjEK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4vpZjG1n"
        },
        {
          "title": "lib-jitsi-meet goes TypeScript",
          "short_description": "The lib-jitsi-meet library a core component of the Jitsi ecosystem, facilitates signaling and media negotiation in Jitsi Meet. While some parts of...",
          "description": "The lib-jitsi-meet library a core component of the Jitsi ecosystem, facilitates signaling and media negotiation in Jitsi Meet. While some parts of the library have been migrated to TypeScript, a significant portion remains in JavaScript, leading to inconsistencies in type definitions and maintainability challenges and increased risk of runtime issues.\n\nThis project aims to fully migrate lib-jitsi-meet to TypeScript, enhance the existing typedoc-generated documentation, ensuring a well-typed, and maintainable codebase that enhances both developer productivity and the reliability of the Jitsi Ecosystem",
          "student_name": "naman9271",
          "code_url": null,
          "proposal_id": "bm779X6t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kUscsdYM"
        },
        {
          "title": "Whiteboard Improvements",
          "short_description": "Jitsi Meet’s current whiteboard—built on an outdated Excalidraw fork and Socket.IO v2.5—only supports basic “smart objects,” lacks file/image upload,...",
          "description": "Jitsi Meet’s current whiteboard—built on an outdated Excalidraw fork and Socket.IO v2.5—only supports basic “smart objects,” lacks file/image upload, and suffers from performance and maintenance challenges. This project will:\nUpgrade real‑time transport by moving to Socket.IO 4.x and optimizing WebSocket message flow (batching, compression) for lower latency.\nMigrate to the latest Excalidraw release, ensuring full compatibility with Jitsi Meet and access to new drawing features.\n\nImplement a pluggable storage backend (starting with MiniIO) so users can share files directly on the whiteboard.\n\nDeliverables:\n-A collaboration server upgraded to Socket.IO 4.x with measurable performance gains\n-An updated Jitsi whiteboard using the newest Excalidraw version\n-A modular storageBackend abstraction plus working MiniIO module",
          "student_name": "Yash Gussian",
          "code_url": null,
          "proposal_id": "86at6zQP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yzlBjFkK"
        }
      ]
    },
    {
      "name": "AOSSIE",
      "image_url": "https://summerofcode.withgoogle.com/media/org/aossie/oo1wd34pc1ytrq6a-360.png",
      "image_background_color": "#ffffff",
      "description": "Australian Umbrella Org for Open-Source Projects",
      "url": "https://www.aossie.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/aossie",
      "ideas_url": "https://aossie.org/ideas",
      "guide_url": "https://aossie.gitlab.io/pages/gsoc-details.html",
      "topics": [
        "web",
        "machine learning",
        "natural language processing",
        "mobile",
        "backend"
      ],
      "technologies": [
        "python",
        "javascript",
        "android",
        "flutter",
        "Blockchain"
      ],
      "irc_channel": "https://discord.gg/C8wHmwtczs",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/aossie_org",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 22,
      "projects": [
        {
          "title": "Tree Planting Protocol (TREEE)",
          "short_description": "This project tackles the lack of transparency in tree-planting initiatives by developing a decentralized mobile application that leverages blockchain...",
          "description": "This project tackles the lack of transparency in tree-planting initiatives by developing a decentralized mobile application that leverages blockchain technology for verifiable and tamper-proof tracking. Each planted tree is minted as an NFT (ERC-721), storing critical metadata like geolocation, species, and planter details on-chain. To ensure authenticity, the system incorporates a community-driven verification mechanism where users can validate trees by submitting photo proofs stored on IPFS, earning tokenized rewards (ERC-20) for their participation. A key innovation is the use of geohash-based indexing, which optimizes location queries by dynamically adjusting precision based on map zoom levels, significantly reducing gas costs and improving performance. The app features an interactive map built with Flutter, displaying nearby trees with species-specific icons and enabling users to explore detailed records.\n\nTo address the issue of tree mortality, the project introduces legacy tokens—ERC-20 rewards distributed to planters who report deceased trees or submit maintenance updates like care photos and videos. Tree NFTs are transferable, with ancestry tracked to maintain historical records. For collective efforts, smart contract-based organizational tools allow groups to manage plantations, add members, and track contributions on-chain. Additionally, each tree is linked to a dynamic QR code stored on IPFS, enabling physical trees to be scanned for instant access to their digital records. By combining blockchain transparency, geospatial efficiency, and community incentives, this project establishes a scalable and trustless framework for global reforestation efforts.",
          "student_name": "Aaryan Jain",
          "code_url": null,
          "proposal_id": "JelAZMSQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7LicPpJH"
        },
        {
          "title": "BenefactionPlatform-Ergo: Expanding Fundraising Capabilities on Ergo",
          "short_description": "The Bene Fundraising Platform on the Ergo blockchain uses a unique token system (APT/PFT) to support fundraising projects. This project will improve...",
          "description": "The Bene Fundraising Platform on the Ergo blockchain uses a unique token system (APT/PFT) to support fundraising projects. This project will improve the Ergo version by adding support for multiple tokens, including stablecoins, and bringing it in line with the EVM version.\nMain goals include: adding stablecoin and multi-token support, integrating multiple wallets, building a referral system with protection against misuse, creating a project analytics dashboard, and improving the user interface and accessibility. These updates will make Bene easier to use, more powerful, and more welcoming to new users, helping grow the Ergo fundraising community.",
          "student_name": "AdityaGupta256",
          "code_url": null,
          "proposal_id": "07ZXoaT4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tf3WhF61"
        },
        {
          "title": "FateCoin EVM",
          "short_description": "FateCoin Protocol introduces an innovative decentralized finance platform enabling perpetual speculation on real-world events through a dual-token...",
          "description": "FateCoin Protocol introduces an innovative decentralized finance platform enabling perpetual speculation on real-world events through a dual-token system (bullCoin and bearCoin). Unlike traditional prediction markets with expiration dates, our protocol maintains continuous liquidity via automated reserve redistribution and dynamic fee mechanisms. This proposal outlines the development of smart contracts for token economics, a responsive frontend with analytics, and cross-chain deployment - creating a self-sustaining ecosystem for price-linked asset trading.",
          "student_name": "Blizet",
          "code_url": null,
          "proposal_id": "cxvxsUlC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zN0pP1CO"
        },
        {
          "title": "Ell-ena: AI-Powered Task Management System",
          "short_description": "Ell-ena is a smart, AI-powered productivity assistant that helps individuals and teams manage tasks effortlessly through natural language. Just say...",
          "description": "Ell-ena is a smart, AI-powered productivity assistant that helps individuals and teams manage tasks effortlessly through natural language. Just say things like “Create a dark mode ticket” or “Add math assignment for tomorrow,” and Ell-ena takes care of the rest.\n\nIt uses ModernBERT for understanding commands and Graph RAG to connect tasks, projects, and deadlines intelligently. With real-time dashboards, meeting transcriptions, and automatic task linking, Ell-ena cuts down manual work and boosts collaboration.\n\nBuilt with Flutter and Appwrite, Ell-ena brings everything together into a smooth, cross-platform experience.",
          "student_name": "Garv Agarwal",
          "code_url": null,
          "proposal_id": "c0C0VauG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KFeDIJph"
        },
        {
          "title": "Enhancing Agora Blockchain: Privacy, Cross-Chain Voting, and Seamless User Onboarding",
          "short_description": "This project aims to significantly enhance the Agora Blockchain platform under AOSSIE by introducing essential improvements across three core areas:...",
          "description": "This project aims to significantly enhance the Agora Blockchain platform under AOSSIE by introducing essential improvements across three core areas: privacy-focused smart contracts, cross-chain voting capabilities, and user-friendly onboarding. The proposed solution includes implementing private elections using zero-knowledge proofs, integrating Chainlink CCIP for cross-chain voting, and leveraging account abstraction to simplify the user experience. Deliverables include upgraded smart contracts, cross-chain support and a secure login system—all designed to make Agora a robust and accessible decentralized voting platform.",
          "student_name": "Hamad Hussain",
          "code_url": null,
          "proposal_id": "fgJerqRh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bJfCablS"
        },
        {
          "title": "Forecast.bid: A Gamified, Decentralized Token Price Prediction Protocol",
          "short_description": "Forecast.bid is a decentralized application that lets users create and participate in token price prediction markets on EVM-compatible blockchains....",
          "description": "Forecast.bid is a decentralized application that lets users create and participate in token price prediction markets on EVM-compatible blockchains. Users can launch binary prediction games by choosing a token pair, target price, expiry time, and creator fee. Participants enter by minting BULL or BEAR tokens and can exit early with a dynamic burn fee. At expiry, a snapshot is taken via a cron-triggered oracle, and rewards are distributed to the winning side.\n\nThe project involves building modular smart contracts (PredictionFactory, PredictionGame, OracleProvider), a full-stack frontend (Next.js, TailwindCSS, Zustand), and backend services for off-chain snapshot handling (MongoDB + Prisma). The system is designed to be scalable, transparent, and extensible — with features like wallet integration, real-time burn fees, and a smooth gamified interface.\nDeliverables include a fully deployed testnet version, comprehensive documentation, and a clean frontend supporting game creation, minting, burning, and claiming rewards.",
          "student_name": "Himanshu Poptani",
          "code_url": null,
          "proposal_id": "oYi8OJkA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kZZ3zfy3"
        },
        {
          "title": "VouchMe & TNT: Enhancing VouchMe Features and Redesigning the Trust Token UI for Decentralized Trust",
          "short_description": "My proposal aims to enhance VouchMe, a blockchain-based testimonial platform, and revamp the UI of TNT (Trust Network Tokens), an ERC721 token system...",
          "description": "My proposal aims to enhance VouchMe, a blockchain-based testimonial platform, and revamp the UI of TNT (Trust Network Tokens), an ERC721 token system for verifiable trust relationships, to create a robust decentralized trust ecosystem. For VouchMe, I will improve user experience and security by integrating user profiles with Decentralized Identity (DID), enabling direct testimonial sharing via Waku, adding one-click social media sharing, and implementing a burn function to allow users to remove testimonials. Additionally, I will integrate comprehensive smart contract tests to ensure security and reliability. For TNT, I will redesign the landing page and create user-friendly interfaces for creating, managing, and viewing TNTs, ensuring a clear and seamless experience. The deliverables include a fully functional VouchMe with these enhanced features: profiles, DID, Waku-based sharing, and shareable testimonial cards, along with a polished TNT UI for improved usability and accessibility.",
          "student_name": "Kanishk Sogani",
          "code_url": null,
          "proposal_id": "tQw8bQeH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CGvkRXq7"
        },
        {
          "title": "Chainvoice: Enhancing Decentralized Invoicing with Privacy, Automation, and Multi-Token Support",
          "short_description": "Chainvoice is a decentralized invoicing platform that simplifies the crypto billing process by automating invoice creation, tracking, and payments...",
          "description": "Chainvoice is a decentralized invoicing platform that simplifies the crypto billing process by automating invoice creation, tracking, and payments on-chain. This project aims to enhance the system by introducing features such as multi-token payment support, batch invoice creation, privacy enhancements, and overdue invoice detection with reminder automation. These improvements will streamline the invoicing process for individuals and businesses, making Web3 financial workflows more user-friendly, secure, and efficient.",
          "student_name": "Karan_Kumawat",
          "code_url": null,
          "proposal_id": "fDxXzJo7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ql9ssqex"
        },
        {
          "title": "Monumento",
          "short_description": "My vision is to build Monumento, anopen-source, interactive platform for exploring and connecting around historical monuments. Users can contribute...",
          "description": "My vision is to build Monumento, anopen-source, interactive platform for exploring and connecting around\nhistorical monuments. Users can contribute content, plan events, and engagethrough social features like feeds, profiles, and communities.  \nI will enhance the user experience with personalized itineraries, dynamic\nmonument highlights ,more social features and full device responsiveness.\nTo expand Monumento’s reach, I will also develop a promotional landing pagethat highlights its unique features and value proposition, attracting a wider\naudience of travelers, history enthusiasts, and cultural explorers.",
          "student_name": "Kareem Abdeen",
          "code_url": null,
          "proposal_id": "XCsMvjhA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j1bMJnDJ"
        },
        {
          "title": "Devr.AI – Sustaining and scaling OSS via AI powered DevRel",
          "short_description": "Devr.AI is an AI-powered Developer Relations (DevRel) assistant designed to seamlessly integrate with open-source communities across platforms like...",
          "description": "Devr.AI is an AI-powered Developer Relations (DevRel) assistant designed to\nseamlessly integrate with open-source communities across platforms like Discord,\nSlack, GitHub, and Discourse. It acts as a virtual DevRel advocate, helping maintainers\nengage with contributors, onboard new developers, and provide real-time project\nupdates. By leveraging LLMs, knowledge retrieval, and workflow automation all aligned using an event driven system, enhances community engagement, simplifies\ncontributor onboarding, and ensures open-source projects remain active and\nwell-supported.",
          "student_name": "Kartik Bhatt",
          "code_url": null,
          "proposal_id": "B1ZXMoKP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jHoseH8f"
        },
        {
          "title": "Resonate Version 3",
          "short_description": "This project aims to enhance both user and contributor experiences for the Resonate App by implementing critical quality-of-life features, improving...",
          "description": "This project aims to enhance both user and contributor experiences for the Resonate App by implementing critical quality-of-life features, improving accessibility, and preparing it for public release.\nTo achieve this, the following deliverables are planned:\n1. Make the app fully responsive by replacing fixed dimensions with LayoutBuilder and Flex widgets for a consistent UI across devices.\n2. Stabilize the codebase and prioritize deployment of Resonate v1.0.0 to the Play Store and App Store.\n3. Implement automated testing in Flutter targeting 90%+ code coverage to prevent regressions and ease PR reviews.\n4. Set up CI/CD pipelines to automate deployment on updates to the main branch.\n5. Complete the partially implemented Text Chat feature and add in-app notifications.\n6. Add Internationalization (i18n) to support multiple languages.\n7. Improve the Pair Chat experience by allowing users to select who to chat with from a list.\n8. Expand the Search functionality to include Creators and Users, and introduce a \"Follow Creator\" feature.\n9. Add a Friends System to enable one-on-one calls.\n10. Introduce TTS and STT features in audio rooms for accessibility to non-verbal users.\n11. Add Host Controls using the LiveKit API to allow moderation in rooms.\n12. Enable creators to start Live Chapters, which will be recorded and uploaded automatically.\n13. Replace current Appwrite search queries with Meilisearch to support scalable and advanced search capabilities.\n14. Conclude the project with final testing, merging of features, and deployment of Resonate v2.0.0.\nThis project will ensure Resonate becomes production-ready while staying contributor-friendly and inclusive for all users.",
          "student_name": "M4dhav",
          "code_url": null,
          "proposal_id": "RM908q0i",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/txbphR3y"
        },
        {
          "title": "NeuroTrack",
          "short_description": "Neurotrack is an intelligent platform designed to assist in the early detection and management of autism. The platform includes dedicated apps for...",
          "description": "Neurotrack is an intelligent platform designed to assist in the early detection and management of autism. The platform includes dedicated apps for both patients and therapists. This proposal focuses on completing pending core features, integrating AI agents to automate therapist and patient activities, adding web support, implementing offline-first capabilities for better accessibility, and introducing neurodevelopmental games to enhance engagement and cognitive growth. Deliverables include fully functional AI workflows, responsive web versions, robust offline handling, and interactive game modules tailored for neurodevelopmental therapy.",
          "student_name": "Mohd Jasir Noor Khan",
          "code_url": null,
          "proposal_id": "a4GKVcB5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VDJf3ukr"
        },
        {
          "title": "Bountiful-Ergo Bounty & StablePay: Decentralized bounty platform and enhanced crypto payments",
          "short_description": "This project aims to contribute to two impactful open-source initiatives under AOSSIE: Bountiful-Ergo Bounty, a decentralized bounty platform on the...",
          "description": "This project aims to contribute to two impactful open-source initiatives under AOSSIE: Bountiful-Ergo Bounty, a decentralized bounty platform on the Ergo blockchain, and StablePay, a cryptocurrency payment solution for merchants.\r\n\r\nFor Bountiful-Ergo Bounty, I will design and build a trust-based bounty system from the ground up. The platform will utilize smart contract-based escrow, a hybrid evaluation model (creator-led and judge-based), and a reputation-driven judge selection mechanism to ensure secure, fair, and transparent bounty resolution.\r\n\r\nFor StablePay, I will enhance its functionality to improve usability, security, and merchant control. Key improvements include selective crypto payment options, real-time dashboards, dynamic fee estimation, wallet integrations (MetaMask, WalletConnect, Coinbase Wallet), and UI/UX optimizations.\r\n\r\nDeliverables include:\r\n1. A fully functional decentralized bounty platform with smart contract escrow and reputation systems.\r\n2. Upgraded StablePay SDK with extended wallet support, merchant controls, optimized transaction handling, and improved developer tools.",
          "student_name": "Nidhi_Singh",
          "code_url": null,
          "proposal_id": "g2pEtyFY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YhmZu7PL"
        },
        {
          "title": "DocPilot: AI-Powered Medical Transcription and Prescription Generation",
          "short_description": "The increasing administrative burden on healthcare professionals often leads to burnout and reduced efficiency in patient care. DocPilot aims to...",
          "description": "The increasing administrative burden on healthcare professionals often leads to burnout and reduced efficiency in patient care. DocPilot aims to address this challenge by providing an AI-powered mobile application that automates medical transcription and prescription generation.\n\nThis project leverages Flutter for the frontend and integrates Deepgram API / Google Speech-to-Text for high-accuracy, real-time transcription. AI/ML models will be implemented to extract key medical details from conversations and structure them into clear, professional prescriptions.\n\nKey features include:\n\t• Real-time transcription with high accuracy\n\t• Speaker diarization to differentiate doctor and patient voices\n\t• Multilingual support for diverse healthcare settings\n\t• User-friendly interface for reviewing and editing generated prescriptions\n\t• Secure storage and handling of sensitive medical data\n\nBy enhancing accuracy, usability, and security, DocPilot will streamline medical documentation, allowing healthcare professionals to focus more on patient care while reducing administrative workload.",
          "student_name": "OmSharma",
          "code_url": null,
          "proposal_id": "UI1Flfyv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Zy6eKNZI"
        },
        {
          "title": "Perspective",
          "short_description": "Perspective addresses the problem of biased and one-sided narratives in online articles by providing readers with a fact-based, well-structured...",
          "description": "Perspective addresses the problem of biased and one-sided narratives in online articles by providing readers with a fact-based, well-structured alternative perspective. The solution involves a pipeline that scrapes article content, processes and cleans the text, extracts key points, and generates a logical counter-perspective using LangGraph and LangChain. The system will include a frontend for user interaction, an AI-driven backend for perspective generation, and a vector database for storing results.\n\nDeliverables:\n\n- A fully functional web application where users can input article URLs.\n\n- AI-powered alternative perspective generation based on extracted key points.\n\n- Fact-checking mechanisms using reliable sources.\n\n- Vector database storage for efficient retrieval and chat-based exploration.",
          "student_name": "Parag Ghatage",
          "code_url": null,
          "proposal_id": "pphrkEVg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NEioeuUn"
        },
        {
          "title": "PictoPy: An all-round project revamp to make it end-user-ready",
          "short_description": "This proposal aims to an all-round enhancement to PictoPy by improving its backend scalability, frontend usability, and deployment accessibility. Key...",
          "description": "This proposal aims to an all-round enhancement to PictoPy by improving its backend scalability, frontend usability, and deployment accessibility. Key backend upgrades include implementing user-named face clusters, optimizing face clustering with dimensionality reduction, upgrading to YOLOv11 for better detection, adding GPU accelerated inferencing, and redesigning inefficient database schemas. On the frontend, a fresh modern UI using Radix UI will be introduced, along with a unified folder selection, an advanced search bar supporting face and object queries, object bounding box display, and user notifications. To ensure broader accessibility, the project will package and publish PictoPy on the Ubuntu Snap Store, Microsoft Store, and macOS Store, enabling seamless installation and updates. This will involve creation of CI/CD pipelines on the Github repository. Additionally, comprehensive documentation—including contributing guides, API references, and setup videos—will encourage new developers to contribute. These improvements will make PictoPy more user-friendly, scalable, and ready for widespread adoption.",
          "student_name": "Rahul B Harpal",
          "code_url": null,
          "proposal_id": "w3LIG2nd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HroTeXRx"
        },
        {
          "title": "DebateAI: Speak, Debate, Improve: AI That Trains You to Communicate Like a Pro",
          "short_description": "DebateAI is an innovative platform designed to enhance critical thinking and communication skills through structured, AI-assisted debates. By...",
          "description": "DebateAI is an innovative platform designed to enhance critical thinking and communication skills through structured, AI-assisted debates. By simulating formal debate environments where users can engage with either AI or human opponents, the platform fosters meaningful discourse and self-expression. It leverages real-time communication technologies and intelligent response generation to create an engaging, educational, and socially impactful experience. The project aims to make debate practice more accessible, interactive, and scalable for learners, educators, and enthusiasts worldwide.",
          "student_name": "Rishit Tiwari",
          "code_url": null,
          "proposal_id": "bmxPJfRM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5LLCU8Sd"
        },
        {
          "title": "Inpact — A Collaborative Operating System for Brands, Creators, and Event Organizers",
          "short_description": "The creator economy is growing rapidly, but the current tools for managing brand deals, event collaborations, and content partnerships are fragmented...",
          "description": "The creator economy is growing rapidly, but the current tools for managing brand deals, event collaborations, and content partnerships are fragmented and inefficient. Inpact aims to solve this by building a unified, open-source platform where creators, brands, and organizers can discover each other, communicate effectively, manage deliverables, track milestones, and facilitate payments — all in one place.\n\nMy proposal focuses on building key modules of this system including an insight-rich dashboard, real-time communication panel, trust score system, and modular backend workflows powered by Supabase. The platform will also support advanced options like letting users plug in their own LLM API keys (e.g., OpenAI, Claude, Gemini) for personalized experiences. Payments will be handled through a pluggable gateway model allowing Stripe, Razorpay, or other providers based on region or deployment preference, while keeping the system fully open-source and configurable.\n\nDeliverables include:\n\nFrontend implementation of core user flows using Next.js and Tailwind\nSupabase schema design and integration for user data, communications, proposals, and trust scores\nTrust Score algorithm based on interaction history, disputes, and feedback\nReal-time messaging and dispute handling system\nSettings page for optional LLM API integration\nPluggable and configurable payments module with documentation\nComplete documentation for deployment, developer contribution, and onboarding\nBy the end of GSoC, the platform will offer a robust baseline for decentralized creator collaborations and be ready for community testing and iterative improvement.",
          "student_name": "Saahi Dubey",
          "code_url": null,
          "proposal_id": "CJFyt6FP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/31PtgSUB"
        },
        {
          "title": "Auction-Driven DEX: Implementing Batch Auctions for Token Swaps & Hammer Auction House Enhancement",
          "short_description": "This project is divided into two phases. Phase 1 enhances our decentralized auction platform (Hammer Auction House) to eliminate intermediaries and...",
          "description": "This project is divided into two phases. Phase 1 enhances our decentralized auction platform (Hammer Auction House) to eliminate intermediaries and improve user trust by incorporating multiple auction types, an internal wallet, token swap integration, and an AI Auction Assistant. In Phase 2, we build a DEX that uses batch auctions to optimize price discovery for token swaps, reducing slippage and gas costs. Users’ swap orders are grouped by type, and the optimal clearing price is computed client-side via an efficient algorithm, then finalized on-chain for settlement.",
          "student_name": "Saksham Chauhan",
          "code_url": null,
          "proposal_id": "JLBqJg0a",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6rCxjaZw"
        },
        {
          "title": "Raindrop from end to end and enhancing Plaza functionality",
          "short_description": "This proposal focuses on developing the Raindrop Protocol, a staking and dividend distribution mechanism designed to ensure transparent and fair...",
          "description": "This proposal focuses on developing the Raindrop Protocol, a staking and dividend distribution mechanism designed to ensure transparent and fair revenue sharing among contributors by leveraging secure token vaults. Additionally, it involves enhancing the existing Plaza frontend by improving user experience, optimizing smart contract interactions, and integrating multi-wallet connectivity, resulting in a seamless and intuitive interface for community-driven blockchain projects.",
          "student_name": "Sarthak Dengre",
          "code_url": null,
          "proposal_id": "RfvoG4TP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lFnYxtXf"
        },
        {
          "title": "BabyNest - An AI powered pregnancy care assistant",
          "short_description": "I propose to make an intelligent assistant that acts as a personal pregnancy planner and guide, ensuring that expecting parents stay informed,...",
          "description": "I propose to make an intelligent assistant that acts as a personal pregnancy planner and guide, ensuring that expecting parents stay informed, organized, and stress-free. It is every expecting mother’s private, smart and offline-first companion. I plan to implement the following goals \r\n1. Scraping and storing country-specific healthcare guidelines for pregnancy\r\n2. Create a RAG agent for handling appointments and task\r\n3. Build notification and reminder system for appointment management\r\n4. Store the required data in SQLite\r\n5. UI Revamp for the app creating a responsive, personalized and interactive front end\r\n6. Add Voice Assistant Functionality to give users a hand-free experience\r\n7. Improving the accuracy and response time of the chat bot \r\n8. End to end testing of the entire app\r\n9. Back end Integration and then deployment\r\nDeliverable - An AI powered companion that is capable of automated tracking of trimester-specific medical appointments, sending country-specific healthcare requirement notifications, have offline access to pregnancy care guidelines, giving personalized recommendations and reminders.",
          "student_name": "VivekGupta008",
          "code_url": null,
          "proposal_id": "jMHz7RV4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/crJ0hrBy"
        },
        {
          "title": "EduAid: Gen with Adaptive Difficulty, Multilingual Support, and Scalable Deployment",
          "short_description": "This project focuses on optimizing and deploying EduAid, an AI-powered tool that generates interactive quizzes from educational content. Key...",
          "description": "This project focuses on optimizing and deploying EduAid, an AI-powered tool that generates interactive quizzes from educational content. Key deliverables include:\n\n- Adaptive Difficulty Control: NLP-driven question generation targeting overlooked concepts using TF-IDF scoring and synonym replacement.\n\n- Multilingual Integration: Leveraging the T5 model to enable question translation into German, French, and Romanian.\n\n- Scalable Infrastructure: Deployment via Electron.js, Celery-Redis task queues for scaling by the factor of 10x.\n\n- Performance Enhancements: Model quantization (25% size reduction), ONNX runtime acceleration (65% latency improvement), and service workers for background processing.\n\n- Unified UI/UX: Revamped frontend with reusable components and IndexedDB migration for efficient data handling.",
          "student_name": "Yatika Kain",
          "code_url": null,
          "proposal_id": "vkZfFiVZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XRHowYK4"
        }
      ]
    },
    {
      "name": "Debian",
      "image_url": "https://summerofcode.withgoogle.com/media/org/debian/mmld9soj4mti8bjn-360.png",
      "image_background_color": "#ffffff",
      "description": "The Universal Operating System",
      "url": "https://debian.org",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/debian",
      "ideas_url": "https://wiki.debian.org/SummerOfCode2025/Projects",
      "guide_url": "https://wiki.debian.org/SummerOfCode2025",
      "topics": ["ai", "CI/CD", "autopkgtest", "raspberrypi_builds", "mobian"],
      "technologies": ["python", "java", "perl", "c++", "rust"],
      "irc_channel": "",
      "contact_email": "mailto:outreach@debian.org",
      "mailing_list": "https://lists.debian.org/debian-outreach",
      "twitter_url": "",
      "blog_url": "https://bits.debian.org/",
      "facebook_url": "",
      "num_projects": 9,
      "projects": [
        {
          "title": "Enhancing Salsa CI: Stats Dashboard,  Local Execution, and Faster Pipelines",
          "short_description": "This project suggests significant upgrades to Salsa CI (Debian's Continuous Integration system) used by more than 27,000 source packages by adding an...",
          "description": "This project suggests significant upgrades to Salsa CI (Debian's Continuous Integration system) used by more than 27,000 source packages by adding an effective statistics dashboard, providing the option for running local pipelines, and doing smart job skipping for non-functional changes. Altogether, these enhancements are hoped to streamline the CI process, save resources, and empower Debian maintainers with improved insight, quicker feedback loops, and a smoother development experience.",
          "student_name": "Aayush (@44yu5h)",
          "code_url": null,
          "proposal_id": "IhFuAfyq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YTXVewUk"
        },
        {
          "title": "Enhancing Salsa CI in Debian",
          "short_description": "This project aims to enhance Salsa CI, a key tool in Debian's package workflow that ensures smooth transitions from unstable to testing release via...",
          "description": "This project aims to enhance Salsa CI, a key tool in Debian's package workflow that ensures smooth transitions from unstable to testing release via automated builds and checks. While it already catches issues early, there's room to improve usability and performance. The work will focus on fixing bugs, adding features based on community feedback, and improving documentation for better usability. All changes will be developed collaboratively to ensure long-term impact. Deliverables include resolved issues with documented discussions and new features aligned with project goals.",
          "student_name": "aquilamacedo",
          "code_url": null,
          "proposal_id": "rhQotKRa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mmwLagR0"
        },
        {
          "title": "Quality assurance and continuous integration for biological and medical applications inside Debian",
          "short_description": "Most Debian Med packages—particularly those utilized in medicine and biology—do not have adequate automated tests (autopkgtests). Without them, it's...",
          "description": "Most Debian Med packages—particularly those utilized in medicine and biology—do not have adequate automated tests (autopkgtests). Without them, it's difficult to identify problems early or make sure packages remain functional after updates. This project seeks to enhance quality assurance for these packages by creating and incorporating useful autopkgtests into Debian's CI infrastructure.\n\nI will start by identifying packages that currently have no or limited test coverage. Then, I’ll create and contribute test suites tailored to each package’s functionality. These tests will be run automatically on ci.debian.net, helping catch regressions and keeping packages stable across updates.\n\nI hope to have a number of Debian Med packages under reliable autopkgtests, documentation, and examples by the completion of the project, which can assist other contributors to write such tests in the future.",
          "student_name": "Harish  Chavre",
          "code_url": null,
          "proposal_id": "nGL0ZUF0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/k1gTnKpU"
        },
        {
          "title": "Package LLM Inference Libraries",
          "short_description": "Package Large Language Model (LLM) inference libraries, in particular vLLM. It is needless to explain how LLMs are important. Currently, the Debian...",
          "description": "Package Large Language Model (LLM) inference libraries, in particular vLLM. It is needless to explain how LLMs are important. Currently, the Debian archive only has PyTorch, but downstream applications are still missing. One of the most promising downstream applications is LLM inference. There are already people working on llama.cpp and Ollama, but vLLM still lacks lots of dependencies to land onto Debian. For multi-GPU inference and concurrency, vLLM has its advantages over llama.cpp. The missing packages are, for instance, transformers, huggingface-hub, etc. This project involves the Debian packaging work for vLLM and its dependencies that are missing from Debian, as well as fixing issues (if there are any) in existing packages to make vLLM work.\nTimelplan\n~ 5/8: Start with the architecture-independent package and non-cuda variant.  \n5/8 ~ 6/1: I will start with the architecture-independent package and non-cuda variant. I already created the package for huggingface-hub so I think this is a good start and doesn't take much time. By this time, I will finish the package for tokenizers packaging.\n6/1 ~ 6/30: Create the package for the transformers package. Then I will finish rest of the package for the vLLM package.\n6/30 ~ 7/18: I will try to build the vLLM package with cuda variant. Now, I already checked that vllm works on CUDA 12.4 so I will try to build the package with CUDA 12.4 with a specific GPU(Maybe T4?). \n7/18: Mid-term evaluation\n7/19 ~ 7/30: Try to build the vLLM package with multiplatform. I will try to build the package with different CUDA versions and different architectures, including a multi-GPU environment. I will get the feedback from the mentor and continue to the next step.\n8/1 ~ 8/25: I will try to finish the project as soon as possible and try to fix the issue. If I have some more time, I will continue with the SGLang packaging.\n8/25 - 9/1: submit final work product.",
          "student_name": "k1000dai",
          "code_url": null,
          "proposal_id": "urDwMLAm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ui7418HU"
        },
        {
          "title": "Make Debian for Raspberry Pi Build Again",
          "short_description": "There is an available set of images for running Debian in Raspberry Pi computers (all models below the 5 series)! However, the maintainer severely...",
          "description": "There is an available set of images for running Debian in Raspberry Pi computers (all models below the 5 series)! However, the maintainer severely lacking time to take care for them and called for help for somebody to adopt them, but have not been successful. The image generation scripts have bit rotted a bit, but it is mostly all done. And there is a lot of interest and use still in having the images freshly generated and decently tested! This project is about getting the [https://raspi.debian.net/ | Raspberry Pi Debian images] site working reliably again, and ideally making it easily deploy-able to be run in project machines.",
          "student_name": "Kurva Prashanth",
          "code_url": null,
          "proposal_id": "k7gSVuMv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JvTO8QWv"
        },
        {
          "title": "Device-specific Tweaks Management Service (Tweakster)",
          "short_description": "As the number of non-x86 Linux-capable devices grows rapidly (especially ARM64 laptops, phones, and tablets), the current approach of providing...",
          "description": "As the number of non-x86 Linux-capable devices grows rapidly (especially ARM64 laptops, phones, and tablets), the current approach of providing device-specific Debian packages for configuration tweaks doesn't scale efficiently. This project aims to develop a flexible tweaks management service called \"Tweakster\" that will identify the device it's running on, select the appropriate tweaks based on configuration files, and dynamically install them to the system. This solution will unify device detection, streamline configuration deployment, and ultimately ease support for new devices in Debian.",
          "student_name": "Mohammed ElDegwi",
          "code_url": null,
          "proposal_id": "24FyQuP3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/n3V7U4aF"
        },
        {
          "title": "autopkgtests for the rsync package",
          "short_description": "Extend the Debian rsync package autopkgtest suite by running more upstream tests, setting up end-to-end tests with a proper ssh connection, and...",
          "description": "Extend the Debian rsync package autopkgtest suite by running more upstream tests, setting up end-to-end tests with a proper ssh connection, and adding new tests for so far uncovered cases.",
          "student_name": "puer robustus",
          "code_url": null,
          "proposal_id": "u5nnIK9t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aaoCw79w"
        },
        {
          "title": "Enhancing Debian packages with ROCm GPU acceleration",
          "short_description": "Due to Debian’s open-source nature, no Debian package in main can have a proprietary GPU package listed as a dependency. While AI and HPC workloads...",
          "description": "Due to Debian’s open-source nature, no Debian package in main can have a proprietary GPU package listed as a dependency. While AI and HPC workloads increasingly rely on GPU acceleration, many Debian packages still focus solely on CUDA, which is proprietary.\n\nWith the advent of ROCm, an open-source GPU computing platform, we can now integrate full-fledged AMD GPU support into Debian packages. This will improve the experience of developers working in AI/ML and HPC while positioning Debian as a strong OS choice for GPU-driven workloads.\n\nThe proposal aims to aid in solving the aforementioned program by packaging several ROCm packages for debian and add ROCm support to some existing debian packages.\n\nThe deliverables are as follows:\n1. New Debian packages with GPU support\n2. Enhanced GPU support within existing Debian packages\n3. More autopackagetests running on the Debian ROCm CI",
          "student_name": "Spaarsh",
          "code_url": null,
          "proposal_id": "XEeG2kJk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9s4jUjV0"
        },
        {
          "title": "Enhancing Debian Packages with ROCm GPU Acceleration",
          "short_description": "ROCm is one of the most promising open-source platforms for GPU computing, providing a vendor-neutral alternative to CUDA, for scientific, AI, and...",
          "description": "ROCm is one of the most promising open-source platforms for GPU computing, providing a vendor-neutral alternative to CUDA, for scientific, AI, and HPC workloads. Although Debian ships with some of its core components, GPU acceleration is still underutilized in many high-impact packages. This initiative addresses that void by identifying such packages where ROCm support is available upstream, enabling GPU acceleration in those packages, contributing new, policy-compliant Debian packages that will benefit the ROCm ecosystem, and ensuring correct functionality via autopkgtest integration.",
          "student_name": "utk4r-sh",
          "code_url": null,
          "proposal_id": "cxO4pcO1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/eqs8heGE"
        }
      ]
    },
    {
      "name": "Learning Equality",
      "image_url": "https://summerofcode.withgoogle.com/media/org/learning-equality/iptmmzjiktknrg9p-360.png",
      "image_background_color": "#ffffff",
      "description": "Building equity in education to transform lives",
      "url": "https://learningequality.org/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/learning-equality",
      "ideas_url": "https://docs.google.com/document/d/e/2PACX-1vT49WKgbsAIUoJ0jJS8LTWWm7UTByM0Pw3qt0KgyU_BShB1oGtZBkrEWuannFsRMVvGd0QBytZt8blh/pub",
      "guide_url": "https://learningequality.org/r/gsoc-contributor-guidelines",
      "topics": ["education", "distributed databases", "offline", "learning"],
      "technologies": ["python", "javascript", "django", "vue.js"],
      "irc_channel": "",
      "contact_email": "mailto:gsoc@learningequality.org",
      "mailing_list": "https://community.learningequality.org/",
      "twitter_url": "",
      "blog_url": "https://blog.learningequality.org/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Create Robust Windows App",
          "short_description": "Kolibri's current Windows installer is outdated, difficult to maintain, relies on the unsupported IE11 engine, and lacks parity with the modern...",
          "description": "Kolibri's current Windows installer is outdated, difficult to maintain, relies on the unsupported IE11 engine, and lacks parity with the modern kolibri-app used on macOS. This project aims to replace the legacy installer by enhancing the existing Python-based kolibri-app to provide a first-class experience on Windows.\n\nThe solution involves integrating the Microsoft Edge WebView2 engine, implementing native Windows features such as background operation via a Windows Service (using pywin32) and a system tray icon (wxPython), and creating a new native installer using InnoSetup. The application architecture will separate the UI and server processes for robustness. An automated build pipeline using GitHub Actions will be developed to produce the application bundle (via PyInstaller) and the final installer package, including code signing for releases.\n\nMain deliverables include: a functional Kolibri Windows application built from the kolibri-app codebase, a native InnoSetup installer (.exe), system tray functionality for server management, reliable background operation via a Windows service, seamless WebView2 integration, and an automated GitHub Actions build workflow for Windows artifacts.",
          "student_name": "Dimitrios Mylonas",
          "code_url": null,
          "proposal_id": "rdFncAa2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mvtTIkC0"
        },
        {
          "title": "Legacy Compatible Implementation for a prototype of a Rich Text Editor",
          "short_description": "This project replaces Kolibri Studio's editor with a TipTap/ProseMirror solution that maintains Markdown support while improving reliability,...",
          "description": "This project replaces Kolibri Studio's editor with a TipTap/ProseMirror solution that maintains Markdown support while improving reliability, accessibility, and performance. The modern implementation delivers core formatting through a schema-based architecture, reducing bundle size by 60% for better performance on low-end devices. It solves immediate needs while future-proofing content creation.",
          "student_name": "Habiba Ayman",
          "code_url": null,
          "proposal_id": "KP74gf86",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SnDqa0ef"
        },
        {
          "title": "Kolibri Community Library",
          "short_description": "The goal of the project presented in this proposal is to create a community library that will enable content creators in the Kolibri ecosystem to...",
          "description": "The goal of the project presented in this proposal is to create a community library that will enable content creators in the Kolibri ecosystem to share their content with other users. This will allow users to create content channels, especially curated for specific learning environments or aligned to a certain curriculum, and make the content freely and easily discoverable and reusable by others.\n\nThe project implements the project idea Easy sharing of community channels from the official Learning Equality idea list.",
          "student_name": "Jakub Komárek",
          "code_url": null,
          "proposal_id": "Np8Ew0rz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9nSTd6ca"
        },
        {
          "title": "Create a new user onboarding experience for  Kolibri",
          "short_description": "Kolibri currently lacks an in-app onboarding system, relying solely on external user documentation. This project aims to design and implement an...",
          "description": "Kolibri currently lacks an in-app onboarding system, relying solely on external user \ndocumentation. This project aims to design and implement an intuitive in-app onboarding experience using Tippy.js library for Kolibri, guiding users through key features within the Learn plugin. The onboarding process will introduce interactive tooltips and pop-up elements to help users navigate the platform effectively.",
          "student_name": "shruti862",
          "code_url": null,
          "proposal_id": "zFCNrsgQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1UtqS4c1"
        }
      ]
    },
    {
      "name": "SW360",
      "image_url": "https://summerofcode.withgoogle.com/media/org/sw360/scylub8cx6f9mkzk-360.png",
      "image_background_color": "#ffffff",
      "description": "Software supply chain management done right !",
      "url": "https://eclipse.dev/sw360/",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/sw360",
      "ideas_url": "https://eclipse.dev/sw360/gsoc/gsoc-projects-2025/",
      "guide_url": "https://eclipse.dev/sw360/docs/development/",
      "topics": [
        "license compliance",
        "compliance automation",
        "SBOM",
        "component repository",
        "vulnerabilities management"
      ],
      "technologies": ["java", "react", "couchdb", "SpringBoot"],
      "irc_channel": "https://matrix.to/#/#technology.sw360-general:matrix.eclipse.org",
      "contact_email": "",
      "mailing_list": "sw360-dev@eclipse.org",
      "twitter_url": "",
      "blog_url": "https://eclipse.dev/sw360/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Improving Integration of SW360 with FOSSology",
          "short_description": "Currently, SW360’s integration with FOSSology is limited to only basic functionalities using outdated endpoints namely, triggering scans and checking...",
          "description": "Currently, SW360’s integration with FOSSology is limited to only basic functionalities using outdated endpoints namely, triggering scans and checking scan status. This results in inefficient workflows, redundant uploads, lack of flexibility in scanning configurations, and restricted report formats. It also misses opportunities for reuse of scan data and lacks user-level attribution and secure token handling. This project and proposal aims to refactor and extend SW360's FOSSology integration by utilizing the modern RESTful API (OpenAPI v2 spec) offered by FOSSology. It will enable advanced functionalities such as:\n1. Direct Source Uploads via POST /uploads\n2. Checksum-Based Search and Reuse using /filesearch\n3. Selectable Scanning Agents (e.g., Nomos, Monk, Reuser)\n4. Multi-Format Report Generation (SPDX, CycloneDX, etc.)\n5. User-Specific Token Support for secure and auditable API interactions\nThese enhancements will be implemented through a modular, secure, and scalable API integration layer in SW360, with robust error handling, polling mechanisms, and extensibility for future API versions.\nDeliverables:\n1. REST API Refactoring of SW360's FOSSology connector using modern v2 endpoints.\n2. Efficient File Upload System with token-based authentication and job initiation.\n3. Checksum Reuse Logic to avoid duplicate scans and utilize FOSSology’s “Reuser” agent.\n4. Configurable Scanning Agent Support exposed via backend APIs.\n5. Support for Diverse Report Formats, download mechanisms, and metadata linking.\n6. Secure Token Management for both server-wide and user-specific workflows.\n7. Robust Error Handling, retry logic, audit logging, and performance tuning.\n8. Comprehensive Testing, documentation, and CI/CD pipeline integration.",
          "student_name": "Ritankar Saha",
          "code_url": null,
          "proposal_id": "wLz1nPMY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gh7uLcOi"
        },
        {
          "title": "Improve tests for all REST API endpoints",
          "short_description": "This proposal aims to improve the testing framework for SW360’s REST API endpoints by addressing limited test coverage, insufficient integration...",
          "description": "This proposal aims to improve the testing framework for SW360’s REST API endpoints by addressing limited test coverage, insufficient integration tests, and outdated testing workflows. The project will focus on writing comprehensive unit tests for CRUD operations and edge cases, developing integration tests for multi-endpoint workflows, and creating reusable utilities for database mocking and error simulation. Additionally, CI/CD pipelines will be automated with tools like JaCoCo for test coverage tracking and regression prevention. Deliverables include a robust test suite, enhanced testing infrastructure, automated pipelines, and detailed documentation to simplify onboarding and contributions. These improvements will make SW360's APIs more reliable, scalable, and maintainable for the developer community.",
          "student_name": "Rohit Borra",
          "code_url": null,
          "proposal_id": "xRPL0ZgH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GTS6j5jV"
        }
      ]
    },
    {
      "name": "Software and Computational Systems Lab at LMU Munich",
      "image_url": "https://summerofcode.withgoogle.com/media/org/software-and-computational-systems-lab-at-lmu-munich/kcrheiieoyvdm0r7-360.png",
      "image_background_color": "#ffffff",
      "description": "Algorithms and Tooling for Software Verification",
      "url": "https://www.sosy-lab.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/software-and-computational-systems-lab-at-lmu-munich",
      "ideas_url": "https://www.sosy-lab.org/gsoc/gsoc2025.php",
      "guide_url": "https://www.sosy-lab.org/gsoc/gsoc2025.php#instructions",
      "topics": [
        "cloud",
        "software verification",
        "benchmarking",
        "program analysis",
        "SAT & SMT solving"
      ],
      "technologies": ["python", "javascript", "java", "grpc", "Quarkus"],
      "irc_channel": "",
      "contact_email": "mailto:info@sosy-lab.org",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Exporting and Validating Correctness Witnesses for Memory Safety in CPAchecker",
          "short_description": "Problem: CPAchecker lacks robust support for exporting and validating correctness witnesses for memory safety properties (null pointers, buffer...",
          "description": "Problem: CPAchecker lacks robust support for exporting and validating correctness witnesses for memory safety properties (null pointers, buffer overflows), limiting independent verification of its results.\n\nSolution: \n- Implement YAML 2.0 witness export capturing ACSL \\valid predicates from SMG states.\n- Develop SMT-based validation leveraging CPAchecker’s predicate analysis.\n- Optimise configurations for validation accuracy using SV-COMP benchmarks.\n\nDeliverables:\n- Memory safety witness exporter module\n- Integrated validation pipeline with >95% accuracy\n- Test suite covering 50+ SV-COMP programs\n- Documentation on ACSL/SMG witness mapping",
          "student_name": "Nupur Singhi",
          "code_url": null,
          "proposal_id": "8b5RDpAB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ytzuKlC3"
        },
        {
          "title": "Verifier Selection using LLMs",
          "short_description": "The growing use of large language models (LLMs) in code understanding has paved the way for significant advancements in software verification. In...",
          "description": "The growing use of large language models (LLMs) in code understanding has paved the way for significant advancements in software verification. In particular, code embeddings, such as NV-Embed and LLM2Vec, offer efficient, low-dimensional representations that can be used to improve the selection of the best-performing verifiers for various tasks. Existing approaches, such as Pesco and Graves, either rely on manually computed program features or train custom machine learning algorithms for verifier selection. This project aims to create an open-source tool that utilizes LLM-based embeddings to predict the most suitable verifier for a given task, thereby enhancing the automation of formal verification processes.\n\nThe goal of this project is to develop a command-line tool that takes a self-contained C file (preprocessed using gcc -E) along with a verification specification and recommends the most suitable verifier from a pool of SV-COMP participants. The recommendation will be based on learned predictions and presented as a ranking, classification, or regression, depending on what proves to be the most effective and feasible. To evaluate the tool's performance, results will be benchmarked against the virtually best verifier as well as established approaches like Pesco and Graves. The tool will be implemented in Python and optimized for CPU usage, making automated verifier selection more accessible, efficient, and practical on everyday hardware.",
          "student_name": "Patrik",
          "code_url": null,
          "proposal_id": "eOmIYm2s",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RiOOLRsU"
        },
        {
          "title": "Timestamps in logs in BenchExec",
          "short_description": "This project aims to enhance the BenchExec benchmarking framework by resolving issues with output handling and log management. Key improvements...",
          "description": "This project aims to enhance the BenchExec benchmarking framework by resolving issues with output handling and log management. Key improvements include adding timestamps to solver outputs, separating stdout and stderr, and optimizing log size management by implementing stdout/stderr pipes and buffers. The project will introduce the --timestamp option, and improve the --maxOutputSize functionality.",
          "student_name": "Taito Ohsumi",
          "code_url": null,
          "proposal_id": "tiLSUrLQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AAnqA9dr"
        },
        {
          "title": "CPA-Daemon: Behavior Driven Tests",
          "short_description": "CPA-Daemon is a microservice (currently gRPC service) for continuous verification of C programs with CPAchecker. Clients could craft gRPC requests...",
          "description": "CPA-Daemon is a microservice (currently gRPC service) for continuous verification of C programs with CPAchecker. Clients could craft gRPC requests (with details for instructing a CPAchecker program run) sending to CPA-Daemon and receive the program-verification response.\n\nCurrent CPA-Daemon integration tests require large inputs that are difficult to read within code: c input programs, CPAchecker specifications, CPAchecker configurations[3]. So our goal in this project is \"A running integration-test suite for CPA-Daemon based on Cucumber\". \n\nWith Cucumber clear \"Given / When / Then\" semantics in writing test, we aim to reach the same or more branch coverage than the existing integration tests. Adopt Cucumber should help us easily add more test in the future.",
          "student_name": "Wenyi Shi",
          "code_url": null,
          "proposal_id": "fn4dzqim",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gfeHjXL3"
        }
      ]
    },
    {
      "name": "OpenCV",
      "image_url": "https://summerofcode.withgoogle.com/media/org/opencv/fmh9fnybaz97kodm-360.png",
      "image_background_color": "#ffffff",
      "description": "++ beneficial uses of computer vision in society",
      "url": "https://opencv.org/",
      "category": "Media",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/opencv",
      "ideas_url": "https://github.com/opencv/opencv/wiki/GSoC_2025",
      "guide_url": "https://github.com/opencv/opencv/wiki/How_to_contribute",
      "topics": ["robotics", "computer vision", "ai", "deep learning"],
      "technologies": ["python", "c++", "deep learning", "ai"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/g/opencv-gsoc-202x",
      "twitter_url": "https://twitter.com/opencvlibrary",
      "blog_url": "https://open-cv.slack.com/",
      "facebook_url": "https://www.facebook.com/opencvlibrary",
      "num_projects": 9,
      "projects": [
        {
          "title": "QR/Barcode/ArUco detector",
          "short_description": "Description: QR, Barcode and ArUco are all popular code in computer vision applications. OpenCV now support all of them, and can detect and decode...",
          "description": "Description: QR, Barcode and ArUco are all popular code in computer vision applications. OpenCV now support all of them, and can detect and decode them. But OpenCV still expect a better detector and decoder for them. If possible, one efficient deep detector for all kinds of codes can simplify the usage. If one efficent deep detector cannot be achieved, several deep models are also acceptable.\nExpected Outcomes:\nTrain a deep detector for QR, Barcode and ArUco. Or train three different deep detectors for different codes specifically.\nThe trained model should be easy to implement with the current algorithms in OpenCV on QR/Barcode/ArUco.\nA nice demo to show how to use the algorithm.\nDetailed report to demontrate if the trained detector(s) are better than the current solution in OpenCV.",
          "student_name": "Jinyue CHEN",
          "code_url": null,
          "proposal_id": "wtSCVM6Q",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/atviNhgk"
        },
        {
          "title": "Better LLMs Support in OpenCV: Tokenizer Integration into DNN Module",
          "short_description": "I propose to integrate native text tokenization support into OpenCV’s DNN module so that Large Language Models (LLMs) can be run end-to-end directly...",
          "description": "I propose to integrate native text tokenization support into OpenCV’s DNN module so that Large Language Models (LLMs) can be run end-to-end directly in OpenCV. Currently, to feed text into models like GPT-2 or GPT-3, users must rely on external libraries (e.g. tiktoken) for tokenization. My project will create a built-in tokenizer utility—implemented in C++ with Python bindings—that can convert raw text into token IDs and decode model outputs back into text.  \n\nThe core deliverable is a new cv::dnn::Tokenizer class supporting Byte Pair Encoding (BPE), along with the ability to load typical vocabulary/merges files and handle special tokens. Once implemented, this will allow a seamless pipeline for text-based or multimodal models within OpenCV: raw text -> tokens -> DNN inference -> tokens -> decoded text. I will also write comprehensive documentation and test this functionality against known tokenizer outputs (e.g., Hugging Face), ensuring correctness and good performance.  \n\nBy adding native tokenization, OpenCV’s DNN module becomes more versatile for cutting-edge AI tasks involving both vision and language. This reduces external dependencies, makes it easier to deploy LLMs in pure C++ or Python environments, and helps unify image and text processing in a single library—further strengthening OpenCV as a comprehensive open-source toolkit.",
          "student_name": "Jorge Velez",
          "code_url": null,
          "proposal_id": "kV2nCLaA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/79SW6eNK"
        },
        {
          "title": "Integrate Fractal ArUco into OpenCV",
          "short_description": "Problem: Traditional ArUco markers in OpenCV struggle with occlusion and long-range detection. Fractal ArUco markers (developed by Prof. Rafael Muñoz...",
          "description": "Problem:\nTraditional ArUco markers in OpenCV struggle with occlusion and long-range detection. Fractal ArUco markers (developed by Prof. Rafael Muñoz Salinas and team) address these limitations through nested designs but are not yet integrated into OpenCV.\nSolution:\n1. Replace the current picoflann dependency with OpenCV’s native FLANN module (kdtree_single_index).\n2. Benchmark both implementations for accuracy, speed, and memory efficiency.\n3. Integrate the optimal solution into OpenCV, ensuring backward compatibility and performance.\nDeliverables:\n1. Fractal ArUco integration in OpenCV\n2. Documentation (API references, tutorials, performance guidelines)\n3. Merged OpenCV pull request with tests and examples",
          "student_name": "Liiigion",
          "code_url": null,
          "proposal_id": "f2fG2EUK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cC4UplVH"
        },
        {
          "title": "Computational photography algorithms for better image quality",
          "short_description": "GitHub issue: Opencv #27206, Opencv_contrib #3921 Fork with WIP: https://github.com/MykhailoTrushch/opencv_contrib As part of GSOC 2025 idea 11,...",
          "description": "GitHub issue: Opencv #27206, Opencv_contrib #3921\nFork with WIP: https://github.com/MykhailoTrushch/opencv_contrib\n\nAs part of GSOC 2025 idea 11, implement algorithms for enhancement of technical quality of images.\n\nBased on the conversation in opencv-gsoc-202X mailing list, the main prioritized algorithms are:\n\n    Smarter white balance algorithms\n    Color corrections\n    vignetting correction, chromatic aberration correction\n    Exposure, contrast, temperature correction and enhancement in color images\n\nIn my proposal, I outline some possible algorithms that would in the beginning be implemented for opencv_contrib and could be migrated to opencv, mostly in the photo module. In particular, in order of approximate importance:\n\n    Auto white balance: implement FFCC\n    Chromatic aberration correction: implement algorithm of Chang et al.\n    Denoising: implement a CNN-based method as a module like dnn_superres\n    Exposure correction: implement (Adaptive, Weighted) Gamma Correction\n    Superresolution: check if any additional newer models for superresolution could be added\n\nIf I am accepted as a contributor in GSOC, I expect to pursue 2-3 of these topics in-depth to fit in the timeframe of the medium-sized project (~175 hours). Also, the choice of algorithms is preliminary and might change after additional research and feedback.",
          "student_name": "Mykhailo Trushch",
          "code_url": null,
          "proposal_id": "DU4s4QWN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DtBkV98K"
        },
        {
          "title": "LLM Runtime Support in OpenCV",
          "short_description": "This project aims to extend OpenCV’s DNN module with efficient runtime support for Large Language Models (LLMs), focusing on decoder-only...",
          "description": "This project aims to extend OpenCV’s DNN module with efficient runtime support for Large Language Models (LLMs), focusing on decoder-only architectures. While OpenCV delivers fast inference for convolutional networks, its current design falls short in areas critical to LLMs, such as key-value caching and support for specialized quantization formats. In particular, it lacks compatibility with quantization schemes widely used for CPU-friendly LLM inference.\n\nThe goal is to enable the complete LLM inference pipeline within OpenCV: importing models via the GGUF format, implementing session-based runtime caching, adding support for low-bit quantized models, and exposing the functionality through clean Python bindings.",
          "student_name": "Oleksandr Nikolskyy",
          "code_url": null,
          "proposal_id": "Rnfw6Zb7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Xt3sU0cr"
        },
        {
          "title": "IDEA-16: Implementation of a SLAM Framework in OpenCV with (ALIKED features & LightGlue matcher)",
          "short_description": "This project involves a methodological approach to developing, testing, and documenting a SLAM framework, extending the current OpenCV's...",
          "description": "This project involves a methodological approach to developing, testing, and documenting a SLAM framework, extending the current OpenCV's SFM(structure-for-motion) module. This will serve as both a practical tool for robotics applications and an educational resource for computer vision researchers. The project will culminate by integrating a fully functional SLAM framework in OpenCV with comprehensive documentation, enabling future extensions and adaptations by the broader computer vision community.\n\nTraditional SLAM (Simultaneous Localization and Mapping) pipelines can fail in low-texture settings or with erratic motion, while naïve deep-learning usage often demands powerful GPUs. Our proposal addresses these shortcomings by integrating LightGlue (a neural network-based feature matching framework) and ALIKED (a learned keypoint extractor) into a streamlined SLAM system that retains real-time feasibility on modest hardware. This combination improves accuracy by reducing drift—a common issue in purely classical systems. Meanwhile, we handle the SLAM back end (bundle adjustment, pose graph optimization) in C++, leveraging libraries like Ceres Solver for real-time performance.\n\nThe project will unfold in two primary phases. Phase 1 focuses on building a Visual Odometry pipeline: feature extraction and matching, pose estimation, and basic mapping. Phase 2 expands this pipeline into a fully-fledged SLAM system by adding loop closure, global pose graph optimization, and map refinement. Together, these steps ensure global consistency and minimize drift over longer trajectories.\n\nKey deliverables include:\n   - Working SLAM pipeline with ALIKED + LightGlue for feature processing.\n   - Benchmarking and comparison on standard datasets (e.g., KITTI, Malaga), demonstrating quantitative improvements.\n    - Documentation and code that enable easy adoption or extension for other robotics or vision applications.",
          "student_name": "ShauryaKpanwar",
          "code_url": null,
          "proposal_id": "BoEueGOa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/IFR73yH5"
        },
        {
          "title": "Multi-camera calibration test",
          "short_description": "I propose to enhance OpenCV’s multi-camera calibration pipeline by curating and organizing high-quality calibration datasets that include varied...",
          "description": "I propose to enhance OpenCV’s multi-camera calibration pipeline by curating and organizing high-quality calibration datasets that include varied fiducial markers (chessboards, ArUco, ChArUco, etc.). I will develop automated testing scripts and visualization tools in both C++ and Python, ensuring calibration accuracy and robustness. This project will also deliver clear, user-friendly documentation and a demo video, making calibration more accessible to developers.",
          "student_name": "shyma7004",
          "code_url": null,
          "proposal_id": "fNpDqKXQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EPZ8lQ0v"
        },
        {
          "title": "Enhancing OpenCV's imgcodecs Module Code Refactoring and Feature Improvements",
          "short_description": "The goal of this project is to improve OpenCV’s imgcodecs module by reducing code duplication, enhancing performance, and improving format support....",
          "description": "The goal of this project is to improve OpenCV’s imgcodecs module by reducing code duplication, enhancing performance, and improving format support.\nDeliverables:\nModular and maintainable imgcodecs module.\nFaster, more efficient image I/O.\nImproved support for modern image formats and metadata.\nRobust and complete JPEG XL implementation with animation.",
          "student_name": "Suleyman Turkmen",
          "code_url": null,
          "proposal_id": "FzxJs56t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hq9jbCAK"
        },
        {
          "title": "Adding libcamera support for VideoCapture",
          "short_description": "The Raspberry Pi OS Bullseye released with a new open camera stack libcamera, while VideoCapture did not integrate with the new camera backend in...",
          "description": "The Raspberry Pi OS Bullseye released with a new open camera stack libcamera, while VideoCapture did not integrate with the new camera backend in time. Given libcamera blocked the access from OpenCV to legacy camera backend V4L2, VideoCapture have to implement support for libcamera backend. A proper approach is to wrap libcamera's APIs in VideoCapture.",
          "student_name": "Xuanrui Zhu",
          "code_url": null,
          "proposal_id": "5Pra2qDu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0rdlg60L"
        }
      ]
    },
    {
      "name": "GNU Octave",
      "image_url": "https://summerofcode.withgoogle.com/media/org/gnu-octave/0kc85jo6rl3eo2g0-360.png",
      "image_background_color": "#ffffff",
      "description": "Free Your Numbers",
      "url": "https://www.octave.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/gnu-octave",
      "ideas_url": "https://wiki.octave.org/Summer_of_Code_-_Getting_Started#Suggested_projects",
      "guide_url": "https://wiki.octave.org/Summer_of_Code_-_Getting_Started",
      "topics": [
        "mathematics",
        "scientific computing",
        "numerical computation",
        "numerical methods",
        "matlab"
      ],
      "technologies": ["c++", "hg"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://octave.discourse.group/",
      "twitter_url": "",
      "blog_url": "https://octave.discourse.group/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Adding clustering *Searcher classes in statistics package - Swayam Shah",
          "short_description": "The GNU Octave Statistics package lacks class definitions for knnsearch and rangesearch, and its KDTree method is currently disabled due to poor...",
          "description": "The GNU Octave Statistics package lacks class definitions for knnsearch and rangesearch, and its KDTree method is currently disabled due to poor performance (GitHub issue #151). This project aims to implement KDTreeSearcher, ExhaustiveSearcher, and hnswSearcher classes, along with the createns helper function, to enhance clustering capabilities. The KDTree implementation will be optimized using a compiled Octave (.oct) library for faster index construction and queries. Each searcher class will include efficient knnsearch and rangesearch methods. Deliverables include optimized implementations, extensive testing, benchmarks, and comprehensive documentation, improving performance, usability, and MATLAB compatibility.",
          "student_name": "Swayam Shah",
          "code_url": null,
          "proposal_id": "nKCwChqz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vf4W0YiX"
        },
        {
          "title": "Porting Chebfun to GNU Octave",
          "short_description": "I propose to work on the following project: porting the Chebfun package to GNU Octave. Chebfun is a numerical computation package for MATLAB that...",
          "description": "I propose to work on the following project: porting the Chebfun package to GNU Octave. Chebfun is a numerical computation package for MATLAB that provides a framework for representing functions in a symbolic manner using ”Chebyshev technology”, a term coined by the package authors to describe the use of Chebyshev polynomials to represent functions up to machine precision. GNU Octave is supposed to be mostly compatible with MATLAB, so Chebfun should ideally work without change on the former, but there are some slight differences and unimplemented features in Octave that make this difficult. Primarily, the main issue is that Octave’s support for object-oriented programming (classdef) is not as feature complete and as stable as MATLAB’s, which is a major problem since Chebfun is written in classdef.\n\n The goal of this project is to port Chebfun to GNU Octave, and to make it work as a dropin replacement for the MATLAB version. Since fixing classdef is not a feasible/recommended goal for a GSoC project, I will instead focus primarily on making the necessary changes to the Chebfun codebase to make it work in Octave. Along the way, I will compile new information about the status of classdef in Octave, and I will share my findings with the Octave developers, and perhaps aid in some changes to the Octave codebase itself.",
          "student_name": "Thomas Kolman",
          "code_url": null,
          "proposal_id": "Zfh8hxrh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6xbfUWnM"
        }
      ]
    },
    {
      "name": "stdlib",
      "image_url": "https://summerofcode.withgoogle.com/media/org/stdlib/7ornclj6w5zz9fca-360.png",
      "image_background_color": "#ffffff",
      "description": "The fundamental numerical library for JavaScript",
      "url": "https://stdlib.io",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/stdlib",
      "ideas_url": "https://github.com/stdlib-js/google-summer-of-code/blob/main/ideas.md",
      "guide_url": "https://github.com/stdlib-js/google-summer-of-code",
      "topics": [
        "mathematics",
        "web",
        "scientific computing",
        "numerical computing",
        "statistics"
      ],
      "technologies": [
        "c",
        "javascript",
        "node.js",
        "typescript",
        "webassembly"
      ],
      "irc_channel": "https://gitter.im/stdlib-js/stdlib",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "https://x.com/stdlibjs",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Add LAPACK bindings and implementations for linear algebra",
          "short_description": "The goal of this project is to develop JavaScript implementations of LAPACK (Linear Algebra Package) routines. Each implementation will provide both...",
          "description": "The goal of this project is to develop JavaScript implementations of LAPACK (Linear Algebra Package) routines. Each implementation will provide both a strided API and an ndarray API to ensure compatibility with stdlib ndarrays, while supporting both row-major (C-style) and column-major (Fortran-style) storage layouts, overcoming the original LAPACK's column-major limitation. The project covers both lower level helper routines and higher level user facing routines. To further optimize these routines, techniques such as loop reordering and loop tiling will be used. The project will include a comprehensive test suite to achieve 100% test coverage and thorough benchmarks to validate performance. All functionality will be well-documented using Markdown and JSDoc to provide clear usage instructions and technical details. Upon the completion of this project, users will be able to call LAPACK routines in JavaScript environments, including web browsers.",
          "student_name": "Aayush Khanna",
          "code_url": null,
          "proposal_id": "vDq1qj53",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/opJzlQTz"
        },
        {
          "title": "Expanding array-based statistical computation in stdlib",
          "short_description": "This project aims to enhance the stats routines in stdlib by introducing convenience array wrappers for all 1D strided APIs, simplifying access to...",
          "description": "This project aims to enhance the stats routines in stdlib by introducing convenience array wrappers for all 1D strided APIs, simplifying access to statistical functions for common use cases. Additionally, it will develop specialized ndarray kernels for statistical operations, such as mean, variance, and correlation, enabling efficient handling of multi-dimensional data. The project also involves refactoring existing packages to include C ndarray interfaces and aligning them with stdlib's coding standards. Deliverables include fully implemented and tested convenience wrappers, ndarray kernels, detailed documentation, and benchmarks, making the library more accessible, modular, and efficient for developers working with numerical and scientific computing in JavaScript.",
          "student_name": "gururaj1512",
          "code_url": null,
          "proposal_id": "qDJC1GiI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JYSuqCBs"
        },
        {
          "title": "Implement base special mathematical functions in JavaScript and C",
          "short_description": "This project aims to implement and enhance base special mathematical functions in JavaScript and C for stdlib. The goal is to complete missing C...",
          "description": "This project aims to implement and enhance base special mathematical functions in JavaScript and C for stdlib. The goal is to complete missing C implementations for existing double-precision packages, develop new single-precision versions, and ensure consistency, accuracy, and IEEE 754 compliance. Deliverables include multiple function implementations, added constants, improved test coverage, and documentation updates. These enhancements will make math functions in stdlib faster, more robust, and more accessible for developers across platforms.",
          "student_name": "Karan Anand",
          "code_url": null,
          "proposal_id": "gldClMl7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Td3c9qv2"
        },
        {
          "title": "achieve ndarray API parity with built-in JavaScript arrays",
          "short_description": "JavaScript lacks a general purpose and cache efficient multi-dimensional array API for operating on large datasets of high-dimensionality. To address...",
          "description": "JavaScript lacks a general purpose and cache efficient multi-dimensional array API for operating on large datasets of high-dimensionality. To address this limitation, stdlib provides ndarray API for creating and manipulating multi-dimensional arrays. This project aims to extend those efforts by achieving full API parity between stdlib ndarrays and built-in JavaScript arrays. This work will include implementing functions such as concat, find, flat, includes, indexOf, reduce, some, none, any, with, sort and others to facilitate high-performance data transformation and manipulation. For performance intensive operations such as searching, sorting and reductions, this project will develop C implementations and corresponding Node.js native add-ons for accelerated performance. These enhancements will allow JavaScript developers to work with multi-dimensional arrays with the same ease as working with built-in arrays and thus expand JavaScript's capabilities for scientific and numerical computing.",
          "student_name": "muhammad_haris",
          "code_url": null,
          "proposal_id": "OGIQTqx5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lKDCoGBz"
        },
        {
          "title": "Add BLAS bindings and implementations for linear algebra",
          "short_description": "This project aims to increase BLAS (Basic Linear Algebra Subprograms) support in stdlib via the development of JavaScript, C, Fortran, and...",
          "description": "This project aims to increase BLAS (Basic Linear Algebra Subprograms) support in stdlib via the development of JavaScript, C, Fortran, and WebAssembly implementations capable of execution in both client- and server-side web applications. BLAS routines are divided into 3 levels: Level 1 (vector-vector operations), Level 2 (vector-matrix operations), Level 3 (matrix-matrix operations). While stdlib currently supports most Level 1 operations, several Level 2 and 3 routines involving specialized matrix storage types are currently missing. I aim to address this gap, with a particular emphasis on those routines which are key dependencies of LAPACK routines, such as dgetc2, dgbtf2, and others. A key outcome of this project will be a set of performance-optimized APIs for lower-level linear algebra operations which will subsequently help facilitate the development of high-performance machine learning and statistical analysis libraries and applications supporting execution on the web.",
          "student_name": "Shabareesh Shetty",
          "code_url": null,
          "proposal_id": "wtSZ7pS6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NJC5LuLO"
        }
      ]
    },
    {
      "name": "Synfig",
      "image_url": "https://summerofcode.withgoogle.com/media/org/synfig/ohcj3eigerib4jym-360.png",
      "image_background_color": "#ffffff",
      "description": "Open-source 2D animation software",
      "url": "https://synfig.org",
      "category": "Media",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/synfig",
      "ideas_url": "https://github.com/synfig/synfig-docs-dev/blob/master/docs/gsoc/2025/ideas.rst",
      "guide_url": "https://synfig-docs-dev.readthedocs.io/en/latest/gsoc/2025/getting-started.html",
      "topics": ["2d/3d graphics", "animation", "vector graphics"],
      "technologies": ["python", "c++", "gtk", "gtkmm"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://forums.synfig.org/t/gsoc-2025-google-summer-of-code-2025/16119",
      "twitter_url": "https://twitter.com/synfig",
      "blog_url": "https://www.synfig.org/news/",
      "facebook_url": "https://www.facebook.com/synfig.org",
      "num_projects": 2,
      "projects": [
        {
          "title": "Brush tool",
          "short_description": "This project will deliver a performant integrated Raster Brush Tool alongside a basic Brush Profile Editor. The core implementation uses a real-time...",
          "description": "This project will deliver a performant integrated Raster Brush Tool alongside a basic Brush Profile Editor. The core implementation uses a real-time overlay preview for smooth interaction and a robust atomic command structure enabling multiple user-selectable undo modes. Key deliverables include the core draw/erase tool, the editor for viewing/modifying key brush parameters , support for standard brush presets and parameters , reliable undo functionality across implemented modes, and fully animatable raster output integrated into synfig.",
          "student_name": "Abdelhadi Wael",
          "code_url": null,
          "proposal_id": "EYGeVm2N",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fxeP8E73"
        },
        {
          "title": "macOS app bundle (175 hours)",
          "short_description": "The current macOS app bundle creation process for Synfig relies on an outdated Bash script that is slow, error-prone with incorrect paths, and lacks...",
          "description": "The current macOS app bundle creation process for Synfig relies on an outdated Bash script that is slow, error-prone with incorrect paths, and lacks code signing, hindering efficient distribution and user trust. This project aims to replace the script with a robust, automated solution to streamline bundle generation, ensure macOS security compliance, and enhance the native user experience. By leveraging Python for dependency collection, C++ for environment setup, and CMake/CPack for packaging, the project will deliver a signed, distributable SynfigStudio.app bundle. Key improvements include faster dependency gathering, proper code signing, embedded environment setup, Python/lxml integration, and macOS-native interface enhancements.\n\nApproach:\n\t•\tDevelop a Python script to efficiently collect and stage dependencies, optimizing with caching and parallelization.\n\t•\tImplement code signing in reverse dependency order using codesign, including Python and lxml binaries.\n\t•\tRemove the external launcher script by embedding environment setup in the C++ entry point.\n\t•\tPackage Python and lxml into the bundle, ensuring compatibility and signing.\n\t•\tIntegrate CPack into CMake to generate a polished .dmg installer.\n\t•\tEnhance the UI with macOS-native menu bar and window behaviours using GTK.\n\nDeliverables:\n\t•\tA CMake/CPack-based build system producing a signed SynfigStudio.app bundle.\n\t•\tA Python script for automated dependency collection and path rewriting.\n\t•\tCode signing support for all binaries, including Python and lxml.\n\t•\tEmbedded environment setup within SynfigStudio, eliminating the launcher script.\n\t•\tA bundled Python runtime with lxml, fully signed and functional.\n\t•\tA distributable .dmg installer generated via CPack.\n\t•\tmacOS-native UI improvements (e.g., menu bar, shortcuts, dialogs boxes).\n\t•\tComprehensive documentation covering installation, usage, and build instructions.",
          "student_name": "Nitish Itankar",
          "code_url": null,
          "proposal_id": "pZDZv4kb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EqL2LlYZ"
        }
      ]
    },
    {
      "name": "OpenStreetMap",
      "image_url": "https://summerofcode.withgoogle.com/media/org/openstreetmap/ihw4tczyumj0yx81-360.png",
      "image_background_color": "#ffffff",
      "description": "Create and distribute free geodata for the world",
      "url": "https://www.openstreetmap.org/",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/openstreetmap",
      "ideas_url": "https://wiki.openstreetmap.org/wiki/Google_Summer_of_Code/2025/Project_ideas",
      "guide_url": "https://wiki.openstreetmap.org/wiki/Google_Summer_of_Code/2025",
      "topics": ["databases", "web", "ui", "geodata"],
      "technologies": ["python", "javascript", "java", "c++", "rust"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://community.openstreetmap.org/",
      "twitter_url": "",
      "blog_url": "https://blogs.openstreetmap.org/",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "Nominatim: Transliteration of Search Results",
          "short_description": "OpenStreetMap (OSM) commonly stores names of streets, places, and points of interest in their local language and script. As a result, users searching...",
          "description": "OpenStreetMap (OSM) commonly stores names of streets, places, and points of interest in their local language and script. As a result, users searching in unfamiliar regions may receive results that are unreadable—especially when those names are rendered in non-Latin scripts like Cyrillic, Arabic, or Chinese. This project will enhance Nominatim, OSM’s geocoding engine, by adding transliteration support to its search results.\n\nThe goal is to detect when names are in a script unfamiliar to the user and provide a readable transliteration alongside the original. This involves detecting the script of place names, selecting an appropriate transliteration library (e.g., pyicu, unidecode), and integrating a new transliterated_name field into Nominatim’s output format. The solution will be designed to be modular and extensible to multiple languages and target scripts.\n\nDeliverables include a working transliteration pipeline, user-configurable options, improved search result formatting, robust test coverage, and complete documentation. This will make OpenStreetMap data more accessible to users worldwide by bridging language and script barriers during location search.",
          "student_name": "anqixu",
          "code_url": null,
          "proposal_id": "zFJh4Fe9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hnNINYNC"
        },
        {
          "title": "Temporary  Road  Closures  Database  and  API",
          "short_description": "The Temporary Road Closures Database and API project addresses a critical gap in the OpenStreetMap (OSM) ecosystem by creating a centralized,...",
          "description": "The Temporary Road Closures Database and API project addresses a critical gap in the OpenStreetMap (OSM) ecosystem by creating a centralized, real-time database and web service to manage temporary road closures caused by construction, accidents, and events. The system will leverage PostgreSQL for robust geospatial data storage, provide a RESTful API using FastAPI with OpenLR standard for universal compatibility, and include a user-friendly web interface for community submissions and real-time closure viewing. Additionally, a prototype integration with the OsmAnd navigation app will demonstrate practical utility by enabling dynamic routing adjustments around closures. By project completion, deliverables will include a functional database, API, web interface, and a demonstrable OsmAnd integration, significantly enhancing routing accuracy and safety for OSM users.",
          "student_name": "Archit Rathod",
          "code_url": null,
          "proposal_id": "gRSNgXhx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tF4ccCqZ"
        },
        {
          "title": "Modernize the 3D Model Repository",
          "short_description": "3DMR is a repository for 3D models and their metadata, for use by the community for improving the quality of 3D rendering of maps. This project was...",
          "description": "3DMR is a repository for 3D models and their metadata, for use by the community for improving the quality of 3D rendering of maps. This project was originally developed as part of Google Summer of Code 2017 by Pedro Amaro, under the mentorship of the OpenStreetMap community with Jan Marsch and Tobias Knerr as mentors. The project was aimed at creating a repository for 3D models and their metadata, for use by the community for improving the quality of 3D rendering of maps.\nBut, has since been abandoned for last 6 years, still clinging on Django2.0.5. This proposal aims to improve the 3DMR by adopting glTF as the format for 3D models, and to upgrade the codebase to current versions of Django and Oauth.",
          "student_name": "Ayush Dhar Dubey",
          "code_url": null,
          "proposal_id": "aPnS4hMI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZJyIdiWg"
        },
        {
          "title": "Modernize iD Editor Session Management with IndexedDB",
          "short_description": "The iD Editor is a powerful tool used by thousands to contribute to OpenStreetMap, but its current session management system relies on localStorage,...",
          "description": "The iD Editor is a powerful tool used by thousands to contribute to OpenStreetMap, but its current session management system relies on localStorage, which poses several usability and technical challenges. With a small 5MB storage limit and synchronous behavior that blocks the main thread, users often face sluggish performance and occasional data loss. These issues become even more pronounced when users work across multiple browser tabs, where localStorage provides no real synchronization, leading to conflicts and inconsistent states between sessions.\n\nThis project proposes to modernize session management in iD by adopting IndexedDB for efficient, large-scale, and non-blocking data storage. A key focus will be enabling real-time multi-tab editing support using the BroadcastChannel API to keep changes synchronized across tabs without clobbering data. The project will also improve crash resilience, ensure safe cleanup of resources using modern browser lifecycle events like pagehide, and introduce a graceful fallback for older browsers. Together, these improvements aim to make iD more robust, responsive, and aligned with modern web standards while keeping the editing experience reliable and smooth for all contributors.",
          "student_name": "Deeptanshu Sankhwar",
          "code_url": null,
          "proposal_id": "B1DwNbPA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VxNSENnT"
        },
        {
          "title": "Ferrostar - Snapshot Recording, Testing, and Replay",
          "short_description": "This project aims to enhance Ferrostar by implementing a session recording and replay system for debugging and testing navigation flows. The system...",
          "description": "This project aims to enhance Ferrostar by implementing a session recording and replay system for debugging and testing navigation flows. The system will maintain a rolling in-memory buffer that continuously records session data, allowing developers to capture interactions leading up to an error or manually enable recording for testing. The recorded sessions can later be replayed to reproduce bugs, validate behavior across versions, and automate regression testing.\nBy providing an efficient and platform-independent recording system, this project will improve the developer experience and make Ferrostar more robust for production use",
          "student_name": "Kandarp Jindal",
          "code_url": null,
          "proposal_id": "9UdPFN9L",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Bsi6d3Fr"
        },
        {
          "title": "Photos in Every Door",
          "short_description": "The \"Photos in Every Door\" project aims to enrich OpenStreetMap by enabling mappers to capture and upload two types of images: photo notes linked to...",
          "description": "The \"Photos in Every Door\" project aims to enrich OpenStreetMap by enabling mappers to capture and upload two types of images: photo notes linked to OSM notes via StreetComplete’s hosting service and object photographs with metadata tagging via Panoramax. This integration not only enhances data accuracy and validation but also streamlines community contributions through secure OAuth authentication via a dedicated proxy server. Additionally, targeted UI/UX improvements in the Every Door app will create a more intuitive and engaging user experience. Ultimately, this project will provide a scalable, robust foundation for visual mapping contributions, fostering a more dynamic and accurate OpenStreetMap ecosystem.",
          "student_name": "Soham Dixit",
          "code_url": null,
          "proposal_id": "srvQWM1n",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8LuEQxXz"
        }
      ]
    },
    {
      "name": "Unicode, Inc.",
      "image_url": "https://summerofcode.withgoogle.com/media/org/unicode-inc/cev3zg8tjatag4mt.png",
      "image_background_color": "#ffffff",
      "description": "Bringing internationalization to software!",
      "url": "https://home.unicode.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/unicode-inc",
      "ideas_url": "https://docs.google.com/document/u/2/d/e/2PACX-1vQbj0-VFkRjYdnivuPPXuHM3IW4LuHxK6E0LVO3O8ZU_-k8CYH_eFMZ_IwFg_r-oBw3FCEOmHCb5jrn/pub",
      "guide_url": "https://docs.google.com/document/d/e/2PACX-1vQwQhjcjYENWYTfA4_FEsyVPZzqhp-QAyeVfPcYR9x0RFqL4mhby1hWKatjiG6Itwkuz8Q4ZXSF_IZz/pub",
      "topics": [
        "compilers",
        "linguistics",
        "languages",
        "internationalization"
      ],
      "technologies": ["java", "c++", "rust", "unicode"],
      "irc_channel": "https://unicode-org.slack.com",
      "contact_email": "mailto:GSOC@unicode.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/unicode",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "Leveraging LLMs for Locale Data Validation",
          "short_description": "Unicode supports essential global functions—like date/time formatting, text segmentation, and measurement conversions—by publishing over a million...",
          "description": "Unicode supports essential global functions—like date/time formatting, text segmentation, and measurement conversions—by publishing over a million locale data entries. However, ensuring the quality of this vast dataset can be challenging. Our proposal harnesses the power of large language models (LLMs) to automate quality control. By querying an LLM to produce outputs akin to those in CLDR/ICU, we will develop an AI-driven classifier that flags entries deviating from expected patterns. The deliverables include an automated validation engine, a denoising module for refining results, and, as a stretch goal, cloud-based one-click automation. This tool will empower translators and developers by providing reliable, expert-level insights into locale data accuracy.",
          "student_name": "Avinash Kalivarapu",
          "code_url": null,
          "proposal_id": "Tkn4j7lj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fBhRGs2P"
        },
        {
          "title": "Add Support for Malayalam in Unicode Inflection",
          "short_description": "This proposal aims to add support for Malayalam in the Unicode Inflection project, which is important for ensuring accurate automated text formatting...",
          "description": "This proposal aims to add support for Malayalam in the Unicode Inflection project, which is important for ensuring accurate automated text formatting and grammatical correctness in multiple languages. Currently, Malayalam is not supported, despite being spoken by over 35 million people, primarily in Kerala, India. The project will involve extracting data from Wikidata, creating inflection rules, implementing these rules in C++ and C, and conducting testing to ensure accuracy. The expected outcome is to enable correct grammatical inflections for Malayalam nouns, pronouns, verbs, adjectives, and adverbs, improving tools such as chatbots, automated translation, and assistive technologies. The project will benefit Malayalam speakers worldwide by improving communication tools and making the language more accessible in computer applications.",
          "student_name": "Deona Julary",
          "code_url": null,
          "proposal_id": "SzViZy3m",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XdytKT55"
        },
        {
          "title": "Create distribution packages of Unicode Inflection",
          "short_description": "The Unicode Inflection project currently provides its code in source form, which can be a challenge for users and developers who want a simple,...",
          "description": "The Unicode Inflection project currently provides its code in source form, which can be a challenge for users and developers who want a simple, ready-to-use solution. The goal of this project is to create automated, cross-platform packaging for the library, making it easier for users to install and use across Linux, macOS, and Windows.\n\nI will achieve this by utilizing CMake to streamline the build process, creating CMake-based scripts that can automatically generate compressed source and binary distribution packages for each platform. The final deliverables will include a set of tools to package the library and data files, along with clear documentation on how to build and distribute the packages. This work will improve accessibility for new users, save time for developers, and enhance the overall usability of the Unicode Inflection project.",
          "student_name": "Hussain A.",
          "code_url": null,
          "proposal_id": "MtMoiGiu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7mF9y3DH"
        },
        {
          "title": "Using AI for Unicode Spoof Detection",
          "short_description": "Attackers can exploit homoglyphs, or visually similar characters, to perform social engineering attacks or evade spam and plagiarism detectors....",
          "description": "Attackers can exploit homoglyphs, or visually similar characters, to perform social engineering attacks or evade spam and plagiarism detectors. Unicode contains over 200 writing systems (scripts). Many of these scripts, such as Latin (in western Europe) and Cyrillic (in eastern Europe), contain characters that are look-alikes. This project aims to develop an AI tool to detect confusable characters and ultimately improve Unicode security mechanisms automatically.",
          "student_name": "Om Doiphode",
          "code_url": null,
          "proposal_id": "toGjPISX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mZOMNEgx"
        },
        {
          "title": "Unicode Character Visualizer App and Multilingual Text Rendering Tester",
          "short_description": "This proposal focuses on developing two essential tools using Flutter: the Unicode Character Visualizer App and the Multilingual Text Rendering...",
          "description": "This proposal focuses on developing two essential tools using Flutter: the Unicode Character Visualizer App and the Multilingual Text Rendering Tester App.\n\nProblem Statement\n\nMany developers, designers, and linguists lack accessible tools to browse Unicode characters, view detailed metadata, and compare how multilingual text is rendered across devices and fonts.\n\nText rendering inconsistencies often arise across platforms, impacting accessibility and readability.\n\nSolution\n\nUnicode Character Visualizer App:\n\nProvide a comprehensive and interactive platform to search and visualize Unicode characters.\n\nDisplay essential metadata such as codepoints, descriptions, and language support.\n\nOffer font rendering previews for accurate character representation.\n\nMultilingual Text Rendering Tester App:\n\nAllow users to input multilingual text and visualize rendering differences across various fonts and devices.\n\nBenchmark rendering performance and identify inconsistencies.\n\nDeliverables\n\nFully functional Unicode Character Visualizer App with search, character details, and font rendering features.\n\nMultilingual Text Rendering Tester App with input comparison, font analysis, and reporting functionalities.\n\nComprehensive documentation, including user guides and API integration manuals.\n\nWell-tested codebase with unit, widget, and integration tests.\n\nThis project will contribute to Unicode, Inc. by providing essential tools for ensuring Unicode character accuracy, supporting linguistic diversity, and improving cross-platform text rendering. I am excited about the opportunity to collaborate and contribute to the Unicode ecosystem.",
          "student_name": "Popoola Precious",
          "code_url": null,
          "proposal_id": "2QKavPI2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/b1FwaPSP"
        },
        {
          "title": "Segmentation goes from sequential to functional",
          "short_description": "With the emergence of Internet of Things devices, lightweight models have become increasingly vital. This project focuses on building computationally...",
          "description": "With the emergence of Internet of Things devices, lightweight models have become increasingly vital. This project focuses on building computationally efficient text segmentation models, enabling them to run effectively on devices with limited resources like memory, processing power, and battery life. I aim to improve the current model and expand support to 2-3 additional languages, potentially benefitting hundreds of millions more people. This will be achieved by restructuring the model using TensorFlow's Functional API, which facilitates the implementation of Conditional Random Fields. Additionally, I will be creating an intuitive model evaluation script to offer a customizable experience for selecting the most suitable model.",
          "student_name": "Shenghong Liu",
          "code_url": null,
          "proposal_id": "ujiR74Sr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ze8ZmaKl"
        }
      ]
    },
    {
      "name": "libssh",
      "image_url": "https://summerofcode.withgoogle.com/media/org/libssh/kcfc8lhxh3uyozbu-360.png",
      "image_background_color": "#ffffff",
      "description": "The SSH library",
      "url": "https://www.libssh.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/libssh",
      "ideas_url": "https://www.libssh.org/development/google-summer-of-code/",
      "guide_url": "https://www.libssh.org/development/google-summer-of-code/",
      "topics": ["security", "cryptography"],
      "technologies": ["c", "git", "ci", "ssh", "sftp"],
      "irc_channel": "https://matrix.to/#/!yBkUIMByeIPFgUzcVM:matrix.org?via=matrix.org",
      "contact_email": "",
      "mailing_list": "https://www.libssh.org/communication/",
      "twitter_url": "",
      "blog_url": "https://www.libssh.org/",
      "facebook_url": "",
      "num_projects": 1,
      "projects": [
        {
          "title": "Support for FIDO/U2F keys on the client side",
          "short_description": "This project aims to implement client-side support for FIDO/U2F authentication in libssh using the libfido2 library. It will introduce functionality...",
          "description": "This project aims to implement client-side support for FIDO/U2F authentication in libssh using the libfido2 library. It will introduce functionality to detect and interact with FIDO authenticators, perform user presence or verification (e.g., touch or PIN), and use these devices for SSH authentication. The final deliverables will include a working implementation, unit and integration tests against an openSSH server, and examples for using the added code.",
          "student_name": "Praneeth Sarode",
          "code_url": null,
          "proposal_id": "NTpximuy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ziHCZkB4"
        }
      ]
    },
    {
      "name": "LabLua",
      "image_url": "https://summerofcode.withgoogle.com/media/org/lablua/thpyrwywpx4z6p6s.png",
      "image_background_color": "#ffffff",
      "description": "Programming Language Research with emphasis on Lua",
      "url": "http://www.lua.inf.puc-rio.br",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/lablua",
      "ideas_url": "https://github.com/labluapucrio/gsoc",
      "guide_url": "https://github.com/labluapucrio/gsoc/blob/main/apply.md",
      "topics": [
        "compilers",
        "scripting languages",
        "kernel scripting",
        "statically-typed languages"
      ],
      "technologies": ["lua", "luarocks", "kernel", "lunatik", "pallene"],
      "irc_channel": "https://matrix.to/#/#lablua:matrix.org",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/g/labluagsoc",
      "twitter_url": "https://twitter.com/labluapucrio",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Ghost in the Macro: Dual-Parser Bicameral Macro System for Teal",
          "short_description": "This project aims to create a robust, high-performance parser combined with an easy-to-use macro system for the Teal programming language. Leveraging...",
          "description": "This project aims to create a robust, high-performance parser combined with an easy-to-use macro system for the Teal programming language. Leveraging a bicameral macro model, the project clearly distinguishes the parsing and macro expansion phases whilst still keeping the syntax streamlined. This enables flexible, powerful compile-time code transformations while maintaining clarity and efficiency in compiler design and performance.",
          "student_name": "Amrit Bhogal",
          "code_url": null,
          "proposal_id": "1z351TdL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kiO8b1Ql"
        },
        {
          "title": "GSoC’25 Proposal: Lunatik HID Framework Implementation",
          "short_description": "This proposal introduces myself and outlines the work I will be doing during the Google Summer of Code 2025. My proposal aims to implement a HID...",
          "description": "This proposal introduces myself and outlines the work I will be\r\ndoing during the Google Summer of Code 2025.\r\nMy proposal aims to implement a HID driver framework for\r\nLunatik, a module that provides a way to binding HID devices using\r\nLua script.",
          "student_name": "Jieming Zhou",
          "code_url": null,
          "proposal_id": "TPLL9619",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/afaakeLj"
        },
        {
          "title": "Lunatik package for Linux distros",
          "short_description": "Lunatik enables scripting the Linux kernel with Lua, offering powerful customization—especially for subsystems like networking. However, limited...",
          "description": "Lunatik enables scripting the Linux kernel with Lua, offering powerful customization—especially for subsystems like networking. However, limited packaging support across major Linux distributions hinders its accessibility.\n\nThis project aims to create Lunatik packages for Ubuntu, OpenWRT, and VyOS, along with RPM-based packages and potential support for other distributions. It will also provide documentation, templates, and best practices to streamline future packaging efforts.\n\nDeliverables:\n\nPackages for Debian (.deb), OpenWRT, VyOS, RPM-based distros, and others (if time permits)\n\nDocumentation and templates for packaging new Lunatik modules\n\nUpstream submission with policy compliance\n\nTesting scripts, distribution-specific validation, and GitHub Actions-based CI/CD pipelines\n\nThis effort will simplify Lunatik adoption and promote Lua-based kernel development across diverse Linux environments.",
          "student_name": "Shivam Vashisth",
          "code_url": null,
          "proposal_id": "PU0YO7W3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/c6od44I5"
        },
        {
          "title": "luamodules/terminal.lua - The Moon In Our Terminal 🌝",
          "short_description": "The current terminal.lua library is much-needed for terminal application development in the Lua landscape. It has a strong foundation yet is still in...",
          "description": "The current terminal.lua library is much-needed for terminal application development in the Lua landscape. It has a strong foundation yet is still in an infant stage. This GSOC, I hope to continue terminal.lua's development, and bring it to a production-ready first release 🎉\n\nMy deliverables: \n🌐 A core library with UTF-8 support, text handling, and terminal I/O\n🎹 Input handling system with key mapping and event processing\n🛠️ Exposed API for users to customizable user keymappings \n🖼️ Component system for building TUIs with Lua-ist styling \n🌍 Cross-platform compatibility (Unix/Windows/Mac)\n📚 Comprehensive documentation and examples\n✅ Test suite ensuring reliability across environments",
          "student_name": "Tín Nguyễn",
          "code_url": null,
          "proposal_id": "dYjHFv9n",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jukGu4Gx"
        },
        {
          "title": "Documentation generator tool for Teal language",
          "short_description": "The goal of this project is to create a documentation generator for the Teal programming language. The generator will extract information from types...",
          "description": "The goal of this project is to create a documentation generator for the Teal programming language. The generator will extract information from types and comments to produce documentation in both Markdown and HTML formats. The tool itself will be written in Teal and will utilize its compiler as the primary source of information. By the end of this project, we will extend the Teal compiler to retrieve all the necessary information for documentation generation. Additionally, we will deliver a CLI tool capable of parsing Teal code files and generating documentation in various formats.",
          "student_name": "uped",
          "code_url": null,
          "proposal_id": "VCJgBwjx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MCJkfE3P"
        }
      ]
    },
    {
      "name": "HumanAI",
      "image_url": "https://summerofcode.withgoogle.com/media/org/humanai/n5oaqivpu4hu4alm-360.png",
      "image_background_color": "#ffffff",
      "description": "AI for the Arts and the Humanities",
      "url": "http://humanai.foundation",
      "category": "Media",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/humanai",
      "ideas_url": "https://humanai.foundation/",
      "guide_url": null,
      "topics": [
        "machine learning",
        "artificial intelligence",
        "ai",
        "Arts",
        "Humanities"
      ],
      "technologies": [
        "python",
        "machine learning",
        "c++",
        "data analysis",
        "artificial intelligence"
      ],
      "irc_channel": "https://app.gitter.im/#/room/#humanai-foundation:gitter.im",
      "contact_email": "",
      "mailing_list": "https://simba3.web.cern.ch/simba3/SelfSubscription.aspx?groupName=humanai-announce",
      "twitter_url": "",
      "blog_url": "http://humanai.foundation",
      "facebook_url": "",
      "num_projects": 15,
      "projects": [
        {
          "title": "End-to-end handwritten text recognition for early modern spanish documents",
          "short_description": "This project focuses on end-to-end Handwritten Text Recognition (HTR) for early modern Spanish manuscripts. Unlike traditional OCR systems, which...",
          "description": "This project focuses on end-to-end Handwritten Text Recognition (HTR) for early modern Spanish manuscripts. Unlike traditional OCR systems, which process isolated characters or lines, end-to-end HTR captures entire documents, preserving not only the text but also structural elements such as layout and reading order. Although this approach holds significant promise for both research and practical applications, it remains underexplored, especially for historical texts.\n\nThis project proposes to apply end-to-end HTR techniques to early modern Spanish manuscripts, a historically rich yet computationally challenging corpus. Leveraging recent advances in deep learning. The project aims to improve recognition accuracy on handwritten and printed texts from this period by building on models which focus on document-wide attention mechanisms, the system will be able to better handle complex layouts and diverse handwriting styles typical of early modern Spanish texts.\n\nUltimately, this research sits at the intersection of machine learning and historical document analysis, contributing both to technical innovation and cultural preservation. By improving the accessibility of early Spanish documents, the project not only supports scholars in the humanities but also contributes to the growing field of AI-driven humanities research. The integration of cutting-edge HTR models into historical workflows can open new possibilities for indexing, searching, and analyzing large volumes of archival material in a scalable, automated fashion.",
          "student_name": "Aniket Junghare",
          "code_url": null,
          "proposal_id": "c5eyjx3g",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/53h89bdk"
        },
        {
          "title": "End to End OCR System using Transformer Models",
          "short_description": "Optical Character Recognition (OCR) technology has revolutionized document digitization. However, existing OCR tools like Adobe Acrobat and Google’s...",
          "description": "Optical Character Recognition (OCR) technology has revolutionized document digitization. However, existing OCR tools like Adobe Acrobat and Google’s Pytesseract, they struggle with historical documents due to variations in font styles, image quality, degradation, and layouts. Text recognition from centuries-old works poses a significant challenge due to the complexity of early non-standard print forms, handwritten text and manuscripts.\nOver the past year, transformer-based models have been fine-tuned to improve transcription accuracy, particularly for degraded and complex historical texts. Training on a diverse dataset that combines expert transcriptions and synthetic data has enabled better generalization across various typographical styles.\nBuilding on this progress, we aim to expand the dataset, to help the model finetune to handle handwritten documents as well. Fine-tuning on larger datasets incorporating diverse typographical styles both printed and handwritten and also implementing Language Modeling & Contextual Understanding for post-processing, allowing for  contextual corrections based on 17th-century grammar to further enhancing the OCR accuracy. Additionally, we plan to develop and deploy a web or mobile-based annotation tool for historians, researchers, and institutions to validate and refine OCR outputs",
          "student_name": "Arsh Ahmed Faisal Khan",
          "code_url": null,
          "proposal_id": "Bx2D55Q1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WvX5G3H0"
        },
        {
          "title": "Healing Stones - Reconstructing digitized cultural heritage artifacts with artificial intelligence",
          "short_description": "This project aims to develop an AI-powered system for the virtual reconstruction of fragmented cultural heritage artifacts, with a focus on Mayan...",
          "description": "This project aims to develop an AI-powered system for the virtual reconstruction of fragmented cultural heritage artifacts, with a focus on Mayan stelae. These artifacts are often discovered in broken, randomly oriented, and partially eroded states, making manual reassembly both time-consuming and imprecise. The proposed solution combines geometric analysis, graph-based fragment matching, and machine learning techniques to automate the reconstruction process. By leveraging 3D scans of the fragments and training models on real geometric descriptors, the system will predict correct alignments and reassemble the stele in a digital space. The project will be implemented using Open3D for 3D processing and PyTorch for neural network training. This work not only aids in archaeological restoration efforts but also contributes to the broader field of digital heritage preservation.",
          "student_name": "atif_khan_20",
          "code_url": null,
          "proposal_id": "SvCkkykm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/elgslkxD"
        },
        {
          "title": "Communication Analysis Tool for Human-AI Interaction Driving Simulator Experiments",
          "short_description": "I propose to make an AI-powered tool that can analyze complex communication data from driving simulator experiments at the Translational Research for...",
          "description": "I propose to make an AI-powered tool that can analyze complex communication data from driving simulator experiments at the Translational Research for Injury Prevention (TRIP) Laboratory. The tool will process high-fidelity audiovisual data from six participants working together in networked simulators. Building on my previous work in audio extraction, transcription, sentiment analysis, and preliminary visualization, I want to create a complete solution that includes strong data pipelines, advanced NLP techniques (such as speaker diarization, NER, and topic modeling), dynamic reporting with interactive visualizations (heat maps, network graphs), and an easy-to-use user interface. The final product will be a fully functional prototype with full documentation that will help researchers learn more about how groups work together, how people talk to each other, and how drivers act in order to improve safety and inform the design of smart systems.",
          "student_name": "eskayML",
          "code_url": null,
          "proposal_id": "ossKqKrj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tDtErLvN"
        },
        {
          "title": "Improving Renaissance Spanish OCR with CNN-RNN Hybrids and Weighted Learning",
          "short_description": "Project Summary: Problem: Renaissance-era Spanish texts remain digitally inaccessible due to modern OCR systems' inability to process archaic glyphs...",
          "description": "Project Summary:\n\n\nProblem: Renaissance-era Spanish texts remain digitally inaccessible due to modern OCR systems' inability to process archaic glyphs (ligatures, obsolete diacritics), degraded prints, and non-standard orthography. This limits scholars’ ability to analyze historical linguistic evolution and cultural heritage.\n\n\nSolution: Develop an open-source OCR system using a CNN-RNN hybrid architecture tailored for 17th-century Spanish. The model integrates weighted learning to address class imbalance (e.g., rare symbols like ſ or ç) and synthetic data augmentation to simulate historical print degradation. \n\n\nKey innovations include:\n\n\nWeighted loss functions (focal loss, class-aware cross-entropy) to prioritize underrepresented characters.\n\n\nRule-based post-processing (e.g., positional substitution of ſ → s).\n\n\nSynthetic training data with historical fonts and degradation simulations, alongside real data\n\n\nDeliverables:\n\n\nA trained OCR model achieving ≥80% character accuracy (CER ≤20%).\n\n\nEvaluation metrics (CER/WER) and symbol-specific performance analysis.\n\n\nCodebase with inference scripts, documentation, and sample transcriptions.\n\n\nImpact: This tool will empower digital humanists, archivists, and linguists to transcribe and analyze historical texts at scale, preserving cultural heritage and enabling new research into early modern Spanish. By open-sourcing the system, we aim to democratize access to underserved historical materials and inspire community-driven improvements.",
          "student_name": "Kate O'Reilly",
          "code_url": null,
          "proposal_id": "jBlXvd9I",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/benininZ"
        },
        {
          "title": "17th Century Spanish text recognition with transformer models",
          "short_description": "This project addresses the challenge of accurately digitizing degraded 17th-century Spanish manuscripts, which suffer from irregular layouts, archaic...",
          "description": "This project addresses the challenge of accurately digitizing degraded 17th-century Spanish manuscripts, which suffer from irregular layouts, archaic grammar, and low scan quality. The solution integrates a hybrid OCR pipeline: a Mask R-CNN model segments text blocks into lines, a fine-tuned TrOCR transformer recognizes printed/handwritten text, and a T5 + LLM hybrid system corrects errors while preserving historical grammar. An open-source annotation tool enables historians to validate outputs and expand datasets. Deliverables include: (1) a production-ready OCR pipeline, (2) post-correction module with fallback strategies, (3) annotation tool for dataset refinement, and (4) comprehensive documentation. This tool will enable scalable, accurate digitization of cultural heritage texts.",
          "student_name": "Kulkarni Pranav P",
          "code_url": null,
          "proposal_id": "xv7wy5Ot",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vz3dxbtz"
        },
        {
          "title": "renAIssance: Synthetic text generation with Generative Models",
          "short_description": "For Historical Manuscripts, limited availability of data a limiting factor in training OCR or Layout Detection models. In this project I propose the...",
          "description": "For Historical Manuscripts, limited availability of data a limiting factor in training OCR or Layout Detection models.\nIn this project I propose the WGAN architecture to generate synthetic renaissance style Image Data which can be used to improve OCR model performance on historical Spanish texts.",
          "student_name": "SaarthakGupta",
          "code_url": null,
          "proposal_id": "VyQ777u0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/tBqjGdfq"
        },
        {
          "title": "Healing Stones – Reconstructing digitized cultural heritage artifacts with artificial intelligence",
          "short_description": "Cultural heritage artifacts are often fragmented due to time, conflict, and environmental factors, making physical reconstruction challenging and...",
          "description": "Cultural heritage artifacts are often fragmented due to time, conflict, and environmental factors, making physical reconstruction challenging and sometimes impossible. This project, Healing Stones – Reconstructing digitized cultural heritage artifacts with AI, aims to build an automated pipeline to digitally reassemble such artifacts using 3D scanned point cloud data.\n\nThe solution involves preprocessing the data, performing pairwise fragment alignment using Iterative Closest Point (ICP), and chaining high-confidence matches into a complete global assembly. Post-processing steps like outlier removal, downsampling, and visualization will produce a clean and optimized 3D model.\n\nDeliverables include an automated reconstruction pipeline, alignment logs, a final .PLY model, and full documentation. The project will empower archaeologists and researchers with an open-source tool for preserving and studying cultural artifacts digitally.",
          "student_name": "Satvik Nanda",
          "code_url": null,
          "proposal_id": "qNUqUAJW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hI7Ak1CO"
        },
        {
          "title": "Automating text recognition & transliteration of historical documents with weighted CRNN models.",
          "short_description": "This project aims to address the challenge of text recognition from historical Spanish printed sources dating back to the seventeenth century, a...",
          "description": "This project aims to address the challenge of text recognition from historical Spanish printed sources dating back to the seventeenth century, a domain where existing Optical Character Recognition (OCR) tools often fail due to the complexity and variability of the texts. Leveraging hybrid end-to-end models based on a combination of \"Weighted CRNN architecture\" and \"CTC based beam-search decoding\", this project seeks to develop advanced machine learning techniques capable of accurately transcribing non-standard printed text. The final objective is to create an \"end-to-end solution/product\" for users, to directly scan a page and obtain its transcription using a smart AI tool.",
          "student_name": "ShashankShekharSingh",
          "code_url": null,
          "proposal_id": "KHrIDNDT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GjZqgamc"
        },
        {
          "title": "Text Recognition with Transformer Models for Efficient Deployment",
          "short_description": "This project addresses the challenge of making advanced Transformer-based OCR technology for historical documents accessible to non-technical users...",
          "description": "This project addresses the challenge of making advanced Transformer-based OCR technology for historical documents accessible to non-technical users on standard hardware. Despite significant advances in OCR accuracy for complex historical texts, current solutions remain inaccessible to many historians, archivists, and researchers due to technical barriers and hardware requirements.\n\nThe solution involves developing an optimized, user-friendly OCR system specifically for historical documents through three main approaches: (1) implementing advanced model optimization techniques for efficient CPU inference, including kernel fusion, weight pruning, and knowledge distillation; (2) creating cross-platform deployment options for mobile devices and web browsers; and (3) developing an intuitive application interface with preprocessing controls and interactive correction capabilities.\n\nDeliverables will include:\n\n1) A quantized OCR model achieving at least 4x speedup on CPU with <1% accuracy loss.\n2) Browser-based inference capability: An enhanced Streamlit application with batch processing, export options and 1 click OCR.\n3) A benchmark suite comparing performance across hardware configurations\n4) Comprehensive documentation and tutorials for non-technical users\nThis project will democratize access to cutting-edge OCR technology, enabling broader participation in historical document digitization and analysis without specialized technical expertise.",
          "student_name": "Utsav Rai",
          "code_url": null,
          "proposal_id": "9exeMlOt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SWLdu59R"
        },
        {
          "title": "AI-Powered Behavioral Analysis for Mental Health Crisis Detection and Geospatial Trend Analysis",
          "short_description": "This project aims to build an AI-driven behavioural monitoring system to detect mental health, suicide, and substance use crises in real time using...",
          "description": "This project aims to build an AI-driven behavioural monitoring system to detect mental health, suicide, and substance use crises in real time using social media data. It will analyse engagement patterns and crisis-related language using NLP (TextBlob, BERT, LDA) and geotag posts for mapping regional distress trends. Deliverables include a sentiment and risk classification pipeline, geospatial heatmaps, and an interactive dashboard to help public health teams proactively identify and respond to emerging crises.",
          "student_name": "Vishnu Sankhyan",
          "code_url": null,
          "proposal_id": "EvNNMJGL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/w3ZCPSZb"
        },
        {
          "title": "Coding Actions and Fatalities in Militarized Interstate Confrontations",
          "short_description": "This project builds a fully explainable NLP pipeline to identify and classify Military-Involved Conflicts (MIC) from raw text articles. Unlike...",
          "description": "This project builds a fully explainable NLP pipeline to identify and classify Military-Involved Conflicts (MIC) from raw text articles. Unlike pretrained models, it uses a custom heuristic approach—extracting countries, actions, dates, fatalities, and sentiment based on rule-based logic. Though this results in longer processing times, it ensures complete transparency, flexibility, and interpretability, which is critical for social science and humanitarian research. The pipeline can later be scaled using models like BERT to enhance classification while retaining its explainable foundation.",
          "student_name": "wJoshua",
          "code_url": null,
          "proposal_id": "PrFGxrTN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Aec3lKEK"
        },
        {
          "title": "ArtExtract",
          "short_description": "This project aims to enhance the analysis of multispectral paintings by detecting hidden images and understanding their structural characteristics....",
          "description": "This project aims to enhance the analysis of multispectral paintings by detecting hidden images and understanding their structural characteristics. While previous GSoC efforts utilized CNN-based Siamese networks for layer similarity learning, such models often struggle to capture high-level semantic and structural relationships critical to interpreting overpainted or restored artworks.\n\nTo address this limitation, this project proposes a Graph Neural Network (GNN)-based Siamese architecture that models both local features and their spatial/spectral relationships in graph form. The pipeline will begin with preprocessing multispectral data into region-based graphs, followed by training a GNN-Siamese model on the Multispectral Imaging (MSI) dataset using weak supervision.\n\nThe model will then be generalized to unlabeled datasets (e.g., CAVE, Harvard) through few-shot adaptation, and further enhanced via self-supervised pretraining using large-scale RGB art datasets (e.g., WikiArt, NGA), with pseudo-label generation for semi-supervised learning.",
          "student_name": "YANG MING-CHUN",
          "code_url": null,
          "proposal_id": "I90pCKLi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7NT6U2W1"
        },
        {
          "title": "AI-Powered Behavioral Analysis for Crisis Detection and Prevention",
          "short_description": "This project aims to develop an AI-powered system that supports early detection and ongoing monitoring of suicide, substance use, and mental health...",
          "description": "This project aims to develop an AI-powered system that supports early detection and ongoing monitoring of suicide, substance use, and mental health crises through social media analysis. By combining behavioral tracking, natural language processing (NLP), and geospatial trend mapping, the system will extract high-risk language patterns, identify regions of escalating distress, and visualize crisis trends over time. The final deliverables will include a structured crisis dataset, predictive risk indicators, and an interactive dashboard to help clinicians, nonprofits, and public health agencies make timely and informed decisions. This project addresses the limitations of delayed traditional health data by providing real-time insights into emerging community crises.",
          "student_name": "Yixing (Spark) Fan",
          "code_url": null,
          "proposal_id": "RintC6Ym",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oiAp4mUW"
        },
        {
          "title": "End-to-End Historical OCR Pipeline with 80%+ Accuracy",
          "short_description": "The objective of this project is to develop a robust, end-to-end OCR pipeline capable of achieving at least 80% accuracy in recognizing characters...",
          "description": "The objective of this project is to develop a robust, end-to-end OCR pipeline capable of achieving at least 80% accuracy in recognizing characters from early modern Spanish documents. The focus will be on leveraging recent advances in Handwritten Document Recognition (HDR), an emerging subfield of document analysis that integrates document layout and text recognition into a single model. By exploring both HDR-based and traditional approaches, the project aims to create a practical solution for historical document transcription as part of the RenAIssance initiative.",
          "student_name": "Yukinori Yamamoto",
          "code_url": null,
          "proposal_id": "IwIcjtSD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XCiS1TH7"
        }
      ]
    },
    {
      "name": "Mixxx",
      "image_url": "https://summerofcode.withgoogle.com/media/org/mixxx/ivlj1kl8jabpmfs9-360.png",
      "image_background_color": "#ffffff",
      "description": "DJ Mixing App With Powerful Features For All DJs",
      "url": "https://mixxx.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/mixxx",
      "ideas_url": "https://github.com/mixxxdj/mixxx/wiki/GSOC-2025-Ideas",
      "guide_url": "https://github.com/mixxxdj/mixxx/wiki/Gsocadvice",
      "topics": ["music", "dj", "streaming"],
      "technologies": ["javascript", "c++", "qt", "pytorch", "onnx"],
      "irc_channel": "https://mixxx.zulipchat.com/",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://mixxx.org/news/",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Auto Completion for the Genre track metadata",
          "short_description": "Mixxx currently allows assigning a single free-text genre to each track, which often leads to inconsistencies such as duplicate or fragmented...",
          "description": "Mixxx currently allows assigning a single free-text genre to each track, which often leads to inconsistencies such as duplicate or fragmented categories (e.g., \"Hip-Hop\", \"Hip Hop\", \"Hiphop\"). This project proposes a complete rework of genre metadata handling, introducing three key features: local genre autocompletion with fuzzy matching, support for assigning multiple genres to a single track, and optional online genre suggestions using MusicBrainz and Discogs APIs. As a long-term extension, the project also explores a customizable genre mapping layer, enabling users to define how external genres are grouped or renamed according to personal preferences. Deliverables include: a redesigned genre database schema, enhanced UI for editing and filtering genres, API integration for genre lookups, and internal tools for mapping and translation of genre labels.",
          "student_name": "Antonio Giordano",
          "code_url": null,
          "proposal_id": "pqo6cM0f",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/sHcUR4s0"
        },
        {
          "title": "Resample options for Mixxx",
          "short_description": "Mixxx uses a linear interpolation when scratching. This is blazing fast, but the sound can be improved by providing more accurate resampling...",
          "description": "Mixxx uses a linear interpolation when scratching. This is blazing fast, but the sound can be improved by providing more accurate resampling techniques. \n\nThis project involves a review of the currently used resample libraries RubberBand and Soundtouch and a comparison with other candidates. The one with the best Sound/CPU load trade off shall be selected. \n\nAnother key requirement is supporting on the fly changing of the sample rate without artefacts. This project may also involve contributing a missing feature to an existing resample library.\n\nhttps://github.com/mixxxdj/mixxx/issues/9328",
          "student_name": "Armaan_Chowfin",
          "code_url": null,
          "proposal_id": "T4sKTktE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VUpg9Wv5"
        },
        {
          "title": "Converting Demucs v4 (Hybrid Transformer) AI model to ONNX format",
          "short_description": "Demucs v4 is a state-of-the-art open-source music source separation model developed by Antoine Défossez. While it provides exceptional quality in...",
          "description": "Demucs v4 is a state-of-the-art open-source music source separation model developed by Antoine Défossez. While it provides exceptional quality in separating audio into stems, it is currently implemented in PyTorch and therefore cannot be used directly in C++ applications or run efficiently on hardware accelerators through ONNX Runtime. This project aims to bridge that gap.\n\nExporting the model to ONNX will allow Mixxx to integrate stem separation directly into its platform, opening up use cases like live stem manipulation, AI-assisted mixing, and educational visualization tools. Moreover, embedding the model in a minimal C++ command-line application will serve as a reference for further integration into audio applications.",
          "student_name": "dhunstack",
          "code_url": null,
          "proposal_id": "4OjxIcl5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lRQpeA7K"
        }
      ]
    },
    {
      "name": "Eclipse Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/eclipse-foundation/xo1ntao7atq7yjg2-360.png",
      "image_background_color": "#ffffff",
      "description": "The Global Open Source Foundation",
      "url": "https://www.eclipse.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/eclipse-foundation",
      "ideas_url": "https://gitlab.eclipse.org/eclipsefdn/emo-team/gsoc-at-the-ef/-/issues/?sort=due_date&state=opened&label_name%5B%5D=Project%20Idea&label_name%5B%5D=GSoC%202025&first_page_size=50",
      "guide_url": "https://gitlab.eclipse.org/eclipsefdn/emo-team/gsoc-at-the-ef/-/blob/main/README.md",
      "topics": [
        "robotics",
        "automotive",
        "tools",
        "cloud native java",
        "iot & edge"
      ],
      "technologies": [
        "java",
        "rtos",
        "eclipsejavaide",
        "jakartaee",
        "softwaredefinedvehicles"
      ],
      "irc_channel": "",
      "contact_email": "mailto:emo@eclipse-foundation.org",
      "mailing_list": "https://dev.eclipse.org/mailman/listinfo/soc-dev",
      "twitter_url": "https://twitter.com/EclipseFdn",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "GlitchWitcher: BugCache/FixCache and REPD for AI Bug Prediction",
          "short_description": "My project will implement, compare, and ultimately combine two complementary approaches to software defect prediction: the BugCache/FixCache...",
          "description": "My project will implement, compare, and ultimately combine two complementary approaches to software defect prediction: the BugCache/FixCache algorithm and the Reconstruction Error Probability Distribution (REPD) model. Building on my preliminary research across Java repositories including OpenJ9 and OpenJDK, I will first revive and enhance BugTools to implement the BugCache algorithm, which predicts defects based on historical patterns. I will then implement the REPD model, which uses code metrics and reconstruction error to identify potentially defective code.\n\nAfter evaluating both implementations independently across multiple Eclipse codebases, I will develop a novel hybrid approach that leverages the strengths of both methods. This integrated solution will combine BugCache's temporal pattern recognition with REPD's code characteristic analysis, using a dynamic weighting system that adapts to each repository's unique characteristics. \n\nThe final outcome will be an integrated verification workflow (GlitchWitcher) that runs these analyses against repositories and pull requests, providing a unified prediction model that flags areas needing increased testing and review attention. This tool will provide developers with early, accurate warnings about potentially defective code before it undergoes testing or review, ultimately improving software quality and development efficiency.",
          "student_name": "anirudh_sengar",
          "code_url": null,
          "proposal_id": "bYh10Nyo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6AKlDH6U"
        },
        {
          "title": "Dynamic UI generation based on IoT device descriptions",
          "short_description": "This project aims to create a web-based tool that can make user interfaces from \"Thing Descriptions\" (TDs) - a term from the Web of Things standards....",
          "description": "This project aims to create a web-based tool that can make user interfaces from \"Thing Descriptions\" (TDs) - a term from the Web of Things standards. Unlike other tools out there, ours will handle multiple things at once so users can monitor and control their IoT setups from one screen. The project will develop the WoT UI component library that can be reused and Eclipse Thingweb platform with an entirely device driven dashboard and UI components that can be dynamically adjusted based on device capabilities without any coding/manual selection needed for new devices.\nDeliverables include:\nA Handy Web App to Create User Interfaces\nA Library to Power UI for WoT \nReal-time interaction using HTTP and WebSocket protocols.\nA UI-Affordance Mapping documentation guide mapping TD elements to UI components.\nAI-powered suggestions for TDs with unknown or irregular structures.",
          "student_name": "Manu Dev",
          "code_url": null,
          "proposal_id": "OpaphKkz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/clMHM0q1"
        },
        {
          "title": "CommitHunter: AI-Powered Commit Debugger",
          "short_description": "The Eclipse OpenJ9 project is a high-performance, scalable Java Virtual Machine (JVM) designed for cloud and enterprise applications, where debugging...",
          "description": "The Eclipse OpenJ9 project is a high-performance, scalable Java Virtual Machine (JVM) designed for cloud and enterprise applications, where debugging test failures can be time-consuming, especially in identifying the exact commit responsible for the test failure. CommitHunter aims to automate this process by first implementing a rule-based system using string matching and binary search to efficiently detect faulty commits. It will then evolve into an AI-driven model, leveraging machine learning trained on historical build data, commit logs, and failure reports to classify commits as \"Likely Problematic\" or \"Safe\". By integrating with GitHub APIs, CommitHunter will automate issue tracking, significantly reducing manual debugging efforts, improving test failure triage, enhancing overall development efficiency and resultant bot will comment accordingly on the git issue while offering a scalable solution for broader adoption.",
          "student_name": "Prashantkumar Khatri",
          "code_url": null,
          "proposal_id": "zwKnUAZo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ux93yt6n"
        },
        {
          "title": "CommitHunter : AI-Powered Commit Debugger",
          "short_description": "CommitHunter is an AI-powered debugging tool that automatically identifies problematic Git commits causing test failures in software projects. When...",
          "description": "CommitHunter is an AI-powered debugging tool that automatically identifies problematic Git commits causing test failures in software projects. When tests fail, developers often spend hours manually analyzing commit history to find the root cause. CommitHunter solves this problem through a three-phase approach: first implementing a rule-based system using string matching and binary search techniques, then enhancing accuracy with machine learning models trained on historical data, and finally integrating the solution with CI/CD pipelines and notification systems.\n\nThe project will deliver: \n(1) A functional rule-based commit analysis system that identifies likely problematic commits between good and bad build points, \n(2) An AI-enhanced model that improves detection accuracy by learning from patterns in commit messages and code changes, and \n(3) A fully integrated solution with GitHub/Jenkins workflows that automatically detects failures and notifies developers with high-confidence results. This tool will significantly reduce debugging time for developers, allowing them to focus on fixing issues rather than finding them.",
          "student_name": "Rashmi_",
          "code_url": null,
          "proposal_id": "YXv4tgiA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ibz4qUJS"
        },
        {
          "title": "Observable Public Cloud Infrastructure for IoT Developers",
          "short_description": "Observable Public Cloud Infrastructure for IoT Developers is a project to enhance the Eclipse Thingweb ecosystem. The overarching goal is to create a...",
          "description": "Observable Public Cloud Infrastructure for IoT Developers is a project to enhance the Eclipse Thingweb ecosystem. The overarching goal is to create a comprehensive observability solution that empowers IoT developers with the tools they need to build, test, and debug Web of Things applications more effectively. By integrating OpenTelemetry into node-wot, enhancing the Test Things infrastructure, and providing intuitive monitoring dashboards, the project aims to solve a critical challenge in IoT development: the lack of visibility into distributed systems behavior. This project will transform the developer experience by providing real-time insights into application performance, protocol behavior, and system health, ultimately leading to more reliable and maintainable IoT solutions.\n\nI've structured my approach into three interconnected layers: the Core Layer integrates OpenTelemetry directly into node-wot to standardize telemetry collection; the Infrastructure Layer enhances Docker Compose configurations with health checks and observability backends; and the Monitoring Layer provides actionable insights through custom dashboards and alerts. Drawing from my experience with AWS services, Azure Monitor, and containerization technologies, I'm confident I can deliver a solution that addresses the unique challenges of IoT observability. I'm particularly excited about making distributed tracing work across different IoT protocols, as this will provide unprecedented visibility into cross-protocol interactions that are common in real-world IoT deployments while working with a team to deliver results!",
          "student_name": "Sai Lalith Kanumuri",
          "code_url": null,
          "proposal_id": "bh7V0LPQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oNCE2drE"
        },
        {
          "title": "Improving the Usability of the State Machine Editor in Eclipse 4diac IDE",
          "short_description": "The 4diac IDE provides several graphical editors to support the development of industrial automation applications based on the IEC 61499 standard....",
          "description": "The 4diac IDE provides several graphical editors to support the development of industrial automation applications based on the IEC 61499 standard. Over the past years, many of these editors—such as the Function Block Network and Interface editors—have been significantly improved. However, the State Machine Editor still lacks the usability refinements seen in other parts of the IDE.\n\nThis project aims to identify and address usability issues in the State Machine Editor, and take inspiration from state-of-the-art tools like Simulink. In addition, the project will explore how the IEC 61499 standard and the 4diac environment could be integrated with Simulink.\n\nDeliverables:\n1, A comprehensive list of usability issues in the current State Machine Editor\n2, Categorized and prioritized improvement plan\n3, Implementation of usability improvements inspired by Simulink’s state machine editing concepts\n4, Technical investigation into possible integration points between Simulink and 4diac\n5, Documentation of findings, changes, and integration ideas\n6, Updated user documentation or tutorials if applicable",
          "student_name": "Sandor Bacsi",
          "code_url": null,
          "proposal_id": "PsDy6Nzk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xa7Qc4Jl"
        },
        {
          "title": "GlitchWitcher: AI-assisted Bug Prediction",
          "short_description": "The \"GlitchWitcher: AI-assisted Bug Prediction\" project aims to develop and compare two distinct approaches for predicting defects in source code:...",
          "description": "The \"GlitchWitcher: AI-assisted Bug Prediction\" project aims to develop and compare two distinct approaches for predicting defects in source code:\nApproach 1: A lightweight, history-based method using the BugCache/FixCache algorithm.\nApproach 2: A sophisticated supervised anomaly detection model based on Reconstruction Error Probability Distribution (REPD).",
          "student_name": "Tayebwa Noah",
          "code_url": null,
          "proposal_id": "775V5TdC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/n5yZIjPY"
        }
      ]
    },
    {
      "name": "Chromium",
      "image_url": "https://summerofcode.withgoogle.com/media/org/chromium-lj/qiwhezblvq2a0jgc-360.png",
      "image_background_color": "#ffffff",
      "description": "Fast, seamless, safe, and reliable web for all",
      "url": "https://chromium.org",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/chromium-lj",
      "ideas_url": "https://docs.google.com/presentation/d/1ozDiULkf2Gi4HH1XA_Ad9O7rQpP9SP0yPEs_dpcBZKM/edit?usp=sharing",
      "guide_url": "https://docs.google.com/document/d/1IOj4hSdPl8h1-8zYK_Gt3OxA0R44SLbmr-ZH3f9yDXM/edit?usp=sharing",
      "topics": ["web", "browser", "operating-system"],
      "technologies": ["python", "javascript", "java", "c++", "git"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://www.chromium.org/developers/technical-discussion-groups/",
      "twitter_url": "https://twitter.com/ChromiumDev",
      "blog_url": "https://blog.chromium.org/",
      "facebook_url": "",
      "num_projects": 15,
      "projects": [
        {
          "title": "Develop fwupd plugin to handle touch firmware updates",
          "short_description": "The project's main target is to start using fwupd plugins to manage and handle the firmware updates, for touch controllers in ChromeOS. Currently,...",
          "description": "The project's main target is to start using fwupd plugins to manage and handle the firmware updates, for touch controllers in ChromeOS. Currently, the way that these firmware updates are handled are using shell scripts that manage the firmware updates, and makes use of external open-source updaters utilities to handle the updates.\n\nThis project aims to build out a handful of fwupd plugins for touch controllers through the fwupd repo, which will then be integrated into ChromeOS. The touch controllers workflow will also be updated accordingly to make use of the newly integrated plugins, and replacing the old touch controllers firmware updaters.",
          "student_name": "<Hamed>",
          "code_url": null,
          "proposal_id": "ptKwPYUn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dLFkwKok"
        },
        {
          "title": "Chrome Extension APIs",
          "short_description": "The Chrome Extensions platform is a vital part of the Chrome browser ecosystem, enabling developers to extend browser functionality. This project...",
          "description": "The Chrome Extensions platform is a vital part of the Chrome browser ecosystem, enabling developers to extend browser functionality. This project aims to implement and improve several Extension APIs and features that are currently not prioritized but would significantly enhance the developer experience.\n\nAfter analyzing the project requirements, I've identified several areas where improvements can be made:\n1. Improvements to chrome://extensions page - Enhancing the developer debugging experience\n2. Improved service worker debugging - Making Manifest V3 service worker development more intuitive\n3, Declarative Net Request API additions - Adding requested filtering capabilities\n4. Side Panel API updates - Implementing requested features to improve developer workflow\n5. Other WebExtensions Community Group APIs - Implementing APIs that have already been standardized in other browsers\n\nMy proposal focuses on implementing these features to improve the developer experience while ensuring cross-browser compatibility through the W3C WebExtensions Community Group standardization process.",
          "student_name": "Amit P",
          "code_url": null,
          "proposal_id": "kdSFOoYk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Z7zhQ3EO"
        },
        {
          "title": "Debug WebUI For Tabstrip states",
          "short_description": "This project aims to develop a read-only WebUI page in Chromium, chrome://tab-debug, that provides a live, structured visualization of the tabstrip...",
          "description": "This project aims to develop a read-only WebUI page in Chromium, chrome://tab-debug, that provides a live, structured visualization of the tabstrip model, including tab groups, selection state, and session restore metadata. By exposing internal C++ model data via a Mojo interface and rendering it in a Lit-based TypeScript frontend, the tool will help developers debug and inspect complex tab behaviors more easily. The solution will include real-time updates, a collapsible tree view, and raw data toggles, while maintaining strict read-only access for safety.",
          "student_name": "Brijesh Giri",
          "code_url": null,
          "proposal_id": "RdL6ipa0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uxcDW4j2"
        },
        {
          "title": "WebGPU Texel Buffers",
          "short_description": "The goal of this proposal is to provide a working prototype of texels buffers which is a new proposed extension in WebGPU API, in Dawn, Chromium's...",
          "description": "The goal of this proposal is to provide a working prototype of texels buffers which is a new proposed extension in WebGPU API, in Dawn, Chromium's WebGPU Engine). This feature will allow WebGPU developers to bind to a buffer allocated in the GPU as a texture for read/write operations.",
          "student_name": "Diego Rodrigues",
          "code_url": null,
          "proposal_id": "mT4l6EOa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ux8wL8V0"
        },
        {
          "title": "GSoC 2025 Proposal - Interaction to Next Paint (INP) subparts",
          "short_description": "Proposal Summary: Interaction to Next Paint (INP) Subparts Problem Statement: The recently introduced Interaction to Next Paint (INP) metric,...",
          "description": "Proposal Summary: Interaction to Next Paint (INP) Subparts\n\nProblem Statement:\nThe recently introduced Interaction to Next Paint (INP) metric, integrated into the Core Web Vitals (CWV) system in 2024, aims at measuring user interaction performance. However, INP lacks granularity, making it difficult for developers to diagnose and address specific latency issues within different stages of event processing and rendering.\n\nSolution Approach:\nTo enhance the diagnostic capabilities of INP, this proposal suggests breaking down the INP metric into its sub-dimensions—input delay, processing time, and presentation delay—by leveraging modifications to Chromium’s Event Timing API. These fine-grained timestamps will be transmitted from the Renderer process to the Browser process via Mojo IPC, eventually integrating these metrics into the UKM metric system and CrUX experimental dataset. The project will involve updating the PageLoadMetricsSender to include detailed timing data for each event, as well as enhancing the UkmPageLoadMetricsObserver to handle both old and new data formats seamlessly.\n\nDeliverables:\n\n1. Prototype Verification: Establish a proof-of-concept for collecting sub-dimension data using Chromium’s debugging environment.\n2. Mojo Protocol Modification: Extend existing IPC interfaces to support new subpart timings.\n3. UKM Integration: Implement new UKM metrics reporting and update relevant configurations.\n4. Test Suite Development: Develop comprehensive tests including Web Platform Tests/WPT cases and unit test coverage.\n5. Performance Regression Testing: Analyze benchmark reports and memory usage to ensure no negative impact on performance.\n6. Documentation & Wrap-up: Provide detailed design documentation and outline plans for integrating improvements into CrUX.",
          "student_name": "Guo Yi",
          "code_url": null,
          "proposal_id": "pCU6f3Hx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vUHz7K5H"
        },
        {
          "title": "Enhancing Chrome Extension APIs",
          "short_description": "The goal of this project is to improve the Chrome Extensions platform by adding new features and updating existing APIs. I will work with Chromium’s...",
          "description": "The goal of this project is to improve the Chrome Extensions platform by adding new features and updating existing APIs. I will work with Chromium’s code (C++) and extensions (JavaScript) while learning from experts. \n The deliverables will include:\nfully implemented features with comprehensive tests, \npotential W3C WebExtensions Community Group standardization.",
          "student_name": "Harsh_Singh",
          "code_url": null,
          "proposal_id": "VCnn2vGD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jEGGgdTB"
        },
        {
          "title": "FedCM API test coverage and flakiness",
          "short_description": "This project aims to enhance the tests made to cover the FedCM API. Currently, there are some units which might be missing coverage across the web...",
          "description": "This project aims to enhance the tests made to cover the FedCM API. Currently, there are some units which might be missing coverage across the web platform test repository and the Chromium build. Our aim is to implement new tests for better coverage and reduce flakiness. Making better tests will reduce that ambiguity and ensure the proper working of the FedCM API. In the process of completing this project, a 100% green dashboard on wpt.fyi will further solidify the standard of tests developed and fixed for the Chromium browser family,\n\nTest Coverage: Comparing the Federated Credential Management API tests with the test suite provided by both, the Chromium project and the Web Platform Tests. Includes compilation of currently untested units.\n\nTest Migration: Migrating internal Chromium tests to external/wpt benefits cross-browser compatibility and standardization. This means adhering to the standard set by WPT and working on clearing all the errors for Chrome on the wpt.fyi dashboard. Another benefit is that Chromium based browsers can use migrated tests instead of starting from scratch while developing tests compatible with their browser.\n\nNew Tests: Writing WPT compatible tests in HTML, JavaScript and Python. It will simulate user actions while interacting with Federated Credential Management flows. This includes all the errors which may be caused due to some unprecedented user action, or edge cases where the Identity Provider faces trouble while sending tokens to the Relying Party. Simulating such scenarios will help provide better coverage and make better tests. Another idea would be communicating with people who faced issues regarding the FedCM API in the Chromium community.\n\nReduction of Flakiness: Reducing test flakiness is essential to increase trust in the test suites provided by Chromium and can be done by categorizing whether a flaky test should be removed entirely, flagged as platform-specific error, or by modifying the Test Expectation file.",
          "student_name": "Jaimukund Bhan",
          "code_url": null,
          "proposal_id": "7xVIyrXd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9O6Emdgd"
        },
        {
          "title": "Add 3rd Party Theme Support for Tab Groups - Chromium",
          "short_description": "The goal of this project is to add support for third-party themes to customize tab group colors in Chromium. Currently, users are limited to a fixed...",
          "description": "The goal of this project is to add support for third-party themes to customize tab group colors in Chromium. Currently, users are limited to a fixed set of predefined tab group colors. This project will enable theme authors to define their own color palettes, offering greater flexibility and personalization.\n\nTo achieve this, I will design an API to support customizable tab group colors, implement validation logic to ensure the correctness of user-defined colors, and generate shades dynamically from a single hue using a state-of-the-art algorithm. These colors will be seamlessly integrated into the browser’s color pipeline. Additionally, I will update the theme storage and retrieval mechanisms to support disk persistence.\n\nThe key deliverables include the API extension, comprehensive tests, and documentation.\nThis feature will greatly enhance how users organize tabs and boost productivity.",
          "student_name": "Jay Kapadia",
          "code_url": null,
          "proposal_id": "Lz9Agiue",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BHEvWNrX"
        },
        {
          "title": "Structured DNS Errors - Kristofer Bjornsson proposal",
          "short_description": "Chrome should implement enough of the emerging Public DNS Errors standards to allow public DNS servers to indicate to clients when certain DNS...",
          "description": "Chrome should implement enough of the emerging Public DNS Errors standards to allow public DNS servers to indicate to clients when certain DNS resolutions are blocked for legal reasons.\nThis project aims to support this emerging standard building from existing tools and functionality already present in Chromium, explicitly requesting Extended DNS Errors (EDE) with all DNS queries and parsing the EDE responses using an existing, but not yet integrated EDE parser which the emerging standards build upon. \nEventually, for the specific EDE error codes for which the emerging standards apply to, a new I-JSON reader will be created to parse the additional information received with the error messages. \nUltimately, the information parsed will be queried by relevant callers, and so a design for an API method for retrieving the data shall be laid out.\nBy the project's end, the commented source code as well as tests will include documentation explaining design choices and usage examples, enabling smooth handoff to active contributors.",
          "student_name": "Kristofer Fannar Bjornsson",
          "code_url": null,
          "proposal_id": "DPmMFDxi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8fROcunH"
        },
        {
          "title": "Enhancing INP Insights for Developers",
          "short_description": "Enhances Interaction to Next Paint (INP) analysis by breaking it into key parts—input delay, event processing time, and rendering delay. It aims to...",
          "description": "Enhances Interaction to Next Paint (INP) analysis by breaking it into key parts—input delay, event processing time, and rendering delay. It aims to expose these details to developers through Chromium's reporting system and Chrome DevTools to improve web performance debugging",
          "student_name": "Mohamed Hany Youns",
          "code_url": null,
          "proposal_id": "vupd9uXm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/J0qI5a9d"
        },
        {
          "title": "ChromeOS Platform Input Device Quality Monitoring",
          "short_description": "This project aims to enhance the reliability of ChromeOS input devices by improving kernel-level logging and using automated tests to validate...",
          "description": "This project aims to enhance the reliability of ChromeOS input devices by improving kernel-level logging and using automated tests to validate firmware behavior and verify upgrade/downgrade procedures. Key objectives include developing better error logging during device probe failures, creating automated tests to verify firmware versions, and ensuring smooth firmware updates. Non-goals include altering the firmware itself or implementing hardware changes. The project focuses solely on refining testing and logging to reduce failures and improve maintainability.",
          "student_name": "Mohammad Gomaa",
          "code_url": null,
          "proposal_id": "xtxOxMIr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uCdIgK7K"
        },
        {
          "title": "Farfetchd: tracing/replay",
          "short_description": "This project enhances the farfetchd service in ChromiumOS by adding support for tracing and replaying disk I/O during application startup. The goal...",
          "description": "This project enhances the farfetchd service in ChromiumOS by adding support for tracing and replaying disk I/O during application startup. The goal is to log system-level disk accesses (at the memory page level) during an application's execution using Linux’s tracefs, and store these traces in a structured format. These traces can then be used to proactively preload data into memory before the application launches, significantly reducing cold start latency.\n\nThe project includes building a tracing API, a replay mechanism using mmap(), a D-Bus interface for triggering prefetching, and validation through startup performance measurement. A tast-based test will demonstrate the measurable performance gain using Chromium as a target application.",
          "student_name": "Muxin Tian",
          "code_url": null,
          "proposal_id": "HLs34tMk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/w9IS12mr"
        },
        {
          "title": "Improve Chromium Web Audio Testing",
          "short_description": "The audit.js library, a fixture in over 300 web audio test files within Chromium, has become redundant due to its overlapping functionalities with...",
          "description": "The audit.js library, a fixture in over 300 web audio test files within Chromium, has become redundant due to its overlapping functionalities with the W3C Test Harness (testharness.js), which offers superior support for managing callbacks and promises in testing. This redundancy not only complicates maintenance but also adds unnecessary bulk to Chromium’s continuous integration pipeline. To address this, the proposed project will systematically replace audit.js with testharness.js across all affected tests. The transition will streamline testing practices, align them with international web standards, and enhance the efficiency of the testing process. Deliverables include a detailed triage of the existing tests, rewriting them for compatibility with testharness.js, and fully removing audit.js from the codebase. This strategic update will ensure a more maintainable and scalable testing infrastructure for Chromium’s web audio features.",
          "student_name": "PunithNayak",
          "code_url": null,
          "proposal_id": "qywFD3wG",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lvclf1XK"
        },
        {
          "title": "Improve Chromium Web Audio Testing",
          "short_description": "This project focuses on improving the testing system for web audio features in Chromium—the open-source engine behind browsers like Google Chrome,...",
          "description": "This project focuses on improving the testing system for web audio features in Chromium—the open-source engine behind browsers like Google Chrome, Microsoft Edge, Opera, and others. Currently, over 300 audio-related test files rely on an old helper library called audit.js. While useful in the past, this library is now outdated and duplicates many features already provided by the more modern and standardized W3C testing framework, testharness.js.\r\n\r\nThe goal of this project is to modernize these tests by replacing audit.js with testharness.js, which is better supported and more efficient. I will also create a lightweight audio-specific helper tool to ensure that any necessary features from the old library are preserved. This work involves JavaScript debugging, writing clean and maintainable test code, and aligning with W3C standards.\r\n\r\nBy streamlining and modernizing Chromium’s web audio tests, this project will improve testing efficiency and reduce technical debt in one of the most widely used browser engines in the world. The impact will extend to millions of users across browsers that rely on Chromium—improving performance, stability, and long-term maintainability of web audio features on the open web.",
          "student_name": "Saqlain01",
          "code_url": null,
          "proposal_id": "JnTQWcg2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/LzP98Ubl"
        },
        {
          "title": "Virtual Printer Application",
          "short_description": "The goal of this project is to develop a fully configurable Android Virtual Printer application that simulates real printer behavior using the...",
          "description": "The goal of this project is to develop a fully configurable Android Virtual Printer application that simulates real printer behavior using the Internet Printing Protocol (IPP). This tool will allow developers, QA engineers, and ChromeOS/Android teams to debug and test printing workflows without requiring physical printer hardware.\n\nThe app will function as an IPP-compatible printer on the network, responding to print jobs, processing documents, and allowing users to configure printer capabilities by uploading or directly retrieving IPP attributes from real printers. It will also support advanced features like print job simulation, plugin-based behavior injection, and exportable logs for deep debugging.\n\nThis virtual printer will empower developers to reproduce and fix complex bugs, simulate diverse printer setups, and even integrate testing in CI pipelines — all through a user-friendly Android app. By combining protocol-level accuracy with intuitive design, it offers a powerful emulation environment for printer-related development and troubleshooting.",
          "student_name": "Sauhard Gupta",
          "code_url": null,
          "proposal_id": "7PfTy3uW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/kCcrQy0I"
        }
      ]
    },
    {
      "name": "Wellcome Sanger Tree of Life",
      "image_url": "https://summerofcode.withgoogle.com/media/org/wellcome-sanger-institute/gmcjtlourmhkhhed-360.png",
      "image_background_color": "#ffffff",
      "description": "Genome analysis for all species",
      "url": "https://www.sanger.ac.uk/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/wellcome-sanger-institute",
      "ideas_url": "https://docs.google.com/document/d/1dRHwnHAXlwQbRDstnd0OZTDJYA9cTsl1jG_hOempqII/edit?usp=sharing",
      "guide_url": "https://docs.google.com/document/d/1dRHwnHAXlwQbRDstnd0OZTDJYA9cTsl1jG_hOempqII/edit?usp=sharing",
      "topics": [
        "machine learning",
        "genomics",
        "bioinformatics",
        "genome analysis"
      ],
      "technologies": [
        "python",
        "machine learning",
        "natural language processing",
        "nextflow",
        "Cloud Storage"
      ],
      "irc_channel": "",
      "contact_email": "mailto:gsoc@sanger.ac.uk",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/sangertol",
      "blog_url": "https://sangerinstitute.blog/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Building a Machine Learning Taxon Classifier for Malaria Mosquitoes",
          "short_description": "The Anopheles gambiae species complex includes several mosquito species that are morphologically indistinguishable yet differ significantly in how...",
          "description": "The Anopheles gambiae species complex includes several mosquito species that are morphologically indistinguishable yet differ significantly in how they spread malaria—a disease still responsible for over 600,000 deaths annually. Existing genomic classifiers often struggle with accuracy (around 80% F1-score) and scale poorly with large datasets. \n\nThis project introduces a high-performance machine learning pipeline that uses advanced feature engineering (e.g. SNP windowing, PCA, k-mer frequencies) and GPU-accelerated models (LightGBM, XGBoost) to deliver ≥85% macro-F1 accuracy while cutting training time by 40%. \nThe end product will be a command-line classifier and optional REST API, integrated into the MalariaGEN ecosystem, with automated testing and reproducibility baked in. The tool will help researchers identify mosquito species faster and more reliably—boosting global malaria surveillance, guiding insecticide use, and advancing vector genomics research.",
          "student_name": "Deepak Silaych",
          "code_url": null,
          "proposal_id": "rvsU639G",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/txfR3muc"
        },
        {
          "title": "Implementing a user interface to KinFin for interactive exploration of protein clustering data.",
          "short_description": "KinFin is a powerful tool for protein clustering analysis, but its current command-line interface limits accessibility and ease of use. This project...",
          "description": "KinFin is a powerful tool for protein clustering analysis, but its current command-line interface limits accessibility and ease of use. This project aims to develop an intuitive, standalone web-based UI that is also easily integrable with GenomeHubs, enabling researchers to visualise, explore, and analyse protein clustering data efficiently. The UI will include interactive visualisation such as taxonomic heat maps, phylogenetic trees, and cluster distribution plots. Additionally, users will be able to cross-reference results with external genomic resources like MolluscDB and Ensembl. Back-end enhancements will ensure seamless data retrieval and scalability, making KinFin more accessible and impactful for genomic research.",
          "student_name": "Dinesh A",
          "code_url": null,
          "proposal_id": "x85dQA58",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CYffn7LQ"
        },
        {
          "title": "Cloud-Native Tools for Detecting Novel Insecticide Resistance in Malaria Mosquitoes",
          "short_description": "This project develops cloud-native tools to detect novel insecticide resistance in African malaria mosquitoes. Current PLINK-based methods are...",
          "description": "This project develops cloud-native tools to detect novel insecticide resistance in African malaria mosquitoes. Current PLINK-based methods are insufficient as VGSC L995F mutation is now fixed and new resistance mechanisms have undefined targets.\nThe solution implements advanced statistical methods (mixed-effects models, Bayesian approaches), population structure correction, interactive visualization tools, and cloud optimization for accessibility. Following a tiered strategy, core deliverables include statistical methods and visualization, with machine learning extensions if time permits.\nLeveraging my interdisciplinary background, this project will improve resistance detection sensitivity, helping researchers identify emerging resistance mechanisms before they become widespread, contributing to more effective malaria vector control.",
          "student_name": "MOHAMED LAAREJ",
          "code_url": null,
          "proposal_id": "n6lkXNoY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/a0co0wDJ"
        },
        {
          "title": "Pipeline for Variant Composition Analyses",
          "short_description": "While tools for variant calling are well-established, there remains a notable gap in the summarisation of downstream variant metrics. This project...",
          "description": "While tools for variant calling are well-established, there remains a notable gap in the summarisation  of downstream variant metrics. \n\nThis project aims to develop a reproducible, scalable pipeline to compute key variant composition statistics from variant call data across diverse eukaryotic genomes, providing critical insights for downstream analyses. The pipeline will generate a comprehensive HTML report with visualisations.\n\nThe final deliverable will be a fully implemented Nextflow DSL2 pipeline, accompanied by clear, user-friendly documentation and a usage guide.",
          "student_name": "Yunjia Zhang",
          "code_url": null,
          "proposal_id": "6wSNj29j",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oZY7BSwX"
        }
      ]
    },
    {
      "name": "Kornia",
      "image_url": "https://summerofcode.withgoogle.com/media/org/kornia/p4e366l478clqvvg-360.png",
      "image_background_color": "#ffffff",
      "description": "Advancing Computer Vision & Spatial AI, Openly",
      "url": "https://docs.rs/kornia",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/kornia",
      "ideas_url": "https://github.com/kornia/kornia-rs/wiki/Google-Summer-of-Code-Ideas-2025",
      "guide_url": "https://github.com/kornia/kornia-rs/wiki/Google-Sumer-of-Code-Application",
      "topics": [
        "machine learning",
        "artificial intelligence",
        "robotics",
        "computer vision",
        "3D Geometry"
      ],
      "technologies": [
        "cuda",
        "rust",
        "deep learning",
        "data science",
        "Spatial AI"
      ],
      "irc_channel": "https://discord.gg/HfnywwpBnD",
      "contact_email": "mailto:hello@kornia.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/kornia_foss",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "April Tag and Calibration Detectors",
          "short_description": "April Tags are widely used in robotics for precise localization, camera calibration, and augmented reality applications. Their ability to provide...",
          "description": "April Tags are widely used in robotics for precise localization, camera calibration, and augmented reality applications. Their ability to provide robust fiducial markers makes them valuable for tasks such as robot navigation, visual SLAM, and pose estimation. This project aims to implement efficient detection algorithms for both synthetic and natural features in Rust. It will include an April Tag detector—optimized for calibration and structured environments—and an ORB-based detector for natural feature extraction, which is crucial for robust visual localization and Visual SLAM applications. Both modules will be integrated into the kornia-rs ecosystem, thereby providing a comprehensive toolkit for camera calibration, localization, and robotics.",
          "student_name": "AS1100K",
          "code_url": null,
          "proposal_id": "L5U7kcEK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GZcYwnPE"
        },
        {
          "title": "Efficient SmolVLM",
          "short_description": "The aim of this project is to bring State of the Art methods for lightweight Visual Language models into Kornia in Rust. Recently, Hugging Face...",
          "description": "The aim of this project is to bring State of the Art methods for lightweight Visual Language models into Kornia in Rust. Recently, Hugging Face released a family of small visual language models (SmolVLM) which can be a game changer for the industry to build applications in embedded devices using such AI models.",
          "student_name": "birschlatte",
          "code_url": null,
          "proposal_id": "SQWhzHTe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pXPaNRob"
        }
      ]
    },
    {
      "name": "Python Software Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/python-software-foundation/2vpxhpvcsvgyx3kg-360.png",
      "image_background_color": "#ffffff",
      "description": "A programming language used for science & more",
      "url": "https://python-gsoc.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/python-software-foundation",
      "ideas_url": "https://python-gsoc.org/ideas.html",
      "guide_url": "https://python-gsoc.org/index.html#gettingstarted",
      "topics": ["security", "visualization", "compiler", "modeling", "Backup"],
      "technologies": ["python", "javascript"],
      "irc_channel": "https://python-gsoc.org/index.html#contact",
      "contact_email": "",
      "mailing_list": "https://mail.python.org/mailman/listinfo/gsoc-general",
      "twitter_url": "",
      "blog_url": "https://social.python-gsoc.org/public/local",
      "facebook_url": "",
      "num_projects": 17,
      "projects": [
        {
          "title": "Pocketpy : Develop math operators for cTensor library",
          "short_description": "pocketpy provides a tensor library, cTensor, for users who want to integrate neural networks into their applications. cTensor implements automatic...",
          "description": "pocketpy provides a tensor library, cTensor, for users who want to integrate neural networks into their applications. cTensor implements automatic differentiation and dynamic compute graphs. It allows users to train and deploy neural networks on client-side devices like mobile phones and microcontrollers (e.g. ESP32-C3)",
          "student_name": "Advait Gaur",
          "code_url": null,
          "proposal_id": "eEwhHcDx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xYTc9tM3"
        },
        {
          "title": "Mission support system : View Layout and Storing",
          "short_description": "The Mission Support System (MSS) client currently lacks the ability to save and restore view configurations, requiring users to manually recreate...",
          "description": "The Mission Support System (MSS) client currently lacks the ability to save and restore view configurations, requiring users to manually recreate complex window layouts each time they reopen the application. Additionally, collaborative operations do not support sharing view configurations among participants, hindering real-time coordination.\n\nTo enhance the user experience and collaboration in the Mission Support System (MSS), this project will introduce two major improvements. First, it will implement a local and server-side view restoration system, allowing users to save and reload their window layouts automatically. This will be achieved through JSON-based storage for local configurations and database integration for server-side persistence. Users will have the option to enable or disable view restoration via a new setting, ensuring flexibility.\nSecond, the project will introduce a collaborative view-sharing feature through a dedicated \"Manage View\" widget. This will enable participants in an operation to share, browse, and load predefined layouts, ensuring consistency during joint missions. The widget will integrate with MSS’s existing operation system, allowing real-time updates via WebSocket notifications. Backend APIs will handle secure storage and retrieval of shared views, while the frontend will provide an intuitive interface for managing layouts.\n\nTogether, these enhancements will eliminate the need for manual reconfiguration and streamline teamwork in mission planning and analysis.",
          "student_name": "Annapurna Gupta",
          "code_url": null,
          "proposal_id": "3YvX0B9R",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/S1B9yVQW"
        },
        {
          "title": "pwndbg: debugging support for Windows",
          "short_description": "**Pwndbg** is a debugger extension that enhances the debugging experience. It currently supports only GDB and LLDB on Linux and macOS. This project...",
          "description": "**Pwndbg** is a debugger extension that enhances the debugging experience. It currently supports only GDB and LLDB on Linux and macOS.\n\nThis project introduces Windows support for Pwndbg. Initially, only WinDbg will be supported, but a generic interface could enable support for other debuggers (GDB, LLDB, x64dbg, etc.). The goal is to bring Pwndbg enhancements to the WinDbg console — providing a similar experience to using it with GDB or LLDB. End users should be able to access all native WinDbg features while also using Pwndbg commands and context windows.\n\nThe project leverages WinDbg’s `wdbgexts` or `DbgEng` to interface with Pwndbg. This requires either an RPC client-server protocol or native integration of Pwndbg on Windows. Pwndbg needs to hook into WinDbg states (registers, memory, etc.) and respond to all command calls from WinDbg.",
          "student_name": "Dung Nguyen",
          "code_url": null,
          "proposal_id": "eTnuN9ow",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/T8488IcD"
        },
        {
          "title": "MNE-Python: Implementing GED method and modernising the mne.decoding codebase",
          "short_description": "Increase in amount of recording sensors in EEG, MEG and iEEG has brought about a need in new approaches for analysis of the data. Such approaches...",
          "description": "Increase in amount of recording sensors in EEG, MEG and iEEG has brought about a need in new approaches for analysis of the data. Such approaches include source separation and decoding. This project is aimed at (1) implementing a supervised source separation technique called generalised eigendecomposition (GED) with accompanying visualisations, (2) refactoring, modernising and enhancing the implementation of decoding classes already implemented in MNE-Python.",
          "student_name": "Gennadiy",
          "code_url": null,
          "proposal_id": "FbBUhtxe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/h01FXYKc"
        },
        {
          "title": "CVE Binary Tool : Vex Tooling",
          "short_description": "Currently, the CVE-BIN-TOOL supports basic VEX triage functionality but lacks user-friendly tools for editing, validating, and managing VEX data....",
          "description": "Currently, the CVE-BIN-TOOL supports basic VEX triage functionality but lacks user-friendly tools for editing, validating, and managing VEX data. VEX’s JSON-based structure, while machine-readable, it is error-prone for manual human interaction, which often leads to invalid files or incomplete triage information.\n\nThis project aims to bridge this gap by working on cve-bin-tool’s VEX capabilities through these three key pillars:\n1. Interactive HTML Reports: Embedding JavaScript-based editing interfaces to enable offline-compatible VEX triage with real-time\nvalidation.\n2. CLI Automation: Developing tools for validation, guided generation, and archival of VEX files to minimize manual effort.\n3. Standardized Maintenance: Integrating the lib4vex library to unify support for CSAF, OpenVEX, and CycloneDX formats while ensuring schema compliance.\n\nBy simplifying VEX workflows, the project will allow developers to manage vulnerability context effectively, reduce their errors, and align with evolving security standards.",
          "student_name": "Jigyasu Rajput",
          "code_url": null,
          "proposal_id": "fVzraqYM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yL8zX827"
        },
        {
          "title": "CVE-Bin-Tool: No-Scan Mode",
          "short_description": "The CVE Binary Tool is a widely used open-source vulnerability scanner that identifies components in binaries and matches them with known...",
          "description": "The CVE Binary Tool is a widely used open-source vulnerability scanner that identifies components in binaries and matches them with known vulnerabilities from the CVE database. However, the current implementation requires downloading a 2.5GB CVE database, which is time-consuming and resource-intensive. Many users have expressed the need for a No-Scan mode that allows generating Software Bill of Materials (SBOMs) without downloading CVE data. This project aims to introduce a lightweight SBOM generation feature that extracts component metadata without querying an external database.",
          "student_name": "joydeep049",
          "code_url": null,
          "proposal_id": "LvdR4VJI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Kst3xrik"
        },
        {
          "title": "OWHF: Improve supported countries batch - 2",
          "short_description": "Open World Holidays Framework is a powerful and flexible open-source Python framework designed to provide accurate and reliable public holiday data...",
          "description": "Open World Holidays Framework is a powerful and flexible open-source Python framework designed to provide accurate and reliable public holiday data for over 150+ countries, regions, and local entities worldwide. I would like to add support for more countries to the Open World Holidays Framework to make it more useful.",
          "student_name": "juno",
          "code_url": null,
          "proposal_id": "Hev29Cvy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qSMOdILc"
        },
        {
          "title": "pwndbg: musl allocator support",
          "short_description": "pwndbg currently has support for debugging the jemalloc and glibc allocators. There are many programs out there that use different allocators, so...",
          "description": "pwndbg currently has support for debugging the jemalloc and glibc allocators. There are many programs out there that use different allocators, so extending support is important. I will implement support for musl's allocator: mallocng.\n\nThis will require gaining a precise understanding of the used data-structures and algorithms. It will involve carefully reading the source (https://git.musl-libc.org/cgit/musl/tree/src/malloc/mallocng).\n\nIn the end pwndbg will have additional commands for visualizing the data-structures used by mallocng, analogous to the heap, bins, arena, mp, vis etc. commands used for glibc malloc.",
          "student_name": "k4lizen",
          "code_url": null,
          "proposal_id": "baGnzeNI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/8qCrLfWw"
        },
        {
          "title": "VSCode Plugin for Debugging pocketpy Applications",
          "short_description": "This proposal addresses the lack of debugging tools for pocketpy, a lightweight Python interpreter for game scripting. It will develop a VSCode...",
          "description": "This proposal addresses the lack of debugging tools for pocketpy, a lightweight Python interpreter for game scripting. It will develop a VSCode debugging extension along with Debug Adapter Protocol (DAP) support. The solution includes a debugger core that integrates with pocketpy's interfaces to support breakpoints, variable inspection, and call stack visualization, paired with a VSCode extension providing an intuitive debugging interface. Deliverables include a DAP-compatible debugger core, a VSCode extension with debugging configuration capabilities, and APIs for runtime inspection of variables and stack frames.",
          "student_name": "lightovernight",
          "code_url": null,
          "proposal_id": "VNWgApnT",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VxXMK1oF"
        },
        {
          "title": "Python Software Foundation",
          "short_description": "This project will significantly enhance the PyLadiesCon Sponsorship Portal, a Django-based Python web application, by introducing advanced backend...",
          "description": "This project will significantly enhance the PyLadiesCon Sponsorship Portal, a Django-based Python web application, by introducing advanced backend and frontend capabilities to better support sponsor engagement, tracking, and design team collaboration.\n\nKey features include an admin sponsorship review workflow with role-based access control, an automated notification system using Django signals and SendGrid, and a secure media upload portal utilizing Pillow, django-storages, and Amazon Web Services S3. A dynamic dashboard will also be implemented with real-time filtering and tracking of contract and payment status using Django ORM, PostgreSQL, and interactive frontend behavior powered by HTMX.\n\nTo ensure a maintainable and scalable system, the project will adopt containerized development with Docker and maintain robust test coverage using pytest-django and coverage.py. The result will be a highly functional and production-ready platform that streamlines sponsorship operations and improves transparency across teams.",
          "student_name": "Lucille Idokogi",
          "code_url": null,
          "proposal_id": "dKSFwlQf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Y3cAwnMl"
        },
        {
          "title": "Pwndbg: Port tests to LLDB and expand non-Linux support",
          "short_description": "Pwndbg has supported LLDB internally since 2024, and in general availability as of the 2025.01.20 release. That support is, however, still in its...",
          "description": "Pwndbg has supported LLDB internally since 2024, and in general availability as of the 2025.01.20 release. That support is, however, still in its infancy. Currently, all the test code in Pwndbg is still strongly tied to GDB, meaning that, aside from manual checks, there is nothing keeping changes to the codebase from silently breaking the LLDB subsystem. And, while there is support for attaching to and debugging programs running on platforms other than Linux, there are not as many features catering to the specifics of those platforms as there are for traditional Linux distributions. In particular, the process by which mobile debugging is done is still poorly documented, intricate, and not thoroughly tested. These shortcomings hold back LLDB Pwndbg from being as useful to its users as it can be.",
          "student_name": "mbrla",
          "code_url": null,
          "proposal_id": "cVjxIEUU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/E4VY40nG"
        },
        {
          "title": "Enhancing Creative Workflows with a Natural Language Interface",
          "short_description": "This project aims to make Tölvera more accessible to artists and researchers by adding a Natural Language Interface (NLI). Currently, Tölvera's...",
          "description": "This project aims to make Tölvera more accessible to artists and researchers by adding a Natural Language Interface (NLI). Currently, Tölvera's reliance on Python coding presents a barrier for those without programming expertise. This project will refine and substantially extend tv.llm, a functional proof-of-concept NLI module, enabling users to generate and modify Tölvera sketches using natural language commands. The core work of this project involves expanding the NLI's architecture, which utilizes Pydantic for configuration validation and Jinja2 for reliable code generation, to encompass a broader range of Tölvera modules (tv.vera, tv.osc, tv.cv, tv.mp, tv.iml), refining prompt engineering strategies, and improving the command-line interface. Deliverables will include the full release of the tv.llm module integrated as a core Tölvera feature, detailed documentation, and an evaluation report.  The goal is to help empower a broader community of users to integrate Tölvera into their creative workflows.",
          "student_name": "MClem",
          "code_url": null,
          "proposal_id": "V6yF1ms1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hiDLVEgI"
        },
        {
          "title": "Nishitha's proposal for Borg Collective",
          "short_description": "My proposed project aims to enhance the Borg ecosystem by tackling three main areas: Update Ansible Role with a new config template, add...",
          "description": "My proposed project aims to enhance the Borg ecosystem by tackling three main areas: Update Ansible Role with a new config template, add MySQL/MariaDB database directory format in Borgmatic, implementing Docker/Podman container backups in Borgmatic. First, I’ll update the Ansible role to support the latest Borgmatic config format (post-1.8.0), which includes adding a new config template, wrapping new v2.0.0 options, and verifying applied configs. Second, I’ll implement directory format support for MySQL and MariaDB, similar to how PostgreSQL does it, allowing faster backups and more flexible restores. Third, I plan to add native support for Docker and Podman container volume backups using their sockets, so users don’t have to write custom scripts. This includes designing the config schema, implementing backup/restore hooks, and updating tests and docs.",
          "student_name": "Nishitha Koya",
          "code_url": null,
          "proposal_id": "SJIXkLDQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AVMU0vQY"
        },
        {
          "title": "Ilastik: Support For Image And Video Analysis With Real-World Units",
          "short_description": "The project involves integrating pixel size support into ilastik, an image-processing and classification tool. Pixel size is a metadata item enabling...",
          "description": "The project involves integrating pixel size support into ilastik, an image-processing and classification tool. Pixel size is a metadata item enabling conversion of image pixels into real-world measurements. \nWhilst pixel size is not currently processed in ilastik image sets, the program is used extensively in scientific applications, and introducing real-world measurements would enable development of several key features that would allow more in-depth quantitative analysis of image data, such as object displacement and velocity in video tracking, and real-world area calculation of segmentations/ volume calculation of carvings.\n\nOnce the metadata is extracted at the image input end, it is possible to feed it directly into the data pipeline, so it can be picked back up within any relevant workflow. This facilitates feature development, as it then becomes possible to work directly with the metadata values within the workflow. Once the backends of these features have been developed, they will be implemented on the front-end via Qt.\n\nThe key deliverables of this project are:\n Implement pixel size metadata into workflows, such that the metadata remains present in project files, output images, and exported datasets; \nEnable calculating areas of image segmentations; \nEnable calculating volumes of image carvings; \nEnable recording of object displacement in video tracking; \nEnable measurement of object velocity in video tracking; \nProduce detailed and well-written documentation, and ensure  relevant test scripts for each feature are made available. An initial pull request for this proposal can be found at https://github.com/ilastik/ilastik/pull/2995",
          "student_name": "Peter Laszcz",
          "code_url": null,
          "proposal_id": "aJP9FtK7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/25HhpHxY"
        },
        {
          "title": "OWHF: Enhancing Country Support by Adding 12 New Countries (Batch 1)",
          "short_description": "The Open World Holidays Framework is an essential open-source tool that provides accurate holiday data for over 160 countries. However, it currently...",
          "description": "The Open World Holidays Framework is an essential open-source tool that provides accurate holiday data for over 160 countries. However, it currently lacks comprehensive support for several underrepresented countries, which limits its utility for users seeking to understand global holiday practices. This proposal aims to enhance the framework by integrating holiday data for 12 additional countries: Fiji, Antigua and Barbuda, Benin, Bhutan, Cabo Verde, Central African Republic, Comoros, Ivory Coast, Democratic People's Republic of Korea, Democratic Republic of the Congo, Equatorial Guinea, and Eritrea.\n\nTo achieve this, I will conduct thorough research to gather accurate holiday data from authoritative governmental sources, ensuring linguistic accuracy through credible translations. The integration process will involve developing a structured approach to accommodate both fixed and floating holidays, as well as regional variations. I will leverage my previous contributions to the framework, particularly my work on Fiji, as a foundation for this project.\n\nThe deliverables for this project will include:\n\n -  Integrated holiday data for the 12 new countries within the Open World Holidays Framework.\n -  Comprehensive unit and integration tests to ensure the accuracy and compatibility of the newly added data.\n -  Updated documentation that reflects the new country support and provides clear usage instructions for users.\n\nBy expanding the framework's coverage, this project will not only enhance its functionality but also promote cultural awareness and inclusivity, making it a valuable resource for users worldwide.",
          "student_name": "Prateekshit Jaiswal",
          "code_url": null,
          "proposal_id": "ilzmUsMe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CEQpgoth"
        },
        {
          "title": "Expanding OOP capabilities of LPython for porting common CPython modules",
          "short_description": "The aim of this project is to extend LPython's OOP capabilities to enable the porting of CPython modules. The proposal is divided into three main...",
          "description": "The aim of this project is to extend LPython's OOP capabilities to enable the porting of CPython modules. The proposal is divided into three main parts: improving the utility of classes in LPython using general imports and dunder methods, porting CPython's re and json modules and addressing some miscellaneous goals like adding advanced data structures and improving string attributes.",
          "student_name": "SwamiShiju",
          "code_url": null,
          "proposal_id": "UtZya01o",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VHvgR4Bm"
        },
        {
          "title": "Borg Collective: Implement Unified File Selector, Password Change UI, and Borg Sub-command Wrapping",
          "short_description": "The Borg Collective offers essential Python-based backup tools like Borg, Borgmatic, and Vorta, which help users with secure, efficient, and reliable...",
          "description": "The Borg Collective offers essential Python-based backup tools like Borg, Borgmatic, and Vorta, which help users with secure, efficient, and reliable data backups. Vorta provides a user-friendly desktop GUI for Borg, while Borgmatic serves as a command-line interface for managing backups. This proposal outlines four projects designed to improve the functionality, security, and usability of both Vorta and Borgmatic. \n\nFor the first project aims to add a new feature to the Vorta GUI that lets users change their repository passphrase. Changing a Borg repository passphrase is a feature that’s often requested but hasn’t been fully implemented yet within Vorta.  This would make security management more accessible and eliminate the need for users to use Borg directly for such tasks. \n\nThe second project aims to develop a custom file selector with PyQt6 FileDialog, which will handle multiple file and directory selections in one window. At the moment, Vorta has separate dialogs for selecting files and directories. This allows users to select both files and directories in a single window.\n\nThe third project aims to introduce a much-needed improvement by adding a file selector dialog that allows users to pick files and directories to exclude directly through the UI. Right now, users who want to exclude certain files or directories from their backup have to manually type in paths or use patterns. This will allow users to eliminate the need for manual match expressions and reducing errors. \n\nThe final project aims on wrapping a few missing Borg subcommands into Borgmatic actions, so users can perform these tasks directly through Borgmatic without needing to use Borg’s CLI. These additions will make Borgmatic more comprehensive, \nreducing the need for users to jump between tools to perform essential tasks.\n\nThese enhancements will make Vorta and Borgmatic user-friendly and feature-complete, ultimately improving the quality of backup process for users across different platforms.",
          "student_name": "Vandal Byte",
          "code_url": null,
          "proposal_id": "9bHSEXp8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GQrztSUR"
        }
      ]
    },
    {
      "name": "GeomScale",
      "image_url": "https://summerofcode.withgoogle.com/media/org/geomscale/ongpste986nd7t6p-360.png",
      "image_background_color": "#ffffff",
      "description": "Scalable geometric and statistical software",
      "url": "https://geomscale.github.io",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/geomscale",
      "ideas_url": "https://github.com/GeomScale/gsoc25/wiki/table-of-proposed-coding-projects",
      "guide_url": "https://github.com/GeomScale/gsoc25/wiki",
      "topics": [
        "mathematics",
        "data science",
        "computational biology",
        "computational geometry",
        "statistics"
      ],
      "technologies": ["python", "c++", "r", "jupyter", "github-actions"],
      "irc_channel": "https://gitter.im/GeomScale/community?utm_source=share-link&utm_medium=link&utm_campaign=share-link",
      "contact_email": "mailto:geomscale@gmail.com",
      "mailing_list": "https://groups.google.com/g/geomscale-gsoc",
      "twitter_url": "https://mobile.twitter.com/GeomScale",
      "blog_url": "https://www.linkedin.com/company/geomscale/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Expose C++ Sampling, Rounding and Volume Computation in Dingo",
          "short_description": "Dingo is a Python library built on top of the C++ library volesti, primarily designed for sampling from convex polytopes, especially within the...",
          "description": "Dingo is a Python library built on top of the C++ library volesti, primarily designed for sampling from convex polytopes, especially within the context of metabolic networks. However, its usability for general polytope sampling and volume computation is currently limited by an underdeveloped Python interface, with key functionality from volesti either not exposed or difficult to use. This project aims to significantly enhance the general-purpose usability of Dingo by exposing hidden bindings, simplifying polytope definition and computation workflows, and enriching documentation with clear, beginner-friendly examples. The outcome will be a more accessible and robust toolkit for researchers and practitioners in computational geometry, optimization, and related fields.",
          "student_name": "Akis Schinas",
          "code_url": null,
          "proposal_id": "wwoChN0G",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/a40WS6Oc"
        },
        {
          "title": "Randomized SDP solver and improved preprocessing",
          "short_description": "The proposed project aims to continue the implementation of the semideﬁnite pro- gramming (SDP) solver in the VolEsti library and to integrate it...",
          "description": "The proposed project aims to continue the implementation of the semideﬁnite pro-\ngramming (SDP) solver in the VolEsti library and to integrate it with sparse linear\nalgebra for sparse SDP solving. This will allow for the eﬃcient solving of speciﬁc SDP\nproblems in the high-dimensional setting. Also, the project will integrate preprocessing techniques to reduce the discrepancy of the SDP before solving it.\nThe proposed preprocessing algorithms will be based on facial reduction and symmetry reduction. The project will also include benchmarking\nand testing of the proposed algorithms on a variety of datasets and compare them\nto the state-of-the-art libraries, like SDPA.",
          "student_name": "Angelos Korakitis",
          "code_url": null,
          "proposal_id": "X6eQQZ9c",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dKflrLCE"
        },
        {
          "title": "Shake and Bake - Sampling from the boundary of convex polytopes",
          "short_description": "The project aims to implement the Markov Chain Monte Carlo-based Shake and Bake algorithm for uniform sampling from the boundary of a convex polytope...",
          "description": "The project aims to implement the Markov Chain Monte Carlo-based Shake and Bake algorithm for uniform sampling from the boundary of a convex polytope and integrate it into the C++ library volesti, along with its R interface Rvolesti and the Python package dingo. The implementation will also focus on efficient handling of high-dimensional polytopes using advanced numerical techniques and optimization strategies. Additionally, the functionality of the Shake and Bake algorithm will be tested on several metabolic networks of varying dimensionalities, where convergence performance will be evaluated using PSRF and ESS diagnostics.",
          "student_name": "Iva Janković",
          "code_url": null,
          "proposal_id": "KmuXqs9t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7DtNTtFc"
        },
        {
          "title": "LoopLess Flux Sampling",
          "short_description": "Genome-scale metabolic network reconstructions (GENREs) are comprehensive maps of all known metabolic reactions and associated genes in a given...",
          "description": "Genome-scale metabolic network reconstructions (GENREs) are comprehensive maps of all known metabolic reactions and associated genes in a given organism. Starting from a genome, these reconstructions are developed using annotations, biochemical data, and information from scientific literature. This can make GENREs strain-specific. From these networks, genome-scale metabolic models (GEMs) are derived, serving as powerful tools for exploring bacterial systems. Biologically grounded constraints can be applied to these models, resulting in constraint-based models that can predict the flow of metabolites through a defined network with techniques such as Flux Balance Analysis, Flux Variability Analysis and Flux Sampling. However, a common challenge in solutions derived from such models is the occurrence of thermodynamically infeasible loops (or internal cycles), which lead to nonbiological fluxes in simulation results. These loops violate physical principles and are absent in real biological systems. Aim of this project is to support the identification of such loops  allowing dingo to sample feasible solutions.",
          "student_name": "Sotirios Touliopoulos",
          "code_url": null,
          "proposal_id": "wdS6OiMr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/j6mlCS2r"
        },
        {
          "title": "Sparse Polytope Sampling via Lazy Rounding",
          "short_description": "The goal of this project is to enhance the Volesti library by implementing a sparse variant of the Billiard Walk sampling algorithm, which proposes...",
          "description": "The goal of this project is to enhance the Volesti library by implementing a sparse variant of the Billiard Walk sampling algorithm, which proposes to leverage lazy Cholesky-based solutions in order to preserve sparsity during rounding and sampling operations. Taking advantage of the sparse linear algebra infrastructure already present in the library, this project aims to improve the computational performance by implementing new methods that will perform dynamic, on-the-fly operations directly through triangular solves, avoiding explicit dense matrix transformations.",
          "student_name": "Vladimir Necula",
          "code_url": null,
          "proposal_id": "jG3HNrze",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vLd6ZbJ0"
        }
      ]
    },
    {
      "name": "MBDyn",
      "image_url": "https://summerofcode.withgoogle.com/media/org/mbdyn/ambfdghkrcyizd8l-360.png",
      "image_background_color": "#ffffff",
      "description": "Open Source Multibody Simulation",
      "url": "http://www.mbdyn.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/mbdyn",
      "ideas_url": "https://public.gitlab.polimi.it/DAER/mbdyn/-/wikis/GSoc-Project-Ideas",
      "guide_url": "https://public.gitlab.polimi.it/DAER/mbdyn/-/wikis/Development-Guidelines",
      "topics": [
        "robotics",
        "scientific computing",
        "multibody dynamics",
        "aeroelasticity",
        "Structural engineering"
      ],
      "technologies": ["python", "c++"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://mail.mbdyn.org/cgi-bin/mailman/listinfo/mbdyn-users",
      "twitter_url": "",
      "blog_url": "https://public.gitlab.polimi.it/DAER/mbdyn/-/issues",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Genetic Optimization Module",
          "short_description": "The Genetic Optimization Module for MBDyn seeks to integrate a genetic algorithm (GA) into MBDyn, a multibody dynamics simulation software, to enable...",
          "description": "The Genetic Optimization Module for MBDyn seeks to integrate a genetic algorithm (GA) into MBDyn, a multibody dynamics simulation software, to enable optimization within simulation runs. As a super-element, the module will leverage MBDyn’s drive system—taking inputs from drives that expose simulation data and outputting optimized variables to other drives. Inspired by the mbdyn module’s structure, the project emphasizes a self-contained GA implementation in C++ to ensure minimal dependencies. The development is split into two phases: a 175-hour baseline solver with core functionality and a 350-hour fully-featured solver with advanced features and optional external library integration. This proposal targets the 350-hour project, aligning with the Google Summer of Code’s 12-week timeline (approximately 480 hours at 40 hours/week), delivering a robust optimization tool for MBDyn users.",
          "student_name": "Rahul Drabit",
          "code_url": null,
          "proposal_id": "A6u3aqo5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/iemnSvFQ"
        },
        {
          "title": "MBDyn Python Preprocessor Development",
          "short_description": "The MBDyn Python Preprocessor simplifies the creation of input files for MBDyn simulations by bridging Python programming with MBDyn's input format....",
          "description": "The MBDyn Python Preprocessor simplifies the creation of input files for MBDyn simulations by bridging Python programming with MBDyn's input format. This project enhances the simulation workflow through two key improvements. The first transforms the YAML-based Rotorcraft Parametric Modeling tool into Python classes within the preprocessor, creating an object-oriented framework for rotorcraft modeling. The second integrates the preprocessor with Blendyn (a Blender add-on), enabling users to create, edit, simulate and visualize MBDyn models entirely within Blender. These enhancements make MBDyn modeling more intuitive and accessible while providing a seamless workflow for both pre- and post-processing tasks.",
          "student_name": "Shimul Baidya",
          "code_url": null,
          "proposal_id": "2qeLt7ia",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YatS9WKL"
        }
      ]
    },
    {
      "name": "GNOME Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/gnome-foundation/aqwqx1x6ozjnxsak-360.png",
      "image_background_color": "#ffffff",
      "description": "A diverse and sustainable free software desktop.",
      "url": "https://gnome.org",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/gnome-foundation",
      "ideas_url": "https://gsoc.gnome.org/2025/",
      "guide_url": "https://gsoc.gnome.org",
      "topics": [
        "operating systems",
        "desktop",
        "graphics",
        "open source",
        "apps"
      ],
      "technologies": ["c", "linux", "rust", "gtk", "Flatpak"],
      "irc_channel": "https://handbook.gnome.org/get-in-touch.html",
      "contact_email": "",
      "mailing_list": "https://discourse.gnome.org/",
      "twitter_url": "https://floss.social/@gnome",
      "blog_url": "https://foundation.gnome.org/news/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Papers: Proof of Concept for Backend Isolation in GNOME Papers",
          "short_description": "GNOME Papers (formerly Evince) currently processes all documents within a single application process, creating significant security and stability...",
          "description": "GNOME Papers (formerly Evince) currently processes all documents within a single application process, creating significant security and stability risks. A vulnerability or crash in one document can compromise the entire application. This project aims to create a proof-of-concept for backend isolation by implementing a multi-process architecture where each document runs in a separate process. The approach involves researching process isolation models (e.g., WebKit, Chromium), designing an IPC mechanism using D-Bus and shared memory, and implementing basic sandboxing for document processes. Key deliverables include a working prototype demonstrating isolation for at least one document format (e.g., PDF), performance and security analysis, and comprehensive documentation to guide future implementation. This project addresses long-standing limitations blocking features like tabbed interfaces while improving security and stability for GNOME Papers users.",
          "student_name": "Ahmed Fatthi",
          "code_url": null,
          "proposal_id": "N2N2tUk9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/XuVwtTah"
        },
        {
          "title": "Vala: XML, JSON, and YAML Integration",
          "short_description": "The main objective is to integrate direct syntax support for parsing and emitting JSON, XML, and YAML formats in Vala. This will cut back the...",
          "description": "The main objective is to integrate direct syntax support for parsing and emitting JSON, XML, and YAML formats in Vala. This will cut back the boilerplate code making it more user-friendly and efficient for developers working with these format languages. \n\nTo solve this, I first plan to research how other languages implement these integrations. This will allow me to see best practices and common syntax used. At the same time, I will research how Vala currently parses and emits JSON, XML, and YAML formats. Lastly, out of the research, I will know how to properly integrate the format languages into Vala's compiler which will allow for direct syntax integration.\n\nThe overall deliverables consist of: 1) Research on how Vala and other programming languages handle JSON, XML, and YAML. 2) Syntax design and mock-ups. 3) Implementation and prototyping. 4) Testing, documentation, and code snippets",
          "student_name": "Alley Chaggar",
          "code_url": null,
          "proposal_id": "bHKtrkQp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UWolvgXi"
        },
        {
          "title": "Add Printing Support to GNOME Crosswords",
          "short_description": "This project extends GNOME Crosswords' existing SVG functionality to support printable puzzles with clues, and integrates printing support with...",
          "description": "This project extends GNOME Crosswords' existing SVG functionality to support printable puzzles with clues, and integrates printing support with crossword-specific options. It also has stretch goals, including broader puzzle support and an `ipuz2pdf` export utility.",
          "student_name": "Toluwaleke Ogundipe",
          "code_url": null,
          "proposal_id": "f7shGKUL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Kj1CKvxo"
        },
        {
          "title": "Adding eBPF profiling capabilities to Sysprof",
          "short_description": "This project aims to enhance Sysprof by integrating eBPF-based profiling to reduce overhead and improve performance. Currently, Sysprof relies on...",
          "description": "This project aims to enhance Sysprof by integrating eBPF-based profiling to reduce overhead and improve performance. Currently, Sysprof relies on accessing numerous /proc files, which involves frequent syscalls, file descriptor operations, and context switches, creating performance bottlenecks. By utilizing eBPF, data collection can be done directly within the kernel, eliminating the need for constant /proc access and minimizing context switches. This approach not only lowers overhead but also ensures consistent and atomic data capture. eBPF also allows for advanced features such as system-wide syscall monitoring and process creation tracking, which were difficult to implement previously. By adopting eBPF, Sysprof becomes more efficient, scalable, and feature-rich, laying the foundation for future enhancements and transforming it into a modern, versatile profiling tool.",
          "student_name": "Varun R Mallya",
          "code_url": null,
          "proposal_id": "Mu6DLAF3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UDF9XAcy"
        },
        {
          "title": "Add printing support to GNOME Crosswords",
          "short_description": "This project adds printing support to GNOME Crosswords. The project consists of the following stages: [create a design proposal], [extend the...",
          "description": "This project adds printing support to GNOME Crosswords. The project consists of the following stages:\n[create a design proposal], \n[extend the existing SVG code to support printable puzzles], \n[create an ipuz2pdf command-line utility], \n[add a print flow and dialog to the Crosswords player and editor], \n[complete as many stretch goals as possible].",
          "student_name": "Victor Ma",
          "code_url": null,
          "proposal_id": "WhppYXCp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/joz3e6Jc"
        }
      ]
    },
    {
      "name": "Fedora Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/fedora-project/shb5orpvxtdcerqq-360.png",
      "image_background_color": "#ffffff",
      "description": "Freedom, Friends, Features, and First.",
      "url": "https://getfedora.org/",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/fedora-project",
      "ideas_url": "https://docs.fedoraproject.org/en-US/mentored-projects/gsoc/2025/ideas/",
      "guide_url": "https://docs.fedoraproject.org/en-US/mentored-projects/gsoc/2025/application/#_google_summer_of_code_application_and_supplemental_material_requirements",
      "topics": ["platform", "ai", "operating system", "LLM", "NetworkManager"],
      "technologies": ["python", "bash", "rpm", "security", "Container"],
      "irc_channel": "https://web.libera.chat/?channels=fedora-summer-coding",
      "contact_email": "",
      "mailing_list": "https://discussion.fedoraproject.org/tag/mentored-projects",
      "twitter_url": "",
      "blog_url": "https://communityblog.fedoraproject.org/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Create a service to get a new project to Fedora more easily",
          "short_description": "Build a service to simplify the process of onboarding new packages to Fedora with a pull-request based workflow that integrates seamlessly with...",
          "description": "Build a service to simplify the process of onboarding new packages to Fedora with a pull-request based workflow that integrates seamlessly with modern Git-forges like Github and Gitlab by automating key steps, creating a valid spec file, build testing, and review. Also, it reduces the workload for the reviewer by carrying out a set of common checks used in package review with rpmlint and rpminspect.\n\nActs as a bridge between the Bugzilla-based review process and git workflows; users would be able to get feedback from both tools and more experienced packagers right within a PR-based workflow.",
          "student_name": "mynk8s",
          "code_url": null,
          "proposal_id": "fZIYqSN4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/L1vTOizh"
        },
        {
          "title": "\"ExplainMyLogs: An AI-Powered Natural Language Log Analyzer for DevOps and Infrastructure Debugging\"",
          "short_description": "Understanding the structure of large codebases is a key challenge for developers, especially in open source projects with complex service...",
          "description": "Understanding the structure of large codebases is a key challenge for developers, especially in open source projects with complex service architectures. This project proposes AutoDocs, a tool that uses AI and static code analysis to automatically generate system architecture diagrams from code repositories.\n\nAutoDocs will analyze codebases to extract service boundaries, data flow, and dependencies, then translate these into human-readable diagrams using formats like Mermaid, PlantUML, or Graphviz. Using LLMs or code embedding models (like CodeBERT), it will label components meaningfully and optionally generate natural language summaries for each diagram.\n\nThis tool will help new contributors, DevOps teams, and maintainers quickly understand project architectures, accelerating onboarding and improving documentation standards in open source.",
          "student_name": "Tanvi Ruhika",
          "code_url": null,
          "proposal_id": "Mo8sBtMQ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hiavWdHr"
        }
      ]
    },
    {
      "name": "CCExtractor Development",
      "image_url": "https://summerofcode.withgoogle.com/media/org/ccextractor-development/xjqt8fksfnyqyqrd-360.png",
      "image_background_color": "#ffffff",
      "description": "TV, Rust, Flutter, Linux, VR and C. In any order.",
      "url": "https://www.ccextractor.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/ccextractor-development",
      "ideas_url": "https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/",
      "guide_url": "https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#your-proposal",
      "topics": ["vr", "linux", "video", "subtitles", "mobile"],
      "technologies": ["c", "linux", "rust", "flutter"],
      "irc_channel": "https://ccextractor.org/public/general/support/",
      "contact_email": "mailto:gsoc@ccextractor.org",
      "mailing_list": "https://groups.google.com/g/ccextractor-dev",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 10,
      "projects": [
        {
          "title": "Taskserver II",
          "short_description": "This proposal for Taskserver II aims to enhance the existing CCSync Taskserver, developed during last year’s Google Summer of Code. The primary focus...",
          "description": "This proposal for Taskserver II aims to enhance the existing CCSync Taskserver, developed during last year’s Google Summer of Code. The primary focus this year is to simplify setup and deployment by transitioning from limited or paid Firestore services to a free alternative such as RxDB. Additionally, Docker images for both the backend and frontend will be provided for easy self-hosting and deployment, making the Taskserver production-ready for the Taskwarrior Flutter App.\n\nOther key objectives include implementing Github Actions for the backend and frontend to automate testing on every new commit. Lastly, update CCSync’s documentation, including patch notes and a comprehensive installation guide.",
          "student_name": "Abhishek .",
          "code_url": null,
          "proposal_id": "KjrTIyse",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ffv9og9M"
        },
        {
          "title": "Ultimate Alarm Clock Companion App",
          "short_description": "The project aims to develop awar s companion app for the Ultimate Alarm Clock mobile application. This companion app will allow users to sync,...",
          "description": "The project aims to develop awar s companion app for the Ultimate Alarm Clock mobile application. This companion app will allow users to sync, control and manage alarms directly from the smart watch using the Data Layer API, also lets them set alarms natively on watch and that message can be send to UAC as well.",
          "student_name": "abhishek14104",
          "code_url": null,
          "proposal_id": "9F0FTgBm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gdx2hkoP"
        },
        {
          "title": "Project: Create Python bindings for ectool",
          "short_description": "The fw-fanctrl tool currently relies on calling the ectool CLI repeatedly to control and monitor fan behavior on Framework laptops. This approach...",
          "description": "The fw-fanctrl tool currently relies on calling the ectool CLI repeatedly to control and monitor fan behavior on Framework laptops. This approach introduces performance overhead due to frequent subprocess creation and text parsing. The goal of this project is to improve efficiency and maintainability by converting ectool into a shared library and integrating it directly with fw-fanctrl using Python bindings.\n\nI have already implemented a working prototype using ctypes, exposing essential EC functions as shared library calls. During GSoC, I will refine and extend this prototype and expand the shared library to support more ectool functionalities. I will also benchmark and optimize both ectool and fw-fanctrl, and contribute to building a simple cross-platform GUI.\n\nDeliverables include:\n• Full ectool library interface\n• Ectool optimizations\n• Python bindings and integration with fw-fanctrl \n• Fw-fanctrl optimizations\n• fw-fanctrl GUI contribution",
          "student_name": "Ahmed Gamea",
          "code_url": null,
          "proposal_id": "EPpoLDNn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2GmJ4SSl"
        },
        {
          "title": "Rewriting lib_ccx libraries to Rust",
          "short_description": "This Project Encompasses the work behind rewriting the lib_ccx libraries, which are currently written in C, in Rust, for the sake of Memory Safety,...",
          "description": "This Project Encompasses the work behind rewriting the lib_ccx libraries, which are currently written in C, in Rust, for the sake of Memory Safety, better documentation, new features and removing redundant code. A significant amount of C code would be written in Rust, including their CI, Unit, and Regression testing.",
          "student_name": "Deepnarayan Sett",
          "code_url": null,
          "proposal_id": "srMzgw3M",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aFiTJC0l"
        },
        {
          "title": ".Desktop Actions for Ilia",
          "short_description": "Ilia is a lightweight, keyboard-driven app launcher for Regolith system. Right now, it doesn’t support “.desktop Actions\", which limits users...",
          "description": "Ilia is a lightweight, keyboard-driven app launcher for Regolith system. Right now, it doesn’t support “.desktop Actions\", which limits users performing some tasks..\nThis project will add full support for .desktop Actions in Ilia. I’ll also update the UI to show the difference between apps and actions, ensure everything integrates smoothly with Regolith, with clear documentation.",
          "student_name": "herShit",
          "code_url": null,
          "proposal_id": "ydEq2Dwl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Rqus1H8Q"
        },
        {
          "title": "CCExtractor v1.00 Release",
          "short_description": "CCExtractor’s last stable release (v0.94) came out in 2021, and since then, the codebase has undergone significant modifications, with several major...",
          "description": "CCExtractor’s last stable release (v0.94) came out in 2021, and since then, the codebase has undergone significant modifications, with several major pull requests still pending integration. To ensure a smooth transition to v1.00, this project will focus on finalizing these changes, ensuring all regression tests pass, updating the Flutter-based GUI, and automating the release process.\n\n\nBy the end of this project, CCExtractor will be ready for its v1.00 release, featuring a stable and well-tested codebase, an up-to-date graphical interface, and a streamlined development workflow.",
          "student_name": "Hridesh MG",
          "code_url": null,
          "proposal_id": "2oAzie2L",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/t4gOHYbv"
        },
        {
          "title": "Ultimate Alarm Clock: Enhancing Functionality with Advanced Features",
          "short_description": "Ultimate Alarm Clock is a cross-platform Flutter application that needs enhancement with advanced features to provide users with a more comprehensive...",
          "description": "Ultimate Alarm Clock is a cross-platform Flutter application that needs enhancement with advanced features to provide users with a more comprehensive alarm experience. This project aims to develop 12 key features including negative condition alarms that trigger based on inverse conditions, shared alarm notifications for coordinating wake-up times across multiple devices, timezone-aware alarms, Google Calendar integration, and smart home/IoT integration. Additional features include enhanced snooze customization, sunrise alarms that gradually brighten the screen, task lists for alarms, and advanced alarm insights. The implementation will follow a three-month development plan with regular deliverables, focusing on code quality through UI component standardization and reducing third-party dependencies. The end result will be a significantly enhanced open-source alarm clock application that goes beyond basic functionality to serve modern users' complex scheduling needs while maintaining a clean, intuitive interface across all platforms.",
          "student_name": "Mahendra Kasula",
          "code_url": null,
          "proposal_id": "nVVWKv9t",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2QYJCAhN"
        },
        {
          "title": "Build a COSMIC based wayland session for Regolith",
          "short_description": "Regolith is a productivity-focused Ubuntu-based desktop environment that combines tiling window managers (Sway, i3) with GNOME components for system...",
          "description": "Regolith is a productivity-focused Ubuntu-based desktop environment that combines tiling window managers (Sway, i3) with GNOME components for system management and GUI features. While GNOME depends on Mutter and custom Wayland protocols unsupported by wlroots-based compositors like Sway, this limits modularity and integration. To improve flexibility, this project aim to integrate the new Cosmic desktop components (cosmic-epoch), which, despite being in early alpha, offers a more modular and integration-friendly design.",
          "student_name": "Sandeep Patel",
          "code_url": null,
          "proposal_id": "iRivmFd5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mV0VlVwv"
        },
        {
          "title": "Taskwarrior",
          "short_description": "Taskwarrior Flutter is a free and open source software that aims to provide GUI for various platforms as companion for Taskwarrior CLI. Last year in...",
          "description": "Taskwarrior Flutter is a free and open source software that aims to provide GUI for various platforms as companion for Taskwarrior CLI. Last year in house Taskserver CCSync was developed. This year aim is to make Flutter Application integration robust with those APIs. Additionally, this year project aims to deliver support for iOS and Desktops, Compatibility with Taskwarrior 2.0 as well as Taskwarrior 3.0 Complete Test coverage and Complete getx migration for state management.",
          "student_name": "ShubhamGI",
          "code_url": null,
          "proposal_id": "XcnccsK5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HdLyKkMu"
        },
        {
          "title": "URL Shortener, with a twist!",
          "short_description": "Traditional URL shorteners prioritize mass sharing but often lack privacy controls. This project reimagines the concept by introducing a...",
          "description": "Traditional URL shorteners prioritize mass sharing but often lack privacy controls. This project reimagines the concept by introducing a privacy-focused URL shortener that allows users to create both public short URLs and protected links with restricted access. Users can specify who can access a link, ensuring that the content remains private and accessible only to selected individuals.",
          "student_name": "Vidit Agrawal",
          "code_url": null,
          "proposal_id": "8lWzHWHR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gahC6BNh"
        }
      ]
    },
    {
      "name": "Ceph",
      "image_url": "https://summerofcode.withgoogle.com/media/org/ceph/rvqqprqtyq0rfrcc-360.png",
      "image_background_color": "#ffffff",
      "description": "The Future of Storage",
      "url": "https://ceph.io/en/",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/ceph",
      "ideas_url": "https://ceph.io/en/developers/google-summer-of-code/",
      "guide_url": "https://docs.ceph.com/en/latest/dev/developer_guide/",
      "topics": ["distributed systems", "Software-Defined-Storage"],
      "technologies": ["python", "javascript", "c++"],
      "irc_channel": "https://join.slack.com/t/ceph-storage/shared_invite/zt-1n8yigss2-yYg099VlTiGMCLIziG_h4Q",
      "contact_email": "",
      "mailing_list": "https://ceph.io/en/community/connect/",
      "twitter_url": "https://twitter.com/ceph",
      "blog_url": "https://ceph.io/en/news/blog/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "The More The Merrier - Sharded Queues for Persisent Bucket Notifications in Rados GW",
          "short_description": "In brief, this project deals with persistent bucket notifications, a feature first rolled out in Ceph Pacific, as a part of the Rados Gateway...",
          "description": "In brief, this project deals with persistent bucket notifications, a feature first rolled out in Ceph Pacific, as a part of the Rados Gateway Project. The current implementation doesn’t use the full extensive capabilities of RADOS tying one topic to a single RADOS object  (a 2 Phase Commit Queue Rados Object). A sharded queue implementation of persisting bucket notifications would allow for better performance - allowing for parallel writes to multiple OSDs.",
          "student_name": "Adarsh Ashokan",
          "code_url": null,
          "proposal_id": "8OegTUJc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ppcKvem6"
        },
        {
          "title": "Enhancing Ceph Dashboard Usability: Advanced Notifications & NVMe-oF Management Workflow",
          "short_description": "Proposal Summary: Ceph Dashboard is a web-based management and monitoring tool for Ceph, utilizing Angular/TypeScript for the frontend and Python for...",
          "description": "Proposal Summary:\n\nCeph Dashboard is a web-based management and monitoring tool for Ceph, utilizing Angular/TypeScript for the frontend and Python for the backend. This project aims to improve the dashboard’s usability by refining the notification system and adding a structured workflow for managing NVMe-oF devices. These enhancements will simplify monitoring and device management, making Ceph more user-friendly and efficient.\n\nDeliverables\nBy the end of the project, the following deliverables will be completed:\n\nEnhanced Notification System\n\nImprove the notification framework to ensure better alert visibility and management.\n\nImplement customization options for filtering, grouping, and prioritizing notifications.\n\nEnsure seamless backend integration and optimized frontend display.\n\nNVMe-oF Device Management Workflow\n\nDesign and develop a user-friendly interface for managing NVMe-oF devices.\n\nImplement backend logic to support NVMe-oF device operations within the Ceph Dashboard.\n\nEnsure proper testing and documentation for maintainability.\n\nFirst Two Weeks Plan\nDuring the initial two weeks, the focus will be on:\n\nWeek 1: Reviewing the existing notification system, identifying pain points, and drafting an improvement plan. Conducting discussions with the community to gather feedback and finalize design considerations.\n\nWeek 2: Researching NVMe-oF integration requirements, setting up development environments, and drafting an initial workflow design.\n\nThese structured improvements will enhance Ceph Dashboard’s usability and provide a smoother user experience for storage administrators.",
          "student_name": "Anikait Sehwag",
          "code_url": null,
          "proposal_id": "XOsUyX3H",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SnSh5sFr"
        },
        {
          "title": "Normalization and Interpretation Enhancement of drivedb.h in smartmontools",
          "short_description": "smartmontools (smartctl) is a widely used tool for collecting SMART metrics from storage devices (SATA, SAS, NVMe). However, its runtime metadata...",
          "description": "smartmontools (smartctl) is a widely used tool for collecting SMART metrics from storage devices (SATA, SAS, NVMe). However, its runtime metadata file, drivedb.h, suffers from inconsistent labeling of attributes such as SSD wear level, which hinders meaningful data analysis and monitoring. These inconsistencies make it challenging to integrate smartctl metrics into observability tools used in Ceph and other environments.\n\nThis project proposes a two-part solution. First, I will add an interpretation primitive in smartmontools’ C++ codebase to handle transformations such as converting wear remaining to wear used (e.g., 100 - value). Second, I will develop a regex-based postprocessor tool to normalize and map freeform SMART attribute labels from drivedb.h to a consistent and defined set. This tool will help standardize outputs and facilitate reliable data ingestion for observability dashboards.\n\nDeliverables include:\n\nInterpretation logic enhancement in the smartmontools C++ source\n\nA standalone normalization tool (in Python, Go, or C++)\n\nDocumentation and guidelines for community usage and extension\n\nOptional test suite to validate attribute normalization",
          "student_name": "Anusha Singh",
          "code_url": null,
          "proposal_id": "gnnHzMsb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pqUXYPjf"
        },
        {
          "title": "PROPOSAL FOR TEUTHOLOGY ON PODMAN",
          "short_description": "Currently, ceph-devstack runs a testnode container with only one OSD per node using a loop block created on the host system as a storage device. To...",
          "description": "Currently, ceph-devstack runs a testnode container with only one OSD per node using a loop\nblock created on the host system as a storage device. To be closer to a production-like\nenvironment, it is important to make ceph-devstack run many OSD per testnode. To do that we need to : enable support for arbitrary number of OSDs and define size of storage devices. The deliverable will be a new version of ceph-devstack with listed features.",
          "student_name": "Parfait Detchenou",
          "code_url": null,
          "proposal_id": "sMwSPpGd",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VpxBIJmv"
        },
        {
          "title": "Warm And Fuzzy",
          "short_description": "RESTler is a REST API fuzzing tool designed to automatically test cloud services via their REST APIs to uncover security and reliability issues. The...",
          "description": "RESTler is a REST API fuzzing tool designed to automatically test cloud services via their\nREST APIs to uncover security and reliability issues. The primary goal of this project is to\nleverage fuzzing tools like RESTler to identify and resolve as many bugs and vulnerabilities as possible within Ceph's RADOS Gateway (RGW). Alongside bug discovery and resolution, the project also aims to integrate these fuzzing tests into Ceph’s automated testing framework, Teuthology.",
          "student_name": "Suyash Dongre",
          "code_url": null,
          "proposal_id": "vC0iTM70",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ESULZGqh"
        }
      ]
    },
    {
      "name": "freifunk",
      "image_url": "https://summerofcode.withgoogle.com/media/org/freifunk/bpcbaeecusvfzbzk-360.png",
      "image_background_color": "#ffffff",
      "description": "Free and open wireless networks",
      "url": "https://freifunk.net/en",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/freifunk",
      "ideas_url": "https://projects.freifunk.net",
      "guide_url": "https://projects.freifunk.net/#/faq",
      "topics": [
        "security",
        "embedded systems",
        "routing",
        "wireless networks",
        "federation"
      ],
      "technologies": ["c", "python", "javascript", "rust", "openwrt"],
      "irc_channel": "https://matrix.to/#/#freifunk-gsoc2021:bau-ha.us",
      "contact_email": "mailto:gsoc-org-admins@freifunk.net",
      "mailing_list": "",
      "twitter_url": "https://social.freifunk.net/@freifunk",
      "blog_url": "https://blog.freifunk.net",
      "facebook_url": "https://www.facebook.com/freifunknet",
      "num_projects": 5,
      "projects": [
        {
          "title": "Simplifying LibreMesh with OpenWrt-Native Solutions",
          "short_description": "LibreMesh has grown over the past decade with valuable community contributions, but some of its features now duplicate tools available in OpenWrt....",
          "description": "LibreMesh has grown over the past decade with valuable community contributions, but some of its features now duplicate tools available in OpenWrt. \n\nThis project proposes replacing key LibreMesh modules with OpenWrt-native equivalents (e.g., replacing deferrable-reboot with watchcat, and dnsmasq with odhcpd for DHCP), reducing code redundancy and improving upstream compatibility. It also aims to simplify the system by removing VLANs from routing protocols and creating a lightweight layer-2-only firmware variant for low-resource devices.\nThe result will be a leaner, more maintainable LibreMesh aligned with OpenWrt standards.\n\nDeliverables include: migrating to upstream tools, simplifying configurations, testing in both virtual and physical environments, and engaging the community for feedback and adoption.",
          "student_name": "Agustin Trachta",
          "code_url": null,
          "proposal_id": "ghuJIhmH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NivhKPOA"
        },
        {
          "title": "qaul RPC user authentication layer",
          "short_description": "The qaul RPC user authentication layer project aims to implement a secure and scalable authentication system for the qaul network, enabling multiple...",
          "description": "The qaul RPC user authentication layer project aims to implement a secure and scalable authentication system for the qaul network, enabling multiple users per node and ensuring secure communication between libqaul and the user interface (CLI and future Flutter GUI). The primary objective is to develop an authentication and session management system based on public key cryptography, token-based sessions, and encryption through the Noise protocol.\n\nTo achieve this, the project will focus on several key components: designing a robust authentication system, implementing token-based session management, integrating encryption for secure communication, and building a command-line interface (qauld-ctl) to manage user identities, sessions, and secure communication. Additionally, the project will establish a protobuf communication structure to facilitate these features between the user interface and libqaul.",
          "student_name": "claddy",
          "code_url": null,
          "proposal_id": "s6SAISRc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3s6IePJd"
        },
        {
          "title": "Deep Q Network-based Rate Adaptation for IEEE 802.11ac Networks",
          "short_description": "This project aims to enhance Wi-Fi rate adaptation by integrating Deep Q-Networks (DQN) with the ORCA and RateMan frameworks. Traditional rate...",
          "description": "This project aims to enhance Wi-Fi rate adaptation by integrating Deep Q-Networks (DQN) with the ORCA and RateMan frameworks. Traditional rate adaptation algorithms like Minstrel-HT struggle in dynamic wireless environments, especially in fast-changing conditions. By using machine learning, specifically DQN, the project will dynamically optimize Wi-Fi transmission rates based on real-time metrics such as SNR, RSSI, retry counts, and throughput. The system will be tested and compared against existing algorithms to assess improvements in throughput, latency, and packet loss. Deliverables include a fully integrated DQN-based rate adaptation model, detailed simulation results, and code contributions to the open-source community.",
          "student_name": "Raul Shahi",
          "code_url": null,
          "proposal_id": "WPFdncu4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/S9jb6evA"
        },
        {
          "title": "Social Media Archive Explorer + Frontend Nodes",
          "short_description": "This project aims to build a static, user-friendly site that serves as an archive explorer for Freifunk’s historical social media posts. These posts...",
          "description": "This project aims to build a static, user-friendly site that serves as an archive explorer for Freifunk’s historical social media posts. These posts were archived as HTML files and a SQLite3 database. Processing the HTML and SQLite3 data will happen through an extraction tool that will be documented and set up for others in future projects. The website allows users to search for historical posts in a user-friendly fashion. An engaging node-inspired front-end component will be implemented in the site deliverable. Through this project, the archive will function as a positive reflection of the past and a welcoming introduction for new people discovering the history of the Freifunk community.",
          "student_name": "Sandra Taskovic",
          "code_url": null,
          "proposal_id": "3dgRKSCA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EJ7jWFK9"
        },
        {
          "title": "Adding Wi-Fi Support to QEMU Simulations in LibreMesh",
          "short_description": "LibreMesh relies on continuous testing to ensure its robustness across various network conditions and hardware setups. Currently, testing new...",
          "description": "LibreMesh relies on continuous testing to ensure its robustness across various network conditions and hardware setups. Currently, testing new firmware images lacks a standardized method to include Wi-Fi simulations within a virtualized environment. This project aims to add Wi-Fi support to existing QEMU simulations for LibreMesh, allowing near-realistic network testing using virtual Wi-Fi interfaces. By leveraging the mac80211_hwsim module and integrating existing OpenWrt-friendly virtual Wi-Fi tools, we can enhance testing automation and reproducibility.\n\nBenefits to the Community\n\n- Improved Testing Framework: This project will enable LibreMesh developers to run “almost real” tests in a virtualized environment, improving debugging and validation before deploying changes to physical hardware.\n- Enhanced Automation: By integrating virtual Wi-Fi support into QEMU, developers can automate complex test scenarios without requiring physical routers.\n- A set of scripted tests that can be run on real hardware: Currently, real tests on physical hardware are performed manually at each release. With this new set of test scripts for QEMU and Wi-Fi, many tests will be automated and easily adapted to real hardware.\n- Collaboration with OpenWrt: Given that OpenWrt is also working on virtual Wi-Fi support, this project can align efforts with the broader open-source networking community, benefiting multiple projects.\n- Lower Barrier to Entry: New contributors will find it easier to test their changes without needing specialized hardware.",
          "student_name": "Victor Spehar",
          "code_url": null,
          "proposal_id": "tNfPAaPy",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yBmMMWDN"
        }
      ]
    },
    {
      "name": "National Resource for Network Biology (NRNB)",
      "image_url": "https://summerofcode.withgoogle.com/media/org/national-resource-for-network-biology-nrnb/5uobjboaxnzrxyoj-360.png",
      "image_background_color": "#ffffff",
      "description": "Developing open source tools for network biology",
      "url": "https://nrnb.org/gsoc.html",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/national-resource-for-network-biology-nrnb",
      "ideas_url": "https://github.com/nrnb/GoogleSummerOfCode/issues",
      "guide_url": "https://docs.google.com/document/d/1Zi6L38CHEeq2aL6xzv0Ozhd_Y6D71W3yCBGHplmxr6k/edit?usp=sharing",
      "topics": [
        "machine learning",
        "web application",
        "data science",
        "scientific computing",
        "network biology"
      ],
      "technologies": ["python", "javascript", "json", "html", "css"],
      "irc_channel": "https://github.com/nrnb/GoogleSummerOfCode/issues",
      "contact_email": "mailto:kristina.hanspers@gladstone.ucsf.edu",
      "mailing_list": "https://groups.google.com/g/cytoscape-helpdesk",
      "twitter_url": "",
      "blog_url": "https://nrnb.org/testimonials.html#profile-tab",
      "facebook_url": "",
      "num_projects": 8,
      "projects": [
        {
          "title": "Developing a highly efficient numerical ODE solver in Systems Biology Simulation Core Library",
          "short_description": "The field of computational biology depends significantly on mathematical modeling to simulate complex biological simulations, often involving...",
          "description": "The field of computational biology depends significantly on mathematical modeling to simulate complex biological simulations, often involving solution of large systems of ordinary differential equations, which describe dynamic biological processes. Accurate and efficient numerical solvers are essential for these simulations to predict correct behaviour. LSODA (Livermore Solver for Ordinary Differential equations Automatic) is a well-established ODE solver known for its ability to dynamically switch between stiff and nonstiff methods, making it particularly suitable for biological models where stiffness can vary over time. However, LSODA’s widely used implementations are primarily in C/C++ and Fortran, creating a barrier for researchers working in Java-based environments. This project aims to bridge that gap by implementing a robust, optimized, thoroughly tested, and fully functional Java-based version of the LSODA algorithm within SBSCL (Systems Biology Simulation Core Library).",
          "student_name": "Ayush Baranwal",
          "code_url": null,
          "proposal_id": "ROGM9hw7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gtQryewh"
        },
        {
          "title": "SeqTrainer - creating datasets from SynBioHub to aid researchers in creating machine learning models",
          "short_description": "In the realm of synthetic biology, there is a significant source of data in the form of models, genetic sequences, regulatory networks, and...",
          "description": "In the realm of synthetic biology, there is a significant source of data in the form of models, genetic sequences, regulatory networks, and experimental results. Databases such as SynBioHub store this data represented by the Synthetic Biology Open Language (SBOL); using machine learning models, this data can be used by researchers to predict promoter activity, analyze protein-DNA interactions, and more. However, researchers must preprocess SBOL data before training their models, which can be time-consuming. Thus, this project aims to develop a Python package to automate the creation of datasets from data in SynBioHub. In doing so, we will first upload data from previous research to SynBioHub, create the package that returns data from SynBioHub in a format suitable for machine learning models, test the package on the data that was uploaded, explore the performance of a Graph Neural Network (GNN) on the data, and thoroughly document the package.",
          "student_name": "cywong",
          "code_url": null,
          "proposal_id": "jwNfsQPH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Z3Hk9SnE"
        },
        {
          "title": "SBOL2 SBOL3 Convertor Utility",
          "short_description": "The Synthetic Biology Open Language (SBOL) serves as a vital community standard for representing biological designs, with version 3.1 offering mature...",
          "description": "The Synthetic Biology Open Language (SBOL) serves as a vital community standard for representing biological designs, with version 3.1 offering mature capabilities for the entire Design-Build-Test-Learn cycle. Despite this advancement, a significant hurdle persists: the widespread use of the older SBOL2 format by crucial tools and large repositories like SynBioHub, coupled with the absence of a complete converter to bridge the gap with SBOL3. This incompatibility fragments the ecosystem, hinders the adoption of the latest standard, and limits seamless data exchange. \nThis project tackles this challenge by directly contributing to the development of the essential bidirectional Python converter between SBOL2 and SBOL3 within the sbol-utilities library. By implementing and testing conversion functionalities, this work aims to create the necessary infrastructure to unify the SBOL software landscape, enable smooth migration to SBOL3, facilitate interoperability, and unlock the full potential of the standard for the synthetic biology community.",
          "student_name": "Harsh Sharma @22",
          "code_url": null,
          "proposal_id": "RFrpAGaq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1PJYrp9q"
        },
        {
          "title": "CySBML Reloaded: Smarter, Simpler, Automated",
          "short_description": "CySBML Reloaded: Smarter, Simpler, Automated focuses on upgrading CySBML — a Cytoscape app for visualizing computational models encoded in SBML. The...",
          "description": "CySBML Reloaded: Smarter, Simpler, Automated focuses on upgrading CySBML — a Cytoscape app for visualizing computational models encoded in SBML. The project will enhance usability, improve stability, and introduce automation features, making it easier for researchers to explore, validate, and interact with complex biomedical models through an intuitive and streamlined interface based on network visualization.\n\nThe main project outcomes of CySBML Reloaded: Smarter, Simpler, Automated will be a major release of CySBML, with an updated backend supporting automation features, an up-to-date frontend addressing usability issues, updated REST APIs, improved reading of SBML, and improved visualization capabilities such as network and cofactor collapse. This will allow us to integrate CySBML in modeling workflows based on Python/R.",
          "student_name": "Hikmet Emre Kaya",
          "code_url": null,
          "proposal_id": "5yLIsVdr",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YaV539XE"
        },
        {
          "title": "Enhancing SBOannotator with LLM Integration & Dynamic Term Retrieval",
          "short_description": "This proposal aims to transform SBOannotator from a static, hard-coded tool into a dynamic, intelligent system for annotating SBML models with...",
          "description": "This proposal aims to transform SBOannotator from a static, hard-coded tool into a dynamic, intelligent system for annotating SBML models with Systems Biology Ontology terms.After initial discussions with mentor Nantia Leonidou, who provided valuable feedback on my approach, I've developed a comprehensive plan and initial implementation (PR #2 https://github.com/draeger-lab/SBOannotator/pull/2). \n\nBy implementing real-time SBO term retrieval, integrating multiple enzymatic data sources, and incorporating LLM-based annotation assistance, this project will significantly enhance both the accuracy and usability of SBOannotator while maintaining its core classification strengths. The addition of a standalone desktop GUI with interactive visualizations will make these powerful annotation capabilities accessible to a broader range of systems biology researchers.",
          "student_name": "Jiahui Hu",
          "code_url": null,
          "proposal_id": "ygDDJOYD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UvnOXGwN"
        },
        {
          "title": "Project #263: Chatbot to query VCell modeling resources",
          "short_description": "This project aims to build an intelligent chatbot and web interface that allows researchers to query and explore models from the VCell BioModel...",
          "description": "This project aims to build an intelligent chatbot and web interface that allows researchers to query and explore models from the VCell BioModel Database using natural language. Users will be able to search by geometry, solver, or biological context, access both public and private models, generate visual diagrams, and receive contextual explanations. The system will use LLMs, a Retrieval-Augmented Generation (RAG) pipeline, and VCell APIs to support model interpretation and simulation. Deliverables include a modular backend of specialized agents (querying, knowledge, visualization), a responsive frontend (Streamlit or React), and full documentation for deployment and reuse.",
          "student_name": "Kacem Mathlouthi",
          "code_url": null,
          "proposal_id": "b0qQgPOZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vFE5LPKW"
        },
        {
          "title": "Enhancing the Systems Biology Simulation Core Library (SBSCL) with a Solver-Agnostic Framework...",
          "short_description": "This project addresses the current incompatibility of the Systems Biology Simulation Core Library (SBSCL) with modern computing architectures,...",
          "description": "This project addresses the current incompatibility of the Systems Biology Simulation Core Library (SBSCL) with modern computing architectures, specifically ARM-based processors. It restores its functionality on these newer hardware platforms. By creating a flexible, solver-agnostic abstraction layer, SBSCL will integrate a variety of linear optimization solvers, including both open-source (GLPK, CBC, SCIP) and commercial (CPLEX, Gurobi) options. The project also explores extending functionality with advanced constraint-based analysis methods, such as Flux Variability Analysis (FVA), further enhancing SBSCL’s analytical capabilities. Comprehensive validation, clear documentation, and example workflows will ensure easy use and broad adoption. Ultimately, these improvements will substantially enhance SBSCL’s usability, reproducibility, and overall user experience. As a result, researchers will spend less time on technical workarounds and more time focusing on biological questions.",
          "student_name": "Michael-Gaas",
          "code_url": null,
          "proposal_id": "OzdzflQ8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Yibmo4UH"
        },
        {
          "title": "LLM-Powered Interactive Chat Interface for CellMinerCDB with GraphRAG Integration",
          "short_description": "This project will develop an intelligent chat interface for CellMinerCDB, a cancer genomics database, using GraphRAG (Graph Retrieval-Augmented...",
          "description": "This project will develop an intelligent chat interface for CellMinerCDB, a cancer genomics database, using GraphRAG (Graph Retrieval-Augmented Generation) to enhance accessibility for researchers. The system will convert natural language queries into executable R code and leverage knowledge graphs to provide context-aware responses about complex relationships between drugs, genes, and cancer cell lines.\n\nKey deliverables include: (1) A data bridge connecting R's CellMinerCDB with Python; (2) A GraphRAG component that builds and queries knowledge graphs from cancer genomics data; (3) NDEx integration for network visualization and sharing; and (4) A natural language interface powered by PandasAI. This project extends previous work by adding knowledge graph capabilities, improving entity recognition for cancer genomics terminology, and enabling standardized network sharing through NDEx.\n\nThe completed system will democratize access to complex cancer genomics data, promote reproducibility in research, and establish a foundation for natural language interfaces to biomedical databases.",
          "student_name": "Milit S Patel",
          "code_url": null,
          "proposal_id": "FmdcdWuP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/G0jh7cDV"
        }
      ]
    },
    {
      "name": "Zendalona",
      "image_url": "https://summerofcode.withgoogle.com/media/org/zendalona/tqduj6nsxnnw3vpy-360.png",
      "image_background_color": "#ffffff",
      "description": "FOSS accessibility solutions for visually impaired",
      "url": "https://zendalona.com/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/zendalona",
      "ideas_url": "https://docs.google.com/document/d/1HshVGE-oQq_xx09zG2LfqfVYWRhyrASteXzabCV9eIQ/edit?usp=sharing",
      "guide_url": "https://zendalona.com/gsoc/",
      "topics": ["web", "accessibility", "braille", "gaming", "AGI"],
      "technologies": ["python", "javascript", "android", "gtk", "qt"],
      "irc_channel": "https://telegram.me/zendalona_gsoc",
      "contact_email": "mailto:zendalona@gmail.com",
      "mailing_list": "https://groups.google.com/g/zendalona_gsoc_2024",
      "twitter_url": "",
      "blog_url": "https://groups.google.com/g/zendalona_gsoc_2024",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Accessibility in the Ubuntu Installer for Visually Impaired Users - Support Accessible-Coconut 24.04",
          "short_description": "This project aims to make the Ubuntu Desktop Provision installer fully accessible to visually impaired users by addressing key accessibility issues...",
          "description": "This project aims to make the Ubuntu Desktop Provision installer fully accessible to visually impaired users by addressing key accessibility issues in its Flutter-based interface. Currently, the installer lacks proper screen reader support, suffers from poor keyboard navigation, and fails to provide audio feedback, making it unusable for blind and low-vision users, especially those relying on Accessible-Coconut, a Ubuntu-based distribution developed by Zendalona.\n\nThe solution involves fixing both architectural and UI-level problems in how Flutter components interact with Linux accessibility frameworks (AT-SPI). It will include:\n- Implementing semantic accessibility wrappers\n- Ensuring proper focus and navigation flow\n- Enhancing screen reader feedback using Orca\n- Improving the accessibility of complex UI components, such as partitioning\n- Conducting extensive user testing and providing detailed documentation\n\nDeliverables\n- A fully accessible Ubuntu installer with complete screen reader compatibility\n- Keyboard-navigable UI with audio cues and meaningful semantic labels\n- Documentation and developer guidelines for future accessibility improvements\n- Tested integration with Accessible-Coconut 24.04\n\nThis project will enable independent system installation for visually impaired users and contribute long-term value to Flutter-Linux accessibility efforts and the broader open-source community.",
          "student_name": "Akshay Waghmare",
          "code_url": null,
          "proposal_id": "DQwExLHp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WRFeuRPW"
        },
        {
          "title": "AI-Powered Agent to provide support for Zendalona products",
          "short_description": "I will build an accessible AI support agent for Zendalona product.. This project addresses a critical gap in accessibility support by creating a...",
          "description": "I will build an accessible AI support agent for Zendalona product.. This project addresses a critical gap in accessibility support by creating a conversational interface that seamlessly accepts both voice and text input, allowing users to interact naturally with Zendalona's product ecosystem.\nThe technical architecture employs an Agentic Retrieval-Augmented Generation (RAG) approach using LlamaIndex. This system will methodically index all Zendalona product information, documentation, and support materials in a vector database (ChromaDB or FAISS). When users submit queries, the system retrieves contextually relevant information and passes it to a large language model alongside the query, enabling precise, helpful responses based on accurate product knowledge.\nThe implementation follows a three-tier approach: First, a comprehensive data ingestion pipeline that processes, cleans, and vectorizes Zendalona's product information. Second, a robust Python backend built with FastAPI that handles query processing, context retrieval, and response generation through integration with STT/TTS services and LLM APIs. Third, a fully accessible React-based multimodal chat interface featuring high-contrast text, complete keyboard navigation, ARIA attributes, and seamless screen reader compatibility, particularly with Orca.\nKey deliverables include a modular, containerized system with separate frontend and backend Docker containers orchestrated via Docker Compose, comprehensive API documentation, extensive accessibility testing results, and detailed user guides. The solution prioritizes WCAG 2.2 compliance, minimal latency, data privacy, and security throughout the architecture. The final product will provide visually impaired users with an intuitive, conversational way to access product support that works effectively with their existing assistive technologies.",
          "student_name": "Ashish Baghel",
          "code_url": null,
          "proposal_id": "3wfUCgu7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GMl3b6RZ"
        },
        {
          "title": "World-Map-Explorer Android (zMap)",
          "short_description": "The Android version of World-Map-Explorer aims to leverage its existing web platform by integrating a web view, enabling direct reuse of features and...",
          "description": "The Android version of World-Map-Explorer aims to leverage its existing web platform by integrating a web view, enabling direct reuse of features and functionalities from the web version, which is optimized for keyboard and screen reader accessibility. The primary challenge lies in adapting accessibility for mobile users, replacing keyboard navigation with an intuitive gesture-based system that mirrors the web experience. To ensure seamless usability, this gesture system must activate exclusively when TalkBack is enabled, requiring a custom accessibility service to override TalkBack’s default behavior and prioritize app-specific gestures. Developing this service demands meticulous planning to handle all potential interruptions (e.g., notifications, calls) while maintaining smooth app operation. Additionally, sighted users should experience a conventional interface akin to mainstream map apps like Google Maps, necessitating a dual design approach: the gesture system remains invisible unless accessibility features are active. Success hinges on balancing robust gesture detection, reliable event management, and preserving a familiar UI for non-TalkBack users, ensuring universal accessibility without compromising usability.",
          "student_name": "Jyothir Adithya P",
          "code_url": null,
          "proposal_id": "I1YubGfo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0IxcYruN"
        },
        {
          "title": "Linux-Intelligence-OCR-Solution(LIOS) - Enhancement",
          "short_description": "Summary: The goal of this project is to improve the Linux-Intelligent OCR Solution (LIOS), an open-source tool for text extraction from images,...",
          "description": "Summary:\nThe goal of this project is to improve the Linux-Intelligent OCR Solution (LIOS), an open-source tool for text extraction from images, scanned documents, and PDFs using Tesseract and Cuneiform OCR engines. The primary focus will be on enhancing usability, accessibility, and performance, particularly for visually impaired users, while also addressing several existing issues.\n\nProblem:\nLIOS is a powerful tool, but there are several issues that hinder its usability and accessibility. These include problems with the UI/UX design, scanner compatibility, OCR integration, and the lack of proper error handling, which often leads to crashes. Additionally, there are several other bugs that need attention, such as issues with text focus, icon display, and preview functionality.\n\nSolution:\nThe project will focus on addressing these issues and improving the overall user experience:\n\nUI/UX Improvements: Simplify the interface and improve accessibility, particularly for low-vision users.\n\nBug Fixes & Code Refinements: Address the following specific issues:\n\nText Focus: Ensure the textview regains focus after using Goto Line and Goto Page.\n\nTab Focus: Improve tab focus handling for better navigation.\n\nIcon Display: Fix the larger icon issue in the icon view for consistent UI presentation.\n\nPrint Preview: Fix the Print Preview functionality, which currently isn’t working as expected.\n\nError Handling: Implement proper error handling to prevent crashes and unexpected behavior.\n\nImage Rotation: Resolve the automatic deletion issue when rotating selected areas of the image.\n\nFind/Replace Accessibility: Ensure the Find and Find & Replace features are fully accessible and functional.\n\nScanner Compatibility: Improve compatibility with various scanner models, ensuring better cross-platform support.\n\nTesseract Integration: Enhance the detection of Tesseract data paths for more accurate OCR functionality.",
          "student_name": "Nihal_Rodge",
          "code_url": null,
          "proposal_id": "6NbyfqXq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/17ibgYz9"
        },
        {
          "title": "Liblouis table editor - Enhancement",
          "short_description": "Liblouis Table Editor, a tool that helps users create and edit braille translation tables used by screen readers and braille devices. Editing these...",
          "description": "Liblouis Table Editor, a tool that helps users create and edit braille translation tables used by screen readers and braille devices. Editing these tables manually is difficult, especially when working with Unicode code points and special rules. I will add important missing features like forward and backward translation testing, fix existing bugs, improve the interface, and make sure the tool is fully accessible to blind users. I will also create easy-to-use installers for Linux and Windows.",
          "student_name": "SahilRakhaiya05",
          "code_url": null,
          "proposal_id": "PaTuP05Z",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1id80PNv"
        },
        {
          "title": "Accessible TuxType and TuxMath Enhancement",
          "short_description": "The core proposal is to enhance TuxType and TuxMath, open-source educational games developed by Tux4Kids, by integrating accessibility features for...",
          "description": "The core proposal is to enhance TuxType and TuxMath, open-source educational\r\ngames developed by Tux4Kids, by integrating accessibility features for visually impaired\r\nusers and releasing new official versions on GNU/Linux, Microsoft Windows, and\r\nmacOS. TuxType is an educational typing game with modes like Fish Cascade and\r\nComet Zap, designed to improve typing skills in an engaging way TuxType GitHub.\r\nTuxMath transforms math practice into an arcade game, fostering quick thinking and\r\nmathematical skills TuxMath GitHub. Both games share the t4common library and are\r\ncoded in C, utilizing the SDL library for graphics t4common GitHub.\r\nThe project builds on the 2013 GSoC work, which made these games accessible with\r\nTTS and keyboard navigation, but these features are not in the current official versions.",
          "student_name": "Saju Suresh S",
          "code_url": null,
          "proposal_id": "e5x7Sv2F",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fl2BAWnr"
        },
        {
          "title": "Maths-Mantra Enhancement",
          "short_description": "This project aims to enhance Maths-Mantra, an educational app designed for visually impaired primary school students (up to Grade 5), by addressing...",
          "description": "This project aims to enhance Maths-Mantra, an educational app designed for visually impaired primary school students (up to Grade 5), by addressing accessibility and engagement challenges in mathematics learning. Existing limitations include insufficient math-specific screen reader support, lack of multi-sensory learning, underutilized device sensors, and restricted input methods. To solve these, we will develop custom accessibility services with gesture-based navigation and audio-tactile feedback, introduce gamified learning modes covering time, currency, and spatial concepts, integrate sensors like the gyroscope and GPS for interactive experiences, and implement speech recognition and multi-touch support for geometry exploration. The project will be structured into phases: Community Bonding (May 8 - June 1) to finalize features and architecture, Phase 1 (June 2 - July 14) to develop the first MVP, Phase 2 (July 15 - August 25) to implement MVP2  and the Final Evaluation (August 25 - September 1) to complete testing, documentation, and publication.",
          "student_name": "SHADIL AM",
          "code_url": null,
          "proposal_id": "cXlttnyA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SL9ZcwNI"
        }
      ]
    },
    {
      "name": "Project Mesa",
      "image_url": "https://summerofcode.withgoogle.com/media/org/project-mesa/fh3o8surszufvjpv-360.png",
      "image_background_color": "#ffffff",
      "description": "Mesa: Agent-based modeling in Python 3+",
      "url": "https://mesa.readthedocs.io/latest/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/project-mesa",
      "ideas_url": "https://github.com/projectmesa/mesa/wiki/Google-Summer-of-Code-2025",
      "guide_url": "https://github.com/projectmesa/mesa/blob/main/CONTRIBUTING.md",
      "topics": ["Agent Based Models", "Generative Science"],
      "technologies": ["python", "ui/ux", "LLMs", "Vector Operations"],
      "irc_channel": "https://matrix.to/#/#GSoC:matrix.org",
      "contact_email": "mailto:maintainers@projectmesa.dev",
      "mailing_list": "https://github.com/projectmesa/mesa/discussions",
      "twitter_url": "",
      "blog_url": "https://www.linkedin.com/company/projectmesa/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Mesa-Frames: Stats & Event-Driven Data Collection with Streamed Storage",
          "short_description": "This project aims to significantly enhance Mesa-Frames by building efficient and scalable data collection tools for large-scale agent-based...",
          "description": "This project aims to significantly enhance Mesa-Frames by building efficient and scalable data collection tools for large-scale agent-based simulations. The core focus is on developing a flexible framework that allows researchers to analyze simulation data with greater precision and lower overhead. One of the main components, the Stats Collection, will enable users to define exactly which statistics they want to track—such as mean, max, or count—helping reduce both memory usage and computation time.\n\nAnother key feature is the Event Driven Collection, which records data only when predefined conditions are met. This ensures researchers capture meaningful insights while avoiding unnecessary logging and storage. To support even larger simulations, the project will also include integration with external storage systems like PostgreSQL and S3, allowing collected data to be streamed directly to disk or the cloud.\n\nIn addition to these core improvements, the project will focus on performance optimization through lazy execution with Polars and better vectorization. Clear, modular documentation and a focus on usability will ensure Mesa-Frames remains an accessible and powerful tool.",
          "student_name": "Ben Geo Abraham",
          "code_url": null,
          "proposal_id": "jP5YuRsu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/k8Emw4vz"
        },
        {
          "title": "Mesa-LLM",
          "short_description": "As an agent-based modeling (ABM) framework, Mesa is easy to use and applicable for a wide range of simulations. But traditional ABM agents rely on...",
          "description": "As an agent-based modeling (ABM) framework, Mesa is easy to use and applicable for a wide range of simulations. But traditional ABM agents rely on simple rules and patterns that are chosen by the users themselves, which can limit their adaptability. \n\nThe objective of this project is to develop an extension of Mesa that give agents access to LLMs for reasoning, decision-making, and communication, that can be used not only for simulations, but also to study the impact of different paradigms and reasoning modules in ABM. \n\nThe work involves designing a very modular LLM-agent API (with memory, reasoning, and tool-use components), that integrate with Mesa’s existing architecture (Model, Agent, Scheduler), as well as studying and solving LLM-related problems like memory management, consistency and computing-related challenges.",
          "student_name": "Colin Frisch",
          "code_url": null,
          "proposal_id": "AbSX07FN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vL10Nnvs"
        },
        {
          "title": "Project MESA: Front-End Upgrade",
          "short_description": "This proposal aims to enhance the visualization system of Mesa, an agent-based modeling (ABM) framework in python, to make it more modular,...",
          "description": "This proposal aims to enhance the visualization system of Mesa, an agent-based modeling (ABM) framework in python, to make it more modular, user-friendly, and feature-rich. The project addresses two key issues in the current visualization system: clumped API design and difficulties in model sharing.\n\nThe implementation plan is divided into two phases:\n1) Phase 1 focuses on creating a more modular API for space drawing by developing AgentPortrayalStyle and PropertyLayerStyle components, separating agent drawing from grid drawing with a CoordinateMapper, and creating a unified SpaceRenderer class.\n2) Phase 2 implements model sharing through links, upgrades the Altair visualization backend to match matplotlib capabilities and improves documentation.\n\nDeliverables include: a separate and intuitive visualization API, easy model sharing functionality, an improved Altair backend and comprehensive documentation. This upgrade will significantly improve the user experience for Mesa users.",
          "student_name": "Sahil Chhoker",
          "code_url": null,
          "proposal_id": "OVA4YH5y",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xggC05EB"
        },
        {
          "title": "Mesa_LLM",
          "short_description": "This project will aim to create an LLM module within Mesa that enables the use of large language models as autonomous agents, via mesa.llm. This...",
          "description": "This project will aim to create an LLM module within Mesa that enables the use of large language models as autonomous agents, via mesa.llm. This module will extend Mesa by providing tools to define, simulate, and analyze agents powered by large language models.",
          "student_name": "Sanika Nair",
          "code_url": null,
          "proposal_id": "NkR2LwjM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/u2qoJn8P"
        }
      ]
    },
    {
      "name": "The Rust Foundation",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-rust-foundation/pplrhxvka7dufvsn.png",
      "image_background_color": "#ffffff",
      "description": "A language empowering everyone",
      "url": "https://www.rust-lang.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-rust-foundation",
      "ideas_url": "https://github.com/rust-lang/google-summer-of-code",
      "guide_url": "https://github.com/rust-lang/google-summer-of-code/blob/main/gsoc/proposal-guide.md",
      "topics": ["compilers", "programming languages"],
      "technologies": ["python", "rust"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://rust-lang.zulipchat.com/#narrow/stream/421156-gsoc",
      "twitter_url": "https://twitter.com/rustlang",
      "blog_url": "https://blog.rust-lang.org/",
      "facebook_url": "",
      "num_projects": 19,
      "projects": [
        {
          "title": "Modernising the libc Crate",
          "short_description": "The libc crate has been a core part of Rust since its early days, making breaking changes increasingly difficult over time. Redundant and legacy code...",
          "description": "The libc crate has been a core part of Rust since its early days, making breaking changes increasingly difficult over time. Redundant and legacy code have complicated maintenance. This project aims to release a new major version of libc, introducing breaking changes and improving the testing infrastructure to ensure better long-term maintainability.",
          "student_name": "Abdul Muiz",
          "code_url": null,
          "proposal_id": "uXE1dZY2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/r3LkZkOy"
        },
        {
          "title": "Add safety contracts",
          "short_description": "There is ongoing work to instrument the Rust standard library with safety contracts. Based on a discussion by the Formal Verification Working Group...",
          "description": "There is ongoing work to instrument the Rust standard library with safety contracts. Based on a discussion by the Formal Verification Working Group there is still a lot of work to leverage the power of separation logic in contracts, and make it compatible with existing tools that use separation logic. The nature of my contribution would be more research-oriented, since a very good understanding of the connection between separation logic, existing tools and what we can and need to support in Rust contracts is necessary. Based on this research, a successful project should deliver the appropriate code contributions to support (partially or fully) separation logic in Rust contracts, and ideally demonstrate its compatibility with existing tools by tackling selected challenges.",
          "student_name": "Dawid Lachowicz",
          "code_url": null,
          "proposal_id": "fkcac6gI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UYWEKUkd"
        },
        {
          "title": "Bootstrap of rustc with rustc_codegen_gcc",
          "short_description": "Currently, the new, experimental GCC based compiler backend for Rust(`rustc_codegeng_gcc`) is not able to build the Rust compiler. The goal of this...",
          "description": "Currently, the new, experimental GCC based compiler backend for Rust(`rustc_codegeng_gcc`) is not able to build the Rust compiler.\n\nThe goal of this proposal is to add the fixes and features necessary for `cg_gcc` to build a fully functional stage 2(and possibly 3) of the Rust compiler. This will require adding support for 128 bit SwitchInt terminators, fixing recursive `#[inline(always)]`, and plugging some soundness holes within the backend.\n\nThis should help the GCC based codegen become more mature. In the future, this could also open the way towards building and running the Rust compiler on platforms not supported by LLVM.\n\nImproving this codegen backend could allow Rust to be used in more places, speeding up the language's adoption.",
          "student_name": "Fractal Fir",
          "code_url": null,
          "proposal_id": "i8ZQ8OIl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KmfCY0i6"
        },
        {
          "title": "Make Rustup Concurrent",
          "short_description": "Rustup is the official toolchain installer and version manager for the Rust programming language. The current implementation of Rustup processes...",
          "description": "Rustup is the official toolchain installer and version manager for the Rust programming language. The current implementation of Rustup processes operations sequentially, downloading components one at a time and performing extraction and installation in order. This approach does not fully leverage the capabilities of modern hardware, particularly on systems with multi-core processors and high-bandwidth connections. A potential solution is to introduce concurrency into the implementation, enabling parallel processing of these tasks to better utilize system resources, leading to a more performant Rustup.",
          "student_name": "Francisco Gouveia",
          "code_url": null,
          "proposal_id": "zF6wjcjj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CpXV4kzH"
        },
        {
          "title": "Prototype an alternative architecture for cargo fix using cargo check",
          "short_description": "The current implementation of cargo fix is quite slow and makes extra calls to rustc slowing down the process. A simplified architecture would also...",
          "description": "The current implementation of cargo fix is quite slow and makes extra calls to rustc slowing down the process. A simplified architecture would also make it easier to add features to cargo fix. This project aims to create a new prototype version of cargo fix that uses cargo check instead of calling rustc directly.",
          "student_name": "Glen Thalakottur",
          "code_url": null,
          "proposal_id": "Dxonkkz4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fBOCR2Sp"
        },
        {
          "title": "Prepare stable_mir crate for publishing",
          "short_description": "StableMIR aims to provide a stable Rust compiler interface via a stable_mir crate on crates.io, shielding external tools from internal changes....",
          "description": "StableMIR aims to provide a stable Rust compiler interface via a stable_mir crate on crates.io, shielding external tools from internal changes. Currently, the dependency between stable_mir and rustc_smir requires hard-coded versions in the rustc_smir crate, making it harder for the user to select which stable_mir crate to depend on. This project will invert the dependency, refactor the crates, and establish infrastructure—including build checks, testing workflows, and automation, easing maintenance for rustc developers and future contributors.",
          "student_name": "Jiayin Ma(Makai)",
          "code_url": null,
          "proposal_id": "2pRTlIy6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3y9x5X8O"
        },
        {
          "title": "Make cargo-semver-checks faster",
          "short_description": "cargo-semver-checks is a development tool that allows rust libraries to check whether a release breaks semver by running lints on the API. For...",
          "description": "cargo-semver-checks is a development tool that allows rust libraries to check whether a release breaks semver by running lints on the API. For example, it can detect whether an enum not marked #[non_exhaustive] has additional members added, and warn that this is a major breaking change. However, cargo-semver-checks can take a long time to run, and for many users, is the longest step in their CI. On top of that, the number of lints implemented is nearly doubling each year. \n\nThe core of this project's work is:\n(1) Constructing a performance tracing tool that is capable of identifying bottlenecks and hotspots in trustfall’s execution model, and \n(2) Using this tool to implement performance improvements, most likely in the database adapter level in trustfall-rustdoc-adapter, with the goal of reducing runtime by 50-80%.",
          "student_name": "Joseph Chung",
          "code_url": null,
          "proposal_id": "BjZ1rpWu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qs2rDLG4"
        },
        {
          "title": "Mapping the Maze of Rust's UI Test Suite with Established Continuous Integration Practices",
          "short_description": "Despite `tests/ui`'s usefulness to maintainers, it acts as a barrier to new contributors - with how expansive it is, major pull requests can break...",
          "description": "Despite `tests/ui`'s usefulness to maintainers, it acts as a barrier to new contributors - with how expansive it is, major pull requests can break tiny, unexpected checks among the thousands of tests. The process of finding which part of your PR is breaking the test written 10 years ago with no documentation is commonly known as \"very fun\".\n\nThis project will reorganize the UI directory with measures such as metadata tagging by category, identification of duplicate tests, as well as detection of tests which do not do anything or do not test what they are trying to.",
          "student_name": "Julien Robert",
          "code_url": null,
          "proposal_id": "Vjb0T1sk",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KP02lKL4"
        },
        {
          "title": "Improve Wild linker test suites",
          "short_description": "This project aims to enhance the testing of the Wild linker by leveraging existing linker test suites, providing strong support for its development....",
          "description": "This project aims to enhance the testing of the Wild linker by leveraging existing linker test suites, providing strong support for its development. Develop some programs that apply existing linker test suites to Wild, automatically categorizes the results to some extent, and visualizes them in a format that allows Wild developers to easily review them.\nThen, based on the expanded test suite, I plan to make improvements to help Wild pass more of the tests.",
          "student_name": "Kei Akiyama",
          "code_url": null,
          "proposal_id": "Oxj4azl3",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ps99Kaqk"
        },
        {
          "title": "Parallel Macro Expansion",
          "short_description": "A lot of work has been done to parallelize the Rust compiler frontend, with notable success in code generation and some post-HIR lowering stages....",
          "description": "A lot of work has been done to parallelize the Rust compiler frontend, with notable success in code generation and some post-HIR lowering stages. Other critical components, such as lexical parsing and macro expansion, are still implemented serially. Macro expansion is fundamental in Rust, enabling code generation at compile-time based on patterns and user-defined rules in the source code itself. However, due to dependencies between macros and the strict ordering of name resolution, its inherently sequential nature poses a significant challenge for parallelization.\nCurrently, macro expansion and import resolution are tightly coupled and executed sequentially, making parallel execution difficult. This project aims to develop a parallel and order-independent algorithm for these two processes, improving compiler performance while maintaining correctness. Addressing the dependencies and execution order constraints could significantly reduce compilation time and enhance the compiler's overall compilation speed.",
          "student_name": "Lorrens Pantelis",
          "code_url": null,
          "proposal_id": "hsG6Nh5f",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/SBW3GMno"
        },
        {
          "title": "Extend behavioural testing of std::arch intrinsics",
          "short_description": "Rust's std::arch module houses vendor-specific intrinsics (low-level functions that typically correspond to single machine instructions) which are...",
          "description": "Rust's std::arch module houses vendor-specific intrinsics (low-level functions that typically correspond to single machine instructions) which are intended to be used by other libraries.\n\nCurrently, there is good coverage of type-based tests and instruction-based tests (checking if the assembly instruction generated is correct) in std::arch, however behavioural tests (checking if the Rust implementation of the intrinsic has the same behaviour as the C implementation) cover only the aarch32 and aarch64 targets.\n\nThis project intends to restructure the way behavioral testing is performed, so that it is simpler to extend coverage to more targets in future. Additionally this project also intends to extend behavioral testing to x86, Wasm32 and LoongArch targets.",
          "student_name": "Madhav Madhusoodanan",
          "code_url": null,
          "proposal_id": "rfAtzzAz",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DeMQAjwi"
        },
        {
          "title": "Cargo: Build script delegation",
          "short_description": "This project aims to overcome the limitations of the current Build Script system by allowing multiple, well-organised build scripts, that are...",
          "description": "This project aims to overcome the limitations of the current Build Script system by allowing multiple, well-organised build scripts, that are optional and run only when required. This approach will require less auditing, will enhance the build transparency and reduce the compile-time overhead.\n\nBuild scripts in Rust facilitate compiling and linking 3rd party code, such as existing C/C++ libraries, before building a package. They are immensely important for interoperability since it prevents replacing/rewriting the already existing tools that are well-optimized for their tasks. \n\nHowever, the current build system has certain limitations. Only one build script is allowed per package, and it must be run before building the package, often causing unnecessary computation (e.g., during unit tests). Single Large script needs extra auditing, increase compile-time, and reduce transparency for third-party build tools, especially while passing parameters. They also cannot run unit tests within themselves.\n\nThis project aims to overcome the above limitations by allowing multiple, well-organized build scripts that can be run directly from the Cargo.toml. These scripts are optional and run only when required, avoiding unnecessary expensive logic. With this, only the shared build scripts will need auditing. This approach enhances build transparency, reduces compile-time overhead, and even enables unit testing of build scripts if they are treated as a dedicated package.",
          "student_name": "Naman Garg ( namanlp )",
          "code_url": null,
          "proposal_id": "lDLOfMGc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nUt4PdAA"
        },
        {
          "title": "New proc-macro Server API for Rust-Analyzer",
          "short_description": "Currently, Rust-analyzer expands procedural macros using a client/server architecture, where a separate proc-macro server process loads and executes...",
          "description": "Currently, Rust-analyzer expands procedural macros using a client/server architecture, where a separate proc-macro server process loads and executes procedural macro dynamic libraries. Communication occurs via a unidirectional JSON-RPC interface, with the client sending requests and the server responding. \n\nHowever, this design has drawbacks: bulky JSON serialization introduces significant overhead due to deeply nested data structures, and the unidirectional messaging model limits certain proc-macro APIs that require the server to request additional information from the client. This constraint is a major obstacle to implementing new proc-macro APIs.\n\nI plan to overcome these limitations by:\n\n1. Adopting Postcard, a binary serialization format which is a more  compact and efficient alternative to JSON.\n2. Implementing bidirectional communication between the client and server, enabling the server to ask for additional data from the client during execution.\n3. Refactoring the relevant crates to support both the existing and new protocols. \n4. Extending proc-macro support, by implementing some of the unimplemented proc-macro APIs in the new communication mode.",
          "student_name": "Neil Wang",
          "code_url": null,
          "proposal_id": "sv4x0dZx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/76ekEjd1"
        },
        {
          "title": "ABI/Layout handling for the automatic differentiation feature",
          "short_description": "The integration of automatic differentiation (autodiff) into the Rust compiler via Enzyme faces challenges due to ABI adjustments that alter function...",
          "description": "The integration of automatic differentiation (autodiff) into the Rust compiler via Enzyme faces challenges due to ABI adjustments that alter function signatures. These transformations, while beneficial for performance, interfere with autodiff functionality, leading to incorrect differentiation.\n\nThis project aims to prevent unwanted ABI adjustments for functions marked with #[rustc_autodiff], ensuring autodiff functions maintain their intended behavior without affecting other optimizations. The approach involves modifying Rust’s function ABI handling to recognize and preserve differentiation-related information. Key steps include identifying problematic transformations, encoding autodiff metadata in FnAbi, and preventing ABI changes that break autodiff.\n\nBy addressing these challenges, the project will improve autodiff support in Rust, making it more reliable and consistent while preserving compiler efficiency.",
          "student_name": "Sa4dUs",
          "code_url": null,
          "proposal_id": "a6pq51Th",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/USQvru7i"
        },
        {
          "title": "Implement merge functionality in bors",
          "short_description": "Various Rust repositories under the rust-lang organization use a merge queue bot, bors, for testing and merging pull requests. This project aims to...",
          "description": "Various Rust repositories under the rust-lang organization use a merge queue bot, bors, for testing and merging pull requests. This project aims to complete the remaining functionality required to make the new bors bot usable on the rust-lang/rust repository, replacing the legacy bot homu. This includes implementing PR merges, rollup support, and the queue website.",
          "student_name": "Sakibul Islam",
          "code_url": null,
          "proposal_id": "5dB7oEle",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HlR12jqX"
        },
        {
          "title": "Improve bootstrap",
          "short_description": "This project aims to enhance the testability of Bootstrap and make it faster, the Rust build system, by improving its architecture, refining its...",
          "description": "This project aims to enhance the testability of Bootstrap and make it faster, the Rust build system, by improving its architecture, refining its configuration handling, and establishing a robust testing framework. It will ublock on centralizing command execution, minimizing unnecessary I/O operations and implementing testing framework. These improvements will make Bootstrap more maintainable, fast, and easier to develop and test.",
          "student_name": "Shourya Sharma",
          "code_url": null,
          "proposal_id": "7Vv1Pm6B",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2KNHAlKz"
        },
        {
          "title": "Enable Witness Generation in cargo-semver-checks",
          "short_description": "The crate cargo-semver-checks provides feedback to user based on what possible breaking changes they may have made, which as per semantic versioning...",
          "description": "The crate cargo-semver-checks provides feedback to user based on what possible breaking changes they may have made, which as per semantic versioning may require that the user accordingly update the semantic version of their library. This ensures that major breaking changes do not occur without notice. However, the feedback from cargo-semver-checks is not always the easiest to understand, in that whatever problem may actually be present is not always obvious. Additionally, cargo-semver-checks sometimes suffers from false-positive, where it detects a breaking change where there is none. \n\nThis project proposes to remedy many of these issues by leveraging the existing lint data to implement so-called \"witness programs\", which are designed to demonstrate the breaking change by compiling successfully on a baseline version of the crate being tested, but failing to compile on the new version, due to the error caused by the breaking change.\n\nThe plan is, following some research at the start, to implement a basic witness system that allows for additional internal queries and generation of a witness program from a template. Following that, implement automated testing of these witness programs to verify they do fail when expected. In the event of an unexpected behaviour, the system should be designed to provide the user with diagnostic information and an easy way to submit an issue to the cargo-semver-checks team. Lastly, these witness program templates then need to be written en masse, utilizing the now created system to provide these witness programs to as many lints as possible. Ideally, by the end of the Google Summer of Code program, 80% of the current lints should have witness program templates. \n\nAdditionally, it is planned to continuously engage with the Rust community so as to both inform members of the progress of this proposal, but also to encourage accountability over the process of developing this project.",
          "student_name": "Talyn Veugelers",
          "code_url": null,
          "proposal_id": "ac3wp2Fb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/MMRSG9WU"
        },
        {
          "title": "Prototype Cargo Plumbing Commands",
          "short_description": "This project prototypes a new set of Cargo plumbing commands, aligned with Rust’s 2025H1 project goals. Plumbing commands are lower-level, less...",
          "description": "This project prototypes a new set of Cargo plumbing commands, aligned with Rust’s 2025H1 project goals. Plumbing commands are lower-level, less opinionated commands to interact with the Cargo API. By focusing on lower-level functionality, this project aims to better support Cargo users’ specific processes and use cases. Moreover, the introduction of these new Cargo plumbing commands aims to fix current issues of existing commands and improve their integration.",
          "student_name": "Vito Secona",
          "code_url": null,
          "proposal_id": "1DfblSyM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/fTDzc0sk"
        },
        {
          "title": "Distributed and resource-efficient verification",
          "short_description": "Reduce CI time in verify-rust-std repo by offloading proof verification to multiple Github Runner machines to run verification in parallel, and more...",
          "description": "Reduce CI time in verify-rust-std repo by offloading proof verification to multiple Github Runner machines to run verification in parallel, and more importantly only verifying needed proofs by skipping proofs where no code related is modified as more and more proofs are added.",
          "student_name": "zhou jiping",
          "code_url": null,
          "proposal_id": "aTmqiED2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5677hd6S"
        }
      ]
    },
    {
      "name": "52°North Spatial Information Research GmbH",
      "image_url": "https://summerofcode.withgoogle.com/media/org/52north-spatial-information-research-gmbh/gzamo2sqfwcmcobt-360.png",
      "image_background_color": "#ffffff",
      "description": "Innovative ideas & technologies in geoinformatics",
      "url": "https://52north.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/52north-spatial-information-research-gmbh",
      "ideas_url": "https://52north.org/outreach-dissemination/google-summer-of-code/project-ideas/",
      "guide_url": "https://52north.org/software/contribute/",
      "topics": [
        "citizen science",
        "spatial information infrastructures",
        "open standards",
        "data analytics",
        "Geoinformation"
      ],
      "technologies": [
        "javascript",
        "android",
        "java",
        "web services",
        "ogc standards"
      ],
      "irc_channel": "https://52n-gsoc.slack.com/ssb/redirect",
      "contact_email": "mailto:gsoc@52north.org",
      "mailing_list": "gsoc-52n@52north.org",
      "twitter_url": "https://twitter.com/fivetwon",
      "blog_url": "https://blog.52north.org/",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Complete Angular migration of the KomMonitor Web Client",
          "short_description": "The KomMonitor web client, a tool for geospatial data monitoring in urban planning, is currently based on AngularJS and requires a complete migration...",
          "description": "The KomMonitor web client, a tool for geospatial data monitoring in urban planning, is currently based on AngularJS and requires a complete migration to the modern Angular framework to improve maintainability, scalability, and ease future contributions. While migration started previously, significant parts remain in AngularJS, and foundational issues like specific AngularJS patterns ($rootScope, $compile) and JavaScript files hinder the direct use of standard upgrade tools.   \n\nSolution: This project aims to fully migrate the KomMonitor web client from AngularJS to Angular. The approach involves:   \n\n1. Addressing the foundational roadblocks identified by analysis tools (e.g., refactoring $rootScope usage, eliminating $compile, converting JavaScript to TypeScript).   \n2. Incrementally migrating remaining AngularJS components and services to Angular, leveraging ngUpgrade within a hybrid architecture during the transition.   \n3. Implementing modern Angular best practices, including modular architecture, dependency injection, and potentially lazy loading.   \n4. Refactoring components using design patterns like Observer (RxJS), Facade, and Container-Presenter to improve structure and data handling.   \n5. Ensuring UI consistency using ng-bootstrap.   \n6. Establishing a robust testing strategy encompassing unit, integration, and end-to-end tests using frameworks like Jest and Cypress.   \n\nDeliverables:\n1. A fully migrated KomMonitor web client codebase, transitioned from AngularJS to Angular.   \n2. Resolution of key AngularJS patterns ($rootScope, $compile) and conversion of necessary JavaScript files to TypeScript.   \n3. Migrated and optimized components/services adhering to modern Angular standards and design patterns.   \n4. A comprehensive test suite ensuring application stability and functionality post-migration.   \n5. Updated documentation reflecting the migrated codebase.   \n6. Final project code, documentation, and evaluation report.",
          "student_name": "goyalpranjal_",
          "code_url": null,
          "proposal_id": "M4rSb0sW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oiPd6sfN"
        },
        {
          "title": "Weather Routing Tool",
          "short_description": "The Weather Routing Tool is a system designed to find optimal shipping routes between two geographic points, taking into account weather data, local...",
          "description": "The Weather Routing Tool is a system designed to find optimal shipping routes between two geographic points, taking into account weather data, local boundaries, and other environmental factors. The tool currently assumes constant ship speed and has a basic genetic algorithm for route optimization. This project aims to improve the routing logic by:\n\nIntroducing ship speed optimization along a route\n\nEnhancing the genetic algorithm for more effective route modeling\n\nImproving the usability and extensibility of the tool for end-users\n\nProject Deliverables\n1. Ship Speed Optimization\nGoal: Allow optimization of ship speed along the route instead of assuming it constant.\n\nApproach:\n\nModify the Isofuel algorithm to use speed as a minimization criterion.\n\nDefine a new scoring function:\nscore = (distance / time) - alpha * remaining_distance\n\nEnable this feature via configuration: ISOCHRONE_MINIMISATION_CRITERION = \"speed\"\n\n2. Genetic Algorithm Enhancements\nGoal: Improve the existing genetic algorithm’s efficiency and flexibility.\n\nPlanned Improvements:\n\nAdd multi-objective cost function support (e.g., fuel, speed, wear & tear).\n\nEnhance crossover logic with:\n\nMulti-point crossover\n\nUniform crossover\n\nAdaptive crossover\n\nImprove mutation strategies and population initialization.\n\nLeverage the pymoo library with custom configurations.\n\n3. Tool Usability Improvements\nGoal: Make the Weather Routing Tool more modular, user-friendly, and extensible.\n\nKey Features:\n\nDynamic Python file injection using CLI:\n\npython cli.py -f config.template.json custom.py\n\nLoad modules dynamically with:\nload_file_as_module(path: str) -> types.ModuleType\n\nCommand-line utility packaging:\n\nTool installable via PyPI (pip install wrt)\n\nUsage: wrt -h\n\nRationale: Enable users to add custom boat models and configurations without modifying core code.",
          "student_name": "shreyass-ranganatha",
          "code_url": null,
          "proposal_id": "qoOOkYRa",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JRNm78Uz"
        }
      ]
    },
    {
      "name": "Inkscape",
      "image_url": "https://summerofcode.withgoogle.com/media/org/inkscape/qiomrjtmocpmomjf-360.png",
      "image_background_color": "#ffffff",
      "description": "Draw freely!",
      "url": "https://inkscape.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/inkscape",
      "ideas_url": "https://gitlab.com/inkscape/inkscape/-/blob/master/doc/gsoc/summerofcode.md",
      "guide_url": "https://gitlab.com/inkscape/inkscape/-/blob/master/doc/gsoc/summerofcode.md",
      "topics": ["web", "graphics", "design"],
      "technologies": ["python", "c++", "svg"],
      "irc_channel": "https://chat.inkscape.org",
      "contact_email": "",
      "mailing_list": "https://lists.inkscape.org/postorius/lists/inkscape-devel.lists.inkscape.org/",
      "twitter_url": "",
      "blog_url": "https://mastodon.art/@inkscape/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "On-Canvas Spell Checking",
          "short_description": "Inkscape currently lacks an intuitive, user-friendly way to perform spell checking within text elements on the canvas. This project aims to integrate...",
          "description": "Inkscape currently lacks an intuitive, user-friendly way to perform spell checking within text elements on the canvas. This project aims to integrate real-time, on-canvas spell checking into Inkscape, enabling users to easily identify and correct spelling errors directly in their artwork. The solution will use the existing spell checking infrastructure and implement interactive UI components, such as wavy underlines and context menus for correction suggestions. Key deliverables include the rendering of spelling error indicators on canvas, user interaction features for correcting errors, performance optimizations, and comprehensive testing. This enhancement will significantly improve the usability and professionalism of text-based design workflows in Inkscape.",
          "student_name": "Aarav Oswal",
          "code_url": null,
          "proposal_id": "0s3d9Bk4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xREAi1JS"
        },
        {
          "title": "UI-Free Inkscape",
          "short_description": "In many automated environments like servers, containers etc., a full graphical stack isn’t necessary and this increases resource usage, complicates...",
          "description": "In many automated environments like servers, containers etc., a full graphical stack isn’t necessary and this increases resource usage, complicates the deployment. The resource usage is very important in containerized environments, where resources have to be carefully allocated. With the widespread adoption of container technologies like Docker and orchestration systems like Kubernetes, there's an increasing need for applications to function properly in containerized environments. These environments are typically headless, and applications need to be able to operate without display capabilities.\n\nIn the current codebase, the ui components are tightly interwoven with the core code as the GUI code is embedded everywhere.",
          "student_name": "aayush01x",
          "code_url": null,
          "proposal_id": "a3FZJaj2",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ctNAgymM"
        },
        {
          "title": "Improved Support for Adobe Illustrator File Format",
          "short_description": "Inkscape’s support for Adobe Illustrator (.ai) files is limited, especially for files that include raster images, masks, filters, and other advanced...",
          "description": "Inkscape’s support for Adobe Illustrator (.ai) files is limited, especially for files that include raster images, masks, filters, and other advanced features. This project aims to improve Inkscape’s .ai import by handling more of the format’s structure and content. Key focus areas include support for clips and masks, stroke styles, symbols, filters, text on path, and live shapes with multiple radii. Some optional goals are reading metadata and object properties. The solution involves parsing PDF-compatible data and extending Inkscape’s import logic to produce accurate SVGs. Progress will be measured using a set of .ai test files that render correctly in Inkscape.",
          "student_name": "Anunay",
          "code_url": null,
          "proposal_id": "YrS6WfsO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WtDx0f9Q"
        },
        {
          "title": "Recolor Art Work",
          "short_description": "Recolor Artwork in Inkscape : Inkscape currently lacks an easy and intuitive way to modify colors within a selected artwork. This project aims to...",
          "description": "Recolor Artwork in Inkscape :\nInkscape currently lacks an easy and intuitive way to modify colors within a selected artwork. This project aims to introduce a \"Recolor Artwork\" tool that allows users to quickly adjust colors in their selection, making color experimentation and fine-tuning more efficient.\nThe feature will extract all colors (fills, strokes, and gradient stops) from the selected objects and present them in a list. Users will be able to edit colors by either clicking on a color in the list or using a color wheel, which will help visualize relationships between colors. The tool will feature live preview, allowing real-time updates on the canvas, and upon deselection, the new colors will be applied permanently. If performance concerns arise, an apply/load button or a pop-up dialog similar to the LPE editor will be considered.\nDeliverables:\nA dialog or pop-up UI that lists all colors from the selection.\nColor editing options, including direct tweaking and a color wheel.\nLive preview of color changes on the canvas.\nPerformance optimizations, including a possible load/apply mechanism if needed.\nThis feature will improve the workflow of designers using Inkscape, making color adjustments more accessible and efficient.",
          "student_name": "Fatma Omara",
          "code_url": null,
          "proposal_id": "1Yvmedvv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YzCjdsDT"
        },
        {
          "title": "Interval Arithmetic Enhanced Geometric Processing for lib2geom",
          "short_description": "This project aims to enhance the accuracy and reliability of geometric intersection routines in Inkscape’s lib2geom library by refactoring them with...",
          "description": "This project aims to enhance the accuracy and reliability of geometric intersection routines in Inkscape’s lib2geom library by refactoring them with interval arithmetic. Traditional floating-point methods often introduce numerical errors, which can result in incorrect or unstable path operations. Interval arithmetic enables us to compute guaranteed bounds for intersections, handle edge cases more robustly, and ensure greater numerical stability. These improved routines will also serve as a foundation for constructing a guaranteed planar graph, supporting advanced features such as boolean operations and path offsetting.",
          "student_name": "Muhammad Rafay Irfan",
          "code_url": null,
          "proposal_id": "WIj7LJup",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YMPjD3oZ"
        }
      ]
    },
    {
      "name": "The Tor Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-tor-project/1w40vc9lqddvbfoa-360.png",
      "image_background_color": "#ffffff",
      "description": "Defend yourself against tracking and surveillance.",
      "url": "https://www.torproject.org/",
      "category": "Web",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-tor-project",
      "ideas_url": "https://gitlab.torproject.org/tpo/team/-/wikis/GSoC",
      "guide_url": "https://gitlab.torproject.org/tpo/team/-/wikis/How-To-Apply-to-Google-Summer-of-Code",
      "topics": [
        "security",
        "privacy",
        "anti-censorship",
        "Human Rights",
        "Surveillance"
      ],
      "technologies": ["c", "python", "web", "rust"],
      "irc_channel": "https://support.torproject.org/get-in-touch/#irc-help",
      "contact_email": "mailto:gsoc@torproject.org",
      "mailing_list": "https://forum.torproject.net/",
      "twitter_url": "https://mastodon.social/@torproject",
      "blog_url": "https://blog.torproject.org/",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Rewrite of the Tor Metrics Library in Rust",
          "short_description": "The goal of this project is to rewrite the current Java-based Tor Metrics Library in Rust. This library is a crucial component for parsing and...",
          "description": "The goal of this project is to rewrite the current Java-based Tor Metrics Library in Rust. This library is a crucial component for parsing and analyzing Tor network descriptors used by various services and researchers.\n\nBy reimplementing the library in Rust, we aim to improve performance, take advantage of Rust’s modern language features, and provide a more ergonomic API. This rewrite will also allow the Network Health Team (and others) to migrate some of their services to Rust.\n\nIn addition to replicating current features, the new library will include some features from the DescriptorParser for exporting parsed descriptor data into formats like CSV, Parquet, or PostgreSQL tables, thereby enabling more advanced integrations and analysis capabilities.",
          "student_name": "Axyom",
          "code_url": null,
          "proposal_id": "XIpWFYmP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dlQVNFec"
        },
        {
          "title": "The Tor Project: Onion Service Support Tooling for Arti, GSoC 2025",
          "short_description": "My proposal involves expanding Arti's state management subcommands: hss and hsc (very limited in functionalities at the moment). These new features...",
          "description": "My proposal involves expanding Arti's state management subcommands: hss and hsc (very limited in functionalities at the moment).\n\nThese new features will be added after the completion of GSoC:\n a subcommand for listing keys and certificates from the configured keystores; \n a subcommand for listing keystores by their identifier;\n a subcommand for performing consistency, validity, and integrity checks on the specified stores; \n an arti hss destroy subcommand, for removing the persistent state and all the keys of a onion service; \n an arti hss destroy-and-recreate subcommand, for generating a new identity for an existing onion service;\n miscellaneous low-level \"plumbing\" subcommands, which deal with individual files from the keystore and state directories;\n a C Tor to Arti key migration tool, which will enable onion service operators to seamlessly migrate from C Tor to Arti;\n field-formatted output to be easily parseable by other programs.\n\nThese objectives will be achieved mostly by extending already existing facilities, like InertTorClient and OnionService, and by creating new ones.",
          "student_name": "Omar Gorni",
          "code_url": null,
          "proposal_id": "hrQuEdHf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lFvAwMfD"
        },
        {
          "title": "The Tor Project - Network Health: Enhancing eRPC - Network Partition Analysis and Visualization",
          "short_description": "The Tor network's anonymity guarantee depends heavily on the connectivity between relays. Partitioning in the network can significantly compromise...",
          "description": "The Tor network's anonymity guarantee depends heavily on the connectivity between relays.\nPartitioning in the network can significantly compromise these guarantees by limiting the\npossible paths available to users. During GSoC 2023, the eRPC tool was built to detect such\npartitions by building two-hop circuits between relays and storing the results in a Neo4j graph database, where vertices represent relay fingerprints and edges represent successful or failed circuit builds. \n\nThis project aims to enhance the existing eRPC tool by developing analysis capabilities to\ndetect, visualize, and understand network partitions. The focus will be on implementing\nefficient graph algorithms to identify disconnected components and communities within\nthe Tor network. By utilizing Neo4j's Graph Data Science (GDS) library, we can apply\ncommunity detection and clustering algorithms to find potential partitions in the directed\ngraph that represents the Tor network. \n\nBy the end of the project, I aim to deliver an enhanced eRPC tool with robust analysis\ncapabilities, interactive visualizations, and comprehensive documentation. This will provide\nthe Tor community with valuable insights into the network's connectivity patterns and help\nidentify areas that need attention to strengthen Tor's anonymity guarantees.",
          "student_name": "Shivam Vats",
          "code_url": null,
          "proposal_id": "GxNa3CWi",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hKZzP0GA"
        }
      ]
    },
    {
      "name": "MIT App Inventor",
      "image_url": "https://summerofcode.withgoogle.com/media/org/mit-app-inventor/8ppq0spvr3j3gx8q-360.png",
      "image_background_color": "#ffffff",
      "description": "Anyone can build apps with global impact",
      "url": "http://appinventor.mit.edu",
      "category": "Development tools",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/mit-app-inventor",
      "ideas_url": "https://github.com/mit-cml/appinventor-sources/wiki/Google-Summer-of-Code-2025",
      "guide_url": "https://github.com/mit-cml/appinventor-sources/wiki/Google-Summer-of-Code-2025",
      "topics": ["education", "development tools", "android", "ios"],
      "technologies": ["javascript", "java", "gwt", "swift"],
      "irc_channel": "",
      "contact_email": "",
      "mailing_list": "https://community.appinventor.mit.edu",
      "twitter_url": "",
      "blog_url": "https://appinventor.mit.edu/explore/blog",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Responsive (Mobile phone Layout)",
          "short_description": "App Inventor is becoming increasingly popular among users accessing the platform through mobile phones and handheld devices. In response to this...",
          "description": "App Inventor is becoming increasingly popular among users accessing the platform through mobile phones and handheld devices. In response to this trend, this project aims to implement an enhanced user interface tailored for smaller screens. By leveraging GWT's UiBinder framework, we will introduce flexible interface layouts that adapt to both device type and user preferences, ensuring a seamless and practical experience for mobile users. Deliverables will include optimized interface designs and usability improvements for small-screen devices, aligning with the growing accessibility of handheld technology globally.",
          "student_name": "d1vyanshu-kumar",
          "code_url": null,
          "proposal_id": "PeyNyACe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/mW5rZglq"
        },
        {
          "title": "Color Choice Property Editor",
          "short_description": "The current color editor in MIT App Inventor is outdated and lacks important features that could make color selection easier. This project aims to...",
          "description": "The current color editor in MIT App Inventor is outdated and lacks important features that could make color selection easier. This project aims to replace it with a modern and user-friendly color picker.\nThe new color picker will allow users to select colors from a color ramp and quickly access frequently used colors from their projects. Frequently used colors will also be importable and exportable, as they will be stored in project properties.",
          "student_name": "iamwsumit",
          "code_url": null,
          "proposal_id": "rOWC9K0o",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/VwBdhiBL"
        },
        {
          "title": "iOS Implementation of Menu Component",
          "short_description": "This proposal aims to implement the Menu, Sidebar, and Floating Action Button (FAB) components in iOS for MIT App Inventor, ensuring feature parity...",
          "description": "This proposal aims to implement the Menu, Sidebar, and Floating Action Button (FAB) components in iOS for MIT App Inventor, ensuring feature parity with Android as introduced in PR #2299. The Menu Component will introduce a dropdown-style menu supporting nested items, icons, and keyboard navigation. The Sidebar Component will provide a sliding navigation panel with swipe gestures, tap-to-close functionality, and essential navigation links like Home, Profile, Settings, and Logout. The Floating Action Button (FAB) will be a circular, floating button positioned at the bottom-right, supporting custom actions, animations, and a shadow effect for a modern UI experience. A key aspect of this project is ensuring feature parity with Android, maintaining UI/UX consistency across both platforms. \n\nI chose this project because it bridges the gap between iOS and Android, ensuring that MIT App Inventor provides a seamless cross-platform experience. It also enhances user experience by introducing smooth, intuitive navigation and interactions, making iOS-built apps more functional and engaging. Additionally, this project will expand MIT App Inventor’s capabilities by adding essential missing features, making the platform more versatile and user-friendly. \n\nThe estimated timeline for this project is 175 hours, covering implementation, testing, and final integration. Upon completion, this update will significantly enhance MIT App Inventor’s iOS version, making it a fully-featured, cross-platform development tool that aligns with modern app-building standards.",
          "student_name": "Kasy",
          "code_url": null,
          "proposal_id": "Ph4lfD4c",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZsVxjdhC"
        },
        {
          "title": "Assets Library: Enable Seamless Asset Management in App Inventor",
          "short_description": "This GSoC proposal aims to create an Assets Library for MIT App Inventor, addressing the challenge of managing assets (images and sounds) across...",
          "description": "This GSoC proposal aims to create an Assets Library for MIT App Inventor, addressing the challenge of managing assets (images and sounds) across multiple projects. The solution involves developing a responsive Designer panel, distinct from the AssetListBox, to upload, organize, and import assets. I’ll leverage the UserFileData structure for user-specific storage, integrate with Google Cloud Storage (GCS), and refactor existing UploadServlet logic for robust validation. Deliverables include a drag-and-drop UI, folder-based organization, batch import functionality, and UX enhancements like search and error handling. This 175-hour project, spanning June 2 to August 25, 2025, will enhance workflow efficiency for educators, students, and developers, aligning with App Inventor’s mission to simplify app creation.",
          "student_name": "Lakshya Shishir",
          "code_url": null,
          "proposal_id": "65MFu07Q",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CBQwWnFG"
        },
        {
          "title": "Teachable-LLM: Trainable ChatBot Interface and AI Component",
          "short_description": "Currently, MIT App Inventor users lack a straightforward way to incorporate Retrieval Augmented Generation (RAG) for context-specific tasks requiring...",
          "description": "Currently, MIT App Inventor users lack a straightforward way to incorporate Retrieval Augmented Generation (RAG) for context-specific tasks requiring large or multiple documents. Teachable-LLM addresses this gap by integrating an on-device RAG pipeline, allowing users to build domain-specific chatbots without relying on external cloud services. A dedicated web app will serve as both a data management tool—enabling document import/export to a custom RAG database—and a playground for testing. Meanwhile, the ChatBot component will be extended to support RAG using the imported database. Key deliverables include the updated ChatBot component, a React-based web interface, thorough documentation, and pilot testing. This approach emphasizes accessibility, privacy, and simplicity, bringing advanced language model capabilities into the App Inventor ecosystem.",
          "student_name": "Tianyi Huang",
          "code_url": null,
          "proposal_id": "tfavDj7C",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nxTo05jc"
        }
      ]
    },
    {
      "name": "Neovim",
      "image_url": "https://summerofcode.withgoogle.com/media/org/neovim/wsjrusphcrjmo5tf-360.png",
      "image_background_color": "#ffffff",
      "description": "hyperextensible Vim-based text editor",
      "url": "https://neovim.io/",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/neovim",
      "ideas_url": "https://github.com/neovim/neovim/wiki/Google-Summer-of-Code#gsoc-ideas-2025",
      "guide_url": "https://github.com/neovim/neovim/wiki/Google-Summer-of-Code",
      "topics": ["ai", "editor", "text-editor"],
      "technologies": ["c", "lua"],
      "irc_channel": "https://matrix.to/#/#neovim:matrix.org",
      "contact_email": "",
      "mailing_list": "https://github.com/neovim/neovim/discussions",
      "twitter_url": "https://bsky.app/profile/neovim.io",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Enhancing AI Primitives in Neovim",
          "short_description": "Neovim currently lacks built-in support for AI features. As a result, plugin developers need to reimplement the same core functionalities again and...",
          "description": "Neovim currently lacks built-in support for AI features. As a result, plugin developers need to reimplement the same core functionalities again and again. This leads to duplication and inconsistencies in the plugin ecosystem.\n\nThis project aims to introduce AI-friendly primitives to streamline AI plugin development. It should add support for inline completion, buffer status indicators, a standardized progress API, and enhance prompt buffers with multiline support to be more friendly toward building AI-assisted workflows. These improvements should make it easy to integrate AI capabilities in Neovim while keeping Neovim performant, lightweight, and extensible as always.",
          "student_name": "Shadman Saleh",
          "code_url": null,
          "proposal_id": "ccWwAINZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5QH1bGGq"
        },
        {
          "title": "Remote ssh Editing",
          "short_description": "A much wanted and highly requested feature for neovim is the ability to edit remote files over ssh seamlessly. There is no native way of doing so and...",
          "description": "A much wanted and highly requested feature for neovim is the ability to edit remote files over ssh seamlessly. There is no native way of doing so and plugins do not feel as polished as expected. The aim of this project is to add such a feature to neovim.",
          "student_name": "Siddhant Agarwal",
          "code_url": null,
          "proposal_id": "NqleB6f5",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cxwY8wMs"
        },
        {
          "title": "AI-Driven API Enhancements with Broader Benefits",
          "short_description": "This proposal aims to enhance Neovim’s API to support AI-powered features, while also bringing broader improvements to the editor's functionality....",
          "description": "This proposal aims to enhance Neovim’s API to support AI-powered features, while also bringing broader improvements to the editor's functionality. While Neovim can provide some AI capabilities, current APIs are not convenient enough for handling complex tasks like streaming results or customizing AI interactions.\n\nTo solve this, the proposal focuses on three main areas:\n\n1. Enhanced LSP Support: Adding support for AI-related methods such as `textDocument/inlineCompletion` and improving LSP's handling of partial results with `PartialResultParam`.\n2. Progress Interface: Introducing a built-in progress interface (`vim.ui.progress`) to track and display long-running tasks, improving user experience during AI interactions.\n3. Prompt Buffer Improvements: Creating a new Lua API for multi-line and editable prompt buffers to facilitate interactive AI chats or REPL-like environments.\n\nBy addressing these areas, this project will provide a foundation for integrating AI into Neovim while offering general usability and extensibility improvements for all users.",
          "student_name": "Yi Ming",
          "code_url": null,
          "proposal_id": "dMDGCOji",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7Q85JtxY"
        }
      ]
    },
    {
      "name": "ArduPilot",
      "image_url": "https://summerofcode.withgoogle.com/media/org/ardupilot/oveqvcxkpgkuv8wq-360.png",
      "image_background_color": "#ffffff",
      "description": "World's most advanced autonomous vehicle software",
      "url": "https://ardupilot.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/ardupilot",
      "ideas_url": "https://ardupilot.org/dev/docs/gsoc-ideas-list.html",
      "guide_url": "https://ardupilot.org/dev/docs/gsoc.html",
      "topics": [
        "robotics",
        "ai",
        "Drone",
        "autonomous vehicle",
        "unmanned vehicle"
      ],
      "technologies": ["python", "lua", "c++", "pixhawk"],
      "irc_channel": "https://discord.com/channels/674039678562861068/805671364873682954",
      "contact_email": "",
      "mailing_list": "https://discuss.ardupilot.org/c/google-summer-of-code/131",
      "twitter_url": "https://twitter.com/ardupilotteam?lang=en",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/groups/ArduPilot.org/",
      "num_projects": 4,
      "projects": [
        {
          "title": "AI Chat Integration with all WebTools",
          "short_description": "This project aims to enhance the functionality and user experience of web tools, starting with the Hardware Report Tool and UAV Log Viewer, by...",
          "description": "This project aims to enhance the functionality and user experience of web tools, starting with the Hardware Report Tool and UAV Log Viewer, by integrating an AI-powered assistant. The assistant will provide context-aware responses using Retrieval-Augmented Generation (RAG) and execute actions within the tools through function calling.\n\nDeliverables include:\n1. AI-powered chat interface integrated into the Hardware Report Tool and UAV Log Viewer.\n2. RAG implementation for accurate, context-aware responses.\n3. Function calling capabilities, enabling AI to execute tool-specific actions.\n4. Automated assistant setup for easy integration with future web tools.",
          "student_name": "Anas Chebili",
          "code_url": null,
          "proposal_id": "4S0eGR8d",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TzF2K1ji"
        },
        {
          "title": "Proposal for Gazebo Plug-in Model of a Motor - ArduPilot",
          "short_description": "The project aims to make an electro-mechanical model of a motor which would simulate a motor in gazebo. The purpose is to enhance the motor testing...",
          "description": "The project aims to make an electro-mechanical model of a motor which would simulate a motor in gazebo. The purpose is to enhance the motor testing behaviour before real world deployment. It also converts the RC command to motor joint control command more correctly and accuratly.",
          "student_name": "Bhajneet Singh Bedi",
          "code_url": null,
          "proposal_id": "kSTEEIOs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/hx75eBVL"
        },
        {
          "title": "SITL AI Reinforcement Learning Concept Script",
          "short_description": "This project aims to extend the ArduPilot Software-In-The-Loop (SITL) environment to support episodic reinforcement learning (RL). Rather than simply...",
          "description": "This project aims to extend the ArduPilot Software-In-The-Loop (SITL) environment to support episodic reinforcement learning (RL). Rather than simply applying RL algorithms such as Q-learning, SARSA, or actor–critic, the primary goal is to develop and integrate an episodic framework that enables:\n• Monitoring and controlling simulation time;\n• Programmatically resetting the UAV state (position, velocity, attitude, etc.);\n• Capturing and replaying states for analysis.\nThis framework, implemented primarily in Lua (with potential Python support for data processing and visualization), will establish a robust cycle where each episode is initiated, executed for a predetermined duration, and then restarted. By focusing on a reliable reset mechanism to return the UAV to a consistent starting state, the project creates a solid foundation for the eventual application of RL algorithms within the constraints of the SITL environment.",
          "student_name": "Bruno Andreoni Sarmento",
          "code_url": null,
          "proposal_id": "zUVTv0n7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/w7EYZSIz"
        },
        {
          "title": "Non-GPS Position Estimation Using 3D Camera and Pre-Generated Map",
          "short_description": "This proposal aims to address the challenge of robust and accurate GPS-denied navigation for UAVs equipped with lightweight 3D cameras. The core...",
          "description": "This proposal aims to address the challenge of robust and accurate GPS-denied navigation for UAVs equipped with lightweight 3D cameras. The core problem is that while camera-based visual odometry can struggle in certain environments and LiDAR systems are often too heavy and expensive for all UAVs, there is not a reliable way for lightweight UAVs to leverage the high-accuracy 3D maps generated by more capable mapping systems.\n\nThe proposed solution is to develop a framework that allows UAVs with 3D cameras to utilize pre-generated, centimeter-level 3D maps for navigation. This will involve a C++ based ROS2 package designed to run on a companion computer. This package will:\n\n1) Process the pre-generated maps.\n2) Implement point cloud matching algorithms (such as ICP and NDT) to align live camera scans with the existing map and compute a  (6 DOF) pose.\n3) Fuse the estimated pose with IMU data using an (EKF) to provide smooth and high-rate odometry, particularly improving Z-axis estimation.\n4) Incorporate a state machine to manage the odometry data, perform sanity checks, handle potential issues (like data rate drops, connection loss, time desynchronization, and corrupted messages), and transmit the validated pose to the UAV's firmware via MAVLink messages over serial communication.\n\nThe key deliverables of this project include:\n1) Fully functional prototype of the system in simulation capable of generating maps and using them to generate 6-DOF estimates using 3D camera\n2)Algorithm Design, Implementation, and Sensor Fusion\n3)System Integration, Validation, and Documentation\n4) Fully functional hardware setup.",
          "student_name": "Shubham-shahh",
          "code_url": null,
          "proposal_id": "cgZ8jATK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/N3dE0FL7"
        }
      ]
    },
    {
      "name": "OpenELIS Global",
      "image_url": "https://summerofcode.withgoogle.com/media/org/openelis-global/k6rnzk3hcktzabst-360.png",
      "image_background_color": "#ffffff",
      "description": "Empowering  labs to Ensure Quality Health Care",
      "url": "https://openelis-global.org/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/openelis-global",
      "ideas_url": "https://uwdigi.atlassian.net/wiki/spaces/OG/pages/321224705/GSoC+2025",
      "guide_url": "https://uwdigi.atlassian.net/wiki/spaces/OG/pages/245694473/GSoC+Guidelines+for+Students",
      "topics": ["Health Care", "Laboratory Information System"],
      "technologies": ["postgresql", "javascript", "java", "react", "spring"],
      "irc_channel": "https://digi-team-uw.slack.com/archives/CFUH9HLUF",
      "contact_email": "",
      "mailing_list": "https://talk.openelis-global.org/",
      "twitter_url": "",
      "blog_url": "https://openelis-global.org/blog/",
      "facebook_url": "",
      "num_projects": 4,
      "projects": [
        {
          "title": "Rewrite Test management pages components from JSP to React",
          "short_description": "The OpenELIS organization currently relies on JSP (Jakarta Server Pages) for most of its pages but is gradually transitioning to a modern...",
          "description": "The OpenELIS organization currently relies on JSP (Jakarta Server Pages) for most of its pages but is gradually transitioning to a modern JavaScript-based framework, React.js. Many pages still use Java-based controllers and endpoints to dynamically update and display data on the front end. As part of this project, I will rewrite all Test Management Pages and their components in React UI, integrating them with REST API endpoints to fetch and render data. Additionally, I will migrate all Test Management Configurations, Management, and other operational pages to React.",
          "student_name": "Aditya Deshlahre",
          "code_url": null,
          "proposal_id": "ixGed57h",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/goRhJRfh"
        },
        {
          "title": "Improving E2E QA tests",
          "short_description": "The current End-to-End (E2E) test coverage for the new React frontend stands at approximately 30%, leaving critical functionalities untested. This...",
          "description": "The current End-to-End (E2E) test coverage for the new React frontend stands at approximately 30%, leaving critical functionalities untested. This project aims to enhance E2E test coverage to at least 80%, ensuring comprehensive validation of the entire application workflow. By identifying gaps, developing additional test cases, optimizing execution, and integrating tests into the CI/CD pipeline, this initiative will significantly improve system reliability, user experience, and overall software stability.",
          "student_name": "Bahati308",
          "code_url": null,
          "proposal_id": "MdCOgMFo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cptaFNvP"
        },
        {
          "title": "Intergrate OpenELIS with Odoo(OpenER)",
          "short_description": "This project aims at adding an integration layer between OpenELIS Global2 and Odoo (OpenERP) in order to add support for Billing functionalities with...",
          "description": "This project aims at adding an integration layer between OpenELIS Global2 and Odoo (OpenERP) in order to add support for Billing functionalities with  the OpenELIS Order workflow.\n\nThe goal of this project is to integrate OpenELIS Global2 with Odoo (OpenERP) to enable automated billing and financial management for laboratory services. This will ensure that when lab orders are placed in OpenELIS, invoices are automatically generated in Odoo, reducing manual data entry and improving efficiency.",
          "student_name": "Vickabire",
          "code_url": null,
          "proposal_id": "2DEpMIzM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DzgbNr9r"
        },
        {
          "title": "Add Support for OpenELIS to use OCL to populate the Data Dictionary",
          "short_description": "This project integrates Open Concept Lab (OCL) test concepts into OpenELIS-Global by parsing OCL ZIP files from a Configurations/ocl directory at...",
          "description": "This project integrates Open Concept Lab (OCL) test concepts into OpenELIS-Global by parsing OCL ZIP files from a Configurations/ocl directory at startup, mapping them to the TEST table, and using checksums to process only modified files. It enhances lab standardization and interoperability, reducing manual setup time (e.g., 2 hours to 10 minutes) for technicians and ensuring consistent updates across sites for admins.",
          "student_name": "vsvishalsharma",
          "code_url": null,
          "proposal_id": "BJu847Dg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/EhtmR65z"
        }
      ]
    },
    {
      "name": "GRAME",
      "image_url": "https://summerofcode.withgoogle.com/media/org/grame/joff5sziiuapvits-360.png",
      "image_background_color": "#ffffff",
      "description": "Domain specific language for audio",
      "url": "https://faust.grame.fr",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/grame",
      "ideas_url": "https://github.com/grame-cncm/faustideas",
      "guide_url": "https://github.com/grame-cncm/faustideas",
      "topics": [
        "audio",
        "compiler",
        "digital signal processing",
        "function programming language"
      ],
      "technologies": ["c", "javascript", "c++", "rust", "typescript"],
      "irc_channel": "https://discord.gg/qPPcXzJdmR",
      "contact_email": "mailto:research@grame.fr",
      "mailing_list": "https://faust.grame.fr/community/help/",
      "twitter_url": "",
      "blog_url": "https://github.com/grame-cncm/faustideas",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Faust LSP",
          "short_description": "This proposal aims to develop a feature-rich programming environment for writing Faust programs in VS Code by providing powerful Language Server...",
          "description": "This proposal aims to develop a feature-rich programming environment for writing Faust programs in VS Code by providing powerful Language Server Protocol(LSP) features such as code completion, diagnostics checking, definition lookup, etc. and any other features commonly supported by other mature programming language projects.\nThe goal is to enhance and optimize the current Faust programming experience, making Faust development smoother for developers and allowing Faust programming to be more accessible for beginners to the Faust ecosystem.",
          "student_name": "carn181",
          "code_url": null,
          "proposal_id": "PwfsNNQc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/o08fWFr0"
        },
        {
          "title": "faust2clap: Support for CLAP format",
          "short_description": "This project proposes the development of faust2clap, a tool that integrates the Faust programming language with the CLAP (CLever Audio Plugin)...",
          "description": "This project proposes the development of faust2clap, a tool that integrates the Faust programming language with the CLAP (CLever Audio Plugin) standard. Faust is a high-level functional language for real-time DSP, while CLAP is a modern open-source plugin format gaining traction as an alternative to VST and AudioUnit. Currently, Faust does not officially support CLAP as a target architecture.\n\nThe goal is to extend the existing faust2xx framework by implementing a CLAP architecture file and a new command-line utility, faust2clap. This will allow developers to compile Faust DSP code into fully functional CLAP plugins, supporting advanced features such as per-note modulation and sample-accurate automation.\n\nDeliverables include the tool itself, a reusable architecture backend, a suite of test plugins, and comprehensive documentation. The project has been developed in close collaboration with the Faust team and aims to be merged upstream as an official component of the Faust toolchain.\n\nBy bridging Faust and CLAP, this project supports open plugin standards, expands deployment options for DSP developers, and modernises the Faust ecosystem.",
          "student_name": "Facundo F",
          "code_url": null,
          "proposal_id": "cBln2bUB",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/5xh4Ttn4"
        },
        {
          "title": "Integration in Audiokinetic Wwise",
          "short_description": "This project aims to integrate the Faust programming language with Audiokinetic's Wwise - the industry standard audio middleware in game development....",
          "description": "This project aims to integrate the Faust programming language with Audiokinetic's Wwise - the industry standard audio middleware in game development. Two key deliverables will be created: a faust2wwise tool for statically compiling Faust DSP code into Wwise modules, and a plugin that embeds the libfaust & LLVM JIT compiler for dynamic Faust DSP live-coding within Wwise. Drawing on experience in C++ audio programming, DSP techniques, and plugin development, a practical connection will be built that allows audio designers and programmers to use Faust's DSP capabilities directly within their Wwise workflows.",
          "student_name": "pmelaudev",
          "code_url": null,
          "proposal_id": "1QOfhUuj",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Pim5UypA"
        }
      ]
    },
    {
      "name": "The Julia Language",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-julia-language/49fck3n7j5aqnpwu-360.png",
      "image_background_color": "#ffffff",
      "description": "A fresh approach to technical computing",
      "url": "https://julialang.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-julia-language",
      "ideas_url": "https://julialang.org/jsoc/projects/",
      "guide_url": "https://julialang.org/jsoc/guidelines/",
      "topics": [
        "math",
        "artificial intelligence",
        "science",
        "data science",
        "graphs"
      ],
      "technologies": [
        "machine learning",
        "julia",
        "data science",
        "compilers",
        "garbage-collection"
      ],
      "irc_channel": "https://julialang.org/slack/",
      "contact_email": "",
      "mailing_list": "https://discourse.julialang.org",
      "twitter_url": "https://twitter.com/JuliaLanguage",
      "blog_url": "https://julialang.org/blog/",
      "facebook_url": "",
      "num_projects": 14,
      "projects": [
        {
          "title": "Extending Reachability Analysis with Matrix Zonotopes in ReachabilityAnalysis.jl",
          "short_description": "This project aims to extend the existing capabilities of ReachabilityAnalysis.jl with a new state-of-the-art algorithm for reachability analysis,...",
          "description": "This project aims to extend the existing capabilities of ReachabilityAnalysis.jl with a new state-of-the-art algorithm for reachability analysis, based on recent literature. The algorithm will improve the precision of reachable set computations for systems with uncertain parameters, utilizing matrix zonotopes—a set representation that provides tighter enclosures than traditional convex sets. Building on recent research, I will develop a new Julia package, MatrixZonotopes.jl, which will provide the necessary operations for working with matrix zonotopes and integrate it into the JuliaReach ecosystem. Based on the functionalities added by the new package, a reachability algorithm for linear systems will be implemented. At the end of the project, the new package will be available, along with the reachability algorithm, and a blog post will document their performance and functionalities.",
          "student_name": "alecarraro",
          "code_url": null,
          "proposal_id": "4spsZSSY",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/lTdvJXDe"
        },
        {
          "title": "Integrating Agents.jl with Reinforcement Learning Techniques",
          "short_description": "The proposal aims to integrate the Julia package Agents.jl (for agent-based modeling) with ReinforcementLearning.jl or Crux.jl, enabling intelligent...",
          "description": "The proposal aims to integrate the Julia package Agents.jl (for agent-based modeling) with ReinforcementLearning.jl or Crux.jl, enabling intelligent agents in simulations to learn optimal policies via reinforcement learning. The integration will allow for dynamic, reward-based behaviors rather than static rule-based actions. The project involves updating the chosen RL library for compatibility with the latest Julia version, building a lightweight interface (ABMEnv) to connect it with Agents.jl, and showcasing the integration through example applications like herding, civil violence, and predator-prey models. This work will expand the capabilities of Julia’s ecosystem for researchers in fields such as economics, social sciences, and robotics, while offering a standardized and accessible way to combine RL and ABM.",
          "student_name": "bergio",
          "code_url": null,
          "proposal_id": "FsEP1SS7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/T5qvWEvO"
        },
        {
          "title": "Sharing is Caring; Improving the Julia GPU Stack Portability.",
          "short_description": "The state of Julia GPU support ranges from “very good” (CUDA.jl) to “on the way” (Metal.jl). Recently, the shared high-level interface GPUArrays.jl...",
          "description": "The state of Julia GPU support ranges from “very good” (CUDA.jl) to “on the way” (Metal.jl). Recently, the shared high-level interface GPUArrays.jl added support for KernelAbstractions.jl, which defines a common interface that can be used to write optimized kernel implementations once for all the downstream vendor-specific GPU packages such as CUDA.jl, AMDGPU.jl, Metal.jl, and oneAPI.jl. However, most optimized kernel implementations still live in the vendor-specific package they were written for, leaving the other packages to either reimplement their own version, use the current unoptimized fallback implementation from GPUArrays.jl, or in many cases, the operation is not supported.\n\nThis project aims to rewrite these optimized operations in GPUArrays.jl using the KernelAbstractions interface to improve performance and functionality for all GPU backends at once. The end result being that users of the less mature backends will benefit from more functionality, as well as increasing the impact of future contributions for all users of the JuliaGPU ecosystem.",
          "student_name": "christiangnrd",
          "code_url": null,
          "proposal_id": "rmu1DQrR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9M7UdqlC"
        },
        {
          "title": "Improving the Performance of GNNs Using Sparse Linear Algebra",
          "short_description": "Graph Neural Networks (GNNs) are powerful tools for processing graph-structured data, with applications spanning social networks, recommendation...",
          "description": "Graph Neural Networks (GNNs) are powerful tools for processing graph-structured data, with applications spanning social networks, recommendation systems, molecular modeling, and beyond. The Julia package GraphNeuralNetworks.jl, based on Flux.jl, provides access to common graph convolutional layers, offering a flexible framework for building GNN models.\nSparse computations are essential for the efficient implementation of GNNs, since many operations, such as propagating node features, can be expressed as the multiplication of a sparse adjacency matrix with a dense feature matrix.\nImproving these operations through enhanced GPU kernels and fused operations is critical to reducing memory overhead and increasing the overall performance.\nThis project aims to address these limitations by enhancing CUDA.jl’s sparse matrix support and integrating these improvements into GraphNeuralNetworks.jl, ultimately enabling faster and more scalable GNN computations in Julia.",
          "student_name": "Davide Ferre'",
          "code_url": null,
          "proposal_id": "oDiQiG2W",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/pVuVXJ5N"
        },
        {
          "title": "A Digital Twin approach for Advanced Supervoxel Visualization for Multi-Image View in Imaging",
          "short_description": "This project extends the capabilities of the MedEye3D framework by developing an advanced visualization tool for supervoxel-based comparison across...",
          "description": "This project extends the capabilities of the MedEye3D framework by developing an advanced visualization tool for supervoxel-based comparison across multiple medical imaging modalities (e.g., CT and MRI). The tool will enable users to interactively explore supervoxels on synchronized image views, with automatic highlighting of corresponding regions to aid in non-rigid registration and comparative analysis. Features include side-by-side image displays, interactive correction of supervoxel associations, and annotation of anatomical control points to support image alignment. Built using Julia, ModernGL.jl, and ITK/SimpleITK, this tool will enhance clinical workflows and research by improving registration accuracy and facilitating reliable visualization in complex imaging scenarios. The project contributes to digital twin applications in healthcare by enabling robust, user-guided multi-modality analysis.",
          "student_name": "Divyansh-Goyal",
          "code_url": null,
          "proposal_id": "RIMV79En",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/0MEiJ7Ty"
        },
        {
          "title": "Implementing a Graph-State Backend for QuantumClifford.jl",
          "short_description": "QuantumClifford.jl enables efficient simulation of Clifford circuits acting on stabilizer states using the (de)stabilizer formalism, with complexity...",
          "description": "QuantumClifford.jl enables efficient simulation of Clifford circuits acting on stabilizer states using the (de)stabilizer formalism, with complexity O(𝑛²), where 𝑛 is the number of qubits. For sparse stabilizer states—those with a qubit connectivity of O(log 𝑛)—an alternative algorithm based on graph states achieves improved complexity of O(𝑛 log 𝑛). This project aims to implement this graph-states-based simulator as an alternative backend in `QuantumClifford.jl`. Specifically, the project will: support the simulation of generator gates {𝐻, 𝑆, Λ𝑍}, enable the decomposition of arbitrary Clifford gates into these three generators, and implement single-qubit Pauli measurements on graph states. The goal is to provide a seamless transition to the graph-based simulator through compatibility with existing `apply!` and `project!` APIs in `QuantumClifford.jl`.",
          "student_name": "Kanyang Ying",
          "code_url": null,
          "proposal_id": "ioO0Njeb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vEtdXncS"
        },
        {
          "title": "Supporting Patient Level Prediction Pipelines within JuliaHealth",
          "short_description": "The project aims to enhance patient-level prediction (PLP) workflows for OMOP CDM data by developing robust, interoperable tooling within the...",
          "description": "The project aims to enhance patient-level prediction (PLP) workflows for OMOP CDM data by developing robust, interoperable tooling within the JuliaHealth ecosystem. It addresses the challenges of manual data preprocessing, inconsistent cohort construction, and disconnected ML pipelines in observational research. To solve this, the project will deliver a standardized Tables.jl interface for OMOP CDM that simplifies access to and preprocessing of clinical data, along with a cohort feasibility assessment tool that evaluates data readiness for PLP studies. These tools will be designed to integrate with existing JuliaHealth packages like MLJ.jl, OMOPCDMCohortCreator.jl, OHDSICohortExpressions.jl etc. By the end of the project, researchers will have a streamlined and reproducible pipeline for building and evaluating PLP models directly from OMOP CDM databases.",
          "student_name": "Kosuri Lakshmi Indu",
          "code_url": null,
          "proposal_id": "qJtt1NtZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xpSEgu5b"
        },
        {
          "title": "Ab-Initio Quantum Chemistry with Rimu.jl",
          "short_description": "This project proposes adding new features to Rimu.jl --- a Julia package that implements a random integrator for many-body quantum systems ---...",
          "description": "This project proposes adding new features to Rimu.jl --- a Julia package that implements a random integrator for many-body quantum systems --- allowing it to read FCIDUMP files or directly use data from the ElemCo.jl package and construct a molecular Hamiltonian. This will provide users with the ability to obtain highly accurate data from quantum Monte Carlo simulations and exact diagonalisation for extensible models involving the electronic structure of molecules starting from readily available quantum chemistry data.",
          "student_name": "lch",
          "code_url": null,
          "proposal_id": "KHLOSfKn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rIUlYnPe"
        },
        {
          "title": "R Interface for JuliaBUGS",
          "short_description": "The main goal of this project is to develop the R interface for JuliaBUGS, enabling a broader range of users already familiar with these languages to...",
          "description": "The main goal of this project is to develop the R interface for JuliaBUGS, enabling a broader range of users already familiar with these languages to leverage the features of JuliaBUGS. This integration will not only facilitate the use of JuliaBUGS’ concise formulation alongside modern methods such as Hamiltonian Monte Carlo (HMC) and Automatic Differentiation (AD) but will also attract new users, helping to expand, consolidate, and strengthen the Julia community.\n\nThe project will be under the umbrella project Turing.jl, and will have a duration of 175 hours.",
          "student_name": "Mateus Maia",
          "code_url": null,
          "proposal_id": "6awtv3XJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WgOorFxH"
        },
        {
          "title": "Improving search functionality for Documenter.jl",
          "short_description": "This project aims to significantly enhance the search experience within documentation generated by Documenter.jl. The current client-side search...",
          "description": "This project aims to significantly enhance the search experience within documentation generated by Documenter.jl. The current client-side search encounters difficulties accurately indexing and retrieving results for Julia-specific syntax, leading to suboptimal relevance. Furthermore, issues like unnecessarily large search indices and repeated listing of the same location hinder usability. This proposal outlines a plan to address these shortcomings by: 1) Implementing search performance benchmarks (relevance, precision/recall, index size) to measure and guide improvements. 2) Developing and integrating an improved, Julia-aware tokenizer within the search JavaScript. 3) Optimizing the index by investigating and removing redundant data, ensuring unique location entries are stored, and adding warnings for potentially problematic large indices. 4) Creating comprehensive developer documentation for the enhanced search system. The outcome will be a more robust, accurate, and efficient search capability for users navigating Julia package documentation.",
          "student_name": "Mohd Rahban Ghani",
          "code_url": null,
          "proposal_id": "rP5jGhCZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KGUrSI9I"
        },
        {
          "title": "Time series forecasting at scales",
          "short_description": "Potential users requiring time series forecasting cannot shift to Julia due to a lack of scalable and efficient packages. The project aims to create...",
          "description": "Potential users requiring time series forecasting cannot shift to Julia due to a lack of scalable and efficient packages. The project aims to create a package within the Julia language ecosystem to allow businesses and individuals to employ time series forecasting. This package will leverage optimized data structures and parallel computing to minimize space and time complexities, ensuring high performance for large-scale forecasting tasks. The primary deliverables include: Adding support for time series forecasting methods, like forecasting intermittent demand (INARMA and Croston) and seasonal forecasting (ARIMA and ETS), while also allowing loss based forecasting using machine learning models (XGBoost); Including methods to evaluate and compare different models; Implementing tools for data analysis, specifically, rolling statistics, unit root tests (for stationarity), distribution histograms (for outliers), and periodicity detection algorithms; Providing visualization features for plotting; Supplying detailed documentation for the package, including function definitions with parameter specifications, and tutorials which use native datasets. The project aims to fill a gap in Julia's ecosystem by implementing these features, encouraging users to switch to Julia for time series analysis. The package will combine statistical robustness with computational efficiency, making sophisticated forecasting accessible to a broader range of users.",
          "student_name": "Priynsh",
          "code_url": null,
          "proposal_id": "l9yKH42Q",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gy5J7ewY"
        },
        {
          "title": "Browser-Based Graphical Interface for JuliaBUGS",
          "short_description": "JuliaBUGS is a modern Julia implementation of the classic Bayesian Inference using Gibbs Sampling — BUGS language for Bayesian modeling, combining...",
          "description": "JuliaBUGS is a modern Julia implementation of the classic Bayesian Inference using Gibbs Sampling — BUGS language for Bayesian modeling, combining BUGS’s intuitive model specification with Julia’s high-performance sampling methods like Hamiltonian Monte Carlo. This project proposes a browser-based graphical model editor for JuliaBUGS, enabling users to visually construct probabilistic graphical models by adding nodes and drawing arrows, instead of writing code. Built using React with TypeScript and React Flow, the web interface will support adding, connecting, grouping, and editing random variables and deterministic nodes via an interactive canvas. Users can specify probability distributions and hyperparameters through intuitive forms. The editor will export model structures to JSON and generate valid JuliaBUGS (or BUGS) code. The GSoC project will focus entirely on delivering a polished, user-friendly frontend with clear usage examples and tutorials. Inspired by tools like DoodleBUGS (for WinBUGS or MultiBUGS), shinystan, and the R Package causact, this editor aims to make model specification more accessible and streamline the Bayesian modeling workflow.",
          "student_name": "Shravanpuri Goswami",
          "code_url": null,
          "proposal_id": "TFBJC1aI",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4ecMbDwU"
        },
        {
          "title": "Efficient RMA Integration and Graph Partitioning for Scalable Task Execution in MPI-based Dagger.jl",
          "short_description": "This project aims to optimizing the MPI integration within Dagger.jl by first extending and improving the existing MPI.jl interface, documenting new...",
          "description": "This project aims to optimizing the MPI integration within Dagger.jl by first extending and improving the existing MPI.jl interface, documenting new interfaces, and refining the documentation for current ones. The second objective is to implement an efficient Remote Memory Access (RMA) communication strategy to replace traditional Point-to-Point methods. This change will help reduce memory and synchronization overhead and optimize data movement across distributed memory systems. Finally, to address the current O(M×N) complexity caused by the SIMD execution model, the project proposes a transition to a MIMD model using Multi-level Graph Partitioning. This approach will partition the execution Directed Acyclic Graph (DAG) into smaller, optimized subgraphs, significantly reducing redundant computations and enhancing parallel efficiency. To achieve these goals, we plan to conduct extensive benchmarking tests on the implementations. This will ensure the code is clear and well-documented, enabling future developers to use it freely.",
          "student_name": "Yan S. Guimarães",
          "code_url": null,
          "proposal_id": "yyGDhNfS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aCA4KJ3B"
        },
        {
          "title": "Development of a New Language Server for Julia",
          "short_description": "The Language Server Protocol (LSP) is a communication protocol between editors and analysis engines. Many major editors support this protocol, making...",
          "description": "The Language Server Protocol (LSP) is a communication protocol between editors and analysis engines.\n\nMany major editors support this protocol, making Language\nServers—development support tools that communicate with editors via LSP—highly\nsignificant in modern development environments.\n\nIn this proposal, I aim to implement and enhance some new features for a new Language Server called JETLS, which is deeply integrated with the latest Julia compiler infrastructure.\n\nI will strive to deliver low-latency, precisely source-mapped feedback to users, enhancing the overall development experience by leveraging JET.jl, Revise.jl, JuliaSyntax.jl, and JuliaLowering.jl.  \n\nJETLS will provide powerful editor support for programmers working on large-scale Julia codebases, helping them discover potential bugs and write more efficient code.",
          "student_name": "Yuchi Yamaguchi",
          "code_url": null,
          "proposal_id": "TlN9rASt",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9PZY6C2m"
        }
      ]
    },
    {
      "name": "The ns-3 Network Simulator Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/the-ns-3-network-simulator-project/0zmaec44y4jcfuj2-360.png",
      "image_background_color": "#ffffff",
      "description": "ns-3 is a simulation tool for computer networks.",
      "url": "https://www.nsnam.org",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/the-ns-3-network-simulator-project",
      "ideas_url": "https://www.nsnam.org/wiki/GSOC2025Projects",
      "guide_url": "https://www.nsnam.org/wiki/GSOC2025ContributorGuide",
      "topics": ["computer networking", "network simulation"],
      "technologies": ["python", "django", "c++"],
      "irc_channel": "https://ns-3.zulipchat.com",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/g/ns-developers",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "ICMP socket and generate/handle ICMP messages (host/net unreachable)",
          "short_description": "In the current implementation of ns-3, there is no implementation of a dedicated socket for sending ICMP packets. Thus, it is difficult to accurately...",
          "description": "In the current implementation of ns-3, there is no implementation of a dedicated socket for sending ICMP packets. Thus, it is difficult to accurately model the applications and real-world protocols that rely on sending ICMP packets.\nThis project aims to resolve this issue by implementing a new ICMP socket model that supports both the IPv4 and the IPv6 functionalities.\n\nIn the solution, there will be specialized classes like IcmpSocket, IcmpSocketImpl, IcmpSocketFactory, and IcmpSocketFactoryImpl. This will allow for proper handling of ICMP echo/reply requests and error messages like Destination Unreachable, TTL exceeded, etc. Along with this, the solution will also allow for advanced functionalities like ICMPv6 Neighbor Discovery Protocol, ICMP redirects, etc.\n\nThe deliverables for this project include developing sockets that seamlessly integrate with the IP layer (both IPv4 and IPv6) and developing wrapper classes (Socket and SocketFactory) that simplify the socket creation and management. These ensure realistic handling of the ICMP packets in the ns-3 simulations.",
          "student_name": "Aditya Ruhela",
          "code_url": null,
          "proposal_id": "5eukrvaJ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/K7AZ4Yh2"
        },
        {
          "title": "6LoWPAN Neighbor Discovery Protocol",
          "short_description": "The 6LoWPAN-ND (RFCs 4944, 6775, and 8505) is a replacement for IPv6 DAD and NDP for 6LoWPAN networks, and it is important to ensure address...",
          "description": "The 6LoWPAN-ND (RFCs 4944, 6775, and 8505) is a replacement for IPv6 DAD and NDP for 6LoWPAN networks, and it is important to ensure address uniqueness across a network that can potentially use different MAC/PHY layers.\nThere is a model for 6LoWPAN-ND, but it is still not merged in the main ns-3 branch. The goal is to clean up the implementation, remove an actual limitation due to a questionable assumption, and to add the support for multi-hop operations (EDAR and EDAC messages).",
          "student_name": "Boh Jie Qi",
          "code_url": null,
          "proposal_id": "GwNPtExR",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/DCsjRKRt"
        },
        {
          "title": "Upgrade the AQM Evaluation Suite for ns-3",
          "short_description": "The AQM Evaluation Suite is an automated framework based on RFC 7928 that simplifies simulation setup, topology creation, traffic generation,...",
          "description": "The AQM Evaluation Suite is an automated framework based on RFC 7928 that simplifies simulation setup, topology creation, traffic generation, execution, and results visualization of AQM algorithms in ns-3. Originally developed in 2017 and maintained until 2019, the suite now needs an upgrade to:\n    - Migrate its build system from waf to CMake\n    - Integrate support for state-of-the-art AQM algorithms and enhanced ECN functionalities\n    - Update simulation examples to reflect modern traffic control models and data center load balancing scenarios\n    - Package and publish the suite on the ns-3 App Store",
          "student_name": "David Lin",
          "code_url": null,
          "proposal_id": "36B3x0Ra",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/d7sZPqy6"
        },
        {
          "title": "IPv6 Global Routing",
          "short_description": "The aim of this project is to extend the functionality of GlobalRouting to Ipv6, while maintaining minimal code duplication. Global Routing is based...",
          "description": "The aim of this project is to extend the functionality of GlobalRouting to Ipv6, while maintaining minimal code duplication.\n\nGlobal Routing is based on the OSPFv2 routing protocol and\nuses the Djikstra Shortest path algorithm to compute paths for a single area network\nconfiguration. The problem is that GlobalRouting doesn't work for IPv6, and that's a huge limitation. The goal of the project is to fix that limitation\n\nThe general Idea is to convert the Ipv4 Classes to Generic Template Classes and Handle Ipv6 based Implementation differences using a combination of Type Traits and Compile time if statements.\n\nDeliverables include a working implementation of Ipv6GlobalRouting which handles different Address Types in Ipv6, while also maintaining Minimal Code Duplication.",
          "student_name": "Shashwat Patni",
          "code_url": null,
          "proposal_id": "coXzNk2y",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/wdNG4pyV"
        },
        {
          "title": "NTN Helper and a LEO example for 5G NR",
          "short_description": "Creation of Mobility and Orbit models for LEO Satellites along with a NTN Helper for GEO and LEO Satellites, and an example using the helper...",
          "description": "Creation of Mobility and Orbit models for LEO Satellites along with a NTN Helper for GEO and LEO Satellites, and an example using the helper integrating LEO Satellites with 5G NR.",
          "student_name": "Thiago Miyazaki",
          "code_url": null,
          "proposal_id": "c229W0Wu",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Z1PZUHaC"
        }
      ]
    },
    {
      "name": "rocket.chat",
      "image_url": "https://summerofcode.withgoogle.com/media/org/rocketchat/qnog9kebwa9atw3l-360.png",
      "image_background_color": "#ffffff",
      "description": "Open source communications platform for the AI age",
      "url": "https://github.com/RocketChat",
      "category": "Social and communication",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/rocketchat",
      "ideas_url": "https://github.com/RocketChat/google-summer-of-code/blob/main/google-summer-of-code-2025.md#-project-ideas",
      "guide_url": "https://github.com/RocketChat/google-summer-of-code/blob/main/google-summer-of-code-2025.md#how-to-apply",
      "topics": [
        "communications",
        "messaging",
        "group chat",
        "Team Collaboration",
        "Chat platform"
      ],
      "technologies": [
        "javascript",
        "typescript",
        "node",
        "LLM",
        "generative ai"
      ],
      "irc_channel": "https://open.rocket.chat/channel/gsoc2025",
      "contact_email": "mailto:gsoc+2025@rocket.chat",
      "mailing_list": "https://forums.rocket.chat/c/gsoc/gsoc2025/111",
      "twitter_url": "https://twitter.com/rocketchat4all",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 19,
      "projects": [
        {
          "title": "Server Guide Agent",
          "short_description": "This project focuses on building an intelligent onboarding and user guidance agent app within Rocket.Chat to enhance new user engagement. It...",
          "description": "This project focuses on building an intelligent onboarding and user guidance agent app within Rocket.Chat to enhance new user engagement. It introduces two main workflows — Admin Workflow and User Workflow — designed to simplify the onboarding process and provide personalized assistance to users.\n\nIn the Admin Workflow, server administrators can configure key onboarding elements such as welcome messages, server rules, suggested channels, default channels for auto-joining, and guides for important features. Admins can also broadcast messages to multiple users and channels.\n\nIn the User Workflow, regular users interact with the bot, which responds based on the admin-defined configurations. The bot assists users by answering questions about server rules, recommending useful channels, and guiding them through onboarding and many more.",
          "student_name": "Abir Chakraborty",
          "code_url": null,
          "proposal_id": "LaVOk5Tm",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CCJEW8vy"
        },
        {
          "title": "Convert endpoints to new Pattern",
          "short_description": "This proposal addresses the current issues with Rocket.Chat’s API documentation, which is fragmented and manually maintained, leading to inconsistent...",
          "description": "This proposal addresses the current issues with Rocket.Chat’s API documentation, which is fragmented and manually maintained, leading to inconsistent validations and outdated information. The plan is to convert all API endpoints to use the OpenAPI 3.1 standard, integrate AJV-based validation for both requests and responses, and merge all documentation into a single, interactive Swagger UI portal. The key deliverables include: A complete, OpenAPI 3.1 compliant API specification covering all endpoints. AJV-based validation integrated across the API to reduce runtime errors. A unified documentation portal accessible via /api-docs with interactive Swagger UI. This approach aims to improve developer experience, ensure type safety, and maintain backward compatibility while providing a robust, automated solution for API documentation and validation.",
          "student_name": "Ahmed Nasser | GSoC '25 Aspirant",
          "code_url": null,
          "proposal_id": "RQVd8PcC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xzXXAcmX"
        },
        {
          "title": "End to End Encrypted Message Handling for Ruqola",
          "short_description": "Ruqola, a Qt-based Rocket.Chat client, currently lacks a robust implementation of end-to-end encryption (E2EE), making user communications vulnerable...",
          "description": "Ruqola, a Qt-based Rocket.Chat client, currently lacks a robust implementation of end-to-end encryption (E2EE), making user communications vulnerable to interception. This project aims to design, implement, and integrate a complete E2EE workflow into Ruqola, ensuring secure messaging through strong cryptographic techniques.\n\nThe project consists of two phases:\n\nPhase 1: Encryption Sandbox\n\nDevelop a standalone Encryption Test GUI to prototype and validate E2EE workflows.\n\nImplement Master Key derivation (PBKDF2), RSA key pair generation, AES message encryption, and session key exchange.\n\nCreate unit tests for core encryption processes.\n\nPhase 2: Ruqola Integration\n\nIntegrate encryption into Ruqola’s communication system.\n\nEncrypt outgoing messages with session keys and decrypt incoming ones.\n\nProvide a user-friendly UI for encryption settings.\n\nBy the end of the project, Ruqola will have a fully functional E2EE system, securing user messages with cryptographic best practices while maintaining an intuitive user experience.",
          "student_name": "Andro Ranogajec",
          "code_url": null,
          "proposal_id": "4EBULt4a",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/RTuXxB1k"
        },
        {
          "title": "Implement visual regression testing",
          "short_description": "This project aims to implement visual regression testing pipeline for Rocket.Chat’s component library, Fuselage, using Loki. The current workflow...",
          "description": "This project aims to implement visual regression testing pipeline for Rocket.Chat’s component library, Fuselage, using Loki. The current workflow lacks automated visual checks, making it difficult to detect unintended UI changes. By integrating Loki—a lightweight and self-hosted visual regression tool—with Storybook and GitHub Actions, The result will be a scalable, cost-effective, and developer-friendly solution that increases UI reliability and reduces manual review effort.\n\nDeliverables:\n    Loki integration with Storybook for Fuselage\n    Stable snapshot testing environment with consistent rendering\n    CI workflow integration to detect and report visual diffs\n    Visual regression coverage for Rocket.Chat screens",
          "student_name": "Anxhul10",
          "code_url": null,
          "proposal_id": "Ci2EMXe6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JEmSNq7X"
        },
        {
          "title": "AI Enhanced Message Composer Component",
          "short_description": "This project is a significant upgrade to Rocket.Chat message composer elements to provide users, AI assistance in writing messages using...",
          "description": "This project is a significant upgrade to Rocket.Chat message composer elements to provide users, AI assistance in writing messages using Context-sensitive spelling corrections, inline grammar correction recommendations, and clarity-enhancing rewording, Inline hinting are among the major features. The project also provides language translation, summarization, emoji, and tone control features. This project majorly improves the speed and clarity of message writing for users.",
          "student_name": "ayush.jitendra",
          "code_url": null,
          "proposal_id": "WAWHKm9o",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Fy6XIAce"
        },
        {
          "title": "Google Summer of Code Community Hub 2025",
          "short_description": "The project aims to complete the ongoing work to implement a functional Community Hub to be used for future summers. The primary aim of this project...",
          "description": "The project aims to complete the ongoing work to implement a functional Community Hub to be used for future summers.\n\nThe primary aim of this project will be furthering work on a domain specific language compiler, extending both its functionality and compilation strategy  in order to translate components specified using minimal syntax to robust, secure and functional web applications at scale. Multiple components will be implemented using this syntax sweetening framework, such as a video conferencing meet-your-mentor\ncomponent, a Community Hub EmbeddedChat component, and a gsoc\nLeaderboard component which would allow for the gamification of\ncontributions to the Rocket.Chat community.\n\nFinally, all components will be adapted to fully meet the pre-scaled “serverless” vision for the application, so components can be specified can be specified in natural language and transformed into full fledged applications at build time.",
          "student_name": "Daniel Akinola",
          "code_url": null,
          "proposal_id": "CAPGPl88",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/F5Xyt695"
        },
        {
          "title": "AI Chat Workflows Automation App with multi-step reasoning",
          "short_description": "Summary: AI-Powered Chat Automation for Rocket.Chat Problem: Setting up automated workflows in Rocket.Chat usually requires manual scripting, which...",
          "description": "Summary: AI-Powered Chat Automation for Rocket.Chat\n\nProblem: Setting up automated workflows in Rocket.Chat usually requires manual scripting, which can be time-consuming and complex for non-technical users.\n\nSolution: We will build an LLM-powered app that lets users create and run automated workflows using simple natural language. It will:\n1. Allow users to define triggers (e.g., \"when someone mentions 'help'\") and actions (e.g., \"send them a message asking what they need help with\").\n2. Break down complex commands into steps and execute them safely.\n3. Prevent harmful actions with built-in safety checks.\n4. Let admins manage and review all workflows.\n\nDeliverables:\n1. A app that understands natural language commands.\n2. Multi-step workflow automation\n3. Error handling and admin controls for safety.\n4. Customizable automation for any Rocket.Chat server.\n\nThis project will save time by making chat automation easy and accessible for all users.",
          "student_name": "Dhairyashil Shinde",
          "code_url": null,
          "proposal_id": "iO1t4m3G",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JDHHtcgD"
        },
        {
          "title": "Passkey-Based WebAuthn Authentication for Rocket.Chat",
          "short_description": "The WebAuthn standard, now widely available on modern Android and iOS devices, enable convenient passwordless authentication satisfying 2FA...",
          "description": "The WebAuthn standard, now widely available on modern Android and iOS devices, enable convenient passwordless authentication satisfying 2FA (biometrics and \"have device\"). Frequently this involves scanning a QR code followed by unintrusive biometrics such as FaceID on iOS. This project aims to integrate WebAuthn in Rocket.Chat authentication to offer a passwordless, secure login experience. The implementation needs to be aligned with Rocket.Chat’s existing authentication system while ensuring backward compatibility with all existing login methods.",
          "student_name": "Fang Zihao",
          "code_url": null,
          "proposal_id": "roRvSRAs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/awy3zOzD"
        },
        {
          "title": "Real Time Message Rendering in Message Composer",
          "short_description": "Rocket.Chat’s Message Composer currently displays raw Markdown syntax and emoji shortcodes while composing a message, only applying formatting after...",
          "description": "Rocket.Chat’s Message Composer currently displays raw Markdown syntax and emoji shortcodes while composing a message, only applying formatting after the message is sent. This impacts readability and usability, as users must interpret raw syntax instead of seeing the final formatted output.\n\nThis project will introduce real-time Markdown rendering and native emoji support in the Message Composer. Users will be able to see bold, italic, and other formatted text as they type, along with correctly rendered emojis. Additionally, the project will provide a proof-of-concept for migrating from Rocket.Chat’s third-party emoji pack to native emoji support.\n\nKey Deliverables:\n1. MVP implementation of real-time Markdown rendering in the Message Composer.\n2. Native emoji support, replacing the existing third-party emoji pack.\n3. Support for mentions with a defined style, ensuring visually distinct tags.\n4. Text sanitization to maintain security and prevent unintended behavior.\n5. Help tooltip for Markdown syntax, improving accessibility for new users.",
          "student_name": "Ishan Mitra",
          "code_url": null,
          "proposal_id": "EKU6fngA",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jvtFHWxr"
        },
        {
          "title": "Code Review AI Assistant App for Rocket.Chat",
          "short_description": "The Code Review Assistant app for Rocket.Chat addresses the common challenge of delayed code reviews, where pull requests often remain unattended for...",
          "description": "The Code Review Assistant app for Rocket.Chat addresses the common challenge of delayed code reviews, where pull requests often remain unattended for extended periods. This app intelligently analyzes the files modified in a pull request, examines the commit history of those files, leverages the CODEOWNERS file, and reviews past activity to identify the most relevant reviewers and does preliminary LLM review. By notifying only the most appropriate contributors, the app streamlines the review process. Integrated directly within Rocket.Chat, it provides user-friendly reminders and updates, LLM does the sanity review, enabling developers to stay informed and collaborate more effectively on code reviews.",
          "student_name": "Jannat Khan",
          "code_url": null,
          "proposal_id": "ObPcIEJP",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qJr2dFHB"
        },
        {
          "title": "Log in via QR code using mobile app",
          "short_description": "This project proposes a short-lived, cryptographically signed QR code on the Rocket.Chat's web client login screen, which authenticated mobile app...",
          "description": "This project proposes a short-lived, cryptographically signed QR code on the Rocket.Chat's web client login screen, which authenticated mobile app users can scan to log in to the web client instantly—eliminating the need for manual credential entry. By leveraging ephemeral tokens that refresh every 60 seconds and real-time notifications over WebSocket, the approach safeguards user sessions while streamlining the login experience. Specifically, the solution integrates secure token generation and validation in Node.js, a React-based desktop UI displaying the QR code, and a React Native-based scanner accessible only to authenticated mobile users. This modern, frictionless authentication method enhances both usability and security within the Rocket.Chat ecosystem.",
          "student_name": "Jinendra Jain",
          "code_url": null,
          "proposal_id": "wt7cVkQ1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QKpSo2cS"
        },
        {
          "title": "Message Timestamp Date Picker Components",
          "short_description": "This project aims to develop an intuitive Message Timestamp Date Picker for Rocket.Chat, replacing manual timestamp code entry with a user-friendly...",
          "description": "This project aims to develop an intuitive Message Timestamp Date Picker for Rocket.Chat, replacing manual timestamp code entry with a user-friendly UI component. Currently, users must manually type complex codes like <t:1732557600>, which creates friction and is error-prone for non-technical users.\n\nI will solve this problem by implementing a comprehensive system with three layers: Core Utilities for timestamp conversion and validation, UI Components creating an intuitive modal with selection options and preview, and Integration Layer connecting to Rocket.Chat's existing systems.\n\nDeliverables include complete timestamp utility functions, TimestampPicker modal with intuitive inputs, message composer integration, rendering system for displaying formatted timestamps, comprehensive testing, and documentation. The solution will support all timestamp formats across platforms, significantly improving user experience when communicating time-based information.",
          "student_name": "Jinghan Yu",
          "code_url": null,
          "proposal_id": "jjNdFLwW",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/qpNU6Bwe"
        },
        {
          "title": "Private Teams and Private Channels Administration Improvements",
          "short_description": "This proposal aims to enhance Rocket.Chat’s administrative capabilities by enabling an optional override system that allows administrators to manage...",
          "description": "This proposal aims to enhance Rocket.Chat’s administrative capabilities by enabling an optional override system that allows administrators to manage private teams and channels without being members. It includes configurable admin settings, permission override logic, audit logging, and user notifications to balance administrative control with user privacy. Core features include adding/removing users, modifying roles, and managing private team channels directly from the admin panel. Deliverables include backend permission logic updates, admin panel UI components, audit log infrastructure, notification settings, and full technical documentation.",
          "student_name": "Lexie Huang",
          "code_url": null,
          "proposal_id": "DemjxE5w",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZCY9pasZ"
        },
        {
          "title": "Trip Helper App",
          "short_description": "This proposal outlines the development of an AI-powered Image Analysis App for Rocket.Chat. The project aims to introduce a feature that allows users...",
          "description": "This proposal outlines the development of an AI-powered Image Analysis App for Rocket.Chat. The project aims to introduce a feature that allows users to simply upload images, while the app automatically analyzes them using a multi-modal Large Language Model (LLM). The app will process images to identify locations, landmarks, points of interest, or event venues and retrieve up-to-date event and happening information from the internet. By integrating advanced image reasoning with real-time data retrieval, this solution enhances situational awareness and provides users with valuable insights. This proposal seeks to streamline information discovery, improve engagement, boost productivity, and elevate the overall user experience within the Rocket.chat ecosystem.",
          "student_name": "Piyush Bhatt",
          "code_url": null,
          "proposal_id": "CDbkqro6",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/Ffe2Bu26"
        },
        {
          "title": "Natural Language Bridge to Legacy Email",
          "short_description": "The Natural Language Bridge to Legacy Email project represents a groundbreaking solution to one of modern communication's most persistent challenges:...",
          "description": "The Natural Language Bridge to Legacy Email project represents a groundbreaking solution to one of modern communication's most persistent challenges: The continued widespread use of legacy email alongside newer messaging platforms. Despite the evolution of systems like Rocket.Chat, email remains deeply entrenched in global workflows and communities. This project elegantly bridges this divide by creating a seamless interface that allows Rocket.Chat users to interact with email systems through natural language commands, bringing legacy email functionality directly into the Rocket.Chat environment.\n\nBy leveraging advanced LLM capabilities, this integration will allow users to perform complex email operations without leaving their Rocket.Chat conversations. The app responds to natural language instructions, enabling email tasks to be completed with simple, intuitive commands that feel like conversational requests.",
          "student_name": "Priyanshu Harshbodhi",
          "code_url": null,
          "proposal_id": "hsHtLvbO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GuuttcoV"
        },
        {
          "title": "Maestro as Mobile UI Testing Framework",
          "short_description": "The current mobile UI testing framework for the Rocket.Chat Mobile app, Detox, poses several challenges including flaky test results, steep debugging...",
          "description": "The current mobile UI testing framework for the Rocket.Chat Mobile app, Detox, poses several challenges including flaky test results, steep debugging overhead, and limited cross-platform capabilities. This project proposes a complete migration to Maestro, a modern and actively-maintained mobile UI testing framework designed to deliver more stable tests, simplified test authoring, and enhanced developer experience.\n\nThe primary objective of this proposal is to improve the reliability, maintainability, and clarity of UI testing for the Rocket.Chat mobile codebase by setting up Maestro, converting existing tests, expanding test coverage, and integrating the testing pipeline into GitHub Actions CI/CD workflow.",
          "student_name": "Rohit3523",
          "code_url": null,
          "proposal_id": "sWybqrPg",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/w9Llkfyd"
        },
        {
          "title": "Fuselage React Native compatibility (tamagui)",
          "short_description": "There are many secondary goals for this project, but the main goal is to make the fuselage compatible with React Native. But also, we have figthing...",
          "description": "There are many secondary goals for this project, but the main goal is to make the fuselage compatible with React Native. But also, we have figthing against the bundle size of the fuselage, and of course performance which is always a concern. Using the tamagui as a base, we can components that are compatible with both platforms, and in a efficient way.",
          "student_name": "Thanisha Dewangan",
          "code_url": null,
          "proposal_id": "UQ9WjmO9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ihXUUDHE"
        },
        {
          "title": "Messages scheduling",
          "short_description": "Rocket.Chat users across multiple time zones need a way to schedule messages for optimal delivery, enhancing global collaboration. This project will...",
          "description": "Rocket.Chat users across multiple time zones need a way to schedule messages for optimal delivery, enhancing global collaboration. \n\nThis project will implement a native message scheduling feature by integrating a scheduling UI, a cron job to send messages at the designated time, and a contextual bar UI to view and cancel scheduled messages. It will also support scheduling in threads, improve error handling, and include comprehensive documentation and unit tests. \n\nThe deliverables include a MongoDB collection for scheduled messages, APIs (chat.scheduleMessage, chat.getScheduledMessages, chat.cancelScheduledMessage), a cron job (sendScheduledMessages), scheduling and viewing/canceling UIs, thread support, error handling, documentation, and tests",
          "student_name": "Thotsem Jajo",
          "code_url": null,
          "proposal_id": "JYxRXL2I",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/NoRi8SdE"
        },
        {
          "title": "Receipts Processor and Reporting App powered by Multi-modal LLMs",
          "short_description": "This project automates receipt processing and expense reporting using OCR capabilities of multi-modal LLMs to address the time-consuming nature of...",
          "description": "This project automates receipt processing and expense reporting using OCR capabilities of multi-modal LLMs  to address the time-consuming nature of manual expense tracking. Users upload receipts into designated chat channels—each representing a specific event, time period, or trip—where the system validates the image, extracts structured data such as amount, date, and items, and categorizes expenses automatically. The processed data is stored persistently, allowing users to generate detailed spending reports in various formats (daily, weekly, monthly, yearly, or custom date ranges), filter by specific channels, or view overall spending. Additional functionalities include natural language query support, optional slash command integration to perform actions like showing receipt data. All designed to streamline financial tracking by minimizing manual input and enabling efficient, structured querying of expense data.",
          "student_name": "William Liu",
          "code_url": null,
          "proposal_id": "lFFXdADO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/B6ewDucB"
        }
      ]
    },
    {
      "name": "LLVM Compiler Infrastructure",
      "image_url": "https://summerofcode.withgoogle.com/media/org/llvm-compiler-infrastructure/ize6lrlftlvdxtqe-360.png",
      "image_background_color": "#ffffff",
      "description": "LLVM Compiler Infrastructure",
      "url": "http://www.llvm.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/llvm-compiler-infrastructure",
      "ideas_url": "https://llvm.org/OpenProjects.html",
      "guide_url": "https://discourse.llvm.org/t/gsoc-2025-projects-proposals-and-other-information/85035",
      "topics": ["compilers", "development tools", "libraries"],
      "technologies": ["llvm", "c++", "clang", "mlir"],
      "irc_channel": "https://discord.com/channels/636084430946959380/642374147640524831",
      "contact_email": "",
      "mailing_list": "https://discourse.llvm.org/c/community/gsoc/32",
      "twitter_url": "https://twitter.com/llvmorg",
      "blog_url": "https://blog.llvm.org/",
      "facebook_url": "",
      "num_projects": 14,
      "projects": [
        {
          "title": "Rich Disassembler for LLDB",
          "short_description": "This project aims to enhance LLDB's disassembler by annotating machine instructions with source-level variable information, such as variable...",
          "description": "This project aims to enhance LLDB's disassembler by annotating machine instructions with source-level variable information, such as variable locations and lifetimes, based on debug data like DWARF.\n\nCurrently, LLDB’s disassembler outputs only low-level instructions, requiring users to manually infer where source variables are located. By enriching disassembly output with variable annotations (e.g., which register or constant a variable is stored in), this project will make debugging optimized and low-level code significantly easier.\n\nThe solution involves extending LLDB’s disassembly printing pipeline to query live variables at each instruction address, limited to variables that reside in CPU registers or are represented as constants, ensuring efficiency and clarity.\n\nDeliverables include:\nAnnotated disassembly output in the LLDB command-line interface.\nFull test coverage against optimized and unoptimized binaries.\nDocumentation and usage examples for developers and users.\n\nThis work will be designed to be debug information format-agnostic wherever possible, making it extensible across formats like DWARF and PDB.",
          "student_name": "Abdullah_Amin",
          "code_url": null,
          "proposal_id": "JgwrP6nV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dCPV3zhW"
        },
        {
          "title": "ClangIR upstreaming",
          "short_description": "ClangIR is a new, MLIR-based intermediate representation of C and C++ code. It has been developed in an LLVM incubator project, but work is now...",
          "description": "ClangIR is a new, MLIR-based intermediate representation of C and C++ code. It has been developed in an LLVM incubator project, but work is now underway to migrate the code from the incubator to the main LLVM repository. So I can start upstreaming StructType, ComplexType, Go to statement and libc functions support",
          "student_name": "Amr Hesham Gaber",
          "code_url": null,
          "proposal_id": "tCQ1W4Kv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uMSjfmTF"
        },
        {
          "title": "Input-Gen: A Scalable Framework for Stateful Input Generation",
          "short_description": "This project strives to enhance the Input-Gen tool to extend coverage and compatibility with LLVM-supported languages, including C, C++, Julia, Rust,...",
          "description": "This project strives to enhance the Input-Gen tool to extend coverage and compatibility with LLVM-supported languages, including C, C++, Julia, Rust, and Swift. By utilizing the LLVM ComPile dataset, a large amount of inputs can be generated and evaluated for determining the accuracy of the Input-Gen. Furthermore, numerical statistics can be gathered for determining the accuracy of the tool by numerical methods. Additionally, by installing the tool in a Debug configuration of LLVM, issues with the tool can be analyzed and documented. Successive development over the period of the standard GSoC timeline will allow the tool to be enhanced. Furthermore, the percentage of coverage, which can be defined as the successful instrumentation and execution of generated inputs from IR bitcode files or modules, will be expected to increase for the dataset from the previous 90% coverage. Ideal coverage is thus 100%, where all of the files are used as input to Input-Gen, which in return instruments the files so that they can be replayed and executed as a new file. New files created by Input-Gen can further be used as input to ML models or any testing mechanisms previously described. Thus, the goal of this project is to enhance the accuracy of the Input-Gen tool when executing with arbitrary IR files. This will then enable the tool to be adopted for practical purposes defined by LLVM developers.",
          "student_name": "Andrew K",
          "code_url": null,
          "proposal_id": "4VrB03uo",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oaIAqU02"
        },
        {
          "title": "Usability Improvements for trapping Undefined Behavior Sanitizer",
          "short_description": "The primary vision is to enhance clang’s UBSan trap mode by tackling the three main goals, which include adding a warning to the...",
          "description": "The primary vision is to enhance clang’s UBSan trap mode by tackling the three main goals, which include adding a warning to the -fsanitize-trap=undefined, teaching clang to emit the UBSan trap reasons, and confirm LLDB is able to recognize the UBSan trap reasons. The deliverables are: implementing a check to properly emit a warning for when -fsanitize-trap=undefined is passed alone, creating an enumeration to list out all possible UBSan trap reasons, adding functionality to encode those trap reasons, and display the trap reasons to the user with LLDB. If time permits, work can be conducted on emitting more precise trap reasons from information that may be available within the compiler.",
          "student_name": "Anthony Tran",
          "code_url": null,
          "proposal_id": "yTvTWCyV",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/I5x5BdbP"
        },
        {
          "title": "Improving Core Clang-Doc Functionality",
          "short_description": "Clang-Doc leverages Clang’s robust tooling to generate documentation. It can interpret Doxygen commands to add more detailed documentation. Clang-Doc...",
          "description": "Clang-Doc leverages Clang’s robust tooling to generate documentation. It can interpret Doxygen commands to add more detailed documentation. Clang-Doc does not support all C++ constructs, does not support all of the Doxygen commands used in Clang, and does not render Markdown. These are core functionalities that should be implemented to allow complete documentation generation.",
          "student_name": "Erick Velez",
          "code_url": null,
          "proposal_id": "ah3SPOgs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/OXcKUH3X"
        },
        {
          "title": "Teach the Clang Static Analyzer to understand lifetime annotations",
          "short_description": "Memory safety related bugs represent one of the biggest challenges and are the source for many security vulnerabilities today. Lifetime annotations...",
          "description": "Memory safety related bugs represent one of the biggest challenges and are the source for many security vulnerabilities today. Lifetime annotations offer a mechanism to prevent dangling references, but their full potential remains unrealized. Currently, the Clang Static Analyzer (CSA) rely on hardcoded knowledge about specific APIs to detect temporal memory errors. This project aims to enhance the CSA by teaching it to understand and leverage Clang's lifetime annotations ([[clang::lifetimebound]] and [[clang::lifetime_capture_by(X)]]) to perform more comprehensive inter-procedural analysis of object lifetimes and detect subtle temporal memory errors that cross function boundaries.",
          "student_name": "imadij",
          "code_url": null,
          "proposal_id": "otRRcMMU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xEYQx202"
        },
        {
          "title": "Improve Rust-Enzyme Reliability and Compile Times",
          "short_description": "Enzyme, Rust's automatic differentiation tool, faces challenges with reliability and performance due to limited type information in LLVM-IR. This...",
          "description": "Enzyme, Rust's automatic differentiation tool, faces challenges with reliability and performance due to limited type information in LLVM-IR. This project proposes to enhance Enzyme by extending the Rust compiler to lower richer type information from MIR into LLVM-IR metadata. This will involve improving the MIR type parser and generating accurate metadata. Deliverables include an extended MIR parser, new Rust compiler LIT tests demonstrating improved Enzyme functionality, comprehensive documentation, and a final report. This work aims to significantly improve the reliability and efficiency of automatic differentiation in Rust.",
          "student_name": "Karan Janthe",
          "code_url": null,
          "proposal_id": "iY8JzAW9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GjIzkThY"
        },
        {
          "title": "Bfloat16 in LLVM libc",
          "short_description": "This proposal is based on the LLVM project for GSoC 2025 with the same title, from Tue Ly and Nicolas Celik. Discourse:...",
          "description": "This proposal is based on the LLVM project for GSoC 2025 with the same title, from Tue Ly and Nicolas Celik. Discourse: https://discourse.llvm.org/t/libc-gsoc-2025-bfloat16-in-llvm-libc/84469.\nBfloat16 (aka \"Brain Floating Point\") is a recently developed floating point format by Google. Similar to IEEE 754 binary16, it is applicable in machine learning and AI providing significant improvements in training and performance. It is officially standardized as std::bfloat_t in the latest C++23 standard. The goal of this project is to implement support for this type in LLVM libc.\nDeliverables:\n- Implement the type in a compiler and architecture agnostic way.\n- Implement generic basic math operations that work on all supported architectures.\n- Implement specialized hardware specific optimizations and compiler built-ins for higher performance.\n- Investigate higher math functions if time permits.",
          "student_name": "Krishna Pandey",
          "code_url": null,
          "proposal_id": "ZBBR2N4I",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/KvfIM1m7"
        },
        {
          "title": "Performance and Exhaustive Testing of C Standard Math Functions on GPUs",
          "short_description": "This proposal aims to refine and expand the testing infrastructure in the LLVM C library to help users balance speed and accuracy of math functions...",
          "description": "This proposal aims to refine and expand the testing infrastructure in the LLVM C library to help users balance speed and accuracy of math functions on GPUs. On the performance side, the proposal intends to improve the existing benchmarks that compare the LLVM C library’s implementations to vendor libraries, and add new math functions to the test suite. On the accuracy side, the proposal seeks to develop an exhaustive (brute force) test suite that verifies conformance to error tolerances, such as those defined in the OpenCL standard. The resulting deliverables include an enhanced performance test suite, a new accuracy test suite, and a consolidated report of performance and accuracy results for the covered functions.",
          "student_name": "Leandro Lacerda",
          "code_url": null,
          "proposal_id": "pbSq0LV9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xBm3IS1C"
        },
        {
          "title": "LLVM Compiler Remarks Visualization Tool for Offloading",
          "short_description": "LLVM generates valuable information through remarks, profiling, and runtime annotations that becomes difficult to navigate as projects grow. This...",
          "description": "LLVM generates valuable information through remarks, profiling, and runtime annotations that becomes difficult to navigate as projects grow. This project aims to create a unified infrastructure to collect, organize, and visualize compilation data from the LLVM offloading toolchain. The tool will function as a compiler wrapper that captures JSON-formatted information and presents it through an interactive web interface. By providing accessible visualization of optimization decisions, profiling data, and compilation metrics, the tool will help developers make data-driven decisions rather than relying on trial and error.",
          "student_name": "Miguel Cárdenas",
          "code_url": null,
          "proposal_id": "k3OgxR66",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nGLC8Sd5"
        },
        {
          "title": "Introduce an ABI lowering library",
          "short_description": "The current implementations of the LLVM Project, have a drawback that every language frontend that wants to support Foreign Function Interface(FFI)...",
          "description": "The current implementations of the LLVM Project, have a drawback that every\nlanguage frontend that wants to support Foreign Function Interface(FFI) into C\ncode needs to implement Application Binary Interface(ABI) handling logic by\nitself. This leads to tremendous duplication of efforts and leaves the chance of\npotential inconsistencies.\nThe aim of this project is to create a comprehensive ABI library housed within\nLLVM which would encapsulate the details of various platform specific calling\nconventions, argument passing strategies and return value handling.",
          "student_name": "Narayan Sreekumar",
          "code_url": null,
          "proposal_id": "0LsyXnKN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/BAWJ3Z6i"
        },
        {
          "title": "Support simple C++ modules use from the Clang Driver without a Build System",
          "short_description": "This proposal seeks to extend the build system in Clang's driver to natively support module-based builds by leveraging Clang's existing support for...",
          "description": "This proposal seeks to extend the build system in Clang's driver to natively support module-based builds by leveraging Clang's existing support for scanning C++20 module dependencies between source files and adding support for generating the appropriate build steps.",
          "student_name": "Naveen Seth Hanig",
          "code_url": null,
          "proposal_id": "Lidrhzp4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JfOGwzdP"
        },
        {
          "title": "Byte type",
          "short_description": "LLVM currently lacks a type capable of representing raw memory, similar to unsigned char, char and std::byte in C/C++. The absence of such a type is...",
          "description": "LLVM currently lacks a type capable of representing raw memory, similar to unsigned char, char and std::byte in C/C++. The absence of such a type is the root cause of many unsound optimizations, such as the lowering of calls to memcpy/memmove/memcmp to integer loads of the corresponding bitwidth. This optimization is incompatible with the use of pointer provenance, as loading a pointer from memory as an integer discards provenance information, leading to miscompilations.\n\nThis project aims to introduce a new byte type to the IR, capable of representing raw memory, and lower the char, unsigned char and std::byte C/C++ types to the new type. It also addresses the incorrect lowerings of memory related intrinsics, providing a way to natively implement such intrinsics in the IR, fixes optimizations that do not correctly account for type punning, and adds support for the byte type in the Alive2 optimization verifier.",
          "student_name": "Pedro Lobo",
          "code_url": null,
          "proposal_id": "QtpwoGb9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/F3yLFcWR"
        },
        {
          "title": "Advanced symbol resolution and reoptimization for clang-repl",
          "short_description": "Clang-REPL is an incremental compiler that enables interactive programming in C and C++, combining the flexibility of a REPL with the performance of...",
          "description": "Clang-REPL is an incremental compiler that enables interactive programming in C and C++, combining the flexibility of a REPL with the performance of compiled languages.\n\nCurrently, users must manually load dynamic libraries when Clang-REPL encounters unresolved external symbols. This project aims to improve the user experience by implementing an Auto-Loading mechanism that automatically loads the required libraries when missing symbols are detected.\n\nIn addition to auto-loading, the project will introduce Runtime Re-Optimization using Profile-Guided Optimizations (PGO). By collecting profiling information at runtime, Clang-REPL will be able to re-optimize initializers dynamically, leading to better performance without user intervention.\n\nDeliverables:\n\n1. An Auto-Loading system that seamlessly resolves missing external symbols.\n2. Runtime Re-Optimization support based on profiling data to improve execution performance.",
          "student_name": "Sahil Patidar",
          "code_url": null,
          "proposal_id": "Uzo39pkf",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/WAGNDXHx"
        }
      ]
    },
    {
      "name": "omegaUp",
      "image_url": "https://summerofcode.withgoogle.com/media/org/omegaup/uvgilx7vyspavjox-360.png",
      "image_background_color": "#ffffff",
      "description": "Open CS Education as a catalyst for social change",
      "url": "https://omegaup.org",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/omegaup",
      "ideas_url": "https://github.com/omegaup/omegaup/wiki/Google-Summer-of-Code-2025",
      "guide_url": "https://github.com/omegaup/omegaup/wiki/Google-Summer-of-Code-2025",
      "topics": ["education", "web", "cloud", "edtech", "UX/UI"],
      "technologies": ["python", "mysql", "php", "typescript", "vue.js"],
      "irc_channel": "https://discord.com/invite/gMEMX7Mrwe",
      "contact_email": "",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "https://blog.omegaup.com/",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Public Courses on github",
          "short_description": "The proposal outlines a project to migrate the management of omegaUp's public courses to GitHub, enabling open-source contributions and improving...",
          "description": "The proposal outlines a project to migrate the management of omegaUp's public courses to GitHub, enabling open-source contributions and improving collaboration, version control, and deployment consistency. Currently, omegaUp's public courses are managed manually, which can be time-consuming and lacks community involvement. By using GitHub, contributors can submit pull requests (PRs) to update course content, which will be automatically validated and deployed using GitHub Actions and omegaUp's API.\n\nKey components of the project include:\n1. Course Migration: All public courses will be uploaded to a GitHub repository, structured by course and content type (lectures, problems, etc.).\n2. CI/CD Workflow: A GitHub Actions pipeline will validate and deploy updates when a PR is merged. This pipeline will automatically check for any changes in problems and deploy only the modified content.\n3. API Integration: The system will use omegaUp’s API to upload content after successful review and approval of changes.\n4. Community Collaboration: Contributors can suggest improvements via PRs, with a review process ensuring quality control before deployment.\n5. Automated Testing: The CI/CD pipeline will run validation scripts to check metadata, problem structure, and other course details before deployment.\n6. Security: A review and approval mechanism will prevent unauthorized or malicious content from being deployed.\n\nThe project aims to enhance omegaUp’s educational content by leveraging GitHub’s collaboration model, ensuring faster updates, better quality control, and reduced manual workload for omegaUp staff.\n\nA proof of concept has been set up in a sample GitHub repository, where contributors can simulate the entire workflow by submitting PRs and seeing automatic deployments on omegaUp.\n\nThis approach is expected to streamline course management, making it scalable and more responsive to community-driven improvements.",
          "student_name": "Anas Iqbal",
          "code_url": null,
          "proposal_id": "4Ru4BNCe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ASaOFqQw"
        },
        {
          "title": "AI Teaching Assistant",
          "short_description": "The aim is to create an “AI Teaching Assistant” bot that answers the relevant queries and helps teachers and students with code reviews and answer...",
          "description": "The aim is to create an “AI Teaching Assistant” bot that answers the relevant queries and helps teachers and students with code reviews and answer clarifications, both proactively and upon request.\nWe plan to do the following during the summer:\n- Improve the Python script for the teaching assistant.\n- Add buttons in the UI and endpoints in the backend to allow users to use it.\n- Set up a RabbitMQ instance, which will bridge between the script and the backend.\n- And many more.\nWe also need to focus on optimizing the Python script, as it currently takes a long time to complete. (possibly by changing API calls and by using multithreading).\nWe also might need to create a new endpoint for the teaching assistant.",
          "student_name": "Nandini Jaiswal",
          "code_url": null,
          "proposal_id": "XFCBpJ8L",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oFJP5nqY"
        },
        {
          "title": "Generate Problem Editorials Using AI",
          "short_description": "This project aims to increase editorial coverage to 70-80% by automating creation with AI. Admins can generate editorials in bulk from the problem...",
          "description": "This project aims to increase editorial coverage to 70-80% by automating creation with AI. Admins can generate editorials in bulk from the problem list, while authors can trigger generation during problem creation. The system validates editorials by testing solutions and automatically fixes issues found during validation.",
          "student_name": "Samman Sarkar",
          "code_url": null,
          "proposal_id": "bC8m7GGS",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nK1Amv48"
        }
      ]
    },
    {
      "name": "JSON Schema",
      "image_url": "https://summerofcode.withgoogle.com/media/org/json-schema/d3qfjxegxnlrfysi.png",
      "image_background_color": "#ffffff",
      "description": "We enable the reliable use of JSON data format.",
      "url": "https://json-schema.org/",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/json-schema",
      "ideas_url": "https://github.com/json-schema-org/community/blob/main/programs/mentoring/gsoc/gsoc-2025.md",
      "guide_url": "https://github.com/json-schema-org/community/blob/main/programs/mentoring/gsoc/CONTRIBUTOR-GUIDANCE.md",
      "topics": [
        "web",
        "apis",
        "standards",
        "data validation",
        "developer tooling"
      ],
      "technologies": [
        "python",
        "javascript",
        "typescript",
        ".net",
        "JSON Schema"
      ],
      "irc_channel": "https://json-schema.org/slack",
      "contact_email": "mailto:info@json-schema.org",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/jsonschema",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 6,
      "projects": [
        {
          "title": "Better JSON Schema Errors",
          "short_description": "JSON Schema validation errors are often cryptic and difficult to understand, making debugging frustrating for developers and end users. This project...",
          "description": "JSON Schema validation errors are often cryptic and difficult to understand, making debugging frustrating for developers and end users.\nThis project aims to develop a JavaScript library that transforms raw JSON Schema validation outputs into clear, concise, and human-friendly error messages. It will maintain compatibility with the standard format while improving error readability, supporting multiple languages, and allowing customization.\nBy the end of the project, developers using standard-compliant JSON Schema validators will have access to a high-quality, user-centric Better JSON Schema errors—enhancing the developer experience and making debugging more intuitive for end users.",
          "student_name": "Arpit Kuriyal",
          "code_url": null,
          "proposal_id": "EC0DvpWX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/eXZE2zjL"
        },
        {
          "title": "Adaption of component library in JSON Schema website",
          "short_description": "The JSON Schema website currently relies on custom-developed UI components, which increases maintenance overhead and complicates updates. This...",
          "description": "The JSON Schema website currently relies on custom-developed UI components, which increases maintenance overhead and complicates updates. This project aims to modernize the site's design and functionality by integrating a modern UI component library (e.g., ShadCN/UI) and refactoring existing components into a modular, consistent system. By replacing legacy components and standardizing interactive elements, layout, navigation, and markdown processing, the project will enhance maintainability and provide a more cohesive user experience. Key deliverables include a fully themed UI library setup, refactored interactive and content components, an updated layout and navigation system with dark mode support, a modular markdown system, comprehensive documentation for future component integrations, and a post-project review to identify further enhancements.",
          "student_name": "Idan levi",
          "code_url": null,
          "proposal_id": "DazBWcvn",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/zBCXfgVo"
        },
        {
          "title": "Interactive Visualization Tool For JSON Schema",
          "short_description": "Understanding the relationships between JSON Schema properties, especially in cases of nested objects and complex structures, is crucial for learning...",
          "description": "Understanding the relationships between JSON Schema properties, especially in cases of nested objects and complex structures, is crucial for learning and usability. However, new users often struggle to grasp the structure of JSON Schema effectively.\n    This project aims to visualize JSON Schema relationships using a graphical representation powered by Cytoscape.js, which is widely known for its predefined graph-based structures. For validation, we use AJV, a popular tool for JSON Schema validation, ensuring compliance with all JSON Schema dialects. The frontend is built with React.js, and no backend is required.\n    The primary focus of this project is to validate JSON Schema with strict compliance and visualize its structure accordingly. For future enhancements, we plan to integrate Monaco Editor for real-time schema editing, Tippy.js for interactive tooltips, and a dark mode for better accessibility—if time permits.",
          "student_name": "Jagpreet Singh Rahi",
          "code_url": null,
          "proposal_id": "ATI3eY5H",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/oelB8kma"
        },
        {
          "title": "Comprehensive JSON Schema linting for encouraging best practices and catching anti-patterns early",
          "short_description": "The project aims to improve the JSON Schema Linting by focusing on defining, standardizing rules after reaching consensus on the anti-patterns and...",
          "description": "The project aims to improve the JSON Schema Linting by focusing on defining,\nstandardizing rules after reaching consensus on the anti-patterns and best practices\nacross dialects. The goal is to publish each rule with a stable URL, allowing any linter to\nlink to them when reporting failures on the JSON Schema website. Additionally, the\nproject will involve the implementation of these linting rules by extending the\nSourcemeta JSON Schema CLI and other tooling.\nBy building a comprehensive and scalable linting framework, we aim to provide developers with a clear, consistent set of rules that can be universally applied across JSON Schema projects. This will not only improve the overall quality and reliability of schemas but will also help developers adhere more closely to best practices and avoid common mistakes. With the implementation of standardized rules, the linting process will be automated and easily applicable at scale, making it easier for developers to ensure their schemas are error-free and production-ready.",
          "student_name": "Karan Palan",
          "code_url": null,
          "proposal_id": "ZfKbEMNv",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/PjLfP7ZH"
        },
        {
          "title": "Build a Java wrapper library for sourcemeta/blaze",
          "short_description": "The goal of this project is to build a Java wrapper for the sourcemeta/blaze library, a high-performance JSON Schema validator written in C++....",
          "description": "The goal of this project is to build a Java wrapper for the sourcemeta/blaze library, a high-performance JSON Schema validator written in C++. Currently, Java developers cannot directly leverage Blaze's capabilities due to the language barrier.\n\nTo solve this, I will develop a Java wrapper using the Foreign Function & Memory (FFM) API, eliminating the need for traditional JNI. This approach offers better performance, improved safety, easier maintainability, and is more aligned with modern Java (Java 21+).\n\nDeliverables include:\n- A production-ready Java wrapper using FFM to interface with Blaze.\n- Java-friendly APIs with minimal overhead and easy integration.\n- Complete documentation, usage examples, and sample applications.\n- CI/CD workflows using GitHub Actions for cross-platform build and test automation.\n- Publishing the library to Maven Central for wider adoption.\n\nThis wrapper will enable Java developers to perform fast, standards-compliant JSON schema validation using Blaze, all while staying within the Java ecosystem.",
          "student_name": "Madhav Dhatrak",
          "code_url": null,
          "proposal_id": "D9xIs6Wp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/c0uj8ubZ"
        },
        {
          "title": "Automated Badge Issuance System",
          "short_description": "The Simple Automated Badge Issuance System is designed to automate the process of issuing digital badges to users who complete the JSON Schema Tour....",
          "description": "The Simple Automated Badge Issuance System is designed to automate the process of issuing digital badges to users who complete the JSON Schema Tour. The utilizes\nGoogle Sheets for collecting user data and integrates with Badgr, a platform for\nmanaging digital badges. The objective is to create a lightweight, reliable, and\neasy-to-maintain solution that eliminates manual intervention while ensuring scalability.\nThe project involves developing a script that interacts with Google Sheets to fetch user completion data, communicates with the Badgr API to issue badges, and incorporates proper error handling and logging mechanisms. Cloudflare Workers or an alternative hosting solution will be explored to ensure efficient and  execution of the automation process. The final deliverable will include an open-source  on\nGitHub, complete with clear documentation to enable others to use and adapt the\nsystem",
          "student_name": "Prasanth S7",
          "code_url": null,
          "proposal_id": "zCoTyQUC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rdzjkCcT"
        }
      ]
    },
    {
      "name": "Rizin",
      "image_url": "https://summerofcode.withgoogle.com/media/org/rizin/7ageygqfyv7wzlee-360.png",
      "image_background_color": "#ffffff",
      "description": "Rizin reverse engineering framework and toolset",
      "url": "https://rizin.re",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/rizin",
      "ideas_url": "https://rizin.re/gsoc/2025/",
      "guide_url": "https://rizin.re/gsoc/2024",
      "topics": [
        "reverse engineering",
        "computer security",
        "debugging",
        "emulation",
        "disassembly"
      ],
      "technologies": ["c", "python", "go", "c++", "qt"],
      "irc_channel": "https://im.rizin.re",
      "contact_email": "mailto:gsoc@rizin.re",
      "mailing_list": "",
      "twitter_url": "https://bsky.app/profile/rizin.re",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 3,
      "projects": [
        {
          "title": "Multi-Tasking and Event-driven architecture project",
          "short_description": "Currently, Cutter interacts with Rizin synchronously, meaning it directly calls Rizin functions and waits for a response. This approach leads to UI...",
          "description": "Currently, Cutter interacts with Rizin synchronously, meaning it directly calls Rizin functions and waits for a response. This approach leads to UI freezing when Rizin processes large files or complex inputs, making Cutter unresponsive until the operation is completed. Additionally, Cutter only pulls information from Rizin on demand and does not automatically detect changes made through plugins, the console widget, or other inputs. Since Rizin lacks a built-in event system, users must manually refresh the UI to reflect updates, which disrupts the workflow.\n\nThis project aims to introduce an event-driven interaction model between Cutter and Rizin to improve responsiveness and state synchronization. In the first phase, I will implement event notifications in Rizin, enabling it to signal relevant state changes. In the final phase, Cutter will be enhanced to react to these events, automatically refreshing its interface and supporting background analysis. These improvements will ensure a smoother user experience and eliminate the need for manual UI updates.\n\nBeyond solving these immediate issues, this work will lay the foundation for future scalability in the Rizin ecosystem. By transitioning to an event-driven model, Rizin will be better equipped to support multi-threading while maintaining seamless integration with Cutter. This will enhance efficiency, extensibility, and long-term maintainability, making the ecosystem more robust and user-friendly. I'm excited to contribute to this transformation and help create a more responsive and efficient Cutter-Rizin experience.",
          "student_name": "Ahmed Kamal Karim",
          "code_url": null,
          "proposal_id": "09CcibIe",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/aZEBUZrE"
        },
        {
          "title": "Debugger improvements and portability",
          "short_description": "Adding native debugger support for Linux x86, x64 and PPC64, and x86, x64 and AArch64 support for FreeBSD, OpenBSD and NetBSD along with automated...",
          "description": "Adding native debugger support for Linux x86, x64 and PPC64, and x86, x64 and AArch64 support for FreeBSD, OpenBSD and NetBSD along with automated testing.\nImprovements to the already existing Rizin debugger.",
          "student_name": "Taksh Patel",
          "code_url": null,
          "proposal_id": "DqDexjKK",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ibmAy4NN"
        },
        {
          "title": "Classes analysis for C++/Swift/ObjectiveC/Rust/Java",
          "short_description": "Rizin is a famous reverse engineering tool that analyses binaries of various types and various architectures. As of now, the support for reverse...",
          "description": "Rizin is a famous reverse engineering tool that analyses binaries of various types and\r\nvarious architectures. As of now, the support for reverse engineering of Object Oriented Languages has been limited. Currently, Rizin supports Vtables in C++ binaries.\r\nSince modern systems have a heavy usage of Object Oriented Languages like C++, Dlang, Java, ObjectiveC, Swift and many more, it is evident that Rizin should support eﬃcient and accurate reversing of the specialized structures (Classes, Vtables etc) in these languages. Hence, the aim of this project is to improve the analysis of these specialized structures in major OOP languages like C++, Swift, ObjectiveC, Rust & Java.",
          "student_name": "tushar3q34",
          "code_url": null,
          "proposal_id": "yaWVXpna",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cLuPEQYI"
        }
      ]
    },
    {
      "name": "RTEMS Project",
      "image_url": "https://summerofcode.withgoogle.com/media/org/rtems-project/mo975scxu6bi0bfj-360.png",
      "image_background_color": "#ffffff",
      "description": "A real-time operating system for Earth & Space",
      "url": "https://www.rtems.org/",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/rtems-project",
      "ideas_url": "https://projects.rtems.org/gsoc/",
      "guide_url": "https://projects.rtems.org/gsoc/",
      "topics": ["kernel", "embedded", "real-time", "multicore", "rtos"],
      "technologies": ["python", "c/c++", "assembly", "posix"],
      "irc_channel": "https://www.rtems.org/discord",
      "contact_email": "mailto:https://lists.rtems.org/mailman/listinfo/devel",
      "mailing_list": "",
      "twitter_url": "",
      "blog_url": "",
      "facebook_url": "https://www.facebook.com/groups/4847496844",
      "num_projects": 8,
      "projects": [
        {
          "title": "CodeQL Static Analyzer for RTEMS",
          "short_description": "RTEMS currently depends on third-party platforms like GitLab CI for static analysis, which introduces external dependencies and limits local...",
          "description": "RTEMS currently depends on third-party platforms like GitLab CI for static analysis, which introduces external dependencies and limits local customization. This project integrates CodeQL into the RTEMS workflow by providing a locally executable and customizable analysis setup. It includes a validated CodeQL configuration for the RTEMS codebase, an RSB recipe for automated installation, and tailored filters to suppress noise from generated and third-party files. Developers will gain tools to run predefined and custom security checks locally, generate SARIF-based reports, and track issues over time using automation scripts. Comprehensive documentation will ensure ease of adoption, and the modular design supports future CI/CD integration and rule expansion. This effort enhances code quality, developer independence, and the long-term maintainability and security of RTEMS",
          "student_name": "Beeram Pranith Reddy",
          "code_url": null,
          "proposal_id": "mOjpIwa8",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bet21LWO"
        },
        {
          "title": "IMFS - Add configurable allocator and block size handling",
          "short_description": "This project proposes enhancing RTEMS’ In-Memory File System (IMFS) by introducing configurable memory allocators and improving bytes-per-block...",
          "description": "This project proposes enhancing RTEMS’ In-Memory File System\n(IMFS) by introducing configurable memory allocators and improving\nbytes-per-block handling. By replacing hard-coded malloc/free with user-defined\nallocators, IMFS gains flexibility for constrained systems. Additionally, stricter validation\nof block sizes and support for larger blocks (1K–2K) will improve error resilience and\nscalability.",
          "student_name": "bhavyaBeliever",
          "code_url": null,
          "proposal_id": "w01n3epF",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/skvazCWj"
        },
        {
          "title": "Implementing MicroPython Support and Packaging It For RTEMS",
          "short_description": "This project aims to implement a MicroPython REPL, script running functionality and access to RTEMS (and perhaps LibBSD) APIs, and package it by...",
          "description": "This project aims to implement a MicroPython REPL, script running functionality and access to RTEMS (and perhaps LibBSD) APIs, and package it by creating an RSB recipe. The effort would also include tests, creating setup and usage examples, writing documentation for both using MicroPython with RTEMS and the implementation of support for future RTEMS APIs in MicroPython. An optional goal of this project would be to create a BSP for a popular and accessible board like the Raspberry Pi Pico to position it, along with MicroPython support, as an entry point into RTEMS for new users.",
          "student_name": "l1zard",
          "code_url": null,
          "proposal_id": "LuDAw0jM",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7aHK0n8k"
        },
        {
          "title": "New APIs Added to POSIX Standard (Issue8)",
          "short_description": "POSIX Issue 8, released in 2024, introduces several additional APIs that improve standardization, portability, and functionality across compliant...",
          "description": "POSIX Issue 8, released in 2024, introduces several additional APIs that improve standardization, portability, and functionality across compliant operating systems. This project aims to analyze, implement, and test missing APIs from POSIX Issue 8 in the RTEMS real-time operating system.",
          "student_name": "mez3n",
          "code_url": null,
          "proposal_id": "lKIrZieX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/K9M7PnAk"
        },
        {
          "title": "Provide SPARC greth Network Drivers for lwip",
          "short_description": "This project aims to port GRETH Driver in RTEMS Legacy network Stack to lwIP Network Stack. I aim to study existing driver as well as lwIP network...",
          "description": "This project aims to port GRETH Driver in RTEMS Legacy network Stack to lwIP Network Stack. I aim to study existing driver as well as lwIP network stack in RTEMS initially. Further, I propose to create robust functions for packet transmission and packet reception, having interrupt handling capability as well. I also propose to write tests for the resultant GRETH lwIP driver and create elaborate documentation to facilitate others when using this driver.",
          "student_name": "Prithvi Tambewagh",
          "code_url": null,
          "proposal_id": "nSsPGZ1b",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AWPU9uYM"
        },
        {
          "title": "Port FatFS to RTEMS with Benchmarking",
          "short_description": "The focus of this project is porting FatFS to RTEMS, offering a smaller, simpler alternative to the existing custom DOS FS file system. The project...",
          "description": "The focus of this project is porting FatFS to RTEMS, offering a smaller, simpler alternative to the existing custom DOS FS file system. The project will also encompass extending previous benchmarking efforts, developing integrated benchmarking tools within RTEMS, and evaluating the newly ported file system using that tool.",
          "student_name": "Sepehr Ganji",
          "code_url": null,
          "proposal_id": "PKmyLlRH",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/W6AhdEIS"
        },
        {
          "title": "Adding I2C, PWM, DMA and Mailbox Support to the Raspberry Pi 4B BSP",
          "short_description": "The project involves adding support for the I2C, PWM, DMA and Mailbox functionalities. The ARM based Raspberry Pi 3 BSP has support for I2C although...",
          "description": "The project involves adding support for the I2C, PWM, DMA and Mailbox functionalities. The ARM based Raspberry Pi 3 BSP has support for I2C although it is not the same for the AARCH64 based Raspberry Pi 4b BSP. PWM Support is something that would make the BSP more useful, and in the proposal I have mentioned how I will go about adding the support. DMA and Mailbox are two of the functionalities that are required to add SD Card support to the BSP. In the proposal I have given an overview of how I plan to add support for DMA and Mailbox.",
          "student_name": "Shaunak Datar",
          "code_url": null,
          "proposal_id": "WpXPJG4Y",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/CUL4f3Nh"
        },
        {
          "title": "Remove set_vector() across all Architectures and BSPs",
          "short_description": "When an interrupt occurs(either hardware or software) in the OS, they are handled by Interrupt service routines(ISR) or in lay terms a method to...",
          "description": "When an interrupt occurs(either hardware or software) in the OS, they are handled by Interrupt service routines(ISR) or in lay terms a method to handle interrupts. In RTEMS, the interrupt handler takes care of this job. It is important to note here that different architectures or BSPs use different methods to handle these interrupts and historically, In RTEMS, set_vector() with different implementations is used for this purpose. \n\nHowever, the set_vector() function has been deprecated due to improper pointer usage. This project aims to remove its implementations, prototypes, and usages across all architectures and BSPs. It will be replaced with rtems_interrupt_entry_install(), rtems_interrupt_catch(), _CPU_ISR_install_raw_handler(), or alternative methods, depending on whether the interrupt should be unmasked or handled using non-RTEMS ISRs.",
          "student_name": "Sunil Hegde",
          "code_url": null,
          "proposal_id": "QY1z8Nkl",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/vuNHgfF2"
        }
      ]
    },
    {
      "name": "PostgreSQL",
      "image_url": "https://summerofcode.withgoogle.com/media/org/postgresql/hj9srl9x0o6iendy-360.png",
      "image_background_color": "#ffffff",
      "description": "The Most Advanced Open Source Relational Database",
      "url": "https://postgresql.org",
      "category": "Data",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/postgresql",
      "ideas_url": "https://wiki.postgresql.org/wiki/GSoC_2025",
      "guide_url": "https://wiki.postgresql.org/wiki/GSoC",
      "topics": ["web", "database", "ui", "sql", "Benchmark"],
      "technologies": ["c", "python", "postgresql", "javascript", "go"],
      "irc_channel": "http://pgtreats.info/slack-invite",
      "contact_email": "",
      "mailing_list": "pgsql-hackers@lists.postgresql.org",
      "twitter_url": "",
      "blog_url": "https://planet.postgresql.org/",
      "facebook_url": "",
      "num_projects": 7,
      "projects": [
        {
          "title": "Enhancements to pgwatch v3 RPC integration",
          "short_description": "The existing pgwatch3_rpc_server project creates specialized RPC endpoints that allow pgwatch3 clients to export monitoring data in various formats...",
          "description": "The existing pgwatch3_rpc_server project creates specialized RPC endpoints that allow pgwatch3 clients to export monitoring data in various formats or redirect it to alternative data analytics & storage solutions (such as S3, ClickHouse, and others).\n\nThe enhancements to be added includes the following:\n1. Implementing authentication to limit access to data sinks\n2. Adding TLS encryption over HTTP to secure Authentication keys and transmitted data\n3. Creating templates that makes adding more sinks easier (either by the maintainers, or clients)\n4. Developing additional custom sinks using the previous templates",
          "student_name": "ahmad gouda",
          "code_url": null,
          "proposal_id": "Hm55zdED",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/4Be9mT3p"
        },
        {
          "title": "pgmoneta: Incremental backup for PostgreSQL 13-16",
          "short_description": "Implement functionality in pgmoneta and pgmoneta_ext such that an incremental backup can be taken from PostgreSQL 13 to 16. This work can build upon...",
          "description": "Implement functionality in pgmoneta and pgmoneta_ext such that an incremental backup can be taken from PostgreSQL 13 to 16.\n\nThis work can build upon the work done in the incremental backup support for PostgreSQL 17 inside of pgmoneta.",
          "student_name": "Ashutosh Sh",
          "code_url": null,
          "proposal_id": "vLJchPf7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/HAmOi5Y7"
        },
        {
          "title": "Extension Support for pgexporter",
          "short_description": "PostgreSQL extensions can offer detailed views of query performance, storage usage, and system health but this would need frequent manual setup to be...",
          "description": "PostgreSQL extensions can offer detailed views of query performance, storage usage, and system health but this would need frequent manual setup to be used with monitoring systems. Our proposal improves upon pgexporter through automatic detection of supported extensions and the output of pre-configured metrics for vital extensions such as pg_stat_statements, pg_buffercache, and pg_stat_monitor. It allows easy observability, diminishes the role of manual setup, and helps for optimal data-driven database performance monitoring.",
          "student_name": "Bassam Adnan",
          "code_url": null,
          "proposal_id": "1PuULTUZ",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/AWQtfg8b"
        },
        {
          "title": "Upgrade pgwatch Grafana dashboards to v11",
          "short_description": "This project focuses on upgrading the existing pgwatch dashboards to be fully compatible with Grafana version 11. With Grafana v11 removing support...",
          "description": "This project focuses on upgrading the existing pgwatch dashboards to be fully compatible with Grafana version 11. With Grafana v11 removing support for AngularJS-based components and introducing changes in how panels and transformations are structured, the goal is to carefully update each dashboard—replacing deprecated elements, improving visualizations, and cleaning up the underlying JSON definitions. I also plan to simulate real PostgreSQL activity to ensure all panels are receiving meaningful data and functioning correctly. Alongside this, I’ll improve the overall user experience by adding metadata-driven query selection, integrating Grafana’s AI assistant Grot for contextual help, and proposing features like summary panels. The final deliverables will include upgraded dashboards, supporting scripts, and clear documentation to guide future updates.",
          "student_name": "Gaurav Patidar",
          "code_url": null,
          "proposal_id": "xhFxMCUc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/UhsBaCiE"
        },
        {
          "title": "ABI Compliance Checker",
          "short_description": "PostgreSQL introduced Server API and ABI Stability Guidance to help extension authors understand compatibility expectations. The policy ensures ABI...",
          "description": "PostgreSQL introduced Server API and ABI Stability Guidance to help extension authors understand compatibility expectations. The policy ensures ABI stability between minor releases (e.g., 17.0 to 17.1) but allows changes in major versions. Currently, committers rely on manual reviews to enforce this, which occasionally leads to unintended ABI changes. A recent example occurred in PostgreSQL 17.1, where an ABI-breaking change was shipped and later reversed in 17.2. This incident highlights the need for an automated process to catch such issues before release. To enforce ABI stability, this project will monitor PostgreSQL’s repository across branches, detecting any instability early. Since ABI changes depend on system architecture, OS, and compiler, the tool will be developed as an extension to PostgreSQL Build Farm, leveraging its infrastructure to handle diverse configurations. Git receive hooks are unsuitable as PostgreSQL does not allow them due to repository performance concerns. Instead, the build farm’s cron-based clients (animals) will store commit hashes locally and compare subsequent commits for ABI changes. The Libabigail suite (abidw, abidiff) will be used for ABI compliance checks, currently supporting GCC and Clang, with future expansion planned for other compilers. The system will generate ABI compliance reports for every commit, processed by the build farm server, which will be refactored to handle reports and update mailing logic to notify committers of breaking changes. This project will include the development of a Build Farm Client that generates ABI compliance reports per commit, a refactoring of the Build Farm Server to handle reports and update mailing logic, thorough testing to ensure stability before production deployment, and final deployment of the compliance checker by setting up the build farm client and server. This project will strengthen PostgreSQL’s ABI stability process, preventing unintended breakages and ensuring smoother updates.",
          "student_name": "Mankirat Singh",
          "code_url": null,
          "proposal_id": "P1p7eg3T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/jFquLTUi"
        },
        {
          "title": "pgmoneta: WAL Filtering",
          "short_description": "pgmoneta is an open-source tool designed for PostgreSQL backup and recovery, with a strong focus on managing Write-Ahead Logging (WAL) files critical...",
          "description": "pgmoneta is an open-source tool designed for PostgreSQL backup and recovery, with a strong focus on managing Write-Ahead Logging (WAL) files critical for data integrity and point-in-time recovery. Current solutions like PITR force restoration to a pre-accident state, losing valid changes made afterward. This project aims to enhance pgmoneta by adding advanced WAL filtering capabilities for targeted recovery, allowing users to preserve recent valid data while excluding specific operations, such as accidental DELETE queries or changes to certain tables. The proposed solution involves developing pgmoneta-walfilter, a command-line tool integrated into pgmoneta. This tool will enable users to define custom filtering rules in a YAML configuration file, processing WAL files from backups to omit unwanted operations during restoration. This enhancement will provide greater flexibility and control in recovery, while addressing the challenges of safely modifying WAL files to maintain data integrity.",
          "student_name": "Mohab Yasser",
          "code_url": null,
          "proposal_id": "sB9EtrG7",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ttqxjXNx"
        },
        {
          "title": "Enhancing Pgagroal Security: Hot Reloading, Vault Improvements, and Certificate Monitoring",
          "short_description": "This project enhances Pgagroal's security by implementing hot reloading for TLS certificates and configuration files, refining the vault system for...",
          "description": "This project enhances Pgagroal's security by implementing hot reloading for TLS certificates and configuration files, refining the vault system for better sensitive data management with backward compatibility, and adding support for database aliasing and certificate expiration monitoring. Key deliverables include robust hot reloading, vault improvements, database aliasing support, integrated certificate monitoring, along with comprehensive testing and documentation.",
          "student_name": "Tejas Tyagi",
          "code_url": null,
          "proposal_id": "RtmleXQX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/2SLjM1PK"
        }
      ]
    },
    {
      "name": "Graphite",
      "image_url": "https://summerofcode.withgoogle.com/media/org/graphite-labs/p5x1ehnbihaxxqoq-360.png",
      "image_background_color": "#ffffff",
      "description": "Editor, graphics engine, & compiler for art/design",
      "url": "https://graphite.rs",
      "category": "End user applications",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/graphite",
      "ideas_url": "https://graphite.rs/volunteer/guide/student-projects/",
      "guide_url": "https://graphite.rs/volunteer/guide/student-projects/",
      "topics": [
        "compilers",
        "programming languages",
        "graphics",
        "computational geometry",
        "fonts"
      ],
      "technologies": ["machine learning", "rust", "vulkan", "ai", "webgpu"],
      "irc_channel": "https://discord.graphite.rs",
      "contact_email": "mailto:contact@graphite.rs",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/GraphiteEditor/",
      "blog_url": "https://graphite.rs/blog/graphite-internships-announcing-participation-in-gsoc-2024/",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Marquee Selection Masking",
          "short_description": "The goal of this project is to supplant the Mask node with a mask input to every graphical node, which takes in a general graphic input. This lays...",
          "description": "The goal of this project is to supplant the Mask node with a mask input to every graphical node, which takes in a general graphic input. This lays the foundation to build further nodes and operations such as one sided stroke alignment, gradient across strokes. Further a new “mask mode” will be introduced, which works at tooling level to enable a way to implement marquee selection masking, which unlike traditional mask tools(clipping) also supports gradient based operations(masking) and supporting much more than simple lasso, free form or rectangle type selection present in other tools. Further, a system to show the types of nodes merged through the merge node will be implemented, along with their mask information.",
          "student_name": "epestr",
          "code_url": null,
          "proposal_id": "GTZkcXyL",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/1TCNjF3K"
        },
        {
          "title": "GPU-accelerated raster ops for Graphite",
          "short_description": "Graphite uses the vello renderer to accelerate the image composition on the GPU. However, vello is only well suited for composing vector elements and...",
          "description": "Graphite uses the vello renderer to accelerate the image composition on the GPU. However, vello is only well suited for composing vector elements and plain raster images. It does not implement any operations for (post-)processing raster images, like adjusting hue, saturation, blurs, blending images, etc. Currently, these “raster ops” are evaluated on the CPU, significantly slowing editing to about 2-3 fps on a typical desktop system, making it unusable.\nI want to accelerate the processing of rasterization ops using the GPU to achieve acceptable levels of performance.",
          "student_name": "Firestar99",
          "code_url": null,
          "proposal_id": "v49gloQ1",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/TfdLAuN4"
        },
        {
          "title": "Advanced vector editing tool modes",
          "short_description": "The goal of this project is to introduce new tooling modes and new tools to improve the vector editing experience in the Graphite editor. Addition of...",
          "description": "The goal of this project is to introduce new tooling modes and new tools to improve the vector editing experience in the Graphite editor. Addition of point / Segment and Region editing modes (with their combinations) in the path tool which will allow users to have more control over selection and editing experience. Existing vector tools and their features in graphite don’t work very well with “vector meshes” as they are supposed to work with vector paths only, this project aims to refactor those features.\nAdditionally, I will implement new features for existing tools to streamline the vector editing workflow. These enhancements will give users finer control over their vector artwork while making the editor more versatile for both simple and complex vector editing tasks.",
          "student_name": "hawkeye",
          "code_url": null,
          "proposal_id": "SKl7nKSc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/nrCPLvfb"
        },
        {
          "title": "Ergonomic API for Vector Mesh Topology",
          "short_description": "The project aims to design and implement an ergonomic and efficient API for accessing, manipulating, and performing operations on vector data such...",
          "description": "The project aims to design and implement an ergonomic and efficient API for accessing, manipulating, and performing operations on vector data such that implementing complex vector-based algorithms or developing tools to perform vector manipulations is efficient and ergonomic. The second aspect of the project is to enhance performance and stability by transitioning from Bezier-rs to Kurbo algorithms and data structures to perform vector operations.",
          "student_name": "indierusty",
          "code_url": null,
          "proposal_id": "A1MZAIDc",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/yQFi5PLq"
        },
        {
          "title": "Meticulous tool polishing and adding new gizmos",
          "short_description": "Graphite currently offers only a limited set of shape tools with basic gizmo support, limiting the scope of creative and precise editing. This...",
          "description": "Graphite currently offers only a limited set of shape tools with basic gizmo support, limiting the scope of creative and precise editing. This project aims to enhance the Polygon Tool by introducing a variety of predefined shape nodes—such as Trapezoid, Star, Donut, Pie, Crescent, and more—each equipped with custom, interactive gizmos.\nTo manage these features, a centralized Gizmo Manager will be developed to handle both general transform cages and shape-specific gizmo points. These gizmos will integrate with the Select Tool using a state-driven interaction model to enable intuitive, fine-grained shape manipulation. Each shape will expose unique transformation controls (e.g., adjusting edge curvature, radii, angles, and segment lengths), allowing users to craft complex designs efficiently.",
          "student_name": "PratyushGovind",
          "code_url": null,
          "proposal_id": "goo2ZkMD",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uGQFb7Mk"
        }
      ]
    },
    {
      "name": "Pharo Consortium",
      "image_url": "https://summerofcode.withgoogle.com/media/org/pharo-consortium/zrxygkl3ycuvw6nb-360.png",
      "image_background_color": "#ffffff",
      "description": "Modern and immersive programming language",
      "url": "https://pharo.org/",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/pharo-consortium",
      "ideas_url": "https://gsoc.pharo.org/ideas",
      "guide_url": "https://gsoc.pharo.org/",
      "topics": [
        "machine learning",
        "programming languages",
        "virtual machines",
        "Modelling",
        "Live music"
      ],
      "technologies": ["git", "smalltalk", "pharo", "spec", "SUnit"],
      "irc_channel": "https://discord.gg/QewZMZa",
      "contact_email": "mailto:https://gsoc.pharo.org/ideas",
      "mailing_list": "pharo-users@lists.pharo.org",
      "twitter_url": "https://twitter.com/pharoproject",
      "blog_url": "https://thepharo.dev/",
      "facebook_url": "",
      "num_projects": 8,
      "projects": [
        {
          "title": "Implementation of Standard Data Structures and Algorithms",
          "short_description": "Pharo currently lacks robust, well-designed implementations of fundamental data structures, with existing collections being weakly supported and...",
          "description": "Pharo currently lacks robust, well-designed implementations of fundamental data structures, with existing collections being weakly supported and inconsistently designed. This project addresses this gap by developing a comprehensive library of essential data structures including Buffers, Linked lists, Stacks, Queues, Heap and various types of Trees (like Binary Search Trees, AVL, Red-Black & Tries) . The implementation will deliver a flexible, extensible framework with consistent APIs, thorough documentation, and comprehensive Test coverage. The result will be a production-ready collection of data structures that follow object-oriented principles, enhance developer productivity, and integrate seamlessly with the Pharo environment, enabling more efficient and maintainable code for the entire Pharo community.",
          "student_name": "Alok Pathak",
          "code_url": null,
          "proposal_id": "Xk0yKus4",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/JNhTr4F3"
        },
        {
          "title": "Support for serious games in Cormas",
          "short_description": "This project aims to expand support for serious games within the Cormas platform, enabling easier interaction between players and environment, and...",
          "description": "This project aims to expand support for serious games within the Cormas platform, enabling easier interaction between players and environment, and autonomous agents. By extending Cormas with “playable”  components the project will contribute to the development of a generic solution for designing, playing, and analyzing serious games. The planned development includes three phases, covering initial implementation, testing, and system optimization, with the ultimate goal of creating a first working prototype with a user interface accessible via a smartphone.",
          "student_name": "Jovan Kupusović",
          "code_url": null,
          "proposal_id": "cNkqpIwq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/YqbsMaJg"
        },
        {
          "title": "Computer Vision for Game Piece Detection",
          "short_description": "This project extends the open-source Cormas simulation platform by integrating a computer vision system that allows real-world interaction with...",
          "description": "This project extends the open-source Cormas simulation platform by integrating a computer vision system that allows real-world interaction with agent-based models. The goal is to enable users to turn Cormas simulations into interactive, game-like experiences by detecting and tracking physical objects (such as game pieces) on a board and linking them to simulation agents.\n\nTo achieve this, I will develop a lightweight Python-based vision pipeline using YOLO for object detection and tracking, then build a JSON-based interface to communicate with Cormas in real time. On the Pharo/Cormas side, I will implement the necessary APIs and tools to interpret the visual data and control agent behavior accordingly.\n\nDeliverables include:\n- A reusable computer vision module with manual calibration tools.\n- A JSON-based interface for real-time communication between Python and Pharo.\n- Integration into Cormas as a plugin or extension.\n- Documentation and examples for creating interactive physical games with Cormas.\n- All work will be contributed to the open-source Cormas repository and designed to support future projects involving physical interaction with simulations.",
          "student_name": "Kyla Kaplan",
          "code_url": null,
          "proposal_id": "1xdm9Tv9",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/GFFWrYJN"
        },
        {
          "title": "Optimizing the Pharo Compiler with Bytecode-Level Inlining",
          "short_description": "This project aims to optimize the Pharo compiler by implementing bytecode level optimization within its DRUID-based optmizing compiler. By applying...",
          "description": "This project aims to optimize the Pharo compiler by implementing bytecode level optimization within its DRUID-based optmizing compiler. By applying inlining, which involves replacing method calls with the actual code of the methods, the number of method calls in the virtual machine will be reduced, thus enhancing execution speed. The project will extend DRUID by supporting complex cases like block closures, improving the type system, and conducting thorough performance benchmarking.\nDeliverables will include the implementation of bytecode-level inlining, the enhancement of the type inference system, testing and validating the new compiler, and performance analysis.",
          "student_name": "Lucio_08",
          "code_url": null,
          "proposal_id": "RbEGybYp",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ZAqo1UGN"
        },
        {
          "title": "DrTest Reloaded: Enhanced User Experience and Plugin Power",
          "short_description": "This project aims to enhance the DrTest tool in Pharo by improving its usability, functionality, and performance. DrTest is a critical resource for...",
          "description": "This project aims to enhance the DrTest tool in Pharo by improving its usability, functionality, and performance. DrTest is a critical resource for developers to test and analyze code coverage, but there is room for improvement, particularly in the areas of user experience, compatibility, and fault location. Through this project, I will implement a range of improvements, including enhancements to the code coverage and test comment visualization, optimizations to the performance plugin, and the development of a new fault location plugin.\nBy the end of this project, the DrTest tool will be more user-friendly, compatible with the latest version of Pharo, and capable of providing more accurate and detailed test results, benefiting developers and contributing to the Pharo open-source community.",
          "student_name": "Mata",
          "code_url": null,
          "proposal_id": "6cPVpu2B",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/rc674LMN"
        },
        {
          "title": "PAM : A text-to-speech (TTS) tool for Pharo",
          "short_description": "PAM (Pharo Automated Mouth) is Pharo's first ever text-to-speech (TTS) system. It will convert English text into phonemes, add basic prosody, and...",
          "description": "PAM (Pharo Automated Mouth) is Pharo's first ever text-to-speech (TTS) system. It will convert English text into phonemes, add basic prosody, and generate speech using a DSP built with Phausto. \nThe project is divided into two main parts: A Reciter that processes text into phonemes and stress markers, and A DSP that generates real-time audio output with multiple voice presets (Male, Female, Child). A simple UI will be developed with pitch, speed, and stress customization. \nDeliverables include a working TTS engine, voice presets, a customizable UI, and documentation to improve accessibility and support future extensions.\nThe project aims to increase Pharo's accessibility to the community !",
          "student_name": "Neerja Doshi",
          "code_url": null,
          "proposal_id": "XSBgERTO",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7yEBbF4z"
        },
        {
          "title": "Eliminate Object Pointers in JIT-Compiled Code for Better GC Performance",
          "short_description": "The Pharo VM currently embeds object pointers directly into machine code. This approach introduces two key issues: 1. garbage collection overhead:...",
          "description": "The Pharo VM currently embeds object pointers directly into machine code. This approach introduces two key issues:\n1. garbage collection overhead: the GC must scan and track pointers within machine code, increasing complexity and runtime costs.\n2. security risks: direct pointer exposure in executable code creates opportunities for attackers to alter program behavior.\n\nThis project aims to refactor the VM to store object pointers in a separate structure so that the GC can use this structure during memory management. The development plan can be decomposed into three stages:\n1. Analyze the JIT compiler to identify where object pointers are embedded in machine code. A documentation or a technical blog should follow after this step.\n2. Modify the JIT compiler to use a dedicated structure to store object pointers.\n3. Refactor the GC to use the new object-pointer structure instead of scanning machine code during memory management.",
          "student_name": "Shengyu",
          "code_url": null,
          "proposal_id": "vxF7lhlX",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dfWhMh68"
        },
        {
          "title": "A Seamless Interface Between LLMs and Pharo",
          "short_description": "This project aims to build ChatPharo, an intelligent, AI-powered assistant that integrates Large Language Models (LLMs) directly into the Pharo...",
          "description": "This project aims to build ChatPharo, an intelligent, AI-powered assistant that integrates Large Language Models (LLMs) directly into the Pharo development environment. Despite Pharo’s strengths as a live programming platform, it currently lacks a native and user-friendly interface for interacting with LLMs to assist with code explanation, generation, documentation, and debugging.\n\nTo address this, the project proposes a seamless, modular, and extensible system that connects Pharo with both online (OpenAI, DeepSeek) and offline (TinyLLaMA, Mistral-7B via Ollama) models. A multi-tab chat interface will allow users to manage multiple contextual conversations, while intelligent AI commands (e.g., /explain, /generate tests, /refactor) will directly support day-to-day coding workflows. Memory optimization techniques—including smart caching, chat pruning, and lazy model loading—will ensure smooth performance even in long sessions.\n\nA key innovation includes experimenting with pseudo-parallelism in Pharo’s single-threaded architecture by spawning secondary images to offload heavy LLM processing. This enables parallel task handling without compromising the responsiveness of the main Pharo image.\n\nBy midterm, users will have access to a working chat UI, multi-LLM switching, and foundational coding actions. By the final evaluation, ChatPharo will evolve into a context-aware assistant capable of inline suggestions, AI-driven debugging, and scalable architecture for future extensions.\n\nThrough full documentation, tutorials, and community engagement, this project will not only enhance developer productivity but also showcase Pharo as a capable, modern AI-enhanced development platform.",
          "student_name": "SrajalDwivedi17",
          "code_url": null,
          "proposal_id": "MSHLTFFx",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/3vcywQr1"
        }
      ]
    },
    {
      "name": "Open HealthCare Network",
      "image_url": "https://summerofcode.withgoogle.com/media/org/open-healthcare-network/eutslgqeknc9vlgd-360.png",
      "image_background_color": "#ffffff",
      "description": "Reimagining Healthcare Delivery",
      "url": "https://ohc.network/",
      "category": "Science and medicine",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/open-healthcare-network",
      "ideas_url": "https://contributors.ohc.network/projects",
      "guide_url": "https://oss.ohc.network/",
      "topics": [
        "electronic medical records",
        "Digital Public Goods",
        "Telemedicine and Remote Care",
        "AI in Health",
        "HMIS"
      ],
      "technologies": ["python", "django", "react", "typescript", "NextJs"],
      "irc_channel": "https://slack.ohc.network/",
      "contact_email": "mailto:mohammed.nihal@egovernments.org",
      "mailing_list": "Info@ohc.network",
      "twitter_url": "",
      "blog_url": "https://www.linkedin.com/company/ohcnetwork/",
      "facebook_url": "https://www.facebook.com/openhealthcarenetwork",
      "num_projects": 6,
      "projects": [
        {
          "title": "WhatsApp Bot for the CARE Platform",
          "short_description": "Manual procedures on the CARE platform cover retrieval of patient information and appointment scheduling and FAQ answers and appointment reminders....",
          "description": "Manual procedures on the CARE platform cover retrieval of patient information and appointment scheduling and FAQ answers and appointment reminders. These manual operations produce delays and errors together with restricted access particularly affecting users who find the basic WhatsApp communication method more efficient. I established a WhatsApp chatbot implementation which operated through a close technological connection with the CARE system.\n\nThe application uses the Meta WhatsApp Business API for its communication framework while integrating Django alongside database operations for backend functions. Dialogflow or Rasa NLP tools serve as optional enhancements for the bot allowing better processing of natural language verbalisations. Core features include:\n\n1. The system provides automatic appointment booking alongside immediate patient record availability.\n2. The system provides timely notification systems for upcoming meetings along with post-appointment check-up scheduling.\n3. The system provides immediate FAQs as part of its user satisfaction enhancement measures.\n4. Real-time communication on WhatsApp provides users with a smooth experience alongside extensive system reachability.\n\nThe solution enhances the CARE platform through workforce efficiency while it decreases human errors in addition to enabling accessible reliable and responsive communication. A reliable system retrieves patient records accurately more than 95% of the time and handles various user inquiries within under a second thus delivering enhanced operational performance.",
          "student_name": "Ashu_Choudhary",
          "code_url": null,
          "proposal_id": "3jNQwKRh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/bPx3niWK"
        },
        {
          "title": "HR Management module",
          "short_description": "The proposed project aims to develop a FHIR-aligned HR management module for the CARE system, streamlining employee management, automating leave...",
          "description": "The proposed project aims to develop a FHIR-aligned HR management module for the CARE system, streamlining employee management, automating leave tracking, and providing insightful reports. By leveraging CARE's existing scheduling system and aligning with FHIR standards, the module ensures seamless integration, data consistency, and interoperability. The platform will enable HR to efficiently manage employee records, process leave requests with conflict detection, securely handle documents, and generate meaningful reports for better decision-making.",
          "student_name": "Gurukiran",
          "code_url": null,
          "proposal_id": "HdQCgjob",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/b3hFfKM4"
        },
        {
          "title": "Terminology Server from Google Sheet",
          "short_description": "The proposed project aims to build a lightweight, scalable, and extensible alternative to the Snowstorm Terminology Server by leveraging Django and...",
          "description": "The proposed project aims to build a lightweight, scalable, and extensible alternative to the Snowstorm Terminology Server by leveraging Django and etcd—a fast, atomic, and consistent key-value store—as the backend database. Unlike Snowstorm, which is resource-intensive, limited to SNOMED CT, and does not support concept authoring, the new server will support full FHIR operations like $lookup, $validate-code, and $expand, along with custom endpoints for authoring, updating, and deleting concepts. Data will be loaded into optimized in-memory data structures (DAG and description dictionaries) on server startup, enabling fast traversal, search, and filtering. Multi-language support, real-time syncing from etcd, and an intuitive micro-frontend UI will allow users to manage codes seamlessly. The project also includes full integration into the existing Care ecosystem via a dedicated backend plugin and a React-based admin dashboard, ensuring drop-in replacement with no changes required in existing workflows. This solution will empower open-source healthcare platforms in resource-constrained regions to build, customize, and manage terminology services without relying on costly proprietary systems.",
          "student_name": "rajkumar005",
          "code_url": null,
          "proposal_id": "OmBioP5x",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/9L9YN6qy"
        },
        {
          "title": "ABDM – Patient Centric Flows (PHR Flows)",
          "short_description": "This project implements comprehensive patient-facing digital health capabilities in the CARE platform by integrating Ayushman Bharat Digital Mission...",
          "description": "This project implements comprehensive patient-facing digital health capabilities in the CARE platform by integrating Ayushman Bharat Digital Mission (ABDM) Personal Health Record (PHR) flows. While CARE currently supports provider-side health information exchange through the existing ABDM module, it lacks patient-centered features that would allow individuals to access and control their health data.\nMy solution builds a complete set of APIs and interactive user interfaces to bridge this gap by implementing seven key components:\nABHA Enrollment - Digital identity creation with multiple verification methods\nProfile Login - Secure multi-channel authentication and session management\nUser Profile Management - Personal health information control and preferences\nDiscovery and Linking - Finding and connecting fragmented health records\nSubscriptions & Notifications - Automated health updates and alerts\nConsent Management - Granular control over data sharing permissions\nHealth Record Display - Unified view of medical history across providers\nThe implementation seamlessly integrates with the existing ABDM module while adding complementary PHR capabilities, enabling CARE to function effectively in dual roles—as both a provider-focused clinical system and a patient-centered health record platform.\nDeliverables include a fully functional implementation of all ABDM PHR APIs, an intuitive and responsive patient portal interface, comprehensive transaction tracking for compliance, and thorough documentation. All components will adhere to healthcare security and privacy standards while providing a cohesive user experience. The completed project will transform healthcare delivery by eliminating information gaps between providers and empowering patients as active participants in their care journey.",
          "student_name": "Siva Pidugu",
          "code_url": null,
          "proposal_id": "5Iv0Gsdq",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/uIPCPdX9"
        },
        {
          "title": "Diet Management in CARE",
          "short_description": "The Diet Management module aims to bridge the gap between clinical care and nutritional health within CARE’s ecosystem. This module will empower...",
          "description": "The Diet Management module aims to bridge the gap between clinical care and nutritional health within CARE’s ecosystem. This module will empower patients to adjust their dietary plans, while also being able to monitor and track their eating habits. By integrating dietary data with existing patient records, CARE will unify medical and lifestyle interventions. My proposal gives detailed architectures for the Meal Plan Integration, Calorie Tracking, Nutritional Recommendations, and Patient Record Integration features. It comprises in depth descriptions, workflows and technologies that are needed to integrate the Diet Management module in CARE.",
          "student_name": "Spandan Mishra",
          "code_url": null,
          "proposal_id": "UEybaVE0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7T36c0fb"
        },
        {
          "title": "Offline Data Entry Support",
          "short_description": "The project has the aim of providing offline data entry capability into the CARE form-based data collection system. Currently, users experience...",
          "description": "The project has the aim of providing offline data entry capability into the CARE form-based data collection system. Currently, users experience interruptions when network connectivity is lost, preventing data entry while in the field with the application opened in a disconnected state. This project will maintain coordination with CARE forms during offline status, allowing users to continue using the app normally.The approach will implement an offline-first architecture that includes application caching, local storage, and sync capabilities. I plan to implement caching while using Workbox and Service Workers to cache the appropriate application assets and form definitions so that the user interface can load and continue to operate without a network connection. I plan to use IndexedDB, managed through Dexie.js, to store the form responses as local data storage on the user’s device. After connectivity is re-established, an automatic background sync process will use React Query and PQueue to ensure reliable and conflict-free data sync with the established database on the central server. Conflict resolution strategies will be included to maintain integrity, safe and complete data from being 'lost' when multiple users could be updating the same data at the same time.",
          "student_name": "vikaspal8923",
          "code_url": null,
          "proposal_id": "NFSxsJvs",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/xVR92zlY"
        }
      ]
    },
    {
      "name": "checkstyle",
      "image_url": "https://summerofcode.withgoogle.com/media/org/checkstyle/e8ubktvaft8eljli-360.png",
      "image_background_color": "#ffffff",
      "description": "Helps to adheres of Java coding standard",
      "url": "https://checkstyle.org",
      "category": "Programming languages",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/checkstyle",
      "ideas_url": "https://github.com/checkstyle/checkstyle/wiki/Checkstyle-GSoC-2025-Project-Ideas",
      "guide_url": "https://github.com/checkstyle/checkstyle/blob/master/.github/GSOC.md",
      "topics": [
        "static code analysis‎",
        "code review tool",
        "coding standards",
        "coding conventions",
        "artificial-intelligence"
      ],
      "technologies": ["java", "antlr", "artificial-intelligence"],
      "irc_channel": "https://discord.gg/FsUsYC2ura",
      "contact_email": "",
      "mailing_list": "https://groups.google.com/g/checkstyle-devel",
      "twitter_url": "https://x.com/checkstyle_java",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 5,
      "projects": [
        {
          "title": "Upgrade dependencies to use latest version of libraries and use their features",
          "short_description": "Currently, Checkstyle relies on JDK 11, while the broader ecosystem has transitioned to JDK 21. This project aims to incrementally upgrade...",
          "description": "Currently, Checkstyle relies on JDK 11, while the broader ecosystem has transitioned to JDK 21. This project aims to incrementally upgrade Checkstyle's minimum JDK version to JDK 17 and then to JDK 21. Additionally, dependencies such as Apache Doxia and other libraries will be updated to their latest versions to enhance maintainability, performance, and access to newer features.",
          "student_name": "Amit Kumar Deoghoria",
          "code_url": null,
          "proposal_id": "bVzGDXJN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/7UvHzVA6"
        },
        {
          "title": "Auto-Fix Module",
          "short_description": "Checkstyle is widely used to detect code style violations, but many of its formatting-related issues are trivial and time-consuming to fix manually....",
          "description": "Checkstyle is widely used to detect code style violations, but many of its formatting-related issues are trivial and time-consuming to fix manually. This project aims to introduce an auto-fix module that can automatically correct formatting violations reported by specific Checks. The work involves evaluating existing auto-fix tools and libraries (e.g., OpenRewrite, CleanThat), selecting or building a reliable code modification engine, and designing an API for triggering code changes. A set of fixable formatting Checks will be selected, and their fix logic will be implemented in a maintainable way. The module will also include logic to prevent conflicting fixes and, if successful, may be proposed for integration into Checkstyle’s core to support plugin reuse.",
          "student_name": "Anmol202005",
          "code_url": null,
          "proposal_id": "42wB2ae0",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/cBlWxUSv"
        },
        {
          "title": "New ANTLR Grammar for Javadoc Comments",
          "short_description": "Checkstyle's current Javadoc parser suffers from performance and maintainability issues. The need for a more efficient and scalable grammar has been...",
          "description": "Checkstyle's current Javadoc parser suffers from performance and maintainability \nissues. The need for a more efficient and scalable grammar has been discussed \nmultiple times due to growing concerns about parsing speed.  \nCurrently, enabling Javadoc checks significantly increases validation time, making it \ndifficult to integrate them into fast feedback loops like code reviews and CI pipelines. \nThis project proposes a rewrite of the existing ANTLR grammar for Javadoc \ncomments to enhance performance, simplify maintenance, and ensure better \ncompatibility with evolving Javadoc syntax. The new grammar will improve parsing \nefficiency, reduce complexity in parser rules, and provide a clear migration path for \nexisting javadoc checks to be AST-based.",
          "student_name": "Mohamed Mahfouz",
          "code_url": null,
          "proposal_id": "P7yyrOjb",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/6e8Gnzz0"
        },
        {
          "title": "Improve Modules used in Google Style",
          "short_description": "During GSoC'24, a huge effort was made to improve Checkstyle's Google config coverage and updated our implementation of google style guide to the...",
          "description": "During GSoC'24, a huge effort was made to improve Checkstyle's\nGoogle config coverage and updated our implementation of google style\nguide to the latest version ( 03 Feb 2022 ). but there's still a lot of work\nleft. google_checks.xml is the configuration file where our google java\nstyle guide is implemented. Though most of the implementation work\nhas been done and we have covered almost all the rules in google java\nstyle guide, users have reported a bunch of issues pointing out flaws in\nour implementation, these issues are labeled as google style issues, we\nneed to solve them. On top of this, we have few rules which we are not\nable to completely follow/implement, they are marked with \"Blue Tick\" in\nour coverage page, we need to find a way to reduce such blue ticks\nrules and improve our coverage",
          "student_name": "Mohit Attry",
          "code_url": null,
          "proposal_id": "JEaedN7T",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/gSiof4Ti"
        },
        {
          "title": "Automated Website Generation for Checkstyle",
          "short_description": "I will develop the automated website generation mechanism for our open source by updating the facilitating tools and libraries to the latest...",
          "description": "I will develop the automated website generation mechanism for our open source by updating the facilitating tools and libraries to the latest versions, introducing new or refining existing tools to effectively automate the generation, decoupling the website generation logic from the main checkstyle core to avoid conflicts, and improving the existing state of user interaction with the website. In addition, I'm going to work on developing the corresponding checks and validations to ensure that all these tools for auto-generation are used and implemented properly.",
          "student_name": "SteLeo1602",
          "code_url": null,
          "proposal_id": "AXfw3KCh",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/w7K8P64Y"
        }
      ]
    },
    {
      "name": "OpenAFS",
      "image_url": "https://summerofcode.withgoogle.com/media/org/openafs/hhf0h2zemmqes7kt-360.png",
      "image_background_color": "#ffffff",
      "description": "An opensource distributed filesystem product.",
      "url": "https://www.openafs.org",
      "category": "Operating systems",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/openafs",
      "ideas_url": "https://www.openafs.org/gsoc/project-ideas.html",
      "guide_url": "https://www.openafs.org/gsoc.html",
      "topics": ["testing", "kernel", "network", "storage", "filesystems"],
      "technologies": ["c", "python", "javascript", "git", "tcp/udp"],
      "irc_channel": "https://www.openafs.org/support.html",
      "contact_email": "mailto:foundation@openafs.org",
      "mailing_list": "https://lists.openafs.org/mailman/listinfo",
      "twitter_url": "",
      "blog_url": "https://www.openafs.org",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Implementing Multi-page Folio Support in OpenAFS Linux Kernel Module",
          "short_description": "This project enhances the OpenAFS Linux kernel module with multi-page folio support, addressing a key performance limitation in the current...",
          "description": "This project enhances the OpenAFS Linux kernel module with multi-page folio support, addressing a key performance limitation in the current implementation. OpenAFS currently interacts with the Linux kernel's memory management system through single-page operations, despite recent kernel versions offering folio APIs capable of managing multiple contiguous pages as a single unit.\n\nI will implement comprehensive multi-page folio support in OpenAFS by modifying key components of the cache manager, particularly focusing on the VFS interface layer where the largest performance benefits can be realized. The implementation will optimize read and write paths to efficiently handle larger memory regions while maintaining backward compatibility with older kernel versions through autoconf detection and conditional compilation.\n\nBy the end of the project, I will deliver: (1) A complete implementation of multi-page folio support that improves performance, especially for sequential read operations common in application deployment; (2) A comprehensive testing framework verifying functionality across multiple kernel versions; (3) Detailed performance benchmarks demonstrating throughput and resource utilization improvements; and (4) Thorough documentation of implementation details to facilitate future maintenance. All code will be submitted as incremental, well-structured patches adhering to OpenAFS coding standards.",
          "student_name": "Sushil Pandey",
          "code_url": null,
          "proposal_id": "5qLpnxuN",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/ChCleqd6"
        },
        {
          "title": "Develop a GNOME Shell Extension for OpenAFS",
          "short_description": "This project aims to develop a GNOME Shell extension that provides a user-friendly graphical interface for managing the OpenAFS client on Linux...",
          "description": "This project aims to develop a GNOME Shell extension that provides a user-friendly graphical interface for managing the OpenAFS client on Linux desktops. OpenAFS, a distributed file system widely used in academic and research environments, currently relies on command-line tools, which can be intimidating for users accustomed to graphical interfaces. The extension will integrate into the GNOME Shell top bar, offering a dropdown menu to start/stop the OpenAFS client, acquire and manage authentication tokens, and display key status information such as token expiration and cell connectivity. Deliverables include a fully functional extension with client control, token management, status indicators, and notifications, all developed using GJS and GNOME Shell APIs. The project will be completed over 12 weeks, with iterative development and testing to ensure a polished, user-friendly tool.",
          "student_name": "Tejas Sonawane",
          "code_url": null,
          "proposal_id": "PEI60rdE",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/dS7QYyMI"
        }
      ]
    },
    {
      "name": "Department of Biomedical Informatics, Emory University",
      "image_url": "https://summerofcode.withgoogle.com/media/org/department-of-biomedical-informatics-emory-university/l9jrm7pdhwnkxh3b-360.png",
      "image_background_color": "#ffffff",
      "description": "Biomedical research to advance healthcare",
      "url": "https://med.emory.edu/departments/biomedical-informatics/",
      "category": "Security",
      "projects_url": "https://summerofcode.withgoogle.com/programs/2025/organizations/department-of-biomedical-informatics-emory-university",
      "ideas_url": "https://github.com/NISYSLAB/Emory-BMI-GSoC/?tab=readme-ov-file#list-of-ideas",
      "guide_url": "https://github.com/NISYSLAB/Emory-BMI-GSoC/blob/main/CONTRIBUTOR-GUIDANCE.md",
      "topics": [
        "cloud",
        "data integration",
        "workflows",
        "data security",
        "ML/AL"
      ],
      "technologies": ["python", "javascript", "java", "bash", "Colab"],
      "irc_channel": "http://bit.ly/emory-bmi",
      "contact_email": "mailto:mzeydab@emory.edu",
      "mailing_list": "",
      "twitter_url": "https://twitter.com/emorybmi",
      "blog_url": "",
      "facebook_url": "",
      "num_projects": 2,
      "projects": [
        {
          "title": "Securing Linux Storage with ACLs: Open-Source Web Management Interface for Enhanced Data Protection",
          "short_description": "Institutional departments, such as the Biomedical Informatics (BMI) Department of Emory University School of Medicine, manage vast amounts of data,...",
          "description": "Institutional departments, such as the Biomedical Informatics (BMI) Department of Emory University School of Medicine, manage vast amounts of data, often reaching petabyte scales across multiple Linux-based storage servers. Researchers storing data in these systems need a streamlined way to modify ACLs to grant or revoke access for collaborators. Currently, the IT team at BMI is responsible for manually handling these ACL modifications, which is time-consuming, error-prone, and inefficient, especially as data volume and user demands grow.\n\nTo address this challenge at BMI and similar institutions worldwide, a Web Management Interface is needed to allow users to modify ACLs securely. This solution would eliminate the burden on IT teams by enabling on-demand permission management while ensuring security and reliability.\n\nThe proposed system will feature a robust and highly configurable backend, high-speed databases, orchestration daemons for file storage servers, and an intuitive frontend. The proposal includes an in-depth analysis of required components, high-level and low-level design considerations, technology selection, and the demonstration of a functional prototype as proof of concept.\n\nThe goal is to deliver a production-ready, secure, scalable, and reliable system for managing ACLs across multiple servers hosting filesystems such as NFS, BeeGFS, and others. This solution will streamline access control management and prepare it for deployment at BMI and other institutions worldwide, significantly reducing the manual workload for IT teams.",
          "student_name": "Aditya • Patil",
          "code_url": null,
          "proposal_id": "byNWkCyC",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/FFAXDtDw"
        },
        {
          "title": "Leveraging Diffusion Models to Enhance Segmentation Models for GI Tract Disorder Evaluation",
          "short_description": "Acquiring neural fMRI and abdominal MRI data is inherently expensive and time-consuming, significantly limiting the volume of datasets available for...",
          "description": "Acquiring neural fMRI and abdominal MRI data is inherently expensive and time-consuming, significantly limiting the volume of datasets available for advanced analysis. Consequently, the full potential of GI tract disease diagnosis and segmentation models remains unrealized, as limited datasets hinder their accuracy and generalizability.\n\nDiffusion models offer a promising solution to these challenges. By effectively learning intricate spatiotemporal patterns inherent in fMRI/MRI data, diffusion models can synthesize high-quality, realistic data samples. This capability augments available datasets, substantially enhancing the accuracy and reliability of GI tract semantic segmentation and disease diagnosis models.",
          "student_name": "Miguel Aenlle",
          "code_url": null,
          "proposal_id": "GrZyZWMU",
          "project_url": "https://summerofcode.withgoogle.com/programs/2025/projects/QB45Mcpx"
        }
      ]
    }
  ]
}
